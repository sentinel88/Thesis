%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: main.dvi
%%Pages: 82
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX12 CMR12 CMR17 CMSY10 CMMI12 CMR8 CMMI8 CMSY8
%%+ CMTT12 CMBXTI10 CMBX10 CMR10 CMMI10 CMEX10 CMR6 CMMI6 CMSY6 CMTI12
%%+ CMTT10 CMR7 CMSY7
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf -o main.ps main.dvi
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2005.04.09:1551
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 09fbbfac.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsltt10 cmtt10 cmtt12 cmtt8 cmtt9
/TeX09fbbfacEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/Omega /arrowup /arrowdown /quotesingle /exclamdown /questiondown
/dotlessi /dotlessj /grave /acute /caron /breve /macron /ring /cedilla
/germandbls /ae /oe /oslash /AE /OE /Oslash /visiblespace /exclam
/quotedbl /numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon /less
/equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash /bracketright
/asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l
/m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /dieresis /visiblespace /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /space /Gamma /Delta /Theta /Lambda /Xi /Pi
/Sigma /Upsilon /Phi /Psi /.notdef /.notdef /Omega /arrowup /arrowdown
/quotesingle /exclamdown /questiondown /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /visiblespace /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 74afc74c.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmbxti10 cmff10 cmfi10 cmfib8 cmti10 cmti12 cmti7 cmti8cmti9 cmu10
%
/TeX74afc74cEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /sterling /percent
/ampersand /quoteright /parenleft /parenright /asterisk /plus /comma
/hyphen /period /slash /zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /exclamdown /equal /questiondown /question
/at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueID 5000817 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841EDA6677731A6ACFEC0BABF1016A
089B2D24F47B9D66B677886B90AA787AD865B5F78EE434AA47B7B0F1244A4215
251FDCC670FD01A92226E2C667C2344298D001575BDF782D969D836ECA11E229
C7A17E28F70F9B17273FF243452DA885068A8BCB5165534F3996CBD8D97307DB
593D606C197AFC259E691C242F6E1E651575B6852AAD54567905E6F542DCA109
7F6DA24DC9112FBF7CE48B387953787B2BCB841873AED2DFA83339D39E14F4DD
3A51584527AC3A93630D121E2AE0C89D9C3F2FFA767743B1276BE1E648041010
0FD510F1A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57037035485513F9536881EEBFBC47A32
CEC9B92B352922519DBDB79176CD65BF9BF7DB1D9D5A0E7837B6943ECE40219D
5FAC26F19B015B3E19F13821D7F2E30796852C3B6F9004AC230FAA0422A4B856
BDF7832EEDC5147FBED02C02215C59050FC06B8F5073ECD57B338B09C15D09A2
1F2C15EC107220B119BA73F86B13BE9F46A1DCE09951A0E7EEEB7D3BAA7B7EE1
79ED1EAB01D99F8380A7991394F9EB02069638DE7C405E211407F1C3CAA5DD26
FE70869899E9877B93204029BC00D7EDEE94160561C022504EF6D926BA776719
82CD0A386EFBC93AF67AE7014E5627F3997A138461D62D0786F8303F80A5EE99
BB32D8F959F5C631066BF2AF74AA4A66FF89F0916FA3DD52DFB1D319F2F09661
C7AFCF0BE6366EE5E05DF54D15948731131ECE9FC96BBC1721C050BE2E173796
88EBB29DF34F5C87424BC43F5C2EB698DA2001073730F4BCA13316E723C2ED5C
3A50FFF92591D7F89910096C244C163847EF24E85130BF9CDE21D0F133AC06C8
37D50599C6FE63C745EDDB594AFA6B70DB4F79C9496BAE239163836D66186D63
B68CA4BB6AC2733D34E3738E340CF1FFC7EB6CE26B29B5B3390955AC7B51FF88
2C217FF0C06252F61BCA7A2EE17C72B7869EC3EFDA226F635161C89CCBE0210B
5212171538F14A0F014DCD55C586568AC690F4B612A359D190538F8CF641B469
634198579583BCAE089BCB8C50F124430273FC4E887639FFDECC8FF4B2F4752B
E993D4DDEB16C9B897A072C5693E3CC083D9F5F2FB54F89733773E6AF796F11F
F0A1BD5ACC0F6B6ECAF5E3D62AED7EB505D433005A2CAD05A18717933D1832C9
D5F17D5279EE41B01EB424F30C23E077BB55E3853657B9BFAFE7F9FF8ACE3052
333E579A415E54755D36D3ED6CBB0BD57F9EE5E5EDB84075396674EF9DBA232D
8B30BC1994D5DA016BEAE2A086EA9D58529013F23336EA72B4A6B83AABFA79F1
39E9293155EADF75C7133F789D5FBBE3E0A4F9EF082BA221D7CF9879D6564CBC
90F20CB6117992C2B8C77D615C03E4829F2294EF563900E534E8B83AB9AE1B4A
6EF9C39079392DC5EC8F971D80D8F97EA2A426176D397F91A391F1C66B07CD4C
8859339F707529A06468D596FF73365B47F2F1458C4ECF6A61C7D7EDC3CEA000
25E84F805CEE701D3628ABFA6DCCE63A08064CE9B4A6EBAABF83AE5FE6B04E18
1C5BBC11D4DFC613A55A53113CC31D10916186C1497CF28B1BEFD400A9E0DC90
A590C47250077A53146215B48F4F239E878C43E3F67B9414A4804E2062F3E445
B0B563F431280F087EE7AF7C91718CD3AF96406320AA001B2ECF19D208AE93A2
1ECCB7897D1DF941BED16976C4F476AAE46F1D66A1C9BFC3AB4E06B20BBA8AD7
7DBE23991975F804F8262023D2E8218BC6A884DA5FDF9CDEB3F226A1AB032D0D
5D932E55C469E35D15642F50618F642BDF87FEE970D4D3A3D32C5813170C0066
C82F46D1FB7D3AFC3AE6C3CD2C3BACE3D9548FE00BC23D79CAEFE6C65CC27375
50E575076C6DD4A1948F5C4A234D3ADF72D1B1CFBA41F29FC239374187E9EEA5
67194C04E0EFD96D687A5D9F90BC977F5452F2ADB0D8D734CE2D035E8F3670E2
8DA3A91B009361549BAF43F3A64B733D125386EDC78B7A7A80F3E156DBF1F8BB
2263C163BD120A7628ECF6C47B7B1692462E5504A4A7CB7DDE0796368D94FD80
5BBFAE9B2524FC08E9EF9EADCECCDF8319A0F90DE744EA150041FE189A8DFC00
0D105B0D883B0ACC23C1BB743B4A6C2370BBD6E38FFBF90E289CFE49AFA590B2
A871AFA7CE5B3DE26983A06DEED1313D9395DC4D150FDCCF60EF43F9CCBA21A7
60A220D9FA4E08D400E30DD6A56CEFAC21AA89085A036C16A2FFE13FD2EB106E
FC616A191F29087D8C34C8C7975CA029A39323183691B3ECBF89C2CEACDDE4B2
61569BB8E2C8604855345964C2F6B5E90A6BFBA3994AD6BE3D3DFD226319A7FA
4EA97A21ACB4D9987499D272E10E5526752A504491AEC18AD1C27A8DDD2620B2
19570FDF0D80C9732425C0EFD814EEA037A343B9698A46871B48023FA5EB7CCD
FC1ED26CA4CE2559AFF5EF84E7D733E3E0C40EA29732A8971D9DF246A4EBD59D
060BDF146B4FD8C712E6FDD477F42C405A4DED1E3D34B4D6C8C3F1A538576DBF
1D7C3D20DC4C70CD121BDA340ECEB374C83520B8C87C1FD0C9BC87A458AD2393
DFB091E161D3CC6DF20A2A252A2C1E024C24095AA7C64BAAFA019CAE5DB98A2F
8D89732142BAFA8DD73E217720CC350F57857515160FF371F3EC24655365CDAD
418083801F6287D1D1489974B295C42A046883C258F150B4634CFFDAC097B6F9
04C3CED9844213CA2BE57D929C4BBE4F845809A4E3E1AE3FD311C6EACB28F2C6
BA571FC80148CF6D2417F2C81B4C1196682C8AEACF098B6ED863BFE95D4481A6
E0D620BB31C6888756EF96AE21862F3874C148C480980A7AB0C79471FD346974
B67A7D5650CC86C5824FAFEC8BE07023BC80577FEEEA518BC4880638B634D331
A9A03B19AD1EC3D84C9390E723AB467EF1A646236C00C3EF12F7788C61317307
1BD6883A160F846CF68E72A5ED192FB178BBBF88CBCD061A6389E82A0BC14860
B8F1B22B5F7E978EEAE91216C702F3B5B5E085DDF2BC0A66AB6C2EA08DF11AE3
7F6069A4CC647431B589C98EAEE207CB7ED7D169131101CAEA36F662800AE91C
AEDFF5946461C1C2E827FA826D9A0E227FAB82C4B46B8499EA5D40EF4677A8FE
E28F76765385835BCB2AB4E98739AE425F1195C5EAB75FB492E45C8C8C8E4D43
ED3E60097AC8EBC530F2ADE9FDA63E33ED5F23B1EBD04563722AB95320931815
B1203CFFC1E13D01A590917B293DD6B6231CCB44D1D972953DEAEC632747551B
3793585786C6B4350D0502C250C27EE3A548E77707328676B00BB3972D284D27
F319620452136732EA0EFBC45BC7CAC1A7D65DA37B38C48483C766E1EAB8C81F
88A877DDC93DBA03AD6F30E960FA9DED64A3C07249DAD510AF2A287B38C71EDE
52C416A0DF24E07E5191587785D47EF28756AE1F5E5A6DE1A33B7911322138E7
F15FAD699163D4D272EDDB881880FDB43009B954643260917858348BECD92187
2DA73C64E4F9F225728B965A1F523FE8C7DAC3D3C5EB68512A6D1EE7660A63F1
B399AD8113C9CA08969AB26B257D90894CD9DDEE23F19439836A0755185C2E8A
E05EE67F5493CDEAF9266E37D21CA08783B71515822AA7870EA4D81E0D236A21
3E3A737C6F403431D5DD0282309A0DC9F9A001094D7EDDB94D6CC13E62AF1430
047DBD775C82EC06EC5F131E8385E6B7144652383692DC1EFD2B310A2FDDBD7A
1FCBAFA38010CD58F61EF06F7E53231E368CE0D64BA053D2C7B4C28F3D840CC4
03EA6DC00B62A9BBB4DA27FC5E3CC5AE9C01CBD801A31592BB77EA655224795B
16A823EC45A80FB0A2CDE18FD2E2A6780047CC305BBF9059CE31B7A2DEFC0A32
622FE29C363C5D049BE392AA66D9D75537E0C49FB799C697612A60717F32BBE7
ABD98F712596E2E5A882E92FD860C10F1FC913DD739C4B645CFE6BA9AE2CD0A6
232AC917F7DF4FCAFEC472D2BBB86E63DEF016EB05AB3BD965B846D06F001A41
52ED4A1CEB847411E65BD04A46153D8470B62BBC0B1711955AEFB88DD6C41D1B
DCAF3B994B03D7146FE80C2C778D47E0F9B8D05148F4755F1A3D712BBF452B8C
8485BFEEE379A2641DD4E44296F565C3F42242CD02D2A2E90C6B5D801D838600
E4D8EC138290B437A886679C3D0157E5E5F5D4151FFF4FF1441CCE5CC52DFE3E
5ABD4596DE91A69801421C55D9DB260989852337A6AF10EA9AB5D92148280AFD
3C8A3C2BCB890123B8891F673041872AFB0D97562144618D895F72485BBB49F1
21CE0C0AC7B72465B66ABDB52463AABBD62938993781627ADE83C7D95656029F
7F91992D9D46D42760A72B5B2AF247249B016E99D8B1E2EC35C159A68213B088
1CF99E94D24A22750B1594D80681306476729565271520151C2AD4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4CD5C7347D2E
1D0D6630F446F3708FCB29A8441F83090F9B2C25F3DD96C6D3CA0CD346F76404
8BD76EAB4E8965E6FB8EEF2E810C3784258469C2FF5646A1B7029DECF3497630
FA78D24358669262D4203C38ADF16F6C5A52B8A1E19D193DFE25D81F20D7A8CC
A1A2E98595D4B1C4800030FD6CBA00022A7A44942B0221362B1CD339E8DCBBC2
B354B3BD1D39C62B6E61F85AA61997B71FD2AC6C0F87663FD93672E1FC042BFD
D24918E155AE69367F9F22F9C9792307C8356BBB1868BA3BD25B23DBEB4996BE
06692A22B38253E5171FF5B094C8FC8913F72F6F7F6A0780D4B3D92491CC10DD
42D225BBC76EA3D23FE35AC19B5E502A4BA34AD8F81BE1CDEAFB3080127C931C
22C2F068A2BE66A2048FFF402A850EADC40DF96FE7BC48ECF09EB52C95259792
6CEEFCBB19175F9D8FC55269D5BFB8FD06DE046C4564DC24F9EC95A72335B6C9
3F79F3D33A16D9296B68C961FF89D742772D9839ED3C892983D6DAED5FB49730
F27E54590495A9EE6DA24229205E59A06B0DECA3DEBEB0EE23CC51B63AE9A1A1
92338DFC73F7712B5E8CC72AD12CE74228FAEB736065DEDBDA4B275DF64BC109
1B9974EDBA67A58A90FF556A62F327AEEA03D8083C65DCADFB600534060630C3
6AC3C5AEE5015D6A514D1BA88139F2C362A7E4F0FBFFD5F9BDB7DE8DD914BDE2
F05B6C83F3014216DDF6E3A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BA8B194E613047BF469C7B4261CACC1DF1648E8A86E926F8702B5ACA
6CEB4E3E85EF23EF5C9C53097F3BF17243B8D4BF0E6B0C5982FD14E4E916D363
E265322DF0823E9990F966A842ED69BADFAC2CD1754FC84C0FF6750D2373F997
362DDA16A0D73B178FB7B67307204AF174AB871C254B8E7CD77058113B702B2C
13F341A972B67756D65C6A9F553C365E20F0BA59F8537C88E0C13F87CEC69C9E
0775F760C4EE10819388782A2CC2E9C000DCBA76E4EFC7B390E50611F3D4F6A9
CE60FC3B742F046E84B4A302F5DB51092CD59F103DEE2910757696C3F131517C
467E54790062892C274817774286E395ADE501E6904329897E24D2ED60698F81
E94C25DC455B32C812F0A565F03E8E9A2791BBE36FA9632BED79898DE54B5C9F
445990201E3AAF3BC1F2F31F2E5B8C9499990276F59CA73F45B880203064F44D
C9F452DA3A667B138DB0BE86352DEF23AC4D7CCFED58BE185A17098FEFE1DAC5
B5B0CA89F3C55B14E8FBE71F3C5EA7A9EB6C07862D3090AC8A81D8019BF968EE
3121032C7C2225F177F11CD02925F5FAB55B0D23D72E780E2E9DA3191D04A56E
F39F058FFCD7E189206F65681738F5321A6ADDE73E446E3D0469318C7B22C8E4
870624CEC1F0EBC0C5EEB39C7F595F0C054E96CC44F62C5590EEE00A6D8FBB8C
94E8E9EE1C18AD59196A56602F0B0484020867D1301D10C217EA56B73B3BEAD3
BB07C7092D37CE9C08BDFB7EA28F38734EE1A4BA13F9C5AC86788720A4371D83
C12E5324E1BD3F6F72132AAB8C44A9EA3245230A08110819789A602F09E20939
E889396C730BD649728FEB2F80071749CAA6E33EE0163B079FD56247A000ABF5
E2D8428D248B111E1A37E98557870DE37E995E5704C74A4AEFB31859BE08BA30
7F19F4860B8A6FC40A09BB2B9692CD1206689C77341C1982511FDD9C034CA230
91EE34EE0F111258F3A989B7380E391D713F3A00A36874ED0E3EEFAF9219315C
1C491090CB161D34FEB73D9392CD73515F8E1D2E53F6777D00D36D701656ADC4
8EE39D972F2E138B5C888DAAAB8539EDA1B0FF3A77548B69A73ACA6B3752C53A
814EAA7809F0E9A72244BA8A35C263D8050E777C23C7D198BB0D3633DB58D3AE
FE04A119708E01522D1691DC0A0C157DBAAF8174A4370F86449B981205E60836
FC32D02B5E8A017FD22EE871EA5FDD0595AB3252AAFB5F43EFA9F1D0438EFB20
01C1F0B4EE4522B4F9A594E5D511610B226373BD624855CC7FBBB882B2C3D4E0
6105DA786D9015169304414D98A24E30477FC90151273ED03680D48EAF36F25A
E01A4F8BA05BFF897445DB68CE32AACD6F9DF713EC04130145F296A95BCC84A0
FF31C81968D452E124D36E63835879042EEC62A009E410FA2E6C749D88789C57
FE42DBB120C7AC37C7801330B9B13C94CDAB39D9E6D183056EBDE44C777018C2
E5F8ECF4B05D064D18CA0C7A96CFE172BC0B4311D81D133233F4736152C96D69
0A2244C856CE2A0141499F695F93A8F2C2C077C02CF25A31A8B70155CB58E836
2F23A9910C422AE2E679EC008A81CFB4512F009DAC5E8ECA85696745700EE3D1
C75A510E2FBD3D7B253FB2A110BC10C64CCBE48CF46C118B94709164AD446DAD
791ED33B25E5578A1B3249CEE8B593C4AAB43DB70BACA700709C32469348D063
C2B47F00170321ADF80C11EF9B26FDE99E0C86C4B6F0E6BAA4D367102CE73C00
E2CFB1D25680F5326FE3FECD9B7436F5AD1593AD1B54566EC0BEE94E31D64205
EF62579AC390ED55676CDB35C34EA2FEF7F1413741A21726F5244C2C81B032E9
ABAB191EFF2F217BACA5BFC907A33D3A7E699C8C157D611F742A2EB868AC35EA
B9D81D11F5F67D9A98130F90696BFBD2A42CDC58805C19ABA0A399E8DCCC69F2
9DD2BE2FA42F7B6388102A761DC974711E6D06DDA87383BA1273D1AE3B42EA8D
4FAF9CB87A13DB3AF93083A7CF3942D983DEFB004BC85FF06817E9DF3B82461C
72BBF1955CDDD0CE22D03106B70CA9B046990188F8F8DCCA404399873D8BF500
2F9D7FE4C950B817077A24AA474AE813C2B0D9AC350AF7316F2AD5D956C5382F
D8E780862891591B12FB8208DD6E11102B2A626B32A7EBA0D8342D8F7B483543
B28E02E8B695B69C4D19537D49FDB5009AC200711FF21FF5380D6A90E629F594
3D7CFCED07C5E3F1738F63820FCC4A36D604E8B75704D5EE3FBBC418224D07DA
624FB027E8B5D1AAD84A500F12E87E4D34E9234351CB14EC0905B5C142546C3B
E750526BED2E8EFCAAC4D8387F1746F66E369BCCB3A3B998F4BEE9B0255B3ACF
2CAEED85C0A5365B60364F99685186AA85D2FDB0CE6CDD5195DE24CFE6CB26B2
5B25845E1B922CE4AB1E7D1714D348087FD86E0FF6D523ED0CAD5CFBB33A8CF1
05AC3DE8EA5E190E635DB7F6BF48C769485A387701970F47BA35E3C16E7F2807
9AB69F4330B60F6E46DBCCE9539DBCD61E228F2736D808E5C80863D764525ABE
DFCD0837B8CFBE12F469D3D8DA56F23EAE0B39C2256F4F29DB8C17DEC82D8C52
C60B448E5F82A709F72E0111DEA25CE8A4F5F21221C685B5EA66A190C9861CBE
8EAC9D4EA2162C1F811FEAA163A79A42E1F86EB6C59EC6E28C3AA13C974B14EF
76271ACF949F1C8EF3996A316DFD05B580BD0EA178CDBC8DA70E1ACA4BBB750B
1AE69A495FD78B8360D1EFD469D77A93D8D86F9FDDC3495EEC1B51BE06F1A3F1
0632707F6978EB6503ABBB9357135FE0DBEAFA431AFD5EBCFCFABD5202108992
696581035FAFF7EC6B8DD4C8DA191859B849155041CA685D8FFB984CA4D08776
653746B7498FFA8B4E65F40FB63444A42C59514A4D758E268987E655906BDB78
3F453BC5D5C4B1544D614E359215D84F6271D8741D015349E5610DB7AC693E83
4D130B64758EDE8EE94223A6FE589DF6B2A0748B310A2668A706E8A4FAA3F3C3
BF323AA0D7DB8AA1C60C3E1A4509DE9A09E4C26BDB0491219D21513BD660EC73
90BF7C3A24F95BA4C6766292A3D5E5F61B1B37BA17B101100D87D3D424D2C158
C834C9D0D7E5C9428A7921A182A877A5C18CCBADD86BA22C8C06047439F4FCFC
D7563BD6A489B5D1B1991F9731379CD2294BA688D99E6A680B29A9BD451AF5C2
E4FF24D6D3B3E8A7A4F0AF2F91B756A9D24B5BCD1F229432165A0705A1FAFD1F
97CCFC601FEA7DE7F28DC0FA592323B727D5F6D6ECAF469B5EC88BD93AD1CAE3
83B1CCEDF238A85AEC8F647590F7F143A58E83EB3D3FE27771519C3F6AE36F19
4AE585F8AA9AB555E95B09105F2EEDA1B54D9CC6F9AD8C75FBCC187E71C14E78
4F62A8C0CDEED060F4742610A127EF397EE80392297DAE0FF46C132F4BE44F3B
3F559EFF760F373FD22DDEF388978F11605BEEC865C6B960DB86D0FF6C0F11CC
DC488DF707CF4D033B9E0A6E0CBB134BAC4079C29511D8743D0D65F044F0E47D
391EC324EAB3A77847357278CFB946BE6F44735A0AF273348A88CC59EA9369AF
C45887968EB0B50C55246950AFAA9785DF7B31F8C89F89868B2C70EF71E2A27C
8C809886A3BF0FE95BAD85C8563C42F6A79F54140A5B1D932464CA21610C80FC
490523D00B39A9CBEA52E596078B6BEF4CC0586770BBA9EA0EBD8277AEB0E5C8
A2376019F5F31A5D9C64259A976B0367B357D2F8F0232B51828B8402F0AB642D
07D704F27E7E35EA52FD43E6E200E0DF7714A48AB059C1FC452BFF39FE1C2558
BE0C92AD8B4D54BC29B4F7BCEE92142653FBE35344C4B6DE7592291C73ED3897
C357AB9359E5646B56F7E1E72921C8A634A298355DC7E3E2FA4F67FF57D6B5E8
B40C031A3CC186ACA69335D96DB0C8E524448C568BE2AA12C36353E247898A51
167EB1A67AE864BEF6C35CE1F67283F80F870675A9317CFA4A64CB6033B51D51
47E9DE5EFF5F418A29B0797B1B02FC49CC019A376D7F46BCE19E46EC7EE6ED81
BC1A5D68C2315038EBFDE100E56A092501B03B8BDDFD64923A869B1F50633348
598F0841BA8E8A379365FA8CEDCBC348CED156634F7D7086E2A09A1999CC3E04
0E434922767FB5A1F51D1DD85967190D01B0B1800DD14A9D76E22CDE6B2C1C7F
3D2EC74441CDB559F02FDAECC3C0330BD426927AC3954D5A3216B642254FB572
09AF9466EC91094FAA24CD468C484552A309E9B8901906544208033DAFD01CCC
A37133853F3495E7FEC641635DCE0A89CA530CF4FA607455DFC67776D3BB78B6
63D8B2A247EFC8194F88A3F9EA0A502F3820FDAE6D2322BCE9B0D42BE18B0B58
C19532281240D4739934ABCFEA064E60AD496C7C5D930CAEDC6315135A9917C9
693C04473E8BE51B227B7D584226FC9A23EE8A9D5C99D1F28289B12B4650D8C9
6839395CAEA89A2CA4F5ACA8794F6BF3FCA3DF53B954028D32BECF7CEF56587A
8FABE879070C284BA6A3CDD5B8824DF8BD22EF2930B27E868362047F476BC8F1
8C2327603C0354046D2CC541ABB4B1C3CBD598B13D96F43C1598AD0AE678354D
A9423C96CD846D996892911C296625093A3694809BEEB3C4376577C9155659F1
4EC559D50E70A2E7FAB9E593782DE6C1E5DCC08D82CFB33DF6C0C11110CE0C45
5286E82ECB9F6C180BD96FEC9DA2B61EB4B24D0CD9074A2D3C918ECDF3675D6E
1158139B6BE6900E6B7220904CAD7D4F6EAE456FCB415A0C2DB04D1B8585D0ED
3670F95564DA40590185BB1F71387AF61330022E82137726C3DEEEE753C930BA
E0A9A3AAFA42591A67E4916CBF6A63EFBB15FE6516C7234B2A0857BC6CBC436D
80C2C5167E4AD1E30132E4865F1AE8CD3EC5190E0EA633AA366CD5B6B873150B
D6D9ACFB3470941B13BE55A92C2DED429238E09FEFCE4F89821DB8964369AE50
C6990BF3FEBAFD22956EF515D6897B1902CF554D7D9217D00225781A10187670
8CC11E2D59DE9C2B2E943C91F1C5365ED584232ADA0B9B6C8AFB0869D6264899
FC935D62B6C3FE329EDC1CB454EFC311CA39115B157C9ECAEDFF1E8590B95ECD
96FF7400CF1C99202FE66911452B6B54472CE9AA87DC5E946A86E99ABC43D084
AEA9A95B67F69BA3129A2999086B98DF5E78E99668D9CAA24D1D6E8C1A155CD7
CE63BC4D8FD7513512DB52AEA2C5203EFDF4F673DCE0817EC6AC77962E55A8F8
A3DE674B3DC4223C82B053D5187EB719487285886626CB9D888E3A355C6D5C4A
2C08EB89CAD491D9130206D518C8BBEE91699ECB0E23AA1000446ADF306FA88C
F346E0F5428489DD644A66BE0488D0918469879BAC8862090C6F5C7836F3C15F
A6DD5E1BEDDE67DC8660C4BC7CA98592261D0B0B611D04C00E323C8C81241A4E
5832AC284D158E7C925FE00D3C2DB151AFB9467FED2C191F3073D4FA437EC7C1
1CF69A94C5F52DA9EDD6CB4445DE3CA69BA4BB9B86B829DD233E79050A760F9B
146C4093EC2A0019A3B8928EA3943C4AF223E318CDF792977D6F6C52422EB342
2CD80F159B424B807090F627F5DB6CF638035DF4C1815673B7119D8D04683DBB
851925C8E87C947FD459BDA06806E5176A9ACFEEF1E3E2BE4E6B4A31A8164FE3
EEC825546B255CCFB06537AEABB74A15B130725479498FD3DA4298D9E96EB875
2916713FA40F68CC28BD41497BC197621C595CB703B18B70A4F8CA13CBE8ED0D
C88D08D429FC968393E5FAC762A8344336A3429B8DED3B38245194573B198B9C
540DC6394B75AA84C883CDB2FC9320EEDB4BB18D0C871A99D3E670E244A06A5A
59714F1B240BE164DA87F0C508584637CD27B9EB5057B697A109A4715328BA9E
3BA0A83115C8A0B2A6587D4069C577EDFFF9AE4DBA971BAF7524F89E7A14C08E
8AD01379CC459D211E93B3E89E607043B245786F4313B492D7F0F96D4BC8C97D
6C8D51D6F9097848CB7B8F7F18F267CACEC429DC09FC2BF89F26022CE5CBD59C
3766FAD7140B854F4378C5995F1979D849823AD3DE4E735A4641FBC090CA2C90
DAA39C49D9F0EF7029539F531C00E57632E968061BD8E3E0E20368DEF3337C7F
46D240615F173E0E01145F041C5E88A4EBF914FA5C56DDE77E4C889A07036984
226334FF904FF6A741A1EAA9FE71E9671EC372D0F8AA9C76E693FCED7F82829C
5B5E401F53FB74AA312F52D6CCAF9CA9A6A3B1FA0FB495E5F4353139856EFCF1
37BEB75C5AF92220000D2B35641D61DA387D71EDC7E518C9B6B5FFF93D1BE6FA
44057A6EB731B1296EE2BE3304D05AF18E2B1AF64AD26099525D7396AAD8DA03
5328BE2CCEC7426633AF2004CDF98ABF2955262151CF26166C928C2B8F0AF8B8
5D8167ADDD0CFE86878CE9048E740A26FE356D3E9A02B4DA214EBC0004BB52BA
759662A0BC04B9D83DC4D66004C1599D1123A73B61B7E3A382CBAF15D5BE26A0
CA8E15DD0F6A00DDF748E3D80C10E62BF95C451AA540E21055C3078DCF3254B9
DC9C9548AEA280BBDE27ABB6201C9FED55F023A5D3685D1D40885667CB7C7263
98B0E30FC25B94C05839A325C492F20D67F6306B73585B2641CB3426EA8192C0
A69ACD2ED2E00FCFA7CC3E2A20DFB8B976E4034968DE0C131AF70D54BD3E5E84
1D66773EC603C883C8112B85D2E82DE4965746022BD04540E28BF476989C8477
C2DF25F757F773517B792FCE4E20F320189F126677431FF01F9E7C4559FAADF5
0591ECEA026E3B05A280E172E26FAF2F8ED4BCC8D8C5BDCC18BDEC10078C46CE
DB133A54BEA898CA1EAA41978BB96069F5AF019B6497739FC426A650E6F55EDE
BDFF85CCACF8D465FCD64188DEC463BE0B1852BF8DB0B8D447BB1299481A006D
0643F388E0424B8C030412DF56C06D06105BC07C60DED0690EEBF56AFF87B24B
83168C21D78A8E238BBD7396BAA97C460DD68A5EAC0E3CFBEF49314C78617E65
C9B52AB54AC252CA864B1838364A9E428090033526EF9622980A6B73B84981E5
2C23DB990AAA6452B26E9F02862E2E361825A5960B982DE3605C6D85C9BC4CA6
79C2BBC7B67CDE98F810220FC48638CDFF88CACCACA082935490F28E964D622E
2D9EB25169BE6740DDA19DF7845624D0B5EC38836D7FBA65203F751AF5F0CD39
A52BEA79EE7F3B239434C619F9EF7F008F76D26F779FB72BA634D2889FBC93A9
F25025E91A1445CD37B0CA4D41CBBAC94CFCB8B0791FBC449A5E396803CD4F01
01291072189DCBF868E7C48F0FFC000EAC8B4F5077AF7A89BB3CA423F34EF862
73A727851B62257F7FDA948FA5665F77118350577BBAE1A0AE304F70C1656BE6
6AEAF7C9F72ABD50632AD74B9C80D3F87A9FF3D6397D3AC20594422C7D6CDE31
9677B771ADA8B0A58784F0E5C4FC77C0C9A296E38CBFFDBB78FE6C84F51D7853
946A98E1A2CBB029E84F4BCA58E12FB6FD1416AB90F534B3564603A9B4F7FB07
22C4414F5CC7BDCB75A820899678FAA6EAA244E121BCE63752C0B75717D017B9
F080F5A60C4CDB211F8ECF8855381B0BAA34F07BB045E71B826D185ACC7A119A
C413A9DFEE03EEFD6A452A5910CD729A4745784C55C930CC1C0DF3671C183879
A5F114BE34442B1F51753852C6D0825D8670B68236E8BB60523C162A85CE6CBC
5383A71A0F8A244B66CE14177350EEAC1E302AC6923B17F47E6ED84217C7A732
1BF9A2D23DC77DEAF1BC889E602E7E31687ED41A27D105CA8F850BEA1FF610A0
4F4438BF2532C43B4AD82A54250AEBD334EFDFEEDB69D956D67D1F486CD61C10
A5DEA29F4C949CD42AE1C0D06E7ADB91F4D85FB24C67660A3FAF46BD46F0020D
3A94468A0269F499A5F8418BB228145075B290489ACC05075DADE6CC92E90453
C50D4CEF8F8BB0B3D2DB3CB77160D9C9BD3398ED9F7DB05DBCFD6F17C2EDB3BE
CD4AD1084919F3CBF2EC7535688B742D734147AD0145106BECBDDF0603D1E021
60B9DE60D65862C13650AA0DE0C12D3E98B8B663DC87AE4786797262A1F2F4C1
D5D9A1F9B98BADF74005E7910E4DB0AA22AFD22C10E264FFB98B9D5FEFAB715F
E6618A80F8DB1C6F9DC93EF082B63D5289162C776F239E4E474C093A0349B19A
B6C676A8822446E4AF7F3EBB8E3863F553085CC269FE4472498CA1442F66EA86
E219EF3AC9F87AEB29E55D97B1B6838F8EE5714157F3385E6393D7B3EB4A5229
D29E3A3EF70729D4E1E9695A24995A7334D3417B92D1B53E757B6AD2CFD37F52
E9B3EA7DD0AFA80575AB3FBD77AE00551DB7613E463CA9242B7B430FD223EE50
187498640FA39307FCF817A29B4276578131A8CD9621CA972C9B3C3BF82E452B
61200CB4DE6EC17F51C40339D2EC12576294FB35E812DA6721E8F1BD29AA75BA
6AEB32476B57BF11348B188A46BC73F985CEED293AB7F47EEF83EE3B47817A15
6AF285EC910D734667D7013B69C5D3BB42FF5F22D06D6FC435E9E9BB18E7E6DB
7C8C66B62BFAEA722D377B5C0EDE0D3CDC5BC2CD4EE03D79AA01D2CAE74D8412
40CB322E52A6730E8D900F482311053EE851F35D601ABF7B4CBCD5CC24A0716A
1866583E9354669A3F8D9A80CFF8C81EF6BB15B106BF2D95AD1305006AAE0ED8
6BDC60EF75A6C4641C0159DBB79F9E93EEB846423EBFE0075137208F69C7C0EE
81FEE22436C726213239A016FC2D85EF7C2DDFDFDDEAC12ECBD8D5F4BC7033FA
10EA9D44E8A9A8DCBD4AB8BB3215FA72C8099C85D23F834C361E84F9A1C19F7B
7CA25E816AC649FF5287E6E7F72D41AF8C4B71CB2B33D46065894C696C7D0B6F
94A4A40139926DD875D95B9BF7D83DE88215A95EAFA7791D2DC48F2F917B9529
E277603923D1124D8F4D9220513E607F1322C36C0CCF2966938E7D17E44183DF
57C1DD18BF10546D84C4E1D0D5AD567B80E80871E1B97A175A77ABF29415D188
43A17362749881C5B932E57B5ECED8C4402ED3717128057E33B8B14E6F368367
C7ADF90C01673C129571AD6ABC0D137D5C90EF2132F53123FA3583EB3D1105E0
779476633096D56B8FED981CB7D7D004F8FA9CBAA6011CF2BF246BAADFD25414
DA8687AE5EE8C7F2EB2A67E5E2DBB15D2BD9F4A8ED2E5257D73E355872A570F0
1090EBB97AB3801F1B384AEF85014AFC9CD7DD852604433666B77FAEB71FDA8C
3E2D5BC9750D5425968C713AC750D75A58166FC0D47D72DE8A74F63AC73804DB
4FDAE0594DED0C6C1D2EA12E0D5C9681135B40604F41A8913C34861796691794
FA8AFB6E1E33303B221021AFBC8F6745B7308D6750EB06DC5854AC21C9A5A738
CDD7946C1FDFDD0D5BABE2FAC549BA27E5CF2A9AFADE3EFB5C9524464E96C2DF
2E20B821198690A064ABC88BDEB3EB16398EC773F4BFFEF7F5C7DE94C6A1A32D
0C3EC96A206A55E29ED6D0BE678A1DB04BA154F55EF02E2C65F5F6C112456707
EEF311201E696D90B3253423F537B8E25691ED8C3C0232BA1B005E8878870079
5ABFF39D35EC4D80F5D888A244895B9E86360EF006BEDD73A345B80CDB3D230E
D76D02738E154ED68DDC7AA33138856946A8361010155548C34DC8ACD72C7BC0
64CC9CAB8F068F7BF8681B32B31E5BAB041501E795669A7F504272219118DBE0
A2902A8838A228A95D3B51DB74A147A6515169CC26C77403ADD1E49FFF0E6098
DD9179E3E05B39ABDDCD4AC4D29EEBD53EE8EE10BE946D53B3E0681EC0AABFE6
2B022D44DCDC0896B5ECF7C8C5059EB116704D3A246977D9295010D924F31DEF
08A3056BC4FD8B4047EEFEFECB39E8692FA62FA1CC2C5B1B24B8CD7536EF857D
02C38B29F25096DA222C66C819EDA6DFF8B239A75518C1CD1F0D2368C9FDAFBE
D6F7D867DC77614AF6C6D9CA415810EB8800CD9F498A49B42F219C4C92AAA76F
B3FD36CFD4D2C0A4D936192D33889D72C5B01541BD6C49A220E5BF5A87565461
628AE522723028E5B6E903191F67150CA9D79D2F16914E6BDF982FF0362CF4C7
40925E337ABF8642A40DBD7C422E7E9EEEB8B6F14004349C4060390BAECB30E4
C76E236CE5F0CB6F4016F8F2782A5EBAE4ACCB3F1E611ED754112CCAD3E71E64
CE299146E5F53E258E576219D61A51A330AAAE0ACD9C06853A6B22F654ABA4E8
C5AB1EF08DB252EC18EFE1152B05842214FC604CC16D03B64C532ADA7C4CE0FD
B4D41C9CF06226F1291E36B1B60952279D5FE37AE30F72B525D89A083507EFDF
325ABE1A333CB4317C097F90398B44D9985C4D3F0832506A00D35C5727E7A9AD
DADD10AC191D865AE8787831AC48D695C680BF667D179AE54756DA1200F2C908
58E40A2AB88A60285E36A328520DA8157DE52767A33E053118CC80B1EA5550C2
2F5C37FD550C536A6F39E80A86D337099635CCC3BBB66FDF9CAF360D69398FAE
6528556B7672D118ED44E64247140CB8B79068CFF2AB59055861B021D49E353B
C693B3882B9630E0F564E614DC63E4452BF69EEBD13A26B7C3B6F632B3C4ED3C
8B6638DB89F1A53FCD69F2249DA0227437A27C30401F2F58F95497BC64369260
1DB7A9DE6661A71A98D5E1FF317C3F26B2AC76041DC118AB9433C0F12B0F69F2
2ADFDC85DA013C95FBBAE25E83455386DCED9F5945D1F40C0DBB4152404EE2B5
E21D85CECA7CC76E9EC8A52650E7EB893DC3D5A93F99BED914F0FCC7FFB67847
3A8534F74C5DB7F30828A5F7198A888ABDD8D0536A0E6869F853BBC42234F098
B6E27FEA845F2A1100317BE1F674DAE7088F003FEE2336757A4037D4F0E78BFA
1981C7CF8D40DBF3D9B6CE4E28DE179F2B131CCFA743AF021508573EAC9EB204
CC7AB133DB5F45218A7538CC4A305AE943EC2C5D3B0C71CB20DEF3D5698E86F9
3793353EF9B370311CA8F4791B580C95E0598BB396B5803C981E01B9148FB7A2
E45101F460A6764A6F4242FCF8A44F8E0A735206F70F0985A08A3F381255D5A1
E66F60E72890569A7286E3EDC0A44C9BF0E6459C4B1A84501DAB4869A9C775DD
C5D117970522A75885F99ED5FE898F2D18EF37B6E987B73A075C13CE7B3B4A1B
EF8945B761E81466D7DD7D1BFA0363F0FE5A78BE40B722EF5782C454202A056E
A18AC35D06EE43650941B6D9095117716C37117EE2349D532206A1D3993CA7CF
1DFD7414477F6728EA2A79253A759DDD81411DA3C1756E4DE2A7E23A7C49F777
A1CF7B8FE90ADD4E72CCA707310E1DE33D6A2966829F808D1856F1A94A88F384
36ED94C525C5B95F942C14322F3AC5CB19A292B402A654BB3D0CC4E28248C88E
CECEC840C60154B57448099288A1B4845F47FD2B7C7B60CB10DC6516044ED8A8
BCCEAC07F5EDF36F4484F47BF2470646292941B05CDD9B988712AEC3B304F97B
944274C5A5A0C0C45A6861C647926E19219B836C4537D825B612AEC540A29E92
F94A57C0BB58F6D45B51EA2C1519EA78A1AF377702FDEC6E8A5EA9CB3204DC9E
C5D740C47BE8FD6F6C6D2D1A72ECC2B41285507CE7E0CD05B00BAE012B61204A
3B2AB46D71F16E3CB2B393096077A27AE0D48EB194061ADD57BE25EFF95E1870
13ACC56BE3BDC0F31DD241D5B0E47AC6137671E291A550AA4E7F0527992A0652
767096B2DBD1ADA11C5B44CCB4F59F3D28F15BB3D7380F45BD6E6DB8A954CE7E
3C12DBE4FAF97620D228471C9426C8812EA23E20A54A25191415C5038672CE52
29C54C305D1A7006806AD5B2696196E0E8AA76A8C1FA80E892A31B11290B8105
00A5C5D7E22B1170462881820B06F9203B8308892496BA77FA3578205645C27F
980F7EBB8A242DA1D30938F4F64B05FCE1B0675DBD9B9C0037E0C4FD51A588CC
D5078A639357F05DD8DDB484F676FBF44F7F63DFB2EC8FC189C2916DE054F876
6DA7C6D27A0F626BCDB72F87E3E5297E514AD818F54811AAEE11B2E5A0CFC2ED
AA23F84A24099595C6DA327084C9CDB4C021A913DDA5F169D44CDC8E18539CC3
92601E427F36A74E883CCB7F5428A147A199820B91110BCF706391E563639A61
40BBF8AEE8C82401B6C462BE254CFD452212129DEBADA94ABEE7FAFCC8F76EC4
42A53B134E71E55DC1DBD4F213AA38E1CF0889B150B26BE2A4823413CB5A8CFD
7CEB726A9257437D0148ECFE55A0AE41FAA0F6F4D39362775746B42D45984854
FFE332830EF81703208C855F13F869A6A8203DFE88BEF697FB8EA69094F55BB4
52B9DD708191DC190B062F07DB4C09D8ECAA0110389B6183DD7803AFDC27CD1A
9EA6BF2A7C82D671F6842E756FC8E0A5E249F1A7B2531654A6B8EAD3C3EDBBE7
2F8125D68DE56C1AB89F78FF443BA4D8699EE1E82F3B35C2122B1B7D0AC49651
6D22D15EDB015D41BE53B8DEFA72560A6298551D2383EBFB1F458FEB112E0190
8681E789F418FE2C578A18FCB807EEF663920702B0CF5EEA310FEC2BB2AF67F3
6FFBE467C94FC00312C54746A4A58019A0FA392A1A66E1148015D0D2A0EB8647
A7560C59CF702A7574D4FC7652926C631697B8F76CE970D95C56C4B7C14ABFBE
76E27A5AE6B94F6B71850034674238AA3C580147E7C94C02A301B200CE48D20E
A8E214BB769CACBA7002A946FDFC44D714FB52B4F94A1A3C640648A919B20C06
4833F91345BED3F955165B0BE6245F30E12BECC15E03708AB39A491E42C87B56
25BD95F43706306C11239050217F1C80DAA6DBAAC9CC88CD1B8C92F166DF1911
98E68694F861879DD6987637A1FC4E0A50A8E3E1C00AB96AFFEB20CF3AA1B2B0
B27A91A7EC781F783BCDD38C412DF2DC9F7C251E6C9F2209B7E14A10A268555D
E1C8B79FA41AC291C93962A560812673D44A1F7D7B61E462D434FD52F59FD3D0
55EF5F83DC59039F8084A94626AABE69C5A58C1EF0F0E689DF54CF47B593DAF2
772044FD1613C5EB7C2830947121427C06B95852A52E11FD938FCA6CEE90B57B
FA840A40151AC740383439BF096CF70A73D4C5260B9170FC7B27A93BD2D95A8D
433BCDD4FC2E79A024812F389DA6530468D0F84756A2A0F0B5307A90F56AB6C4
14CB4C9C87AB2AE91CE39F254A614628170ECE0E2C77C6E68A1F90D2A7FDFBD4
289A6186F55D1CA15C97A46C0B90801359CE38FD4D4058D80BFF3B6CAFA85F13
B73990B288FB04C031ECBC2B1F7AC2F0AF3B3202C8F9B3BD6C32906844FBA9D9
248AAE32C2859422C39939DA7AD4D25607B8F3E2AB7A9DA8BB6EF063536DDFD9
B950179ABE516885E40870B65C28715D3286E7FD67CA1DB068E8DA43575859FF
8A56584B46CD26A9DE44DE03605042A04BE98F4EE7AA7D8A2F79B347BB6B8ADA
1BF6FA86AD35C753B4C86EA3DCCF05D5DBBABE34C887660D0700AC90B09F0CCE
4A3D5F3E3D71577F627EF60832EBF6C4521DA2C9012445C1A24D3307AE06F748
44358B8809F01CD649DF2043A2466FFE51E0CF00CFE6CE940B7BD04BAC6D89A0
D547E450A46492CB488627197B044718C126D98A9CF7E7CFF5CCC448BC797CA5
BA3BB4096194BBD130DB6A446D57C2213958D769D954C579475BA1EF673E78DB
777C493F66A4A327695279D2E7545353D5DC261F69A9A9A28670E0F5F32FAE6B
3B1A9EF42443822D1C2AB517AE37FBBADB4EEC9E423B1A010747D5A7F77A9E48
E448DFA5F8A40BB9043AD9B1E2066A102D551DCE509E1AACC3E4728F00584E42
B87E2D27D8FB6791DE3B8C949EACA2073A7327EE918FC1EC958CD3677A4A50CC
DB52AEE2BE66076E539E145131D2DC8A6841F94E0960C7F50BA8DE354BFEBC45
E01F9F50476B978D2CED61CFC527FDB0A983A0EFC3C6402A93B9BAE447AE0346
425A4EC5326461EA11F114837EA17D8518B37B794AD6F5557EA668118CC81FC7
5DE377CC9E3C22C83AEE93735BA5620EECA73D55827CFD2AABD4F2A98316F325
976A971D2EFE6784ACF218A17114E985D09F953AB4FD44ED3443DC31BE192859
0007E8D1E80A13D4165991D4FADB575969CAF6ACE67DF191B49F51D643E57405
1ED5DDF344D85C489C321E2FEFF669B96912227586D8E997DCBB2D442FBC6438
6673B86980130A31D4D4D242C11CE812F2C37DC27A45F46B97BF5911A77BBB0A
38036B8D9A3421775CC5E1475B6EB7EB9E0DEFA7B986383D0946E1BA715C04B8
19635E25542311B35198CC8DAA8A9FF961C775DBF66074E849198887043FE4E0
35305B90DA0DABB5A1E7FAE9E4AF833D32E6C4E8FCDB6F42B5CB771999D35B89
C496DE51DEEEF35041A0087C76C73D59D66F4836F266EA0A8379088102C8F51C
CC9BB4DEE2C56C54746482CEDF3F4C4510C3F38FC108BB59BBC021B93E47F4FE
A5025117EA57B82F78D67AF9B6CD1ADCD329CBBEFE5C47314F3FD31E1AADCA2D
966516E90F58658E0BD5ABFCF6C954A2108B1B832F02615CF80F1A55794A5CDA
132BB04FE1BEAFC4144BAC39441A0B2A48A96CA5223BA450A274B84024C50C8B
3BB3E8B5ACE24BA0C7DBEB590EBBC66929D345C02B5AACD71D27042D1B782B8F
E4AB074009D26136F2B8C83924BFDB5C490EBC1C1E2F724383A24081AED1CB61
2A3B12A93A538446BE48A901C416B06F58B95735E35E51492EEDC641B44D0F09
50920859C65F5124F4CF84B7C32D4637F5E1AF57BC28A08907004E032CC07E67
CC62B6156AA0F03F91FD7D075242449604C6431BB9FCE988C64B9DEC835C51A8
E2DE1B063317E4A01FF887CC8BB1504A2EE85DC7D3F0F8E4312017B27EF1121E
F8A020316BF2B6F19D1197D0552F9174C8AA9A1D1397664586456E3B348080D5
AC7BE11FCAE4B6E91571959FD0DB34A3014646F0616E23E42CE1CBF022D0F4C7
27BCC3ACDAF112E89022483388589DD69ED62C816F03766C50144556F553B12B
5AD7A91A3089C9F992D98BF50B9921C564D6635F2E745F95AA97BE3B0FD7D324
CFDFA5400B4B03B39F5779713AACCB6A35F12DCE19FF8B776538DC12FA844B55
C02F8D05AD2615B64834EF6F85A5457CAF1314905F76C2F968F981E95027A081
3B0486A9E1F018F51A6DE544171D56B74163B8750EB056463EE9A2BE9F20BFE9
FEE93153A3489C8AC26185527661660A6386724243FD675D6415A8712E7FB9D6
5C79C0A5C1EF05090060EB85FB67F8DDC2966DB0CFE67DA5F8DA49664AA9C9DA
B9966AB7359C4E5C21233667A728D4A1F8620BD3B206A282A9276A726D1526BA
DCA30A73FD6C41EA0569CDAAA6551CAAF6FC5403A54B726AC4EA818AF22A9E00
E475C258DE7E602EE3D450FA207540AFB8E4C5798FF2E6F83DA08567B9147B1C
84113D3940375731ED4C4CC633A47063C3418603576C2CD0BD7741887ED8D11F
B1638548D795E6A0CB79FAFB105D3BB9428AEC9E6AACCFB43F90421F9E05EF64
EF67ED960D8EB0C8C3800827FA67B856932BFE0C60B82C73E07846FFA2843E8F
6F5D71147C1150BA46EB2E93919530A03ED88DE88A3D55C4FE08DE02B56AEAFE
C537B878A7F30AAD137C5050FE7809683C51C5E708ECD13EE51982146C92A3C9
219A908649362498030A98BEC1F1EC598C22C4A7974C6B8DC4977249ABDD4F24
B66626A8548C8C5FC84ABD641E910EE38C00C6B9B53A5927E0208549CD697F3B
1B597E7197DBF35944AED0358FB648E0DCA9E2BFE9C2B8AB4D6D5813B35D8776
5BB8A89FF8D3AA78676C666203B5E854EFEF59445B911E4490DAD23054490A32
52B9267B75430449379FF1D12B1D90F3D50B72F19F88D7BF2DDA30738FCC755C
DF0A8AFE09DCE029ACD67690832E48686206965C459B9FAAEEF111EE1AF6CA1D
6FBAC51D094BE439A367F12CA9F131F4AC9EB6C0217EC069C1091B9CC62BEFDA
23F5DF76BE05BBA38793B6C69294B6FF8BE2BAF82F134CB4355F72DD1CE66886
E3FFD2742E8142D7402C41744E44C165C6186603628ED6CDC867AEA796B35FAF
813EDF8E12A81696C045
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-4 -235 731 800}readonly def
/UniqueID 5000832 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC1A6ADAB001EDF5C9D6FE45735098A304A8BD4A0AC9980
7FFE62FEAD3843EF8C45E1203E303D028897CFE1D4D0AB8BBA74CE279275A67E
81AEA417A3E49397386B7304DC9247290A5CE2408114441EDD82F9B3A8E49C4D
D9745142652BE8B82C2A9610B26EA1A71212CE97781A06B58C3DDD9179016AB6
740166FF986AE856AFDD2D8955D95B2D0C57BC179F1D9136BEFBB6F17E8DE96E
921502FB19F0C21F0A491F951D83972DECD70AA8987112F05C939A6FB073A5EA
495069A1DDF11DC589D2E91C1514C2799C5B9549A3CEBDEEF87B000E2686DF86
A256B3BDB4FDC79C218947A13035A3DD2DAC7684B9DE946538F20649476C08CF
8E15487FFEA1EBC887F047AB4743681630367BE8E18BCB399923CAAD1FA80328
613FABA04D0E234FC559AF768CA55B8993E2F77A78E71628F68E7A19D4E68EAB
19BBDCD200D3EAD6C6B0F9DAA45EAD0AD822DC04982DCAD312CE4EBE815CDA68
ACCDE1295B615F37F1395827E29E3A1711FB2B6C5020D709C036188AF869E8D7
91FE3DCFC3E1A07E49A206130512BAE13A13A9573AEB262077411083C2ED2774
0073D2F18F5E535CF1F0D0D082C889B4F6866D4F9DC8C616BA9F1AA22C72790A
97CE703AAA6CC20E34F50351F322ADA07886A9C806D0C7F94DEEEE505168E607
77147980E9DB279856A16B74D2B54D35C66C51148F9E029E02E7739EBC6A64D8
CFA96E7153EF89C8B7E046D9E4E6F21DBC770FE98B8287A1D75752F93232509E
529407836CC3924FBFBBD4E1879395DD704764914593BB144BBB0F0AE0879CE4
8634B866C44C943A7F111BEAA21AEED6457CFB78AB44E4A1681D9F8B5AD54783
E4BB0036D7FC5E46811F5EB3B83956FB2603C5BB5AA042CC8FC0A8322DB6BD15
030D7B40622753C9A7F0B1C126314700F19872A1D710CADE05C3BD13D9F3D1B8
8E793D386C143AF46457472A56012DCF662892D77A48FBDC6369D9DEE87FAF1D
D075AF325A9673F48A3CE5803D627D7C4741F40F184AB0138C55F58EE66DD054
3011EF45E68A7B55CBB4FC5150EF5C222DD20B800199354F9E26F1AC16005FCC
36E4A3D878ADD42377D8C571353520711F19966519DBC29475AC3156D71BEB04
B4A5229DB642EB4D894E5FDBDA92C649D7CF4EBA3D0D9E73CF2F32A2DA59D2A8
0F446D258C211DF20563AF7284FA98AB5134EBABE3DC207C11106C8F091B7E6C
C4D2070A09F50ACCA525C2D224F691580F047481BB2A04F5C3CDF36CC1641E25
F24D50D4B32C2DA640D8FFB6E91519E03365CAF3FE014D1AF5BAECDE22E3654B
FFF1B68E3466E3D0F74052EBC628BA5B30B3EDA231E34C993A70C0493E5D5E33
59E1D01B3A5179BA96B7FE212E3F0C3CC1102B44EE00C0002B6C984BFE1ABB7C
7CC6711185F775E092BCF32AE92EED500511C0C1FB2172175542521F9F1EAF89
ED68B38CF7D5FDE1DFCC6915749744D48E4FC93BC0725E6395DD9CF96F95F408
99DA7B3FF8B4EA84605EB3903CFE100898C70C411FF88FCDAB67A497C10E2824
46E2512974DC12E1ABE4D3F8717140A8A647487EE2C2259966043D4070C3902C
86F352B1817AB1C88CCA506AF11FC7FAC57F2AD06BDB76710D1E7F6AF429411F
CC5636C5FD305CD654F0C4452046492922FD89F92D766E04E7BFB3DF2FC83A4A
BBF142138B3A3DF98BFF180FB932F10E721D2D38AED323F9156897D65F404A54
AC1DB3DFE7C2F2DB5897A93EA0E6FC5613F9F2E679A5963BAC6A38CF06FAA7FC
FF7F99F8C67776213DDA096F80B4BA77E33130077CE0FB04CE2940A3F3DF2E35
F788F06ED4549A3344C59FC640CD3CB9CCF4D88FD625D376419EC87FF6E98935
C16D4A035694CB9A55AEBCA631363BD57436D6E4B5A057FA21EF6FEF701D31EA
80282E750F70C041FE7067F0FC94C385922671734D8950F676D6BE65ECBDF118
8F8D8D3D4A994CBD9D84CEFCAE8EA96586510BE62EA2FC456DB4CE9FBFA4946F
4257C8F6AAA2B5E29AA58C0B7FDC1BB0FC73D4F9154951BE742E3588794718B6
1F7A23F34C7975F913624524444833DFD37A3A48003F9F92BCCD507A660BB5B9
91B3E0ABEA009A14F17A810649DBCD8EF46B8BFB3DA94E7429B5D3A56DB0C5A3
F3E6A3055C7B2E587920551482B7CAD2392520A8CBCE39F08302D96CED0FABD3
82E325EE108CAF8EF5DEE3E6281F9D03FC59A43F4DE4423C3617FCD13C40CAC2
6B17C7280936C13F51730C7530CDF6A1D4CA168CCB426B2DF7F2A68A33ADBEF8
9E392200E32BDD1B05E0DFD0E469FBEAE7D5BBA2005124DBA00807CE5E525B89
2EA698823E12846B61F2C8E3A3E5F77DE24415C31983326C5996219277A3DB49
862BCCCB5DAFC877DB320A32903FFE21FF0A01EB1F084B7C2AEFECD4EB7FBE1F
70B157E36743EF82162F7DCE81DC30E439EEEB049DC15E29E4D03A6FEECEFAB6
CCE06CAF2041BC2E779503C7BF7DE9F4266351AA73C649C748D7B7A295E87DC4
CB710F6E431E740EC9DF75CF0D49289D12366C9C228AB8FD291D83845F39493C
5AD04BF1E91B0E2DD58F03655576C292DC91624DE87E285A89992C9BC94A3744
33DF4E715307EDA8DC24E4E5D4AB856BF943B9A3FF0CE9E3B38666F37FFBF756
0E534EFE2131CEA4B4B5FEBE3ECF5F2674FF2C403A231DE6C4BF1DCE53C3D2E7
AD5BEAAF4A548CBC950622AFE405070BC85861735C1AB04B2C812D96B488B4F9
6A6B20235CBBBCAB51BFFBFB3445DCD21BFD985812492331C495785FF8B4C284
68BBA5B340C8A9AA29249BC1985DA4F4605FC47D13B987AC08C05F8B69B3C57D
5BDB7A8E25E94A65C60A952032ED0A7681059FB52DFC98B6AEF49E8BAD036DDC
B6D09C51CCE9548E28DAA84CAFA8090BE68329A283E781447B67DEC68F3BE5BC
B65EA72F6D899A12307AE22E3726A54EBD34DBF492320C8D300F06585850B67C
E07097E5F1E946E11C580D88B0B8FFFB8F0BAEC0D555E4C857E04AEFCB82B805
3AA02FD5D59BF1390014E25E4A456B9A68681FB347529CA98278273EA29CBA58
B70EE222CF0B743E830D7544127AC5575019C164E35C3E5BF130878944DD94FC
C506AF3F0AE5730E40BA797986CEAB3CC39A8FD8094ADB074AA4CA76CB38DDCC
CBBD5455E40CDD5093F7C294CB75188DD99E62D43F1E8DE421B9251EE196A01E
5CC7CF49729039A509BAA95A19589967FA7B1B3C815A206B83EBF11755A6598C
C9DC5A6A8AE61192D2C5D874A6D8049D62F1BAF63C6AAA2663B74AC85B5A8972
2461815746563A809CF0A8DF6195B334354B698ADFC9F200D538FCF2E0E32A0C
A8DDA3A09300883024B064C48C82C3D84B692284E2BC1C4AE9125783E0BCCA8D
576827C79227AB5FF32F7E53417C1A50962DA8586D5BC04BABD7C1D5BD140E01
337E9A8D231DDD88F1201B11F07CC662C91C361E4C840B15B0C1843DBAFB2094
F0774AED351D1EC94256B2BABAE2AEEDA55ACC573B40A7B84604244C487E886C
5F92DC0A6499BC3DA8403D3D004C0399E06C5489133D8C014DF4D3273087FB58
730FB6BE3C3C4B9B362FB171232033766759F9A2C0B9E38E6FEA07946F2C19A3
FCAA0E8A0EF92D16CD4B001917A4F81BE701534767997962805B2B85894FDABB
627A1FC8239C17910071839AD5ACC8F03308EBF74C772CAE16036603D7A633B7
D34D463B57F809EFF6F08A180E33229AA2145CF61420C92F581CB11516028921
2F2DFC9B83B96A1981E1D33826A9160C9AD5F72D4C7DBF9182E055E4C6766BEF
F725194BE793BDF139ABB1FFC593C62A32BF3D14863E7F4315CF753DD7821FED
978E714A061F284FA3B35BD726DE21467BB2C7BF433FDDB60C397548C7A7C21D
4EEEDA828AE31CC2D617A7673403CE36FC118098DD9836E4559C7DE0F1575D11
C32C475848A4D9ACEE179A956F95C90F7A970A4A06A932C8485112A1F92A98A9
4493204C2C602BC81826CDE5E200F2C09612720E7FC387C42D7EB5C054794C13
D66D67B95E1679F33F37F457CD972584A1058007EC3A461AB55E4BBF78EEC277
56454C47E7FB4EFADE8E6D257492696E91E74875DBCA7E8D2E986999728F297B
34C3F3A7BDA8EFD1FC308C90E61D94B1E7F4760B511F395E6B4CB9D6EBCE2647
FB9CD16D0830388175F43D51DF62D6A10707C7533D77C2E805F961D65C8F958F
2BB94B24A900F521526C3E7E0E8E89236603DB9D13A20A6DC6B2C5371FDFD77F
B2E9EADD1A5772B7078636B59101F00B528B01915E189CB5B28D4A92437A1D59
F864AE21689279FEA4C2343E7943909124E5B4CE9F97F473517B795CF1A20D6F
00CA2BF407B3CB777C7CF742234EC31FBB5F3F42DB51E6111083956F59E08FA8
E16F8CC214DCBC9B20E689204807F247AC457D6899180C0AC247CE54553F6FB5
BC935C086A578F49311B2EA7773B45ADA498C1C263590420AE8768DC4412EB81
BCBD9EC214B77E08B23BD544EB5A8C751417BDD30F135E16BDAA828AE3392D2F
5875D48578EC28B4A20CC2C2D5950C2FF2AA3A85B35C0CB59AA837B2F2E440F9
3B76B741BF01D9DF15F6B2A15024695AB03AC397DF4CCD54C295CF324ED07FC3
E2798075942706B1E874E80D06D1F01E49C2D94A30EB458151222F3C9B37E47E
B46862C8D142257A25D454920AA523B3D88EE4AC8625FE7DBFAE22D5ED57F356
F4F7C5730E5A0FF142F0440444AEC41D0EE8AAB3BAACF68250EB314AB194D5B3
EFBB027340E06B5241D15E6190B92B440DF60F1CAC7B0328089C17655DB83181
178B4C366E0FFC6CE473B37796DD3105972C844154E523C28BF715E82476A481
C0CFD5CE9BF7DBD274E78EB8FE2FDA0262176FBB2A30EF92F7ED13E07E7177AB
7CE2A8589E0E1BC90F766305C98CCC8F7F2CF6269E901DFEE6C0A9DAEED435E5
F1DF53E8AF04825509E93F66B6EA71F5808092CCAA1E15FDC585F0F076735465
8C7FFD6F9793DF9F35A27F5A213AAD49758471244B4157526AB11992999AEECB
2F8C8B0C60001C7FACFEB46F7E62208004AAB15A9003B78DFD2030E3E42EC5DF
E33C30AEFE54433B1BB6020A263CD6B4F995B862B9827935415E43C443D2B391
32FC8D17DE5CE38BECB40F492177457DE126C36ECFB72E427ACC75E039883388
ADC144D188B91155E1AD1914B42327FB0571483C7015A93279F3BF19B3A558AF
FAE48B4AE64812473EBBB528507DBDE4062AB2FDE16FFCE84FF0AE2DE92EED87
11FD8A3C2469DBF1CAAF69AD8E17795C62B00658505E9F6EB79304BA386A6AA8
BBAFA2199E2F477CB1AA23D2BC482909B3DFBBB1E8561FB264DEE9DF8D0A04B2
E6497D156ABE7EF04EACEF039AF74F86536507CA5C4AACCA01B6EC86A932D7C1
66F76C90A7AD75BC5653E29EA2E638C57A9530159FD4BB6E63E3AEDF082DA35C
9A4AD0F0CF42F7A0B5C008ADB709E9E8A11F44F74A7636667F48141A3FBDDE48
38A50D2697E79B57086672C81433A6C72E8BE86653D150B162FA330753DFB46D
BD1104468C0E8EAFF7E51769826EF8EC7604BF6BB06D8657C167B32333A46AE2
BB3AB060E34588CFBA126C885EA28CA6C99351D99E436FE97D04E66E16A2428B
CEA5663D191BC2A5D7637A7966A0C364BD5E39D02CCA5BDF2CAB16759904DDCC
C2F52C66E141905345697A56B69BF9AA15962CA3A266C6DC34FE7F21232E07A4
50EC6E7FDA40C6BC34D15E52A2130A321BAC0437C0AE6CEFD3413D19AB436DFD
6178D434C759150ED223FCF3F9D2AA7351DA3E841A5BE2CDC0208F69032F04BB
157A79A668DCAF6A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
/UniqueID 5000829 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EE5A3DDDCD392415AF58CE22EA55B7F47031138C6F27798B40F7E18FDD315912
BE99F33ADE0FDD538A8A3E5DE58AF68A54732AE69F188F3F7E0458D848205648
CBE820C287ADC2394520F03BBB97DB893F6A12154B1B7F8626D35CE6B70F8524
CB128DE87821A0E32F1E825F6C50AE8B4BE37FAA3183BA4D678E896CC7E61CC9
D0226FC38B9CAE0939D19149D987979B96A86EB69A105807AB426639292FF5FB
EFF0817FCFD5E51529B3823A1712D3077349C936E0A9C346BC518CBD509DD08F
A2EAB53104229CBAB61A3A576CB46C38080C0EDCE06743DB7062E1A01850401F
AD00D00CFF87F7BE0C56287D07A460C99473F57BF6C8EB62F2FB59055E5B9BE3
9038FC623E96A155CB51832789D87FA40CE6F8EE34AC65F129C1CCC5EE8BEED4
166BE46E9C5D2FA731A37C3B3CCD3241691BEDDCE7B5E38693F17FC6CA93B6EF
FCCEF1D079D72511D2646A2F87178E8512F1B843312520ACE715871D5E774520
83829F8150016A6C646890EB771888C014D8816CB2BE94542678BFA3A8C17061
62E1F792DCBD6452116383A43D4291BE5991781F210F4597FEDBCB063C3C11D8
AB98A3364D56F91A95139E36C74531805B3F576BD4589E20F811A101B7E315DF
D41D01A9DB0F5B94286DD04F6FE098C889F29FC5303A50E7636EC59E2E882896
D1F3686E7ADB60E73044044CC127AD7B7C3408C911F4032FBC14D080E14A1406
F6FC1C259523B037FA9FC1455C5268F25C483BC815394FE8914D3248C74B1CAF
63DCBEF152C8C0B99D2E03EADCF28A051E8ED8C0AE4404BFCCCED0AEA94A38C8
79C8A0B18E01CE371DC5CDE44549A93106F3AB9FC7E7B61BA605F8C690B39D00
3B6B30B7AD5610F67C3E2DCECA783E1937CBAFA7CFEFE3205098BB1E6B1B029B
5BCA8D96A51A051413FB5504DCF71E4DB37B0DEC613C0B4D9EDE1D49E57AA032
59525D5EE339384467524E7175D73373EF3FA70D6E9609F8F69C0438D24CA71B
D08CD34AC3AB3D69E9C576289FF5AB5C5287FB9FD3FA1F69367667D3649A37BA
89B3CA8D7F8A6ADA4727C67914787FF88BF39A88C2DD026B2685BD01205145E1
0AECAA91A1EA0AE54055450D3A48857F384D0FBE72FB5DF2DE7037DCF1E052E2
96550426EF9EF2ED205FE4BD774295EB98BB4737BFEE5B34FA043C9E43A6F8AF
BC5459EA060BD7BC6EC59D972C3B8C95FC252A523316EFD6F1DA0AE213F7F3EF
A6E20A2EF1343F04D24FE3EFCC06AD2AB0CA92A1158EBF6FD318D830BAB6CD12
8D6AB8B123731237D182FD70F6B3E101413BB733E1363CAA62782EECB147D7F5
E80F598E594A66FCAA2FCC56DFE2F1955AA863D8DF6C0F438C457D4DE2C24072
BCA03C9E41CB322DB6D876F1E19A9D94455C420B90B84ADF4A608696B4E65F98
CECE9B7B739B4EF03DCFFEE7F9CE102126BE6795E2550DC695403FFC19B4F5ED
C37C9094772DAAA4DB3CB2CC7EF6B754304D99C6855B2A26EEB838DC62EF45EF
64FF78A7284732E29F3985BE4197DA9CFFF6D8B35F195527B3AF41640B7505D8
5E62AFDAAF71EC3C52B77C3D47C88F0F30635D56E5A29728D64802059BDD5013
7636E6C4821AA895F495DB2C43DD4530029F69798E5ECCA8990D3411550AD322
81FEA0C21FA8DD184A9716703FDF273F02891EEC0E7413773A39780CBA3EB69F
6E8B856D26DE352D24B8E0159F4A00A286D5660BE90B9AF62442A0325B9CC0F8
624B835231D42000DBCDE7ED1C5AB0C64BBC6885E5F7B2469C3D07CDE5AA916E
E61518CF5011F1E5C94448B4A15E113FA1C54CA24FEDAF7A11A6D529C63DF93C
9C045EF84B6D1991B791BBB0C0373F79BA528F1E8C3AA1BE8F5A85C076D06306
524A18B372C77BADC090E0364ABC3A74F271FC020E626A808028E13496FD18F2
21EB27F232B7F92BCC97EC5170B3E467746D368AC79393D41DBF9DE15A986BE2
EB1B5BDFAE94ED6904EEBD59C9B711667BFDC999EDA2828D93D534EE40BDA5EE
5C054790B50ABD36B090400913F2122118814F0A981AF06704E84B05C5BE28CF
D793C9A2FC480684ADC2A33B79AF39C83D9BBBA97FFCE0620E1C3F7B8E7A4648
659B79BF38C7456864E37CA5653D1C902C42F4D0B608B14FC5F7EED61193E1BE
4CA26B84E2AB6EA90EA74C6DE2F26B78477C864564C951116DC0BB82CFAA64F5
B2D94D809497495CF565B68BA5744F270BEE93242786EDA9AF5117443A32265E
3E23BA9AF55721FA83D9E314462160261063ACB8BEE18C8D66B8C3FC20241889
2A6A7824EE38A65C2C8B20AD146886B3278331566DCA71BEB33B3166DF83B4EC
283DEF084D1CF75A47647ECB49990B2847709AA3CEDC32985AE2872B89A6105D
CFC55FC35946B9F67C2533B6B2F843C00355C0D09BCCBD5221FB93267555838E
4788866A29855A471BF88D36C76A50032DB0FEC4F7EAB8A0EFFEE1F316BDEA5E
6C17104149E1B62E14AED563047AC96F0C6678F5CFB937763B3991DE8661CBDC
F92C19410FFFE6187AB9FFE30533F8155FAC075B110EE4FA82F7107441E24B41
7D4502F4102A7AD7DCE7DB32AACAA81F4E1C7A82E3D65C31A97666A3E0D8BF4A
6C55DFB143ED379B35FD13C5EA22EC7713B98A18DD62B6191757FD7B96297489
C69F7E6509389A69438AE535020A0A66871E96BDE990FF3DBA642317ACA0E325
3E4E6D247CD3AFD48C6483C58F4A1DFA0327A44D898B8F5CA2FC97A564B64CAA
3AD815D9FEAA893DD62B121F282EBBB2997B29ADE1A3A641C1D51EEA70E52FC7
436E6C17BDB9153DD841FA0B18C379B10D1ACD7F69442CC86D7293F362F4A7E8
BD0BF1A18BD9BEA8ED8CAFBFFABB61957DE0064776315598616ECD954C865D7D
C3F3A9CC2FEB6B63B8E9201707AB0D1E48002F4F6A4EB6162B98FF32736FA62A
FC46E4CD06A3C75C094E08EB0766221D4FF87416585D31B9772CD7864C61A1CF
DBE1515D7B5E7C32F81924EF8A16D50E693908D7A57DDB5710AB9C2C3A48CB56
4E0E0124A69BA5DA9C99C554A54589ED5486700E5E843459392FDFCA0B4DB672
87DD090BA64F7875330321F80688F953E17A2B3EACDB91B61201B10DF83722FC
7DA2811B480A7EBDB0349AD2F30EAD2313A90544AD4ABCB8CE971D974DED9222
9B5AE564D38DF8FB6541178BF052EECD065347A8969B567D1834E20B8BEDB211
AE9EBB3A191833C4C0F3BB4C31065DDFD0519103A23EAE5A13D1180214EE9F3A
5AF06901DEBDB60B7CE08409535661B4186FB2E3965BA95A7497B818D8C22692
FFB24DBE6B7982BACC8660EE6DAB005A714600F3EC13FC234378D116966B163F
1AE62F4A94BD0BC52786A78247818E27DEFCCC2FBC8316AFDBC699200C82A8C7
B0B6B2F658FBA610500C16C2BBAAF0949F1DD0FEA242BC46CA6E267D461F3400
A307B8A1DE4083CD20139F84963F48BE570A85565DAD08C1B883CA3F90881731
79B092CDB8D9A1886311AF4EF08CCEE467B5F2DEA48A5F0796F51FAEA67F2541
A88D478006A3470787C1C050006D02947797A27A4B30583F41E90335149BE414
2B62F41293C3162AFCF014F49B41C0DFD3059D1681259C604938DC1DB357EBD4
E48603C38D22905D26D2F7C16214BD72E38D8907F275DCA4799ED929F7DE95DE
92DA4B36C747E1102856F294EF4933A605A86BB67CB3AF79FABD60535E323EBB
BC5E6DD64086A057F51D133B7F675C4B210C068B83959389BD50FF101EFF36D6
6DF8E136C9F22040C4335EF4AB1B5E2328E93DA39150D6DD4E9EB6C73B513DEF
845B0614F3628F98952F77D25F5C673D0199B95745A2A2DCC9E197AC4A937CA9
416AC4AE098BA2FCDB3AEE7B8C83A7738101B0FCA39BBA4ECE62BE2125FEA74C
DD8AC412A3CA8438E1F0A5F49BC857B34BA1F2DB0C3C16D4AE936C2ABB2C4142
626AB13586142CBF779FE5D4715F6E792E79BFBF83EBFCE42FAD300F529FC008
934BB897C738039C170E9EB39278245537023F4FA650970C3EA2A356745BA0A0
8D7BBE99AA58D73D83653017B1CE4CE763B96C526FEE2359A91F3CB3F685DFC3
A00654CDAACD7407D2A1919A6C0C240C3F77A1BFE036DC0F5C2E9E3944EF88AD
4569D0A830E7B5D422989A774B1EAE6C6D2AEB76C273AC37CE2C1481EFD88A59
215E05250D1D74A1B36F2F53222EE20077410137EE88F6C3302BC157DC6D2969
A658E2DA435F43197B9B9751F9C97E2147213D126A24B540CD2D6922DB45F130
DBD79E85E26F385EFF4BE81F4CB017101F33B539A1088626B898156565B2470B
E19D72665826B193B6220BE035F385F357FEFD69DE25261AD103CCBE615F95F4
A3EDC5A09B06AD76ED093AF6AAB5CF63773A5ECA96E56724EE80F9814662AEF0
652014FC729063D7A92923CF10DD98B7EC2F805276ED75A20474012F0275DB7C
C18424F55AD998C8851A760DE61F1FDD26B1856C98A1858749BE3E24BB586436
041A27BFA6E1EB9B623110A16F7B562ACF4A69A6267AB991B2F18D3BA8F5DA41
3CC76F6687ADC13FC2A2CEEB7D6034D3618302338B0660E61CFC410997AB48CC
429FD2B395DFC5319378C7566BFCFF90D00BEFA3FD57E9C6D067516805D3D2E7
88AAEB73D1B6EACEDB4A9E17D002C818FDE1F52C2909D7920814DFA0E73D2987
6020C1FC98FED6FED3A5FBB842C6C424C149D0AC6FC7F24D66631022758BB37E
A7A17220F6DE469B3268E7663B7B470350268FACADB3DC047B59053C6738BE10
5C6BCD5EFCD64FFC4E99FAABBFAFDFEA21D4933DFE8B2C611040E9EA6796E8F2
877F838252AA458F750E135842099C2A9D9BC33EEFF49ECB6858AF254FE1474D
A3E2432749E3AD1182D3F637E17D1ED9A1683B9DB74DBF94055826CBAA46AFD6
99496FFB7B2698EAE39E5A21E757B710B0A5EBE32508C4C4F663A9E51A693C47
8BCFB9DFFEE3C3B5882E600FAC50385D6A942C3EA5C6A89CBABA39EF570BB99C
84CF5B69E0A42D82347351A1208CA8432F684BF5DB96F937468E151F8CF21804
1D0CE225261D51EB7B18F2AF3F8E59C66B2C3B5E169E982C9838862C41FA05A3
C9DF2BB18F2F4D60C8D30ADF8F08D884D7CC2CD391DC5F099FA2EFE8ADE5EC51
4AFEA0F2E44842847593D9C9F9AB8D024B62C1B9741A337901A38D605FEFF153
ECDF431909FBF32C646DDA610105BB00DB4D8D48E007872CADF23A7FD5E3F4A0
5EED44600C621183E2894F9E49BB484F23B69C691294BB03C10389A8298B7662
65A8F8867584F777393F234A21E9BB89A5B9FDC4EBFF5E34AFBB2819B723EBDF
5DE748355ED9C1D622419FD5D1245F358F70AA017E1DC82AD7EE97FA52EEFD79
DD8BD3473A06FDD2C94BD5026A97917F6024B10261BD4104C9377DCF226A56CE
DF3301967F70FFE7DAA416F1D2DB8E98ACFC3B78C64C497E8D0557EF4448E7FF
3EF8341C39B84341396144C7EA70382132746953F4CA9C42116037398CD2CC69
FD30BF66184CD7EC07AD9705BC77FA1DE48FEB0C357A6CAC8144CEC3718F0D71
FFB458E2FAA3D60CA171F8E60C8A9753F4516D9052DB2844722FBA11AFC437A4
911E720B7E7EDB8F1ECAD4D7E9298032BD1D7A924FED2328516487216A8378CB
2A1D2EB10149D83CCE6470AADD122E81795AF92EC4BB48B2AA90ACEEDAFA8662
CD2831B85B9F56D3ECFA39B061354750EC4290CFD7666674091B990C7BB4F621
F448FF8D1545C278417AB7E55B250CD236CDE7587C8F6AB36D92A25A8B785A9E
9ADE6F950A9F763CA6A448E66BBC8FB57A974A9A24E8CEA07A98270D363821BD
069CC4F1B49056FCF758B5B48E388E9A5FB25452BEDC2A90B56F4EBD575B7804
EC1052C61FB467F6FEA1C29C9EE645EBF051E6E2DA590E5D76C2465F23D24563
A94ADB2D088B4D152CDD077805712488D124295FD6FD99587BCD811A96F1520B
F1ADA739ED713B2C19DE236B6899765895F8958814AE59CA2907B5D0E957D95C
CC0E3492C14FDF3D870EFA80F4FFB27B6D203D20B7841B931BF7174D3383F325
5BEC93D6177BDFD0A1AD3F18260B5400C9328F8F97079DB40C805867DACBCC36
EF10246E2B6AC778AC2DC5D723A0267E85920E03A96D873EF0ADA8F42C645255
5A24EA6B1A16744572C0A92E5BDB3F200CDF9B463BEEA1ECAC13E42A3778EB40
4E6C96B078EE1C22E7A9ECB2165FB5D9D446BDBF6723126498DF6ED268255F0A
E526B67413BDA2BB46C21801BE1414B0AFFA9F42363AADE664DD72DAFAB7A4F6
52CF9BD07A0D4251A31CBAE2C81516579A664A87B278921F30E173FF5CD44E1F
E241E5EC6E79EDC9CE249B271C6C206A062D126B8EE65611D9C9B98C7E0A0F99
FBA2CDD582DD3AC07D029D51839862A0DB99BC327F2D356B572A47AAADF17EF4
2226BAC4A4A9665526CEE67C5FCD77B60746B377329C3A28D6B5DBBA44AF1DC1
EFEF3E4B4B3C3EDE62549A20FE715FA71FF3773D589388FD367BAF80977E80B8
BFEE4FEC8C87A5372FBC1E347BB1954861B04D0BB0052F279D78397E7DE6D073
BC6FB68DD872C6F8A228227F3A21087A6AF038F1EC4D0B0C21EEDBB4661AA50B
E2B1C2149F12EC1D4BBF1CB40FF7B401C7C25E725CC5F88770C0EDFD35A654E8
E9BD133ECB87FFC0024275720CEB370E01B41781A53C2304047257151B2F54A9
4E9788214A891C338AF4DF856EAAD3C7F1E04DBA4F057B411FA95DD4A0E8D4A2
7C86E7ABF8D14E6C864B37AFD107EA72DC4EDDD9C0F1A3708A80917875B87136
1E008C75615303D3D0BDBF3D0A050299D882CE010FC4B84F30B34CF5E3FD60E1
078CFEC72458321DD6AC5D343DEE1B4100C53EEBC3FE626FE608CF5805956E02
0C4E93A31606780E345CEAC5B97316A622490F0151689153A32F2E1F7597907A
9656B07852B6973D9D6DA6DB00BC1D6E1D014A6C4F67DAA202916A398C661F50
8E1649BE7AEE25E8AAB45018CE9E442663AE52265E1DF4DEBFBA48FEB5F97FF9
168763398630D0B5D3E452310CE939588DD8AF2BEACD87F769EE43763529A510
FAB82CC799FADB087D83E12CC3B750831DF010276BA93D303F4D4FA905FA63E0
8B916894F580D9105D4C3C12F9B8DEA52A72C69E42831191F5E906F73DC1C95A
AE3CDF702266960C963281182F0627BA5148E133F7C571DB873979A373D0DF55
F17253B8E031C84DC675A9361051AE8B181B35F2C0CC6755D4F7B107BE40A048
E1854477FF9AC87929D0051E8F231F4BC7350FBC0B033D130CE38EEA151E976C
EA338B60AA9717DED4328290B38354E689103622A7F459AA6549FA8FDE5AE9E3
E0C544ABF2F22C5AB9959AD860A6C2FF2B41154B5719E9E6EF17CB378E134DD3
6ED3206517DA90DC0691B62E594324BBE2BDA526C5F5CDB6CA93149CA52A1A2B
AE867B894AD57A910703150B67E41A05B7C75743B8797BDB805D9E7AE8D69264
EB40BF8C757F682ABF2CE472AF2637F60EBA2CF39CE3952685C02C2BE0303681
CB4155607CB1CCADC86AA8A639DAD9C194C124E3E0BD1A4C3A4873C330303F80
D53B74E6A1599DE92AD6B8309599305B3E2F5E962B6FAB55D0F9A973ECE3D3D0
F318AF29FB490690D92D2F381A69586177D8169F0DE55C406A83D1B4E17CA0EA
51162F5DBD31C7E52D09A235B4734C08127C436883918FB1CCD60D8942B3628E
AEBA1DB344C818809FD0E25A2F171AB422E91B657B3A4D287431A8D20D0FF125
7953430C39CD62AD3484866BCD97E10A0E37924175FE927477528C946797E5BF
F8D7031308BA440D543C083AB46E9ABF184E38B0E6A4350EDC1F84EF7EE04F7E
D2D2F756F96359766389CE9073B392BC07FA7A9928CEB3F855C633448F7B54EE
D431688B23AF6F39956D963D27658A49478F607A1408AA486F985107D243F517
B0B4DCB3F8996BCDF500A29E8C4CFE7D7D862D83951F1728DB28118D6EF2BAC7
44C868A94FACBCEA6AD377B48ADEBB32C39AA78606BA86B7E911E39641C53AD6
28F8F55B27C8AA630D1B2A7062DB45824330922A428E40919B060D5EF5BDB8F7
2271E358E2D283FE131893597CBB392A70B8DA01274960AE47E15AC5C44A2FEF
00499978F6C32CFC8EB523CBAB8285D97FB2ADB7BADE95E01CFD44C5FDE23096
3070421C788D376DB6C7B9CE5D22769C91EB8CE404425ABA3C5260D2F394921C
6D6E1761C60525ADB6944D54CD0CFE486D40CD74807D3C2A9BAC353344081222
5073CFB7BE7B32B595C02A74BC7A6B03029876B1563F3AB0989FF1D1DFBE48D9
197093F87A9466CCEC4801249545C102B0A8F373B57A414BCACCF91BD45A14EA
E2FF88609C278090DAE08E6BB14928FBBFEE26BD8CED73CE1A575780AE36F3E5
8AF2614684C22F53940A0BD68D6FCCD8DD0DBF1418F0ECA95A9F6CFDCF546547
2DEBFAB218A6AA607EB094B40FEF557204CFA25FB3FE1792C0EAB0B196D19BBB
B43F16E81AB6C8D37793342BA9B96C99F5732818B746B99590398BD7E377F027
5C1772C9DA41DDD978437863FBB7FF1F2AEC4DC8BF0364586B3DAA0556A57C6A
68164602268880C769A21963FD5F72FA48A7D5ECE025E08CCCB62DAC2F95DED0
B15FE609ACBBC3B4176AAFAA07B9EBCD678D026F9938A0B18D7242EE5E0626CA
3F6FF90F62B0A78590A86C973B4EE773015247CB3514BD791947C6DA9DD05487
8A66D50188D1B0FF72DDD5CB3AA644DE9DF476030D44A0D731A9EDA94EA8CFA2
A2CE9819D87C0B8B3C2C4502FABA3D67EF7C6F6DF5B1270C007E2336049C24DE
9D818527C6F30644B6DDCA306A98A82F05310ECB089BF62CBDFC975A70B8CD98
90C50CEA8C6541ECC979B9F24E0B29F9ACDD42F0A9F8B231C0CF822CFB1A7A7A
EF9FBF89BD78D0AD1907B76BA471D48063EA78FA393F638F1E2AF2C298AF5B30
2AAB32CB0811B947E74CCC933040803DFADE35E3B71DB11E9D38EC74251CAF6A
D51BEFFB6F5095C5C4AD838487B295491855CD49867260C3B1340A746C6CF8AC
03DD9AF3FBA6A6EF71AAF029A45556A0800C54FEEDEAA479A1BBD4C806E0F203
276E170AF56BA4A0DB343BF6FB6A32F2E3C8E83A7CEA2612617EDB50DE0D93E2
4D9C19D08D3AC5EE18E45E6DB082E28CB6C80E25B9E1B18801FF9C025D04709C
04B3E856B2F14F89D7DA409AD68325CAB284E01D8399CCCB5B66A27F8666E7D7
D06272F3C298275569C63DCBE3D4E05AE6A97E10E00C673D7F48646D61108E50
80DF0F8AE4037C7FC3A92E106A4FAE59502ED26B71B8257F094320E5C3AB4687
B5A6539E219D7D2AFF7EB0914FE7D73400321DFEAAECCA660D9E3C53098C1598
B692B3E73E09D92FA7BB8096798BEDCA79C5483B298706E3DFCD6336B7CF0D7F
12F1862E9E191F444029567DEBF4AC635702EC63EEE5803E36D3E2815BA68133
933953D878B9C914077E54B7E8F0291692F6910C3F8B958668BC16199108AB09
9B5ACE20ECE332C36B8B75B52BCD1192DD8034B018AE5F78C8EF126D8E549240
7FBB1FF864F730E7B366943A96FB459BA07351E8DC9BC7660AD3BE42AA59987E
3D9632A0B23F811460A1D98104CE802293D4EA2D72CE72A26C42512A1DEDC1A3
390A06712E2E6761047C3F6B4EE29EAFC9F1C5DE315F99A82A51B5291BFA0917
C7BBF2BE3AF66EABEA648657A99E740DCA8004BE7056DFA0391795013B08995B
52FF55D9A10EC1E8E56353C3D6830488ED154437FF044B3EDBF24E03CDC13B74
585E6AD29667F73DE57E02702BDE50BA4701C4A0D3B9FF5A71BB37F74CDC3099
ABA56891BA1A46B292B345FFEA0A1458D34877EC9B30C00F4A4886931F87E2C0
E0BBA0B8B16A991CBCF25694DCAD0FF18A256993FFD7F3604172FA0CFF70C8EE
5E3FEE3A4E562F96302E426960B780BA0824D054C29C6B0EE0DD0C88A34127B5
7F48D30039ABED64D8EF0CEB5E68A5B72462836764570A59ECBAF1632CA77583
E148B6020EAE8FB78C9F73DF2D9ECE917E0DF94D7021AB8A42B70EC45CF1AAF0
D6DACB959F5E79E1EA3E03BC5B009FF7080A121D120B035F64F29250CDF246CE
BD1F7F2D80A09F3DA31EBB0DC4FD4A81AE7B6B9242FEEC6714D175FAB147DCCE
181863641E722CF7EFD7359CF277789FD00468F282B2155842912B32AB6AA513
91B3653A69F3CF13CF4BC90D5E81DE6E2E7FA272C5492A5A6024AEE7DE7B64CF
5118F2C5C11A4A284B04359CE0E04E42537E6622ACF264F4C5F4DE128C721DBD
22024768FEAE64850CE1751B9714E00FB3122B0EAF5FEF816ABB341EC992E205
E9FA4099FCDE9F92A17A052D814E4DE9A49FB372118B459455A85AB2AE7029FE
52315FD5CA256ED52B3DA10AA3C4BF10451880D3C88B38D20524094C4A69F203
C3B3189D02EDE07353CCF2414292C02BDD3B3AA8F4D937772D0148249D3C4D36
49200784135776CA8146958CDB072AE588AF66D3210FC3746C45A76B4BC35C03
3F56CA1722219C98D631B5E9FDB607BE497573FB5AB50B9FF424C5195AA9452F
93E9593F00644D00FBFAB3E67A95C801C39C14F4572B997A60891832B37EA127
29F6612E42CEDF610F0E157AD1BBFDAAE98BAFBB2CC7AAC0F7DE7C536429EAC5
DC8727EE5E30A9335FBAB7BF26FBB40B9124AE1E7543E0EB874421553A03F346
47B8A4793781769F6386D1D73513ACC9E755676E2F633358E7436A19D910B32C
02536198DF42D8D5ED1AED4C2731C1BCC94514282226941891C863959E88D2AB
C8F202F0985BC91226AAC1A548A907D3DD6EC91E26FF855B7D4CF06480225C63
35833727101414A192E64DCEE08335292E5650F636E8BA17CA43FB5632B86FE2
CECDF9CEB9647947CA38FE1F0F597559DB994B7F0AD1A9BE51E97D512B5A6EC1
4CB007232E9A54F2CEE0DB9A87C22C8109626C10137BB9627BEE81FBE7078327
7BC3DD7A4F24823E80E358A3CA2828C3FA2E27177E6661ADFEE414CFA7EBDAB9
EEC7EB704B81F4AD3A7EDDB5A668EAB999703302FD41A52F9CF941669CA7464C
8BA43F13C8100EEE986D1C9309391356E4A392936DA51068A6903B2F625BB521
9C0B6C653A6BC2D3348BB893EEB5F532A531C12E648D5B263D8BDC3E26F76ADD
E73D1E6E6CC51D73803EEDF0191B96BDACF108BE9BFF83E984221BCE18DFF048
179601528BA069696544F6C3759BA7EB7B45D1AD281E1CE9FD38DE5003453954
8C8F11A494C5EE0F291201D74DF01E872A99387FEB6FEB44133AD94761C8F4FE
DA43CD019A4E43945AB4586FBE98DEE8093C310C77C59FD7306B3B6743B98666
D95F57FC5EA59C3AAA6D75DBDEB4DA743ED77658A5935EEADF42D04FE88BC21E
6B15A717381FAAA8F2BC7A453BF47E5ED27EBC2CF61B224EAA8ED7177E269A1D
936C2238F72C0A55CDAD112FBFE1670B99CE785C3FC03D07FCA2618FB0DD6CA4
EB5EA5E092FF63A887D2131915086BF8CDFC1E11F1E6366C4BDB06E6C5E5CD2A
32CFB9CFBE5EC42291474A758AE52E6487BA6B5E281A1A0574CEA867483FA75E
7660F2FD9F4E2698D9DC7ECDAF471FE267953E880998C0F28F05F85ADFC39602
D4A745AB3E0AC7401DCB0A26EA632F0ABBF64BFDE444FD3E98B4D80797823EA6
E661295C2529C6F2080FC3DAC9B03631B6880BF1113A79C94082B3B8F89DFD7B
13C49BD067DCC30097ABCAAE7AB1686BFA7B25DB48E69A24B15198277F15A902
A7A43FE8A3E2C5A510F92D91AFF5FD9E29C508621F3D766AA3EA05CCB74C21A7
C22C765F108E9A886B236952C4BF18E9B8DAF9967D12D94099526C8D5032BEF3
37A760159884CB01428EA7039105D6177039CC8F2D408DCC8EE4F4641DCB0D83
10612E718154423A2975860A7EF2B2E2FFE471195308DB2EA3F49F236B6A667D
1A84CFB4F58DCC53273DE8CF07AD8EB8ACF88394D24380E9D3D0D587A0B6AC08
94A9CB5B346F94AF3ADBC1849A08C762C5DFA849BD2E2A47695A5689C90421A3
E92B4EA718A0CFDE9CB3A4044FD21AD8FEB2A18FD205315099120CF2F3C9C5EF
FEBB988063BD3BFD61ACD7348D8AD3002C32BBF18228886785B827699B93F175
97C527F0DE7B1727680F3B2AB474CF25EDF61C3FB593307B5588249CEA128A2C
2EDB2EFC1EB6F27FF9B40ED64C5436A3BD627111A0550F82FFC1AAB996DC69FE
E125BA2E4CE4281C7825333345DE884A4AF1E13B1F0BF950B227DBBCF61B367B
0261EACA17883087057455BA867C5BBB715B7C8BEE34B11D5D184E37938C1708
58E14D53B716CB891F598F1027B89B2148191FD080FC76574494A78F81A870FF
C0F1AE7A47453C5D826685DE20F3736AFD9E6C5E362F7F37712C2EA2B78D5DA9
92F1DB42D98EC608F0365E2A619858B70DE70397CE9FA583448C7FD5EF11D7C6
E5D72106AA4D64875F0EDFEAABE1D0C890D7AB70EE437954E7EC94649BDA536A
4B14E685376AAF547D6456F9BA8B1A4FEE6A77880C8F8CC52147006E0E3863CE
A2ACA90C5105EE8E77C8D92C25003964F591CA7BFA252D58913613CA4915B47B
75E70434B096BA48E14E42807CE99C9B566AD66C9C980A2BBF81673B294BF2FD
184F9639FA68F633BFD2451DF86B570D50C50952213FE53B12EBBA21B2CB075A
707F0B70B214561778E8BC8DF80A05926D89C52B01EBA643955D47E6B12D4A72
E0987519551D0759A1DED887AD8603510706E1C43C8FF69481E6E00FF79BBC38
2DF3068120B0CD5006D2C196E75F2E12E52C7E6820650AA2F9CAE2531413CFF7
2C6238D59A297AAB854E17869E60C38A5FBDA85CB42AC5D1D8BF5FA6875B2021
17F3E9177CD200A7420402B854C694D1705BF3115E0862E2DE4F9073E9625567
8819205B2250A870BCEAA3DED3ED2C1ADB196E6D1E8E3A5EED82B3F4D44F24EC
0F8782842C34776AAAAEED3FA43BFB73B53C8F738564F46A3EB063634DAF0D9A
A235608389BE51BE73102DAF9AFB39AAACCA2DF1C53E65149C72FCDED0E01E74
4FFCFC2AD7BD795891FD59B9FA6DBD5ED6F1A43613D5BEE628C30F68498D540A
49EDA250C8846EFAA0CCC36309B79CFAC9C4F55BD50166F188280699C6B5DAE3
77E912D5D92CFBFDC6C7FC15369C6A09C5D70A720619AE0EAF440552AC76E36B
1444EC11C010578CA455ABD708D027DF114FEDD5C3F9C70F18707DE5A5912A3C
4E56ED0B9B34B38E64331C2C4EC8792829F9FA78A252E33FE821E982726C3EBF
16E435408861EB167B3282593C10CE746FED7EE28B5E11A5CD709EFF412CFAA4
2ABE31E7BC54F40E494920B9F8D36540F9B8E70F2D0AC0CC3F77CB0A94E3BF9F
FCE9F588AC2BA94D1BFA830CCF8F406D3573C42E3F054C42E57AE4CD72AB75A8
B1F0A07F66F0404320E5E3658C82E75C980E575C3C7DE67579FF6C7520B10B4E
CA027B68FD00135ED94BAE01BAE72B18B575D57E3642F84941A73CE613674249
77CFE667FC6A5CF57B874E36F519A2DACBC5D13D7744CD463E7535E51CA2527D
8E73BB2C42A41914B44B9888F2AB31180DB959D961E6A45023F3EAF900680DEA
EAC052DE548B49B45B3BBA8C874AC4E9F5DFC984C62B6052F059D9A9E43CEF18
0AEA96848C51738256513F4BD4839054854CF4EB480B44726921A78B4906EF0C
66383FC3F0729A49557BD54A625E042E48EA89003D4EE4F9770AB081F51E9C78
B509B739A67262F8B3AB6F22DAA74206B8685C30E43359FB6F361CEFB713AAD9
F222DF40177D90F174F46E8F3A86DB5C8E2CC393CA71AEEEFD28AF02E5DAA46E
8B03DBF5200E2A1D6F574A7D64B4EA7234B0100FF5D504F0EFA16CFF37C2948D
E426B949D4C8278F03E1D5557820B1FB0ABCDF9BC7D9684CD466BBEB30669575
60234E55141015E59F7C37D370EBC47757DE89E9E1056FCDFE20659159865288
525C47E6AEB9624D5C2BCE8FAB76D872767D7F7F782DC4EFEE9072BF43EC6A81
D8969038382BF14DE9B749AC20136E8974C7DA53469E21F303091DB93CCDCEED
3148A7C9E3D537C1734D3A9D4268C89B4C77646EED2E78865CBB26D732F669DA
EB8976859472505D4BE672CAAD8F48776A0C44EE0F2F314406D7AF7555B7FF53
35827EB53B77184C4F4F04CE420975AF1F2C0CAD0C63134781A51CE19E8F95F6
76AA394BF10DA440845858915B6CB2FA8D60AC0E800E0A51E52E46FA468A4BF2
17AFB8342250FBCFC061E905C0345537BCA5DB95E3D772642AEDE0F19425036E
70CD18CC4EBB2CF47C60C5EA2264EF5A98B87F7C5D5AB235A1B78E0015F17482
087D44DEF7B9C51766F67482342F16FBAD9483C39EAA5B235DC89047F468631C
E21A2D0DBF0E35EFB90E9C6700B81FEBADEEFB65F6D9A1DC6C8A2A1E587B1479
E9C2D2DB408CCCFC46D0CC59EC2D165DE7DB478D7C32BC2CEA66839343CC2439
9A72F98FF3D56EC4B61393D0468910AC00DBD4004F87380ABAAACC32B2B4458A
B793A7D73D5F126C665F9FEFFB1AB9858E411435321749F008FBCA03C011F6ED
6E53B80DA2863CEBEF7842C0EA916F24C39E0E7476DB962F9BCB668C218F8006
CBC85BF465493619545C6F87B3C36C81DAB67F2544106D5BAC4551333C2F1237
212F642CC7B709120B96307E995E04F464C5CC42FBE1D976A77EE943CA6114B3
E3A018247FDCF6C5A46D9E4A7686A8A108A745009EB566D31C0AE9C532EAC160
5AE5570BCF7C18C43F94BB5CCBD35362C8DEF2425C8F4133D986C7337B51D506
90BDB48269504A5737DAEED6CC76F43C050B9C7977355EDAE8C4B5363D3036D9
49FB142B9766F05D2FDE9AA2D151CA30BB3D16F92D55BB176386513386159B1D
7463130729A38D36EC02BE5818BFB38A431A5E5C180745FADA7917BAF84B7693
FF3D6E8358FF1EC6D3FAE1377D620AAE506570190CA689AFF5E13EE500ED4E49
B965BAF2B50948BCAEF1A94EDCE7E882A34B0A7E9380DB49A757C9ED0191A0EB
41AD111ECD584D5FF89D67FC9DE623ADD1532BB5E30CDE6012D3727E6579B12C
F3745F2383F2CFB661235876960CCC1926B02A5682E415E27A040E0E13E5F460
9E8253E4DF76A7A3C77B696D8E66BDC59503D14D3A604FD9E91EF6A713CD0096
6483EFB17409A4B7B54E5A23D5C5EE7C602215FA81CD33241127AD6AAF6EF1A5
2AFFC1CE2AEB0D56D106E1AF2C6518BED2697EE254BB71AA898D36B74D5F1B87
8EFBDA840E64B21BE33FF7846D19386EA578D480566CD632F62DC650AC4D103A
FAA57194FE03CB14918EC5F32E8C01D99BB1E3F2EB0487AA47511DB6641FF046
6CCA5185CB02A84DFB573724091961BAF688799D2A7AF48FC91277828379587F
2D5F33E68D896BB6CC76D6254449CD3EEC3548DBE2A98158B9ED05D31708F858
B0F44B0B715E02B6F5C0E467CD5DBD4F3F14AF17BADADE96990ED63CB2441E97
8832C436847692070DE31BF459072697F3A6FE4FC0A544F08D0B9200C1A59CE5
26588DCAD02CDEE7F3668DDE8398FE1A0C1BEC9B8F06ED9F58F41D47F7FB1ED3
70A57CC8ED81395BA4EEA661F402F70C4B730F4B121B29C7F87C39CA4A3E5136
A92EABB1E7D746B95191C9D3FC2EAD0051A3EB55CB52ED72972CADC91BB44710
E63BB53115C3338F06FAEFD5A8D93417FFEABE4543FF4E99A59F0A501B31D1B4
B8FF7CF927B64BFEFBAFE3E301C948EEB3AAC6EBFA8A40B95997F003B7E20AD2
E34C943ACCCD65D19C87E3E256AC6DF27479160200EDD47431EE3BC47A9C41AD
457978DD40F480083952FB75A03E3DB2DABFA45DB05BA1863624B5455F905303
BA728F396B5A0570DF441B777FB7B4A4671BB3C10EB083F8318314288D2EE23F
6632714EF0B9E319B8E405007644E251935399C92BBD56013172EEAB6C443C98
9691FAED930F81A014D5862BEDD856E1D63F7085C7DF9F8A221AFB950509A8D9
5ACE7DEDC5158084CB14203B69D4BF9C6E5D35FC1743DF37419A879C785F8859
479E13488AF01D2E50ED6E8A2C6E1B434DC7633E779AC384363E3D26F0C702AB
B4B76492D78D5D2C3DE64B397E37CAA5DE626BA7449317C407860150331DF2FB
FEEF28FF12607CDAFF7D6153425E69F3945B0E98E6235F77905E3672A8ABC5C4
68D2D15C434B3E6C6C78345FA3CBF04E0D4055A208D6D5153472E632919487AE
B5E3563D2475F77F40D8F06B7A27C6D4B4CA953CDBE4E12C44017EB7FC85C998
3FCCEE603EB9BDAB937FAF3755320AB4F3AE850FE0E7954E277DE29076EF4274
3BAF96B1ECAFCD11CA92D2B9F136A6A36239B477B5A9191BE09455110B0AA022
CC70E0315ED290A7E3EA1B7920E2C9602BD0E5A8E9CD642F391CB53BCBAE2B40
0564FBCB9B755D0F6C2427A912ECC36179A21B1FF963F09D49844261D3924963
C966A1199B3E892B9FEB85E0CE445DFFBD5C68299A388BC128F28D34991E913B
72BA02D540FBB420C68BF6D339D8280469F0E29C0C52AE7DDEB91068FB6AF2CD
8A16FDDA43B44CE6962994D08A72E1E9B073B27519808393947026633CB8003A
C7822037A8CE05B8336A9677230A69DD9C0FAA663D4DC41CE32DB39F4B75BAC1
E41DB19B2D63AFC9B18EB8C5C88234757F214179FD95ABD1B42A9B861B3757D1
E793CC63FCE97B4DC628FB2793B0C2996ED8399D2295837E3ED7114BEE0701E0
A4FBFBCEA96CFC9A82BDE0EB246DD5DEB4500A6F558F3F0B7D994E7CF81C01FB
52E0E5F04583DF5562526B2F3CDB35E8ACB0A08EFC55BA104D768630B4766AB2
F9D6274068A6E35802E5296B29FC5F90D66A35A27FDD326D2A92FC98FC0E3313
DA06C8185E5A8C69AA33CDFCAE243EEED28D25E819D69410617F4C96740E0B00
B4A2895C95B4002455237087F631C96C12DB5030DE45899A93C9780A139E4183
850A868873B5D29A17E6B2FB3D60F6CE44F4C28F013CDDE709FEAC49222AD76F
9859C0B77A4707EEE962FDA2C7A93791DABD1EA64A250595631696B45211CD26
9BBCA36A3A750A965383352C1576B82A6DEE7C5A2F55FEE566680569FD7B5C07
10F773D0456293EEFC1BEDF10BCAB73BB31BBC84269839E398AA60C33146FF5C
F32ADDE4623F838A61ED616D7FACD995A905538D41BCDD912F41A71FE3987F97
C81EB2762D3A8E45E562755DAB6A859973629808CBF6B7E415FCF164976E3AAB
64F8FE15575BF428998F97E20260F1CBCA1C141E406197D0CB6177DE2895F4CE
FBFC9419263BF953E6850A7C6DA736E8DFFDEEB9AD5B4E282270945B0C6E10F0
44B4FC17184E4CF7D85E77986C969A63E520EA1FB03BCFAB9895D0AE1E8ED912
E07EA238577E692E1B017811F5268ADDA2EF6F92FFCC7584E93CB83BA5A82506
6F6DA33B57B115F978CA64AA4304C073B14A02DF1A4FFCCD1EF632BC216C6F56
8BCAA1A9E923B0EB6AD41AD5852E3FEB8F9D7429B4E65E4D0E436EDE86C5F2A3
62AD33D381DC723B79032B74EBC6D9F2E4A6339DB69795AA0B14A440A3853A4B
4A64D08B42C029A2706A6ECFA71D463E14128A178CB09142A08CA01B22D38EED
50B944CC159018E422407138CD18BBAF71EB920C596605AEA6E80640C5750C3B
9CB56106F364923A77CE5127BCCE977EFAF9F5032E90ABC4211ADBA80E8AB39E
3861066C5E32B0C6C5155121BA4ABA2FB769AF087D4047A125EEF92CE4E72A13
A75E9F43319E5EAB18BB20787877634F0234A7BD00560C7EF5A3EC1EC0DB2E35
8D42C589AFDBDF027792E3BC3F97E94EB6926DC1C71A67F2C21ED8B29C9945FF
D0A402066D8820B71BE6CFFA944A85FD6C0C0BEBD07CF60F0B4C8AFA98CFEA3A
801CC2290DF259218BF192172112B60112DECEA2FD4637B509CBC83F16C804FA
57671E8865328B9A65AACE8FC134A0607DDF9EFFE9553F729AECD7C5B6831C1A
64F58C547BFD8271F090D75CB9A2D16928921A4F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
/UniqueID 5000816 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF6BA1ABE5F0F80D96571277EAF86
A3AAFCE3744F2A25691FE0D96E1339E83442F01FEC47D1D8F07B44CBB89EEE9A
30C2EA44C2785CD16C3345F5336BA9A4023736FC72CEF9F010BD74C0727A9950
1AA15F4CFBC724CDE04356826EF4454CE6CF718EF6AC7D217A1A82A4E119BCA3
1F11491F637C062282BD23BF8CC9983FE0BB5A7C4439F3FA61459E73875654F4
F5F1387540216886CAEB7E99C461E4565771BBE96D2DB69AD6F9B9F367CB06CE
C878768B5F80B880B1A7387CFA0B3E86A5E7C04830D7AAD8ACAA6C356300CDE0
FF67027F787E1E7C1AE3217F627AC62B89FCCF674D4ADBB57E2131B63E4189BC
EB0211BE4214B07DA67F73D1F857AC6244AE103191EE3238CECC07784A9AFF11
B3FBB1D2E6C90037F98A844961A2096C748038BC8789653E2514B4EF42B54D3B
1932D5F13829069189E6CA60F26A98473FFA7CB46494C4CFB68D12F7D4C9CAF0
050F7C6F7AA6FF09FB9C65A1DEA6C87BF58E35F979E5FFBEE8A6D138B4C09D1A
9004DCCD8ECC5064FA68D677656F729B7835B43DB75E534C7A6208BE25E86B70
1FE367B8B6C61053E5B2AC0E80017160A3912E5142792C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueID 5087381 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C774354F518712BED10630585E99E1C29B15CD8E9E548E5A154B66343
D1F4401452EBA5987D8936C5CE03764F2071F897F000F31EA633C1E90D8662E8
02B6D8E6E2D2A1605D02476300B1FCBF14BAAECB49126DF08A396DDB76C5A0DD
FA7D2996C58D7D76BC2834B14C30F4EB0C6FAF2252BB2166C2311867F0A2623A
DB5D155B4F15E0BE31438B3CEFD16CB542C8CD8D2BC94C5E9F15B81EFC1DF67B
A623AC5EFF1898FCF61813BA300919B28E3618C23730C3A79B82045C07B8AF12
72BE1DB374D651656F3547B9E6FC525DE49EBEBD9FE962D4198F41038C6AB521
4E343C83105E5327AFA5B1B4FAB307978DEC2AA9B1BBBD531D5D978B884FE039
CF4FE4A72207F8F5E5DD2D74F27CCFF305D8A01A893689992FB69C9860A729C9
FB2D7867562E9B526656B5BC2B4A98694252613868371B3D370AFCB6C6045F9F
FAC4589016E0C5E4C868FBDDBBDBE513CF390FCDCCAF4025781E3DE9DFF1ABB7
3F676DAC16BD6B3AE49FBB64AD81C7FAA9F13F33E898D5FE5578C2295682AF5B
8370D880F199E745C6A5F49B487B4893DCB10045F7AB8D8D58A21DD1BB95C9A8
B25BE0FDF3A9D67ADCAC60729AD15F5C37EC944E6B7B678FD8425EDFBCC90FA1
8B329F999760E308743284B8E69E25695BBF07A4EB5E75A9CFA2EC406239A037
A000B165D181481BA2082C5A2DE888F264374F856364A5C9D64CEBA3FB89C89F
93011CF26C1A604D5D0E56BA98931D6CFE598919BD87520E23B6339AD699667C
9997F7F0AE9686493942E517970E0391EFF1867772E32ADC7B2C5A550B3F99BC
3D3A2FF04072910FAF34711241D12F74BCAB319A71C03610D6E4C05D3287841D
6DB40EB6BB5EAE8C5BADA74343D8973ECEC40C7CE6429DC25A2952425A7146D9
D6AA0EE917CFA2CF3C075560A2994523CD2840F1B9628067B61716B021625556
BC0B408FF707FBFF7E6A67A7EB1D3B479B03AD06E259EB17B757BF66B56BD817
8ED07ADE4E3367C253FB0D58823640E45FA266A86B386A7652C709420ACF28AA
E56FB1FED08EE375DE44779BAA2D8D275CE99DBEA3642668DC269D8F65DDBA14
55F66972626191D1A82087F9BA05
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueID 5000789 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB67C3039A0F
BF0BA4B455D035FF3126F33A4DF59FF96752CF58DC0863924F6042B14DC2DEE4
099CAA764A8EFFEB78F7FFD276F0928BA32624C3A69ACEB8777A461298B201D3
4DA271476B8AC8966668D4E28A6FBA952F6D295AA80CC09B0CFD6BE840703B07
7ED93999EB5630C2C7CD9BA683ED457D1341C3AA702B5FA8593A51E8E9165FF6
1385693E19161FF1ADC1FE0BE16FD3AFCDC3916A309FCE6B3F2B362C9F958A16
821E1EB2DD899522DD3155C0B7A7F0876E4DA32FD30D8289266D9F05E77F1F1C
D3BFD2D4D6C8B6FDE0E8957BDBBEC54458C70B96F4CD77E734EE0CF620684024
EB05DF0536FAFF10FC6F6050AB338D44EA9C38150D3779A550C505C06D417A71
62D41C2D23843E0A2A73F72D4B5286E3CB7B8695B2434479776A59CB3BC6D352
677CCABF4133E20F12D91CFD8978C09FB81DF801707194AB8FABA9A6599C20FA
B36DB0A166490D20BB0BD53581A8715B099754E6FA0F7D2892F5573380DDFF1E
F9C3DA9F74BDBEBBDFA5715AE23264F967BC7841CE58E5EE2764555978D904F6
E8DEF6ED66C478848FC35A9827ACEA1D7CE85C8626C162FF296869DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 181 /parenleftbigg put
dup 182 /parenrightbigg put
dup 195 /parenleftBigg put
dup 33 /parenrightBigg put
dup 80 /summationtext put
dup 88 /summationdisplay put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CD006CAD7ED8E8165E496FA0B191B69671C16B43D92082CA3571EC9E
615607606242C9387993E94D19D0A19BDC8A95FE184F8C525CD260C89854ACEE
9165BF0323B3829CEFC11F3B93EEDA86B6EFA6FDE14DBB24E12A755E41D55069
4790186DE8BA8FBD9A2D9F54C8C7A99F3DEE51FAC3EC53BCE8F28B487BF56EED
D38F9600EA863ADD1DB5B6BCA5B9057497FF19B1CEBD50C370BBA92647331161
6031B392516899221DAD6DD8336D62CDE86758125876C66E556F22246B838F42
DD90AE8190E4E8F6209FD34D37AB4FDF26446B3C968B811B0596D45646DB8D4B
F8FC3AE4D9601FB9F55C03D9D01009BD1434C1E4DE1E77B8E96AAC33636EAE3C
F06774A3249849FAB6885DA8ADC13EFA7F99E4C5C903446F0AF5C82DB9137673
09E8B6F1D557629EF7893E969F2520C559A7527F5556C05197A5F4C1A9EAD610
2765C68DAA035EB613D9E59175BD41464EF3CDC3D75ADB3B1F66DB9A6F581FB9
73C1F458BECBBC5733B633B928A3164E2AF942C6A6E75167411E2076E88A0CCD
4175BF0575E1DB05F7662EB96A6A86CA6E9B6F527041B69BEC0DBF4BA0BD2E28
2C834D691E480AEC064D34CD2A2D19AA0ADBB0554713F0C4CA3389A9C842BA52
C9AA818C03F36FE407469382F03AE22D59C2CDFFBF9F49E01916A11EF7CF2EAF
1E5516F746255EBEC440B1E404B31C94642B0E07B0785106028FB91CD398BE7A
C427D4273170428F59EAA85DD5C699041556EE596A02BC99F66ECCAB063FFCAE
481533C3991C874EB27F6D1A087E9774828B1C3BD3B5B27EA453035F17804371
97590C5E5ABD4A37621797F2FD1FEC213D770CABB7542BBD1C400C5E4D62664D
BFDF726FB52A6F4B73A838CA6B06892B3B6DD98F6780C8E744AFBFA2E0E9E33B
0C3C79348B2127EB4516670718F3284A43F4920BF2F5320877B914FA6699BEBD
FDF35105F938C4768E641894ED62BF9F31A4A7FAAAF45859226C4C0489D60EA4
AF0A8E5D477AA0013D909C652F8805CB08A2EDC44EB5EA3FBB25641398D158E5
F844DEA1CAC359C671D408AC4192DFA5062C763DF3591CA028C57CA23E67BB22
75B75F58C09D47DDB377EC285DD8F0F1D35C79B620AE575D327D523226675838
A8008D57D2AAEFA0C9C919691D9B9F467D0B86BA632F6DE83D3006F43ECBD515
1ED06A8F3246BA61437EF878347B419ADDC83F46C7A4CACD8CFFE9F19856616D
EE7D009A8CFB0718DB47436F8406E401292C138D141902895CD67F6B23B0068C
2986B190014C99AA3259C88107C0DF3757E295A061CA2BC27097818F686F8005
2A5ECBC0DD3AFE5375410A1DE6ABF95A608EFA649B5C63638E613DED8D96A442
106113D0D73537314337EB75565AD13E0526436D69FE45F2BCC7EA20F355B7E1
342B72EF5E00AEAA78F432045D56E109B7B154308810B63845161204FF0C3642
453F45670787AF8B9A11D3FBB825B4C429D989107B6D083F3821ECB3B65D37E0
A72726998CD254F76C4EA12ABAE33E2DBC15E991A9CB860BF1655B9EFDAD049A
193651FC2518E7721BA58B21B11FC7F505CCCA59C2DB1621BBDD9195EFC02AD7
1FD65A6D32B3B5CF3219F5FB292E318693CF71A5AE0AB9741E9BDE23854A2567
3D8933B57678977CFCD4E205054873E6CB085C4FFC2282B01CFC8E7BCA7A1E92
FAD6BB02EB82B36008BA53DAAEE3344433A6179D2070EC2FF5D7550EF7EE45
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
95601766758EF6E0314FC705A02FE7E5A5430F30CB95EEE42652F963BB51C16D
1E2C1863812DA973458409D31DFD444D80218F224E767790492BBD70FDBC75BE
734CF2C64D53CD8BA452AA6D582B345088540FDD6D1B0EB871A543CDB2745EE6
C77C2402E8BC0A81272E1B6EFDF02C20C4568B87AB34CE4A1B9C330218F25548
5FB18B698B4CA7A3CD8FB990B6BA06EF61843FC82A5345C82075A1E42FFDED7A
81EEA8CE2E1B299AC3E5E3A11EA25D5BA7EEB96287A6C6684430AB192D2CBE22
D6D1D1A6D72B798E926B277E666E4EE0FA231B923F5F73ADC8186C7D65898E6B
65ADA85AAF329BCEDB4A211C3170C1A8864283131A4C1FA95B51CD6B4DF07A4D
E0092D01D8B12C848F7FA5630E4A1F142BD90B3E08788C32686E14450F15309C
B7DAF2F06DFA20DCF1DEBE3465315A54C4A72F70EFC67A2FF7ECAAAA2D587133
46931CB67403FA53F031C987DABFD39D2B0079DB8EF9EF74253B897E32B453E7
4585D49EF0C5C7C2D5F3937574796FD73365F090260B556B831686E97723F55C
9B18D2D8D7B315F4A10D57193ACF5D6CB234689138936F801FCE672A664978C0
54A88636673A66352CE0459FC0E9F9D49D48D4EFA960BE1D6CA07E2984683F37
ECDE0E0DD6F03044F7726C8F2F049CFCAD101FAC564C75EF00972751B1FB35BF
009079EE6A97A71F3017E4E3E8876AFB9EF5336102A0C301A65416833F61D6C9
C52E94B5E3C5C3B2D937338C54CF46FC730C961CB1716C16EBBF6499C2A735D4
2038A170D0B82AF49396BC822474AB14537F3B44A2C47AA6CA637097D5E4C869
51C1E50EC25B410868A1359A06D42967A5A1ADDC9080D81F9C7C910FD347193D
E46744545A5C5BF8562080481A7382C1CF98C0897829E918780718DEA09710F9
F191117018446DADFD37297FC05AB7C0B91A47B764314DEDC19752F1297328C1
1453613490F86785B3FD15358056A8DFDEF569CA8A27C912A3AC34F13FAD1297
077C5F964235BC17E4B03F177AAC0E1E18546B90B428F9206F2E65F94AFF8916
D37C2050F139536A2CCA6790AF3952EFD8FB6EEDC191E6FDA41FBD4972C2E8AF
D86D60E8007D75F5297688281870BC4D66B75B3CCFF43B708F4B27AD1B531D8E
2CE4AEED082CB6BDF133ACAB53787A0285B0B32B6B0F6C8F2445C458175B1847
519AC24673A98EBEE45173A4295CD68082E8C3C432C640BE88639BD19574F473
3E6189548672F4D5E27BFBFD6FAAE5319914E631FF444FA14BFD80C16F836E9A
785F2EC4B2ACBE37A4B7777A62692B11EF356F2213EDDC14953F49E4BC0F729F
2B43496BEF580C9350693BC171BC1E12AB8712360C7A6B631C0647B80E523DA5
4937F5054F92C10B9D37A98A801BB0A6F43BBF91A94403DEDC208F15751509DA
03B7D30960DD3F1641A85048831C20EF916E51902961BEFF729810B51B4BB160
BAECE18B2F2663A510AD1DEFD8AEFB3B2A9C45D6B55EE401FD1605510F5DE542
67A9A57011E695DCEF86994612DAA75B5B973192425848F57D48EACC51215875
80ADB5E628A47DE3AE67597D329B40D330BCF5148588721AFE9B736BD91CBDF8
28CEAE8C0E30EC179D7122721152A258C76639A5C32E89AECB3A9907ED45286F
1CBA71A24698CC9493B159D296DCD3B7E78EEF80F1BA52AFBDE2FCEBDE492C93
32349D83E18F0182E45498C5DB026F6538B6E8026EE5E53C91E2520F675D3B5E
796718EA5E501E5693DE07C6D4E574DD6CA982205415EEB386675E495344751A
2B2952F31B5666C1D73AA1234AC8F46B8604C39F51A1769B7C3010FBD88AEBDF
99FA999806361BC498119C4850CFB3DF983019EAC3AF09156A73374DF428EAD0
A3A8F13F213BD01D6D5BFCF87F54BCBB0995B4E98F48B413FCAA7D47FCC04024
E95608D96146FE89BE7F46DA187665D5D7FC6A032062A04873E3AC6FA0550813
A8533B647C3EFE1C220A25D31FF31DC082EE0A8A9E94D2A10C3F8318438121AE
7C81B1F4282672233C70052EAE01787BBA00F85B65B849DD57299E01829F573F
19536DCAFB79A90947D52092E18CEF00D7F9F3B6B46E798EC5F527A442D22177
28BF5E8829A8EA767187028449FD2833640BEEAB25D15A5AF03BC89AEB58C074
D9AC5F0FF41FE63A462D642DF27F1F5FEDAF9BE95CD4F763040796CDC9C69920
05E5C19CF93E4C1DD36F7040B0E8615A1B5737C0247841474DAFD1A20A1F0FFE
B44DD3FE437A3B5CE3CE4187D3EE158DEB7A9431008AA1A105872D9E4C5D2829
83E766E72D88358C73D4FB33F8AD22CC78B00097D2A8E04A37D2D1451E10CFC6
4C16BC14938D12F767C3C525798B1E8FC08DC039954184DF51AD05FE8C02F3AA
076DC69BEC56A84CB121F9CBB656824956679023C455A8CF38D19253ED17EB19
1C0561761EDEEC8C7F8334877B1E0F3852A6629A261E1B53623B9ED109533113
2995905CE9D919CA9FD2B6BB2DD383A8A45F7C43E7A60C3950581DB207858ACE
7110C046E661B3882A2B7EB032AB1DC53BC25111064666BB3F5A9C2778107760
39BC25A07155DFEFEA39F760FEF3558A732767BD70B61389DEA5016CCB73650F
BA7753B5580D1799C794CB7B36C16928BA031C1A70731A98F1CBB9274284C7B8
7596DC096CF4859B87953993722863861FBE41C73E56506AA1F0942F36967480
1B34D7ABB7B752FA7244BC79CF54A5C821E793A8BB2315780F97DA75BD7F6F70
B27D93F13F38714944070831529DAB0B5D18D97C3DBF8843583AAB1077187522
27CFC64F5126B80E4966D39045CD90B1D18EBD46BE241254DC10C16595041B8E
5B93151236A015097BEBEC0BA7EBF85D8C0A3323DA80A0EBAA41C11CA89D8E21
AE67F521DA906E99E78D76B439BE4D2FA701F75F6BA0DB0F9BDB36549C3B5035
4EF7CC9768F8A4CA39CFB19775CE9ADDAAF3C4F69897111B8CB3F4F30B03545A
5FC1C6AD1B55D33DFB1FE15436D0D8C6A9BA90080CBFE47FA898522025055D0C
2387
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D4604
D58A8335BC20052440C4903786FE3E335E331CCE36A13F05F71126F680077AAD
ECAE10CB7C057C2D55F384723D58EF3AAE83E9E0B39D6A522667CC5B3257DAFA
AC1C3C981B9415967F7F4DECD492A52D35BDFF8A83E40438B3B35576A12BE3AD
BAB149D495329FFE2ED1F3587EB4BF6B7C1209F279EC564EB9E63BE5CD767D03
2690907A7C3E858F279C4F87B0EF573AFFAAD57717801BFF29280E8DF8D728D7
E1456BCA6134F49261ECA0BE81C9C8D7B6938CAD55A5115A0DBDF30DA5BE1CE7
2DCE5CDDEEC7E3113C9510F18204616B901F4568BE386A4DC43CFEF39B65672F
9CD4FDFA838B6A5E75668ED3E9929056DCE30D42439FD75C1D0316CC02B8A16F
7DB74AF6D8B7A401DF26D9B605F7DA46E338F16D931E1077F87886858AF74DC1
D5C7DDBBA309CF76E7D4AED20EB63AEEF38F8BDB6AEC7B66210620628CE2E870
6A72C3D12293A65DF185D428D813CF2636B4722A99225B911A8DB488E340BFFC
B121BC035227820F5B4ABCFC637803167EA6E1027FF8BB76E9A5969079DC48B7
465B025D869C8B6F2CE03810EF441D54D759187DB396026E3CB0AD872F693579
FD354F9DE6D8E2A8B188CA63FEF456A75E140DE04E22B18E1154D1959FE6E01E
63EE885ACB4085A38D7B0B27DD7EBB22982B35516497D855EF8D80DEAC7F44B9
B50F6A35AA1894A23651DE099389D561B469BE5C04ECA6189925F23F0DBDCBF6
9D5AAD409B239F1D951B5DD0F7F8387DD8CA44A544BEE210382DB0321D08C82D
A097247EB3018D2E3012AF0F1CB484F9CEC766F7363D7DEDC90A65A6A089269E
DD6833F4E66E5191B65FD609DA87EC245ACA71106229B206E648F63545C6E449
112DABD78E0243F1B476B005FA8FB2379D865D0EE316D982E0A9B6FC8D5002F0
A8BD324C6CD77759487B0DD01674614527EF2090F1755265C84D8F410064BBD2
FF708B593E6358B5DB76AE30C3F55604B1C1716F76D762C7C52C30EFB703BB63
66376541458A9FF2552753A5408D11EC7D505D78B9D3E215416397B2F510B88A
A6BBEA5062842977AB31FD5D8748B35B24F22883162CC99FA75857768930120C
E2EE51AE85DC755B20909AE39C1FDB39516BD46D58B878EC5E39FBAFA84EC38C
9C7F84658999B0374200B07F975A73C5C9535D490566A9A7A1CB7F33F4D7D8CD
FA29B0B853C66A0ED31A131A62AF9F518FBB6A05346D1927507CE9ADF7AC2CA5
9DE9BCEFAE47C79846916A570E121A748AA2BAF451FEF893E65C7158003E5B2B
34661F8B372DC2ECEC4547F238BE8D1CCB7C14C61EB90792C99FA53A94FE1864
7224069EBE3162223228509CB545D3549D02B02C4CE95D2FEEDBCB23A5FBBB53
D247232A707E0C35D86DF285C1F1609A30B7051BFDC43B4FCE2DF65D47F197FA
F5F89F0264F8FBFACAAAE65A868E544A2BB38E337544DD7C00B21FC180BD6795
14162706F1F2A19BEDC6FC885906DDC696EAD607AC8FC5B85B7AC43391517052
FE8DE4C4C98D4F9A3B61B8A9CE53547A3C76F4F4A100783862D5692EDC1D17F7
4997F5449C7CEF4E408F717DFCE759000C78815D4545F930CC246BC6F871A43A
1708A5A3063D24782864FDD047E684D0032EBBB19702C005A8FC5AFAAD60C0B2
E610AF457B65288C010A0F0D662616CA2EA79EDCCF471545DE86ECEF84BF689C
AAA782415859CBA509C98E6A75B8F821AC220B7374B4FE392F699E1733C25AA7
A5D3B500D3F0D4C9493A5609B8E6A1737196B350912115F5BAE93ECBDA69FBD7
53C14036E24DC3DD4EDC6B134D05E6761419E0E9E01B4708569085648C474CA3
315348953A6E5C93D06A378CC48787E34DCFE7435DFEE7912D466F210FD07723
E57C2D9CDC2ADA0192C90AC64A25CB8E4065291B3EAD19E82ECC51A8E9115E0E
6019596FCC7FD04EC8E40EEA71C9C0C4904138FB3ABC9CE4447A37E917859802
FAF7060FB88F1FD832854E12F8F443B97B301BE3646B5DADCF2A51052958C53B
93087CE5C32FD888203E25073C61873BB65AD1BF8A35AD5685085CB0BCA78644
A2A712D31884B1D4B9FA3D1A262D2C82829376D9D10803B659C0794F47CB2062
89B8CA0CC283624556C3352312972F35D6ABBCB6B9AFBF5516BEE098774F9A01
9A5C7CBFEFB556E949C1E74EEB347E1673D9AFAA30A99E9F9B1BD3A0A6E4B52A
D10BE86B35B2A56C3F5C79144B134CEB48B2AD7067584168958CB5BEC9D735C7
0528E2CCE3FE497E8713A8515C87D5D5F95B66E169BB2AD4735FC3F390A1576B
AB9154E307B00BA5191096D56FED7D06D84BC8CFB6BF7B619794E168E4EDFD68
9A5FABCDB92F4995411A2E5965EE427E7951AA57B0E2671116B841725A70028B
717B4FDF1D6650343231A95FAB7A9BCF2C407D00A9D45207CAB03E8D2B745E92
808A88A3C9336265358EE4F72171C30E8B3CF0E3108297E419919B91D582BDD6
858E7F4BACD58FD5489B356D07B87322A0F3510DBE7F92A3AC8BB03C3E2E4DCA
20237630E8C6C27EEF33B37E5AAEC5AE94C9360838E545B0AE9E8ABE79A27388
D37130FF2586C4CBC6E9071478B166EA927178452E6DFDFCD2B7C0F6E40C70A7
EA206C05BA78F37643C9C7F0D42213218F4F1EA1BAE05837214859CC44FEADF7
76F6D8BAAA0801B6B6C844A0357766121F22D9ED13F34E9B282D11C8EE3DAB32
3A6B65A84DECD4A2F52277FE813E92B19EAE49BD1208851DC614D9739D921F10
62658A57DEF82EED5F8B4020DC4FD70004A1B2F2B5F5527F4BE5EFF792D12089
DB562767A39783DEA49C19867110ABEA50877B66443A1336447D0CE7DB0B0BF5
F5A4C6705BBCF19769C6C4725D39266A364F2FC5C2CACE850941AF4F6E514C77
6DD5D830F5D4BAF359E0820C8B7BE4BFA18F4BE396828D16168C0AAB7F504A0F
0EA5BD75890D518AA47F776602DD5EEE7EC12A7918A28D381CC5FB677EB1DE72
7D188DBD725BE15D06B9C5065E3761B1383638C3AF42B7F6272C8F2986DA8E2C
35EBEF6AEA2296B132CDFCB7D250CBA04CD55EA652374CFA3F957AD376FA59DA
A7B954767A0C07E17F53C0884EC3C23651B6513A6ED265D1A3D2C21866D70D82
2DD48D702D368E9DE70151CA2B48BB7C6BC51A43D4C79275A2F0AD451A45158B
7B4DC0B5B6D50243E572D957EE93F2AE047882DC8F08A7EEB458D9D6DFCBEF76
7AB8419F55838985AB79697EDA8889775389A73112D4E3E27D05B466D176C85D
B1EE3E6CD0E3235AB3C40700443D665CECFB57263B5487A78E2D94D61BCCC023
7C0933CCA14680E4A935999B75375B23281C754EDFA0932B09FEACCD9AD37592
23F69A3572BA92D33BC2DC8BD5F6B4E148C7A392E6B00EF9C6EF57BE0AC4F479
99D8198B88DCECEF5189DF4A44A12D177FD9F69634586DA022F3E6111003981E
FC78B4665B097A1D9E4B075F6B7E01E5B64ED316BDC834D883C9F7F354F7B133
681AA16AB59351CC36D77917FFCB1204F5F1780C95CCD6922804E32EE28BF0F7
097A4EEE263CD117E366769CF3ACDCD598DF1220390B98F5077F86AF9A864EE5
C7364C9E5554ED9008FC4EF706DB000FA6AC6726476D191F2F735AC1C2A38BA2
C901EE934D42393BB7B600F407CDDD3A9EFD11516C4379F07A40B72A620F5AC0
61E321B85AFB884FD0C86E5CA15CD2005E0BA777B960BBCB8CE8A380FC90872C
F98D959DB8DDEA477FA8D04FD0E2EF24F34C7663CC55BA39A27775B7530E48BA
5EA3BC899FEDFD415F0CC2A155351D4434025F873F1D543612F445A068413424
B4F07C81F59CB9C003B0CAA1C909899F4A02E7792AEFE5CFFAABDC408BDE1CDC
3DBD679326BBF1E31B19CB27322881D8DB4B8B0E209430385FB22972175F8BF5
6E0EBF7824EC0481D2B6B822AC3AD915EC5FE1B9099C888711603268B4285325
00E87A02DDD83E60062EEE3E860A689C275BADEFCFC33BA2CC03F29483331F48
B4E21935BC8D98CD8DB5E2045A830D1DA37B9021680ABE168D66C42DC3761DA1
094C8480FE7F5576BBDA05E73129722747A3263EF2260ED4D196AFAF5F20B850
A8CA53B3D88C53AC2063E80C5CF7CCF6C24474F81AE1258390578825878534AB
F25982A00B040D75A2C09642143128DB19F3A673B369A333B75BBEFA064DDA04
009D05F542D28E1D8155721A9AE984C4CAFF8BAD31FAA9925BFF0BD66D0514FC
6D603173E4AC2BDB61A3DDF2E37FC0762092D7D413292CA31B6E28AED640415D
BD47D0CD3E35A45CB83BBA1F75C031A44C2167CEEE0978C099F0AE091B284D79
9D301619B137F0BBB9D0906A7C963F6DC2DAA03E5D1E97DBF53668D6440C7EF8
195142E588752ECA178B830C729912A6F754764C74C5F779E03487D9EE8221B7
F375F6E12B3B7AA42D2E8FE1A61215127DD37812502C603B963DD16AE54C3016
E477F1B2904F7C73803EB41C4643B986FFE02422BC13F009D2B29596D8BC2487
A35CC9C2C0E37F8F0A2A7236C431868D3F6179B7D4C7B32A49E1667DCBF3CCB1
C5C9E1E2AC27A03875A0566E83B90C3E6E4AA051D3EDB15734C1456C267D50F3
48D1A29EA131BB266601DFD53D1D9D906F0E33E3C74CA4BA2C9F4EAB07AF5B8E
A0E381EDAC5CA4EA4190E3036532A34087A682CB6ADD6AF2099BB8EC14911BE9
3A2FF726F78F5464CB052CBB8870CE21BEAB6EB1044B627B29FDB77DBF0C7067
86EF1B5429FE65B6CBA11913D0DCF2142A28849B8A78035CD3B66971C468ECAD
AC17B19BFADC55197EA7AFFABDFDDFEA313266DEC944197DE3556E089EE406C7
ABFF4C64985D28E348BB86180754AB22C919876D3AB413375DB46A57525D6AEF
08349AF3A19C653E5E4DC418C1E35407AB462AB6D2EE6373832BB0C1BBDBC6E7
0FE47CC06827F5D4254692DE0D01290AA9D94E6DD3CD14AD0622
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBXTI10
%!PS-AdobeFont-1.1: CMBXTI10 1.0
%%CreationDate: 1991 Aug 18 17:46:30
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBXTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMBXTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -250 1274 754}readonly def
/UniqueID 5000771 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D004B836D34E88C20EEB527CE1124209388A2DF
E27A8DF298A2693A9D529916AA0B2176E6ED237F69D84A8FEEB36861D1847207
BE2BD61C6A412FFFEDFF13AFEC32AC7735BCCE5965F5966418A62ECB99112AB3
3BC938EC590FF6922659125EB67E260BF02885E49BA6019E696D33F0B53606A2
F515E0C45F323311613A94B838491BAB9FE230C5CC79D22925E3D882799F2707
C32975A494F0F9513E4D8332E7E54470D9721FBD345CDBB48286F2F19CC6D66E
BB631DD6476A509167A49CA525A72CA50E82C1D08C2B372DB54C5949C753B632
2009B761EB90492ACD3CBE6A35CE1B66F3BC4D8DC36827CE4261A703328451D1
879438479917C1647772999171DCCF1491A1C9086E0C6393506768F8757BD81D
141C46EB9BF507EEC29962A0072B6C5D8C8588F3D68886CD2606DD3BD2FECCEF
63245494E93EEA12AAFB06110E54ADC444C7E7619627A48A464394E5DE06EB46
4C76A2FF010318BBE48B3776C826A265C66515717F7F2E943C60EBAB23D96B5B
FD514A1C4E79BB3D3D2DEB936F90CD3FABF7B09FF7F564AB5CF4AF6A40E869FD
395885A88F4A138B3CA6943A2D430BBE43D91F7F17621CAF52FB7161DA3B2003
82244FB6EE792DCA1722C03392C296C029A2DCC5BAAB3EA03F8DEB039DC83AE1
763AAB84776A2CCFFAE9EAF0BFDAE417E8BE682D237FFEDAF224AC09C9665019
165CE32F5349E857177D94AD6396570932E1657ADE4D3FF57A3419946CCD210E
57E5A1D91CF708395942527D127606350924D71BC21C6F969288B1C8CA3404ED
E6219985F7301A20621368F74747EAD38990A4C9F2B62913B8FDB93657409FF5
178DAA7DB55359BAA476D5A39DB14BAD4CEB68808D73FEFA81BDCDEEB93E79D1
BD7804235C3ABD160C69633EC899DFFFD0D36DA573696EE058351EE1722FEE98
90F2EDEF68625A83A587FAA037D48B7C3232CC5DEF8E8A20B97BEC9CB0DB9167
DCDF13E2967C1ECD538E9FEF765CEC75410D88E8A3482D99D5E4DA52FA0C256F
D333D3E0E1589F2B99EA0F0638B7A6EFC71CFFA859B6A7AD2BBC15A6B77ADA7D
624040286869CB4E0F6BBA8C241E3AC7C77900A5EA0FFA6FB8A8D4F94EDFA182
F2D39678DA4209DDDD70A552249F85872BF1ECFAF4ADE1DEF466D9179D3A1F14
20AA5148ECA8BEF1E2B2966B422BE93AD196D855BF33DE32FBC2B701691ED5E7
FFF6B16D686946C3A45D05A8A339005F4C1FCC4A016B56B3D783168C3C8A6FE0
F11575904733980C016CB5763F9A3E164CA4D462896F1E94AC59FA2783B09962
13922825A271D0EEA7A812F734C9ABB142D8DD3DDBF312C91B473FC6CCF1E50E
D9D12943C829B429B1D787BD3FA88C47348A6D6EA5189E6512F0FAE5DDBDEBDE
85B8847431C7340FDD990AB585C7F19D21D9442B97DE7B37799359C7252635E6
E5A1F15C47E39FF6B97EA068AB8364AE5C88376EC98A8E8C2E2C55874099B1C9
DBB430A3D699CFB3004195B1CB0E9AB0F5594F9410CA5222EC38F86F1A937BC1
5BC901B5A302EFB39C5207238A4DCA995463767D2050547E6F45E43744E4004B
ED4A1C265D110E2DB5A894E32F748E334752F8545303E98AD6DCF39CE40CD8EC
92C721359A85FB78862A4506DE52091FA2851E1788DDB4D524594699CA6DDC99
B84D0F13E8BCECC47D2A7416B4F0E9B2F580EFC6E3613ADDC87D6E3E3138E806
57690EC427A5213C2CAC2A1D0B468FCCF85AFE3D8CBB6B3A10D497807E184651
D150D79D82162092E7E81AA26A509F358EFD95C336791DF88730B1C688CDF3EE
051AEBAF191D2A2670839D9A37C1845E3D117CB5013F447ACDA8B0CEDE7DA702
FE80E9AB49AA53D452EBBB3117E8AAA1759D3C9673846976862B462F04EED2AE
55AE15D8983B5DDA970D86BDC9DEE9F3C4EE8A661558AED77856480DBF9DB892
D0144577F84C5836938C218E9125B6AC70E16730B5376CAA713686926BFB0C72
395C26C0973F00ADE01297E56DE4A61699AD9B2745F2EEDFDC25B57460ACBB10
9DEE4E739428713117D7DBAE9B53C59A8E7B21236A37CCB9FA1DDB3297E95FC7
0C64FF7DC4432D4C25239FB0DD1CAFC82FC90B8A22378B65C9CC6D7A4FBF9D9B
2523812DDCE364194EEBCF73DEB76C489151C81B24C078B9A30432642625E747
D2B98187370C9AFD86592F7A1F840EACFD34F5DA319F60C7814A090C73C7637A
341492D75F53664D3C10953DDF22B63330F2C02FFF6938C1C41FBE2B4C3FF58B
FEF1219097F41F0824EAB3DF2D61C02EF12A703181B330A42A7C6C7B75C41746
877DA387A031FA3D12132FECC8D39E4422C580FC18AADB1AD5C5BF102E6DB262
0688DD609065B2FB41266D580BAD4589BE79C2610EA353BD5C038EBB8DE6127E
3F242DED15F0E27E8B83710EA437D525394A47976D268FF7B15F9B1F11A34AC9
09CE73CAFF9E5C69E5159830152F7A722F6C0BE790B5B894F3257C8529C311AC
DC54A86A5456AA2A54AD8926F614F653812359D7193D380C26959705CC8E373D
E1BEFF216E156B81787AF21EB5C79F9B7F4925C108B02FAFADCCD17008BECB6E
0ACB5A4A2AA2C0231AEDEE9BF04E5C79EF1A33AA06A2C91EBCF0B41E38FC8239
EB1FD6F56B9FEDF8C8CA70C93B9BB97AF3CAAF994A3ABF3DF03C5865637116D7
3205393A1DA633CD32C03C29BC19309130D5C09CFF84AD621F7423EBB59607B9
F756EFDCD7D3976611430D617A5EB8E0DCCE91CDB61C11EBB008A76A5F9CD3B0
DB40C40C39EB8A3D08B73FC98562BB5252266B552514DD3A3C5F4AA7C22BBF48
8BA6E5B4314FAB3B6ABAFB39A69AC4E9BAFC3F8E9D8E99F0DE5E7CB213AF16DB
A918F21FC85B64C65AC79D486982F793DF404FB814D375649EC2567DD35434A7
368599387AAF154DE65EECE265890F24C65C08B0A3FAD48395FEB87B91739BF0
83E78087316207086E57C1A1E2D552438A72F4BA18B903740A51E13A2D62670D
B71C19859685A8A7DCC3A6F11846CE5252F8BCB69D4C8453DF91AEC0D5C3ABA5
55FD621D9CF122F9609AAA239402EE754A462F408AE5367A4BC48E673E03F906
B790D15601DB1AF4B81D883AC8C5BD67C7753D8E1428843C8BC42D99CA703C65
72F7A68348D81BEB07B28798FCAEC9FC2C57B7149EF7DA8FB1AC71B86627580F
A74BA175C57100B975BE3AA3F7D9918E5CA976F91EBFA2210CDD490CDAC8D840
80F500A5B7F4351927945DEF9052FBB445EBE008301D400ABD05E70E74AF2C93
18EC99EF00685145C35E55506FD6546C63CED9E9942FCFF3FB8553A01DA4F5C7
CCD2AF3D21B55DA3AC13428A280234428C92FD9C65581B1F66DD8E4043706A1E
7B301C593A9AF76890CED398D2A7BE227A587AB570AC18476A656A2D7C39A582
45E115E5F8DB9811FE69F4FC81BE6120092597EC8193F56AB756D8E89F90F56C
95E897CBB1DCD8B1AAD823E41FA9DED8F29C10447C9AA702E104FB55B11C239B
2686D98C86D087345FC6D27E68D8CEA0DB7376D7A1AF09588A5EF98AABD0628B
EA8E13F1967E1D2457FBB44FF8800ED05694DD697AD80CB2DB0BDE28E256E998
7EB84F03CB8F5C49BDA714B254C25CAFBA88EDDC08D07BF26037D0A8D2009191
20BDB52E85A293D15CC81B4751FD16B7B0B0E1271D6018B1E7CE2C4C5C05519C
E1F59CB3A6337CADFC9B3972EE3F2C19E5BE2A8B09F84FBA426CCA0AB5D58901
A470DA58A30D5EA5EE237C846FF670B9A9D70EC2EC33B85CCF10F8C0953442CA
D115973FFF136AC7454299F0A568CB5A64E84CFCF01060D476737BBC7269293E
9535B35B8DA4CF654C9936FABDA2D25D46FEA5800489293AD4AA64161083D478
F4ABC7780C25DC48F18FBBCC3EEAA9D42BC9231DBEB4D61342BFBDC04B00D275
234094AA15934D323961096A85681A9262D933B0E87B0C3C9339F4F528B9ACF6
D91161059C7DD1A3F94BC6C268E723CB66FBA3ED3A41158A05CB2A46AD19DBDD
4FD5AE5FE2912D5F612D37A60D51C9FB2A6C6F706973BE704CEED77604B7C0FC
6BAB5AD10EDE5EA06CA733A0AF466F85E2720BE49CDC3CA6C43F66036398863F
7AB76EDB1032B9E75C3A5D7E4E0D22CD6E63AADAA114F84BE1FC552D7118E833
C5220A89E5B9DC40486875FD7E34B36F8CBEB2E4054FD0C5EE04B68F3F120A9D
B924EB0AE4D1D1277FEE029A73F2A25629BBF452F90C118E5EAF75BD7F389099
BD53308EFB30CE6BD4D75F215324A9B2E39B564C99EC05D8AE890BA0DE08770A
BE026CA5B9A9F0414E5ECB73DE4588193D5E84EA251ACAD9E02A0519C5385096
1EAE4ED909032C436BC205ACBF1A033CA40D737D22187BA9E564292E81908773
9CEB691A742BB29FD54244974988203DB8B66276247742912300947833A69946
C5D494EDD62EC7DF593C6E8BBCA9BF257AFF288CDFD8325738B11959B3F7D308
A26C764B183CE7D79BDAD783ADFF8075E56C3A9DDD008CBE8C8A6E0C6841A63C
468DB5199C89064B31139D74373A2E9A501D21506E4C090AE1298469A2F5D26F
672E0C065600CA55385E40B6D99085E55659ED7A86023178C5B5D059A69F9E1A
4A49B26E4D115B6EB275725674B440F45FAA453BB8A35F3D3CDDB1D31D1B14F8
4B73C2F5EE65A8A3A426D7E2BD7347C462E5EAAF8FF1234EC5AB2962CDF9CD90
88DEFA1B10B948CBA87AD8C5BB3AADA9B328032F58DFD7C27BEA1CD1D9A75403
5632C92D61BCCDA53DDA9A0B90A4B89D9322BBB4AA3A03EC247F031EF5E9F8FC
18246B1588C1CC84DD4A9122AA162D5A6EA41F48E91BB52AF911EF53A4F64AD8
153BD665A3BC75C9BF97F6F9EF3C2C7BFF4C32ECB49C451CC66B858B9A0C7AC7
4CA34DFD700D89FD91BA57A37CA07C96786EB0244E26529543EE1DF43133C74A
363BE625ED871978092A7FEF5834D8DC812485B1D71B5885C41C82D08F426540
E9FF00D55B56EA32B7D39810AC1EDD7D29152EF0FA4652FE43486CBFF415ABD0
5E8E22F6405FD45B00D1A4CE5ECCB4C417FBB24901784C7CB0CD26B99A10A959
18B00426952E52F81734F70B272377A6B1008CA1E79EDBC44E2DAF9A976A1ECA
44772AE8C0559EA4A9244FE0E116818DCFECEEA6DE8030B00AC9E64CC5E60B04
3C16C4CF814ADAE49057C414C4854D72026E012E3BF6267D237A77B69A4D0061
351E22134AD5E1BD6CF9742574FC62C8E66172D3431C30061DF27B20690A7843
E68F1EFF4D374F12568E820D0B285B5769DF5F79E62DB37C47E5629DF04486D3
A67F56F53E9C274F1BF3A0739EED1CC53E0BD673428F538DD2489D851950B994
80CE2BE70BB67958F28FBA3727BE235A7C7870DE043E831DFE1E0518E6B6F033
E4E6B9C39798AF6C4AB0F94B291FB1FBDD26ABD127794A006DB11F78819C1E2E
790574CC11019E4901BF5A55C1450850FC46BABF28AC88D39246E2406705880D
6112EC5B2AB99D255E2D760E33D368139F596FAF22BD88C56B6A553D1222B11B
09A1E0D57CD86F93147E40970A97EF920E493E31D0340A934E6271E939B029E3
AE26F2789191BCDBF8EC706E65F2956683DEB4EE3F852D2B45B30397751B2643
3D045BE031883911F7AC2E4C77FDA85915AF40F3A1EEFBA48915FA74FC4A13BD
0CB71556843C526D24D94E799004E34A4EC8B30B3EFDDB89650F6466129AC832
039377C8BDD79B4AFB0A4E7B213A8D4B66D6F425F520EC4B85A8EB0BC0476FB1
88378B0650C712ABD77DE650B53B11E179BB18DA14A7CC8AAC33DE9B9244D992
42E734DE999F64DA3C113727CF021C3A851D078642E12C00BBF8195558911C05
75408E851E67DCA52301A2F44A25DC2AEC8D62AE652A52B547EB90869C1FD8F8
FFEFB5856C3A348E1C93982CC8AFAC4DF03D2EA0BCA8CB2A85B74D85B84C61AD
AB24489C69CB2F2C94431C33720728739E659C613F29333C60DC4016566864D5
506F132A7C3E32243EDD0976900FA06ACC978301CB75B4763CB0DB1CC1486844
E3FF0A25C93E1A07DF69D070E9EBAAD467D24AECB3AEF735C70C3AC46A7835D8
E189C31451179749C1566154C456FD604F7BDBEF595858C84C17ED585E057DAE
0CD75E5A2D196C45BF65A3F0F5400AC9CE19C6C69F9389AAE01D4DA5AAA83945
93592ACA4E5F8D996F5A63015F911F339E76573321F238C506ECF6B5FCA412CD
79DC130080D68D152272B92A779C5CEF37A4ECEB342AA09B55197DF83666B45B
B8430DB02096D4D4F8D03205046957A1DC766C12E24946AC8062AE52DCD314FE
F478A3B979C703BA62279103AB289B87D957E0632FB5FC993992DAB789C2AFA3
CBEF807A959A9961A697A68BA5B8C58B6CBDA39E2F19D06D848E38D7539ABD9F
25999DE8F0A06ED63A68E810344465D202AB2B5167A9B158CF5B1F2708244E26
B49A513C6F012F66B667E350A7D24C7616CAEE4E35F69256A134A20974A1CCCF
D74A1C5BC58BF0C66A854F020B8F209565F46047B05FC1D62C0E71264088775B
DF48563AEF5F92224F0927F2E478C4D6E8AE13AAFB69B47B7694E90493EDA907
4A0D67C189F75A99C153EC951BC103AB6533783979DAE2CB6353E1DF0E20BDFD
422281DDABFC150E4791F9B558230915B659181A4AF35FE09BC5CFFE0836A0FF
1C2A51FCA1E1168F296F900473B60CAD214CC9DCFF46679596B51E48FF9E2BC2
CDFB8FCB0CEC19A6291A621FDC42094C7CFA6D8061A4D4682A198EE672B59565
3691CE383F177560B61A5642E015BE96BAC9B27A1DBDA9BF2E3090892C671C6B
510FDD6C7080ACED6B0125C0791329A216492C0D056F1AE34EF47469B3E5E935
C00ED44F8F202231F940C0826E439D6CB6B64BC5242844D12C4E54E650481789
E192B8F6CA4F11B13596B562372921C26AD0424D09BE4CDBD0221E880412DDE4
AB2525296B5D350888E393F29A4B2D62B040C5BDB539DF4F7E194778381B60A0
110E59E6801BAF130186F3EBB5858E7C4C00F5627C3AC827373BA0D5321CED89
BFFCFCB3E31877962C56709A05BAFBBD79BC71939C285C1177B8558E1AEEB7D6
9ADB10E754F97A126DC24155FD89E1851310F0583B12B3903226F2EC12C2D4B9
B9C77D34E6B13F4D4B65C00E8AECC4BA06E1A27B7E27682411A2897F75968E0C
4DBC25A41E9ADB9500C4BFA7059629AA7AF4B0803F180360BBF3EA0027BF9003
76952D63B12DABE9160721E0BDA5EF4BDF1CE938084B7D4560CFA7C298AC2F37
F28E3C8EF1F328E248E0F8186FA86A23654CF65F4CDAA4EA431F944C5980A30C
8F92D389944F3DD00C1969C2F0AC29D6D16C208D4DF5306C2A1275263BEE6BFF
5D5F9E2CD9E3D60F58AB77602B783A0BAB6CD5FC366688928FB9436F04F9A02E
3AC4E8C3F25ACEC7117B9D8DCB62F3592524325F7A90E3ACA5F17C7470D868CC
533FEF00334478FB45B11002F9EF01044CDCA1B5B60CEDD23342F2BD34CBE536
1B171FA3CA144536F995E6D5ED78AA9EE121FF52360B4434FB61CD2E55B70DEE
AC1AEE5538832B14C5484EA6158487FC19FF642239B2CABF72236DB1BB5B62E1
F2B5D2666A9A4EB7FED792B30FC8CCC7693C2ADD7A31FC743923914C1655AB93
87A377C47B4FE20355A7B08504B2A228D8700F4BC609FE1FD876C31B6B2E1D64
421621C82235A06F0419087AEF0A7FD2CD1D4960131214B1578E552D55DABA18
035D6F595D076D0DA49FB97493AFF04946FF680CBDA6D3462C2ABFE13B3C0E82
E992D78203EA93AC5185C90B30AC0A5894649626754838EB3CF84BDE02B642A8
3FD4BBEE1A0037BACD1230CF883ECF29E231289363694788CCEAB3ACA62B8FBA
6CBBBC7A178C2727BE4314C42741E5698FF246F696A6DD292938AF931AEA08A8
291EA57EBA51404A75360BFE094ED57FF44FE37C0712B87A154D80FC785DC068
A0C0DE16C5A3DAD48934B84D5913D0390A1A005AA6B83BC83F902F3155C8A5E6
0EEAB010D77F22B333F34008A55E501219F4D887589E8620004B133B85D23069
A06ACFDDA49105D98EAFAB3C44D73CE923FB78B506C92A1D6054AD4FE89D1992
9E064AEBF1D5ACCA84441700373296A7460DF6E2822458B7673BAE144D60FAB0
7F51A7BEBFF837B936B61DC87E30F48454F1BC4DC38C3CA38DCEB033B3ED86FA
1D2947735234625BD29308D10B53A6FDC4D11CAF503B2771E700F22619E6CA8C
A7FA2BE45CD8E4482C2E807AE13808F8550F0159E575D93BE0B214002FB1E4BA
21DA1CC4669D868D285DA7134C94E37FFE3FA89A2759D150DB65757B78C92B90
2139D504B1012346F6FCD93F0B0F74A68E97EAD37177A9958547761D8C74E851
85DE942105892303855E0F2DE7EF35CB92ECB202583DAD72442052CF591F198E
EDB7576D1C107F1220C514732330E806FAA698B2C277AC9C8214EA88228C0438
E92BF6CED292265112258B4F51A6E030DFDA3F0032E26F40E47FB93A7631180B
EEE3D58E087E741B5B6AE426AF37F59B908021FDF6D2ED20E30CB82580107CE9
B57100711084AA0F97C05B484F059389688488B307FF70787126775571A0C65C
FF71523EFB66C55FDA35DACD0D32D6BEEF4D99309E2128F2EB3792FC11AA4010
6B3C5D362745BDEC376B7191D8D3D7FB9C7992389D8116084D09ADE6286C80EC
837EEE8C240C0FEA079E228366FD659EEB6E84D84228098F3568AA3C2DFFE37A
F6986DDDA2D0CCB699C45EE5410BD93C6D77E9B6D91A7AE65A7FD382372FF769
7BD4434C6E74C106CD5F5F5A61DCBA95FDE5ECB61F689F51B836FA5E2DEB11D5
46EFB41EADC7FA538D03F2CADC1B32F273D42F4965A624A869E9BAE77960AD5C
E7D41622652190B305C0C630E63F4CE52AF27D637988E6D781C3AC434D30FEC4
324FAAEDC587CBB980E69444632C1A6FAFC958ABAD59EED1B96AB2A33179E120
2323F778CCC556E785AA699729295F6C3B792B8A4D497A8DE6F0F969B1B0898B
84DD20A7AB06ED59CF19EB74865B5E1C0DFC92A5D088891FB7162F55F08A6EE2
500FFA72A47DDAF3C93BA427353970DDF8DE6C54A9FD0344AC5D06F759691C87
E9718BC38A085427F251742C09FFE9DE3A4A627DEF7E3649FA584BF2BD6262F4
E3A98BD02E18117C9A5678147725183B3D5DFD83AF53F65D0DCFD8856005F0C3
84C7DCC24E7FA065AA0FC203F7143C46FC14093FCABEFDA2F7987343AB8A3DB2
E31C51F486CF3E517EC99E93C8CFCB7624DD686039AB51CC17E4C79B108DE395
CC7F0AB6B64DBE90F5548FBE08B602A892FB4CF89F9EA4C666A405A09A101574
8BC6EFFAE323209A2F70CB96BAA2A1B31903E19F6E0672E8C17652CB1D55C8C2
83EE4DF1F0BD59DDE65C6711C73899AC0CE92E98B17C53828D123A62BCDC333D
48C5DD5B3FB86E778EE2D2772C1FB9543D3483FA01DA5FA924B3667475941056
44DCDE7533A4F1D0D0B03C543F99DEBB09A74292698C129FC62C37DB5A15872A
AFB33DCEA8E371E98476837FB893B699DAD6CE91879B92133D47B210BFCCB3D1
3C27871A26A4D0C925274E90D253097AE07CD09E6AF3FFB5FD74DB34C0E0FE6C
FDBAA7EA52C3C49D7903A3F53E809842BC3E2B039FA80F79C128052519D00C5E
828E993E5BFFBF9761CF8102E723A8569A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT12
%!PS-AdobeFont-1.1: CMTT12 1.0
%%CreationDate: 1991 Aug 20 16:45:46
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-1 -234 524 695}readonly def
/UniqueID 5000833 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660FE13FF01BC20148F9C480BCD0E
C81D5BFC66F04993DD73F0BE0AB13F53B1BA79FE5F618A4F672B16C06BE3251E
3BCB599BFA0E6041FBD558475370D693A959259A2699BA6E97CF40435B8E8A4B
426343E145DF14E59028D4E0941AB537E34024E6CDE0EA9AF8038A3260A0358D
D5B1DB53582F0DAB7ADE29CF8DBA0992D5A94672DFF91573F38D9BFD1A57E161
E52DA1B41433C82261E47F79997DF603935D2A187A95F7A25D148FB3C2B6AA32
6B982C32C6B25867871ED7B38E150031A3DE568C8D3731A779EAAF09AC5CE6C5
A129C4147E56882B8068DF37C97C761694F1316AF93E33FF7E0B2F1F252735CE
0D9F7BCE136B06EE967ABE0C8DF24DCBBF99874702ED252B677F407CB39678CC
85DDFC2F45C552BA967E4158165ED16FECC4E32AC4D3B3EB8046DCDD37C92FDF
F1F3710BB8EF5CA358ABACA33C7E5ACAD6BF5DC58BDFC3CF09BA2A38291D45A4
C15FF1916FE2EC47FDC80911EB9C61F5D355BEDFC9DB17588547763AC5F0B1CC
12D2FFB32E0803D37E3281DA9CE36C5433655526ACFB3A301C56FAB09DF07B5D
048B47687348DEB96F3F9C53CE56DDD312B93D3918CD92AF53FB9461864D11B8
0138918D0B1270C54873C4012CDE6F886DB11BCEA04B023EBB43E0D0A06BE725
741D08B9DB688731A6C9886C15A83C28DADCC81385EA239E045E8F3670CE03DB
9EE77ED067036595C9F3B1854343BE3A12E486B6E5A2F8AC44FA5378D28DCCEE
306B0E283AA444423F9A4FF38E2B56DCF67A39CEB2C643DAE86865517D5D0371
CB8797208ADEC637330A3A57902C9A88EDB75A7C16FA9850075D9F19578EC666
1353CC1FC512D59DFF847ACCD72B56698531954A794518DA13E7233051358B12
E3DC6D7BCBAA1DBBEFB349D7F59EEF1FC5AD3F5BFEED413EFE6E69A8DE1B4C77
61B4299C4C36491FC70E37D2E30087B14679D2A86EF908A3131859849410EB42
2A2CF173387E29D68A3E6F6B270964DE4EBB2F5896B2FFDC830BA94BFB3F74CC
29C6855711B1B5205A63A10B969A89E91ACACE4936B3C4EDE29B05AE261ECC95
A1E97DE4C7B57CF8068528BA5FD9B85CEB5F29339A4D984A0F6153532B523E89
A3BCCA3CA8C75E5808393B4CD9118C0301ACD386A944C4B01203D6C6A784B76B
4EF5FF79E4F0682DA2AF966FB5B255168244D92A3BCD8EA535AD676A366D1919
105E9AF82407357AB523279CFBA3200F6A59AEBAD3336CF3F0DA10FD6B5DA229
0554AFF0E38D9DEA3C499E24ACAB9070DEC35A6A8E2C566076A8310F3716EF4E
158B1D40A337F3B65C556543BE3FF7B02D2D092077FEF3EE6EC7276C53617B8C
3B06E5094F2F0A899176A8A9B157795383A5EFE3488D08123B7747DAB4BC4044
F12E5C7A97AD5E3EAC79B060FA03D2E48EBE8A2B2605C4E3645F5025FDFD6619
FE45A59258C4F808D2958162786CBEBDCBADD771DDBA2DA8E72278C0396EED3D
0B28B64B64091FF4109233F5411362652755A7234F7D26DE4511739BACAF849B
897BB5F886F5AEF7D07FDB437C5798C94DC57B4723A3832A1159A73639932D3B
9A69A623BF5A9746EAFAFC5C8BA45906047EDCA0F639B694A5E0C1385AB952E8
86A52CDBBA85B84CC0FE9E8BCBE16DE58A4516EC9AFCC17732F0FC58BF37428E
C3025CE819C808766356BAD558EB10D840B9A733F79DDC056834AEB308756594
80B6E5239DEA54B3C7AB9A73849D1AF19F5255818C1D81FD744103A57B186728
422B1797BCB85AAB21DAED356586F75FBF90A8C3F641228198242828F4E97BE1
1B41A0D7DBC85A0F96DB0764A4EC69B94DE8674364BA4F2576BA4F48BAE00A4F
296D755D02B236202F8DB047139CBBD2FD3499EB14E4C4A2F7C1F48066444063
F6AB6A0F165DA896A76A0F22B7BE6E3751410374B7E1BDC7E8F90A0534BA3221
EDB20DA051F7BEA5122567F4D1AEF17CF0C5420CE638232A735ADF81ACDC261A
F3909522162067ACCAB43024B2A6AD16289225C16B6D53877177BA9D484735DA
6C29E7C1979C298EAB58ACA80D8668AD5CE77FDF6BD792EA151A6F42970B66DA
6EF37446393AC71097E75AAA6896B07E03DE36245E8AB60BE7B7B8DDFBF816CA
FF8C58B27125C7C616DF24AA9991ECA07E507EBF8EC6C91FBC3E04D5B80F3AC6
1BA82B1780F873D7538B293F3A1960C6A75DC72D0408935E14B49FB1F5C01055
F0494BA3AEB96FD74BA7E0B72AF946E4757B5CEC9A23B3AAA50D4DBDF744B1D3
7015210E35F9B792D6359EB4FF77C499C9AD00F11CA03C64FED13425292331D5
3E07FC9DC23D48F3200F0A12BAE2C6C6D9BA9B7810940B4C56FA3E6E2A6B28B2
372F6AEDBE99C9C301D2635364F544D201889E53EAB085177E416A0CC1B4F63E
5FFCE6F20F57B95141996735671950BBCD8447A771EEA6A791238D7A9269180D
D594B7D24CD1D10D2D92DDFF90E44D7D389F70FD6034DD140BB5BC16F5DF74DB
DBEE93C894E5C16A937AB6916FBE07493A4E78FC574E08D9CD5E6BEE6D70C17B
FA7A10426A6A3EABF7C57199EEB55260E63D5E6A11152B3934A585E6714FADCD
AA687B82598A4C4F06B6DD4BD63578B1023456D3F0A91F5ED23220C34F1E7254
F70D1839B484F2E7F8AC21AB8DA8FE6FC781EAF7B3FD5C5221D1D07A67D46445
97F429BEED0A5686F5899DE3E757AB9F33BDFDE46C8C2D67B6162DA99408456E
7D849A18E785D9FD435DA22405FBC81EF631CFA93B235C05E676C2919DA39FD9
44480A0456F1BE8D064213C133CFA125EBBEED68E93CB1236AF6323B4C4B8A46
1BFA93C97C2A2A65AE73CC33B9BC344E492BA7DA72CEBA90120321A2D744D1E3
BE8BF931F26F3EABE6C1B60624A2BB6074D08B5DDD61E162F6F2F4201B0A41EE
090A6CC8E36B20B0B4489BBDC9F6562DE9B35A6225EBBDBBA25C3676D04BBE4E
A1806D2502921847F57EF086FA96C5E9E454A4256A8A9A87DECC726DEA460F4D
9BA653CB246AF48637B8DFF4AD1B36C157E1A7B2111C03A4CEFD1899CABE4DF8
22077949DCF26595532864CBDC3AF19FB180F96B3247D24ED392C98AB6B097CA
849C6E926535BB89D99298F49E6CB223D6E7F0BB8A4F58D292C8A24F79A125A5
4379724E71AACBB056E01570FCBC73BCC2BF91402BF73051364627DCB7A86C15
C62C971861391D743928EFE6C6E9429D690B6EF1D65D861ED537C51CF5EEB4B1
B17B3CAFA5F9F209F0A713B5D62D6741A9BC329EB0A6C46E81AC296A3BF1BD65
047E561E3D165645FC5961464CAD1FBFC68932FBBBC95E0C230221A2F96D567F
6F62D9DB91B14C0FC75A14DEC5E48F228F52E5D1A2261DCA991F5B53C550AB80
1FEEFA115DCE53B9A48242207030688AE52BF7E8CB257D7C2D344C65654CD606
AC88EC1D4D2D032C85A187BF63B7F548E3C4D75CA31DB42EDA4BF8D0BBA524B3
C69F2BC1998556B44AC9E9F28C02EC6E38D87BB7F0675D37E278B290340F487E
D6C9271AA2778939E71859174A6EE92C6ECDA8A2FB48F50C39BF8307F2A08E9E
F70B7A8FFB1F75B532BD0929C6B9E41177E70CE1960A93D605BC37CAB2344489
D8905E3BE53457D75D71A1D1050D7C85CC24C93C7B8C825D83048980684B1C5B
A46E4439EB6EC5D1B36C88A6F215DD3A4D5EBF1D3F66A692F0E86D67C15433F7
730642B00963C8DFE02DF9FF585EB9C592032ADCF4EC64A6A7A30F6C32FF4D95
15FD46AB11F54B22AC165F7341ACB0E3004AF79DE6EAF2E0A297A3FEF1EB72A4
3A579FE2E98DD44099DB3718C914E940128FCAC3814B2C62A600965D77B5EBE8
44E9F4DAEE566AD8E48949BEDD5EB2457EECE99331F8253B8441DADED92E3FE1
43D9339582C5267B71B3716BCD68B518EC09A18AC6FD14AFAAB1A1D97E369E09
5072FBFB9CC7B904D63533CD41718B0396DC3CE4720A5B591C75C3055B1A6E54
5F5421BC1E12736843178C57241FF418B569A3D90FAC6B3BA9B77024A25C840D
424801D9243EBC53FE61449E7C6BD2533D280EA62C480EB0B49F6E4830A5309D
20E8DD6AD0E67A90B99274341D82FF27A699A295C05F08661448619C4600DA25
08950448BD4910197472BC17AC541D6E21C948885E8C91222162091DC3DCDD78
06044A278B0DEDC8B28C79A60B0179130E0B7DA5B75D1C6366E9A915EC25405E
702FEEB839C160B7DF5A05349F7B50CAA229184FA5787F0FB533615B2F384601
292E1E3EF883F7463F4B8FED2B6905F496CEEE16B7D1DC145193401FB21CC254
48B2FC5FEC0C7626A92AAE87C01F61A16E192491C6028859272CDA443164FCA4
FBBB4779383C7BE628E80E602A57D6EE4355BB2D551C427D5E9F540482A971F2
2110B1DA6F0BEC4B07535898B7010CE03BC659D5D169DDB522D9425C9328C30F
C02292D6170458AC0A2400D849E5354E861AA2652A26685C33DBA9A7EF1DF3EE
4FB51ED3DCFAD70D266C9EF1EA6A1DBD0D83E2FD9B171463D4A4586F7CC8ED55
B4ADF1885325F89599034FD49FC2D274CD47DE00393DBBE6025AFBB1933BC912
05A9ED83CC270ECF2A2041B31AF9F3B85FCCBC8400383635CC70CC994717560D
411701973127F961DE729E0DD91A056580487C99F4F14505F2FFA1DF8B657E38
A2973997C890E947DEB71675F426F735E1220FD441BE48AEF78D1CF2E93EAC4D
F0E2052B10F09B8DC6CAD97D5725394E029EF458F22974F74B770EA3924B330D
70547176357E94338544AFD73FBBE4048DD0A2E35E41320F1BA3615205A21188
36383D19577E2398E177E3637EE081AA42D843A4C247A75BB91B72B4A4515C04
A6857375FEA6F1D3291CE02E0E5A8DEC5AEE16D47D91F7B64E6559E6C2D0E3F0
6D89F989F9D4CDB87E989458E933150791DF4D5D5A1A4653ED167817C069CC9A
D8E9C2CDABF8B9BABF06FDABE782D50C6125821B80E6D3E6453E6344454ECE39
7619C4A6F4DDB4F620FE046FF831EE74FD38DB6B778B1AAF6DAD7487772188AB
EEE40A62A228C103E6CC0228B3CF5E9D532812BFB0D7A8B909B92636A5494B24
0F9071AED6F13A5E8400FFBE99F6DBBDC64E3F85DF12908146B2E7E93A51A3AD
5D35663E2DC17B0E0700D289246DAAACEAF4A6F2C0C7769932B6FAEA68A8D301
CFCC3F907D31D61FEE15C95B1A6F5E367672E00CAA0DD4E3CC04A9E41853640F
13F51D0A70F7BCCFB8356B6CB2F5E0EDC6550E55A117146A8B525AC6DE3C5948
9A3FED904D48EACF6DFF8C33D5A83E964D2DABC074D904B7B60EA5C54519B48A
EF81AE10B72CC4DB19BB6A5DC2D86068661A9B62D52E7661397E9E82F97D297D
914DB3FACE235C4BC1A40C1CD1C1C3F22DE7BD9A5B35EE29FB4DAF61AF19EFBC
E4FDF81BBB3F741C9E82304D8CA16AD3DB3F405E82F34E71EF69AC27C8ABBE55
F3A205D4745B5B8E06EFF6EE2420135CAB331357EF743292223A59F54B139419
B3464F43B690A0B8478A0FBD582DA06E33CA2E4B2EB27DCBEC6211FF7B97D60D
F8F3B1D72641586A6F99BC337DE0F2DCD6F94939E8667A562F0E0907F0A00AF1
3EDD5EFC8F2F62D948463FCE465F7DA2F70090BD13FE563ED82DD7E6CBD5DE3A
58E85FBCB05B92AE2CB3455DEC0E8E4FC6CDD34FDC8A2C731AC30665182E8A73
29560AA79D529F8E6F848EECCD8A59A6FB72AE409B4D32586D14C319F3A360EA
046DA2D87D8EF85AE6FFF05E5B237BC3BA0EF2C223B30FCF87138E2380B6D6F4
D5E5194017026966CF5615D54E18EF91A39757F96E3A79B339F3DAB6811B603E
CF68B46AC6FF81833E7EB5238B2570427A7C82D122C86DDAFAC0E6CF31A8866A
0743262145AEA2C35416B798EE27FA427B84B420BD1CBE3DAC23FA507E6A4A51
09764B6DE53C8F9FC86EA64A7DE998DE71CFA475D0BE93ED3E03C4258F9C423B
327F4A2FB13A91626718862DB14EA061435A65DF38048BDDC04B571A57891232
EBDEDA4751D169DFE3E802099CAD7FED97C9C9FC7456F6296677913BFEB6EE5A
F8D83691C2F5A406209656145513927245FACFF4337A1531D60B23CAA63BB00F
1398E09A2817555ECF7E036B5E158B418F474E27CC700D08BDF651104D5A8DE2
C174C3D221370643A23B313960D86B4E14EEF8AB20764D74229B14456DE3B361
AB13C27BD94CAC2D9B4923CB1ED708041E26BDDC5D9D06D85B1D4FF5CB4E0A8B
2DC71CFDCBB0B65FBC1A03136BB43946FBE48BE2DFD7622983B78FCFC6D4680C
E3B4A6914564F1D54E4E234F45BB2CEFBEC9089C10A04AF6FDB9A2166FB07AE6
61F545E5BDFB1704C8598690F22EFDBAC7B2DE587E07B187DCF5BB133B4FFA70
598DEF37048F8FFA3AF97F22BA75734B345D169716C40207C3D7A30EC065B50E
6CB88202B4E55F8F3FFA62EEC0116343D0D4EEC0EB4332F282EA909B827C7E7C
712C2F5DB596C7F7DE04B4B24B43E08D00B0AB0D528410E39B9CC1AB00BB5155
7832BCB956AF91F45B84D9007F59A34C7C954362AB1AE6D9E6B0469D5F61FD13
20CEFD10E33165CD9D6D53188E3DEAF8315ADC80996FD3970ECB20C0755E523D
C2CF7E38744DC2C90740625427D62C1CB1570D43AF9BB9E2F914EA712D2A3015
3B6FF010168F9B26F0FD413C1B60E6D0EA5B38F5ED15A8DD0F3F0EC649AE5C39
4B6FD2FC568E16091CE8D0F1C118A0BDBBAE50307C24F21ADED533E1A3DD7A35
DF73A7747571EA227BDD5DD222AD7124B461A7B647BCA4A10A8DC0F8CC5B2A02
31B4AFEA24E7370F9F35700B7C1133D0901455FCA313092285D684B22C240E2D
D49162BB89EF0453A681CC529B94975FB804D6C2089A6FDB95C3C9187535998B
64BB4EC3D722028FB8F9CB948238175074243693CD84B6B2D9A801967C7A3695
D6BCD0AD95621306E5C64A298D7B23BF7EE2018BD7C72C099C27F31BDE983C23
43142D46B5D7E473918E98E448B67FA15E100269F76F2D95136D2DAB75B8979D
2A912D9735ACF116395850FA3C4306CE405013467C82B457CEA7746F855CB761
3025349F67F71CB04C1AF7559A9E59AC805754E1C70B4D78495C3875AC56A8D0
B8BACBAF17B690417CB7D08BBA748F49EA3B09D9B1049259D57339F6524B2EAF
7F30092252CB2D6DC082383F6320F32D1471480686E502A9535883A707DB8DD6
4E41C46278BB4168BA26D525789972FCC8F82FA50A930FF0F3AA029470475B3A
6118CAD3B3A8D6F3761FE569150FA966FEA9EA938ADDB2E91BD60ACEB32BB3EB
71ECE1F3846B4D360BA1BF64D60A9CCC78992A9060CE89312317EEADE0622448
DC4DF4C15249429F8BD47E9CA780E45EF8FE71D2B0FCAE54226BA2F70A285895
02E0B7B10C538F67847043680DB91BB878456ABD7609DA52BD67AA4ECDA419C4
0A13A3F9C9B7912796FC1A9A5445A3A06A7CA97B8BFB5BF22EB396C5A3848377
268F7F893D8500FCCCBCCF4419F7E560460D36EA8362A84105DF8AE015B8FBED
C25D444DF2CADD04FE5E1E635DB44C5ED32667A1D3A0AF5B79FD6F76EADAC423
CD9E78389F42004C97DC2B538C0D93BE3ECD0CDDF5591F9DD2B9D837D8B2E8AA
2947C98BC2D2063EB2F883D25E746A35F896C0C73D570A6E49465D3767A41246
4C464321BCBC0A6D8AB5D148012619C0AF21553D031227D1EBEB77DF198EA07A
43D8FC407E75B3A769053464DAAB441246D067CCDEE2E7E186FFCD1BDB8114F8
7ED2DBBAEFDDDC0C8FAEB4245E1CB1399F32DD5FD850D92373F34F2F85454128
31BC043BB25D8132DA0279DA57F78AB765426CDC0B7DCEEA54DD90AA62F95551
5AF97FE5D564CB48464489668FFAC7E3261D333707005FA57E9EE86085D180A5
64BC3BBA971739E49FF4B46D281A7F06216FCA0C41832FBF0C8D314E94E92E51
A5A4E8070E40A47F4F64F3A35DDF788FA6DB0BC18BFA9494885DB40C3A3E82D4
95CC27CD4ECEDE6BA8155AFC1402566F02CEF079B783F4EB7FA1D7229EEFBAC9
E5014FE217F79D42BDFD1924E7FD1DD6C9E9000A1876684C27F1A1C6746B06D1
60746B918E7E3F174CFD7090EE8C64CF74F7A476E8285AC29B87EBDB83C75335
F7F060B8DECD952859CE76136B99832E33A4498180B795FDCEC114ECDBB5491A
FE87E03EC7618D034B3126E0242708C4E66C8A0196A6463A8FD09733135708B9
C31D067BCBC766AB8401A50AA0AE9215CD0D761613825B48E4F7968309A00F3E
CBF1853315FB06DAC1271115FF6962A9EA7FBAFA9F15F7C17EFB0B84BA8CCEC7
8553CE8F668EA2B74B3DF046B9D46ABE46D46C1FCA82819D40FA0C594B1C9418
51C0B833E4A24225C0FAEBAF9AB4D2C5A92381982E0F0D13919619EFF9709F64
14E4951EB7B401B31D6F93C9F84D768DA3999E7CF219939A534754AC05D64BF4
87EEEF28F097CD67EABBED8467CEF3409C023A3291F13A454507DE31F82D81F3
CEF2E3831D8501CD41C76EFF23BB62BE0B5B08618DFB09465021C8E3127023FA
EBB3E438A4DD3251178A49ABEAFE598A5C9A45039119A450C49D22465D078301
D9139E32F2D29861BA849DD763F78909342C9B5697CFCFF70C87E0326BDB2AB4
12C72E9166C5165D2516723694BF081E42B38E70106AE4F0FBCF8E3F5DBD37FD
0561D40BF77EE5829B0E8C080FDCE817E92EA397ED907BA17CE765144CC67F3A
755835C40727659AB32056536AA65F09C4AC8C74BDB4F8777B0E6BEA4A918FFB
9E3FD4050323E151A7715AA1263E003B77552E123993B8F4844BE6EAABE2D71F
85F44A46B359938AD51D31E658E514E515C90B80EF3E32A4DB200022C5C29807
5B77B6A14BE28040D9E2293557615D8A0D647D6D4A7D903FDC41A0D95F8F5B94
0432E2D5AC65B7D1461559D6D2C2BA4EF93005C692B5362A0537775B6C1BFC79
A00837A29A664F3FB2B0BC94CE6F0B1AA0F72F07128362047EE829FA7499AED2
EC6B5808D5632602AB59AC0A8ACEC432BE5A516D86B8FC659C8A13C9898CEA14
1ADA4B7972155304AB3EAFF9535BAF0EE37EC101E273B4EA4EEA18E5963DB755
FE4E85C73135751AA95682DA52BF0039DE71C4F989A8B3D5F70D265EDB4009E9
C559AA3192D45DDA911DF6F807DB4260A90E2C593AA89FB55133CFAE6F44885E
4D15E74677596EAF776C006320E4B3878046FCFA0A4470B927F80B13B8BB537E
2408C5FD276DC3CF2423330B6950AF752890AC786818A5D7FFC8FDDDB8D818F3
E00ED0A1CD64641F629F81EDA592F86A86A3B1761A923D3AEB50E5AF38BBE2A0
B57A017936927C8E740AEF14F109BD2F5D65E92A93342B36A3B980F868D28278
120A61EB811437F5FEC9858336DB7DA3D6B0800034270C383729A6DAA0584D3A
ADC428923C7818057BFE4931B8AA505BB14CE2C17971BB79DF3D8C2AB1308B56
8839E48FB889FF9BA9FC16682BE0F5F4BC8362BC37E9915D4239DF7071F0ECB5
137403D939891B014209814CBF16BA134CB1E46DFC1ECD06C219BB12737276B9
C28111EA1321D652DC5F2B27A694D428C7C8581F807D347113FF25EE91D77BF6
69A9F1280CC633706B45428B0895A2B02EBD379E7B7D92910473B76197957B4A
6F400E00D9713DF7F3EBFDA487CA2C58991027A0C12BC32401C8BCDD5888B685
3C4860C0B504252B0A0831163CE26CF9AA6A4BF9E361F690FC977825EDE049D7
2B1D9DAEC0F6FB35D36EB334FA71389A54BAD125232F04C3EE31F053BFC86C14
B87F1392E9507679E3CB3ADE261E8DB7168DEF65B97D45E81B935008BDD90179
8C4B3CA6F4B1D424D25FAAE3DFD01C0C36BB37F9112AD1B85006A1ACD0B4C5EB
6E106106BDE782406E7DC26C477957FA7DD2511709F2A2E0923BCBBB4C226743
BF915D138818722999225CD5EA9DDDDFC7FD5A8D516159A6F6392C5473AAEDE4
443993E4DE6A00E6E6468CD4DE1AE551ABFAAF9FAB84F8502F3A69224C5CAE86
1DFB39E130D91A5D5648D51CC7B7EA319AB89BA0236343C5DC4BF0E269469BC3
1372463319244FD8527637468D53770320E7255EBC2700EB49DAD3FCD3DBEE71
520AF02059893909762145C6757948A722D897BFB932B65BC0E8B339451DBA0F
5595A8726ED454801588EC186303BF1E0F9495550A0308244AB22D1810B4A8E5
C6A8AAA64E5604DCE13617E04F3C9207F0CBFCBF9F774CFA9ABDED5E1FE69B3B
EC99FF1331D43374C822D30C449DD3D2023A7C675ABEE4D8EB02A47D129EE83C
EEBF11227EA05BD39D96EBE2D800F0DAB8BA135E91490650BCC06088D2BC14D2
3F04135609D309077770CE61ACA2A1BBE2F4E958D357A6815B998917E7BA11B3
D815F64CADEF2217F66EF179E184D59514DED98C95A8EEF2D172F8F58C4ED38D
A12F241B5CCD88A4B417541DE403B04251336A4FBE2EDAB1D69DBA63590872AB
CECB45E4E50F2454A64F497865E6A8613D66EC752E78B5E0CB13D7266AB1E5A0
0D6EC2FA445BCE4A7E180509F764A98BA0B302BBB211242835F6BFC1AC6BDDC7
097725114482059A3CD1458FD7F9127039637A92683ECAB3D139903BAAFF60D2
19EAEE36173E5864B2CB7DA837EF408EF91ECF0F9D6DD697D50BD85C7549CA62
95969F836E82628C3D13226C80837D1659A61D46DFD6070AF1A9106C12E713B6
43BD0B06418243FADA9E3F9C92095D777A0B3E20F1D6AC27DBC03B20D98D926D
79B1FCB8B50BDC50F9829D35CEECA87DF066A8F6995A774915C5DC5A2F222C47
6EDC24112572B1622C6224A7F0F94ACC429FD2EBFFC977878D4107DB9074B8D7
F3F2CA65AD2E715BD3598F07FB488E9DA528FBADFE615C3D85943945000A2692
0E8F404F2978ACE45EB3996B591C6CAC47D50FA74AF2CF0C7092410888B5522E
EA21EDCF5CAEB338AA2A5C82E4838C6CC66DCF48729E8282EF10EA4791AD0F11
7554BF38B05731C0A3860A10FBA6B76A9F9874A76E9AD86B4D4FE57904D65DED
424DD02BC594F62D2369E3C0826F4444B00BE1BCA265D8436FA7D06FF89D577F
F74DA3F2F837EB663253923AFDE2B423D883CA8090DE98E11E6447916A81955B
C893645CF0770C417977EE9352402C9DC4BE51ACAA3366DDB364B986CA1E5061
FA2AF6DBC32912B5788E1FE0C6E37CDDB07A8E1D3B0F3D6F83385622E7E68E89
B2442B602CFDCEB198C33CE017655F8E58A0CB82F3BC1F6F7FD1A1E43252D7F5
3B7CFDF56E2F2FDFD6DE32F16E6BB61A4F1AF24869E14679142B5DAD7E43D492
263920721092019AF424A3D750BF1A378B2AE4D55408C848151308F8899A2B1C
98D7ABD75ACCB21EF3A9A213DD0AA98D2FB40CF16C29C026FC0C461707628718
BC50561FEA4D46CA690728E23BAF7FB0D3D2671CAFCE261F8271221BA5039589
0875E17930B00BA87949E917ECE566EA07E0D76B263AACCB3CCDEB176F5D4CC1
A84B8A36D4B5C52B9EC94C657D7C137BC79A9414045462F6AEABF0DE807D95A3
26C951DC6C38B968C8B48721B012AE509C10AD62957FFC2DC0FFE340EB6AA36F
9E54F339E0F0B3E30AFA0EA66C5C772A6F99F9286777023CF4FD99650CA5BAB2
09CF2032CEC74B51B141240385BF61EDA48F31575684A0A53F2E864CECB95153
511660E4EC186023DCC9E2B6654DA6A06815554CFC9B5651A00E3D7EF08AF0CC
1F08959AC3A1BF48D0A45E748EA34B5BDF1D0A90106C216A7C13B09B4141F95C
15A1191023F696986332FED4596124F3449EB70FA24138EC3A6653F0F1461D6A
430BE86F133872D9D3F8AE87FD32CA131F69827F79C5B27304B888AE26F6490C
5B4C807521C0B37F611BA58CC6151F55B6F343EB6B1DD35C97FDA06F44250B94
C77B66EBF7D8720ACD0686FEAE2602854EA219E48A0CBC2B282ED87DDC9D9089
96961A412580A20A7E4A45B213DDB44EA65E5554DF1ED1CE40F41E4FD7808409
216FCAC8D7316AAF38FEBBDB44B1A5213F93902C8CC38A5BA83B0E95D795D210
C29C5E974EB1587FE445E55540FD4CB429C407189B38337A6F0E966575FC2934
1DBCAD25B9462D60AC688CF6EF93F9DABD981A031DEFC3700C4C81E651E98E85
4EA67B124FBCBFBB0DFA248C5AA169B5FAE8BF920E3CE4AE0E875EEE629E27B9
A355A297CCDA3CF744873A6FE300E8A5DC0B4586ACB449139469376943BD1583
880C41B6788BBB0E2A91549A28415306056F62D0E636B57BAA3AE086312B7818
8398EAD6CA4DEA5A9EFAFE44B5058B5D9F2CF5B8E20BC5E43AF299C652D7AFDC
61F493FCA44DF60B12B7CB5ECB55C7820659C6663DD8FDF784069F54F3D8629F
7FF4D4831CD43A2022
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E9330253245BD6D61BF2BA22206C96741D8
7E123953AB197A62AD24FC6D36565720F65DF5C7BD4FAF2FF60E32BE9D3BDC0B
8A08596F4FF219DFB7F13B64AD649A9766D3343D14887FFF0F2279294CAC247D
5334EB0055A2F7FD97E0296C9D66A477F73A99209B7CC868A7A2B4619F3FFECC
608F10F67D6B11410286E056DE6C19B4A2B0C2853990A02F8E490FEEA550F7C2
574FE711D211217F3CF6355866F9618389C6653F19444949C63E30241597A9E6
486C94C799EF31F5B999FB47E27719D3CD5D7E05F600DD2AC198D325E74FADAE
24CEEC988662DF3092399E432BCEBCE77F563B1CF218840D8ED9AF55B7E21E29
8C3B688EB8995C316005C51666F1B118F88D09B97E5F0F3D42865ADD54475213
CA6A68761D23E59AA0A2C0EDFBFF045D8A6B3F1AA70C01AF9FA5E5647B6CE1D0
9107F66A2F7345365B1D58B4899019B75E31A77EE2A03193FBFA746A1BF83C56
F49C84D8DA8A97116C61E56E829435AF425DF4D2A0363B109CF24D474D68D87E
8A6BBBAE7B2BFAC864D0959D2A03F8119BB6E927E82D591040BA78020957D37E
5B6FC20C2CCA7ACDBCD275E5FD147ACF15B91749899E925D9B6C1DD47D7C7944
EE22A1707B563D4D1233083869B360EFD478441C2CCDACB09D177C98865D072C
56F6A9179E7AC960F0361E1BBF52661A828556B228DCB68B5156DAF9EA9A026B
BB12E59F5E23547EBD117D1DCF3C205B234561892A745D24660E42865343900F
DAFB0F03725E67A629494C3A4243ABBE739B84346ACE5CB3C4E66D1C9C8F0728
FC8703CA0FE3DC063C812C6BAFD9E00F0CEFAE2C56E064B700B040044AFA3FC0
E8F1EB9A8D05D84C520EB2D4772AEE28FA9E46AF61286FBBE2822112A4942384
E16114AF5B043ADA74847B665D3F853BC4C6051958B1E95B596E3FA791B15F7B
22BF0070015DBB8F58062055F21D3A65A2EFF81D1F5CFD3C3D223BD9BCF95DE4
9509CF5E9745868053DBE430076EC46160DE3F9F4A2A5599C35A33EA0D3E5746
2CB94D926CF46726B4B7BDF70F7B734DB11BEE52E802686358BC8F6E30599707
6399965D33CFE229B423F15C94E3554F7B352E37794976FD7235B3E3D984F97A
38CF2FCBC7BE0C1F81CACA75B3B884381DEDA48AF4BC35B4A111315C1EE2F7F8
C7E4F166F67DBCEB7310C76ADCD65C1E8ACB4EBB8F50303BFBC0946CB598A4FA
07E040BF8A314E34664D5CEE36A6D7F3849DC7EFA067212E3CD1FE903E52958E
B02DBF9EAF5702441467B56ECE29808488A2E9CA0C7D31E86E8B4E09A58304FB
85DE42DBA8C76996C54E239148B4A08D620700A414BEF8E37EFA5475B68D97CA
2890311A3BADAC7765792AA06C3C07BD148CC5F08285E17F7F7738144401B3B8
581B3BC2782D98AF50DECF3EFBB399ADF34ADCB8921929F08E00C201DA39F707
CEEBEA72B6A863671C9E2F006E90015AA683F537D7C648C283C7C931C9FEAE25
9EE0A15780B8E3CDA23097F99CF19CD526F14C555B795780AFD7ABFEFE06C8E9
2D6AA9D514975C40678371443AA66DA2897D1889265D30518742B480CFEDD9F8
513CA67B91E9189A92EF35C0CB84E75F8593C2DBD2BAC9682E7660EBB529CDA5
28157CBDC05ECF521C59B507269027217BFFE3721F956583A3B97ED51080BB49
80EB8FC05C1CDE32F168F02AABAB72FB5653F781242F422EED66000CE68FE4D6
8D52EECDCB8CE4B6B15B9838F0448DF6030CA02DEF707A150B78766D5C62568F
6D19E67AF0263FB17F12EE08C7D3B38DDC493CEBFF918AB48A14CB0DABBC015B
A5E809C89211362492098773EF01EF1E4DC637B1D5D188723A4B73895014EC3C
6E4D91401B58B1D75E7FEDDA9B681415656BB4E1EA43C24713D9DF29DBB2C913
DF13CE3C6D2D5BE1A1AC06E5C57691D59053C81AFDF3C7F4537E2A60229A4514
EAA8CDE4F850AA0A6FC437BA9AF84A30663A4DAFF5074FA8045FF5D8C82A4B92
0929E4AB6BF03B4623C064197C10BBBF477BE4B32693F5334D9209B30FF8D44F
8B137FAE9D6FEF79F7FAC59B601FBB112FDBDDB4A57AA6D02067CB4111BAF08D
96FCEC66
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124F430A49A3ECE0D8FE162CD1E248D809313ADB0643FC49A5D8A585BE
3CBF4EBE977E661CA15D513D84E93487C0A154AF7DEA867F8A55354C13257A96
4C321D55B1C01CEB789A70C1B1F6EE6A697AFBB2F1E4C4FAB5C35A39BC912219
2B014955CFB5BCD25E682E0CA038B00D98B64CBD693AC391DC0F90B5525B066B
AA5F2C767BF498E79C9C37998BDC4773048059427AA93DFA688AA5C9DAFC09D5
AB1334CD3489FE2C109FED708347C30CA4CBEAA9DB0A5C680222ACCDE8F9EA75
81A9D140C1BE19D735C4A8E181F4C0D4A0F57311E1656FFEEC251FDFB77E96E9
59C233E60376E020237C9009ABCB9B888EC588C1394BC342ADFF7A5D64228DBA
88324961A34D5CE9A6691BC01992D3BB2E0B7E283C3930A5F6868C92D98515A2
B3715327F2BA1DB1E248E5959A1B1CBCA0647DB7E051B9C3B89F433EEF8B881D
D3595D04B55D8DDC853890707D2E083FB4DA0821AD20ED5E401D2B03D51F9314
39D28DEE7C1BF3F7F37D37606425EC1E2ACD61C8D5D7BE9F1AD755CA27698523
72BB5CB9ADFF421877F8FC528B82AD8AB05A18126BA9D2FB1C7FF1D81B3D2285
A3575B24A1BE1F72929B9BD075FA044FC6D1F01A516DD5DBBB16153ABA1CDAA6
570874022C6EA31500E889707C943A24352FF6491198CDFAEA0FE1533631F2CC
8FC9455A70C78B8819CE993C90AFEBD2EC4404E54694E1B17AB938EDA56AB7E3
905D8D5981B1C345313AEFF4248F5D35435ABE24CAFC76BECB278509EE6E85C9
D2EB14FA528E14BAB75A68569B0D07E549440B9A26DB19ECF710F16F1F0189CA
10723F1636654832D7DD198524B69B8568E4A256F314C53BF1FAA16984CD2199
DF79D47801797C4449DCD0C28A3ED6A6425636C362A54C969A30C78EA5B7B255
A2EB27CD1420C3040D8EF85B10B8DD94A615A1C3B03BDDD7C8DFA3B644E6ED07
90402E59F21D1F34E4ACCDAF9E430A6CE7F5DFAD72A22C1442810881FE842BDF
13B36DAFA6DCAC5C31B5C0E1655971D26C1AD2FAD0BEACE3EEE2EC119B39FFA4
34D2624173C9F2310409A5E56325B2385D50502BC85E088902DFD78DC45F307D
5874A73A719C9785F4507B5B92214603518B3B2F45C499BC232026EFBA9578F5
80BEBCACBD235C3122F2F622FC87C091119B70534CA56286E4AAF8C73DC7A194
97AC3CC38BA369F12489A9A822C1EE6D4C28FD54E08C44158A79243D272953CB
902BCDACD7B4F4934EA9B8F7402F273C5B4A78EEF18582452DDD712C0DD1975A
CE3A7432E56560C205F2C971CAC07D0C15067D957B1848DC059835D21640DEAB
285C074E53081E7AA49F693EAF45A5B02A8AD76F70875C8568C73D690B824A78
AE639EBD2C4852852704BA36CF5C97C0759BB6DEB0053885AFE860EEFF0A0C8E
97E7473974664356D4E9645E22E3D50D4C3F3EF0A718C1049FBB050D2F3A4DD2
E81C754C9CCD8F35D2989C57F6E114E25ED30332EA37AABF4CE9ADB1A45409B3
DBB6D35BF5AE72618F1A1F523D0343984603746833E8FD451311BFA564B87AB6
147037DDA940ECC3C876A9812F17FB2D3B21998CBAC703CFFC9FEED555C1BADA
804A25BBF6D9D7E297976FCB6D7E06B3DF546E2C65758EB3BC21DAD7AF83BD25
10C1CAF52B9287D462B7086AEC9D5C740BEC7C2CA45049FEC6DE57F54319AA5B
7C37FA8844775593E9814C5DCDADF6588BB41ADF7036BC41A663371B2312F1B5
8ACF731320A3BF782B4A02E8CAC3AE5573A3B00DC6F54FED169B3DC160132CBA
BB68183355CBBA6551F251C3B877D3058DEBE280D6873DC653C98162600D137F
0816BB2E88B4B4510DD9710935D5A6582B5C7EB922C8FDBE53FC587ADE9F3756
CACB2D129808A03F7DAE37F00057F73D68DD071E7C04DC69C6AC9626B8AD180C
142F22C9CF167A81B83F6F730B587A608C2358F07CA624B0CBE77E7C033CCDAE
A3A1B838D498B5098D9921F46D3E43A3547EA8E46444EAA358FC5BCCD3AD9D3E
E8094168486C851339E1679B72288CD80D0B3A2E3B517F5E51360F680B9A0E8F
BA3DCBB8D18E1F3A83AFB3D015AB4A470358F17DA172C50B0697E0717BF17913
6FAD9C83C2B18B3DA4A0548C70C07D4C45FC3DCF79D8F0261124DC21CA3B06B9
CB6172F00EF85EA58D55E742FCD837DFE3126507ED5FAD3FDCCD41E2FB0CD820
50C2F8DFF123D2A813BC1C8FE369FAF98CE9C705AE96F6314DC8AFEB6934B494
C351D38BBBBF9069630E28AF728649AB4BCF8FCF2AA76756ED560A2E48261CCA
6FCFFF299F510A6762FC8B175D5B71DA6185935FD7033484C1037B0563869AB7
104B3A10CEA80F7CCE5F82249488075159DF375683423FB10FE79D1735FBBBE0
CA1EA6DB34BE4FF0247450A9F1BBA30F0D9A18006EC2B73A6778D74C6ED5F2F8
9856CFBE0D4586B16B532F1E562BED95DADC73E8C67EC198F7F479C3480A8ED6
382E8FD1C839FA51320F72742F7AD2F3FBCC677F44A59D559B37804B360EAD03
9CC6DD3B7213CFBAFFD95ECBDAA0E989CED95ED39D4E49B165AC857668016509
CEDD52F78E2D03DD74B66B4C88C75ABD1E08C494BC74E6B2D43E722D30D1FD33
FA70E73427CAA9223544E80A2588D8B2ADE049FD2936BC2A01A2AA7026EA4CE8
F1507AD3392A464FBFEE41A746BD2F2BECEBF246CE8DBCA71A530FA014353B3A
2E739C16C7D99600D2509104D5EF1CBBC86478985D7CD28BB12250D9222BEC21
839790AB117144977F6C6491BA7237C5949A9D6BFB030176F1AB842B1B2E5D4F
D16EDD72B7E912545BD4856D0E6E5F8DED6DD0E9E1C22AC8E024DB9DC440BF72
21652BA1BD14E90D8B92721ECD49FD5D1D830277B456CBB3EB22D3006D53A9BB
B779EC7E02EC80AB537738E293661F2AF2CA090A26D1BEB3AE7B402EA92B93F3
9A334EEDC4DE2082E01C70A99E67BB99A948D69CA6F78D391291E6746FB0988D
5AE5A213C7417898581C1626D744FD8B37447B568BA1F1FB33A79064085403AC
85E3DB1C2984AB16A23B7EB1551B192579C7865FF11110F2BD8A1288DCEBD7F6
6451798DC231C6B328511A8B8849FF430899535FEAEC869F9B76E8256D82BB04
B29CC30FA63DCCDDD6D695D29A4B5A68733416737D652E551E49BBEBBA64BB64
185650EDB8F7E736422BBF67F600A0751B1E8175D5416E690984E82796996A8C
26CAFCC7ED5DD8537A7BF31EEBCFB5EA481EEEBC40F69350F392E678FD7B4A91
B2D1EC5B07F1EDC165DFE75F9762FBDED4157D854EA3394F52870B56FF757D81
09812F15FC17F33690A4F7917E17D6C08CF5CA25F79B7C6C4A630F56B0E36769
63CA6C2ECB006BBBAB1B438E0E50D54BC37888BBF9137D2FA92C472EBF530F15
DC77007351CC12EBABF23B544DE80C3BF2AFC37BF563CEC9A5F4885DFF454040
4E4F783D65149BD0A7F66A3334F5A7D92E26BA760984220FE963BDB3AA20EF78
6EC9A8E574D8CFA8B4EE7E4431BD06E6F2450FCD3F3526121545F06B92B0BB2C
ADD963E4C9BE821788343E9FB6135805147716CAB34FE8A620DB474493EF2577
A950032A6D45D83F567F2C72BB17D485A5D12D2D216EBADCD44BA30BA36C39AD
DD04C9934C37D76682B9792768C0493F527B95008C2CE9C649D036D547BD4741
E68497F7992FF3BE510AABDC4D5D724896291542B6209FF0676538C94A3AD653
4FCF5FF15F3AC63BCB2E1F79B2528BABDE85AE9DC6A83759
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762BADE1E60F381
8ABB3D45547347BCA2454D6E5C664D07F4AEE4601A4550299DB25FE73E0EC544
ED3056631F2FDB88AD9BE72FBAEDD064C1A12A9270741A9858307719D6C6297C
86C11AD08F1DAD64492C5DEA4B71C4F2418553561D49BF7353E0426538B41B1F
54B73BBF4E59E2573A74B5B3BB33BD703BD64F8CE4316DA7710DBEC56CCD4DB1
03862D36A627F6A94321A3E4039359DF67B6EFC353D8344EC71A263A2499B9FD
DE837B82DB13A2B9379629ECC9E0559FEB89FB9B5B0CB9EA7DACC6311B3D7E91
DC02F303B369A3C9479F2A70DA69A5979C921B5680ABE4315600F60F3E88AED6
3B84DE9F16F851BEA14CC0D72BE664EDB05398F9C223E2EC2581140320571B13
628754769671F0941D003738D64B0BFA4628A61C66ED712B9D9F5FDF6B69864B
4CF46CFDC6A767FA19991B1E0AE40A3E758ED18AD200CFCBF7F10AAE7FAE6113
63B3C108333A2C073D37661F7E544F85848E99CC40307AE2D926038743CEC8C4
CF3FA45F336709ED1BFB024D34A7521F2A2899AE9ABFF2266335E213E0C53002
6C6EF31795BC1B2EFDFBD9C32FFEC95C53A1D254A136E56CD973D2A97EEE66CE
A7A9BA8C73FFE28F8A5084CBAA5D6D2731B5E354570C90BB1D004E1CCCE24FCC
9ABB07EF91A69B56732F688CFD45C9D8C441865660999B47B6F9D0A2DAD31746
02B3E2BAB960BED9B2AB92B7B630E906ECB30263B528BB8D33460E6D203758C7
B84F48E536E04C1584A675FE60218D9018DBB05960D99D6EB2CF541ADC0FE704
D0E89E25FBF4375567096ED0AA2841C434C2567FD38DF8C429EF198E85B07A4B
BBDBFD66A5A251F3859FB008F5F8396ED8E05CD0DD143C94BC162F926E4CDA7E
4102FDD9791E3A66E7E1017A18EC58307332FDFC335FC5D98564272B3FA208AD
A16768CCB9D13BC651B17339E4D2CAA21A32FA0BB694A273801301FEA33B3E5A
255CFEBE1F0EB9A46B4307C42C12A33DFE0C70912FA5B4CEEF9638AD098E2385
CB43F53C6A26FCF3B2EBD96DEA37BB0738F1468E05A0B65D69CDB6ED8731C280
724FB95ECFEC73B497152138AA78D4597A118BA9C5FE765DEDC8E78732B870F4
5699A8F94BC7523BE84708D2E4EAAFA3D78531D6BDAF0002C76D7679A9501FDF
02FF0E9C1EFB58317EBF982E9B4872AE71DE2C0C83C6658504D444DAC4AE45CE
9ECEA46646E767E81C134315452557D044F234E82A3AD6A5B51A72944D386F04
E00F128FB9CED35C65FCE45124EDFA9BB5C5FD5763A4A981DF6E48EA5EBE3712
469EFDF70CBD0393D14FACA83BD09B4032986CFA2245E0ADFE9C620C4E561DBF
F6471C0131D938AC00ACB97818F42DB321CD3982FC4202AAB061CE36CA997286
571DD7A257D23881E97C61257427D0FCBA187815D9F7E847963C9FCDE4B8EF3E
D8887F8A5FD56CE977BBF6C9386C85E5310124FF7F87207B23CB27F5127194E4
C2D55F3251E11F5758736FB4D5C4E6384C22F4FFA4008072C510650A6D794F1B
0EF70074A94DFF6E16F28E212E09ABD1F2BF8E70C721EE2E72C02D9BF25D5170
CAA6F30FEE27600B73DFD0A173A3FFB3B796F7CB2E1F9FEB0542E3D22CC02CBF
12CFD7F13A799E67BC096A71F65DE7670CDAB2CB2D51646FE1C818EAB8BB2D17
91EF056F7AA689C85BDB6DDE793DCFA2C0F8248BF5D38B42054DE735DA8B03C4
7C8EE89BC66F816E13641807B58EF72DB7881AFCBE8AF7ECE1A2CBCCF0C55FC9
7D18B9AE6E49D24CB6B7880D1B7BB2F9A1450A65BEE58F72D73991E07A4E1298
805E41EEF626D0E299729AED531581A1EB13A5D33FC1F3A1D848FF91EDFAE39A
26C0EBEB2F7FD0FD050E565CDEBAB54EFBB56A6F5AD497D5174156EB4876BBE0
0CAF77CAFA1733BF7AAF3FD178F863AABE3C5F5B60C0FC9DC2A607111538593A
C891D8FA2E7F7CC9CDCD23D694ADAD7F215A0A98D76949D57B68F6C3E00EDFD1
CB0EED1DC6120DD1AC40D4A99F3DFC5CF470F64EC1BB01210819755782E6948B
44FD21DAC5EB81BDB01C5A62B6787A114A5D6E9994255211B9D5E78DA0FB7620
8C7A8826BC3DE4D0AD54F9684A13BAB0931D576665602FAE8CF478812AA4AB16
C84E4644C1EE4B44F9C6D06F6DA61B84B3B12D506121A532E4D7A59328566A2C
8AE6AB5EDFED7F348319BE396152676F3C25874EF45F050F06A728A66F5EFB98
9B86C05E9F052CAD1DD2CD5AF77347748773CB114166CB6B54F17774B90FF183
470FA99745045B1493EEFB22F1437EE18636A13AC77D5325DD569BDB885E54AE
13615BC266AAE2DD5A02D8CD42045964532795E46D2666BF75AF1F14F0B85581
C944D990B7858F463595DB33D6B7CC13271C6064DA70F0C49ECD2DA5CC71EE16
8A2D6ECE249F6312F0ADC4B21D6A23BD1411122FE58E23D5E0B1B63D46AF6758
C860767D19358A3E1FAEFE3B3DCE8DD7CBC855D30CE4B6E492EF5780D7F806F8
0E8197F8611523317866A37D3F18EAA7C5A29B828A142B63E0B72CE87B8A8045
DE828C0DA748F07F5247A173004DC0853D3071FA9C8EB9456E107B5ABF7968FA
87ACD3F02831805179626639A1EC9981CBEFBF454E47202562B04DFDBA36AE63
3B53AAD8532CCF26096053F9E537DFEFE4B8BA43069696830A54F1E399C3D095
4B8834213033CA50E308EC5299E03A52478A3414065B96579464A393F5B61989
99C45179C5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0BD1D8035DE36DA61150BFA1A886439DA8085F829BC607BFFE1487976A7200
1FD380DEA53B21B81883962192FEB53F7BB747426BFCEFABC1A1E8213F7D1781
37BDE927F8AEE5FDC6D4E507DECABF6A44A158CA89FF0C08B845AB92F0C4BCF3
7B79B1F662D3EEE38C7331184791CBFB5F580DE2C9F75CA4EB113EF5A1F35E62
7C166D948262831E02CF5BB04BE5BED36EB2C52BA18EF531DE09B52B7093D785
F43AFCB837DDD66EDD81132E44128EE1BE623EDD5DAA451C9BACE4A515379938
C91AFD5DA7E08065B0A0FF5186A7AB03ECCC79A923BBBD362B788F5C9DDF932E
15D629638EDE89741C64AB1DFFDAD747649A1EB0952408D5051FAB8C578E0ED5
32A99EB95412EF2041DC2A34CA9CFBDBA9CF1519633A44E889CB71E199B68967
704D31695637109405150D9B3A9D82BE7F1D700733331432ED8C17CB4DB47FA3
AA70DF55B9B741803A23EFAB365959491BF8765EDC9EA745830144D90CEB0894
01871C26C7DDFC5D5CBEEAE249871AC5648EF15E932F1B9CE429F3850ED936A4
BEF78AD52BADE8503CE425C1502DC3E14A5993ACB13E773416320266D57A44EA
A483BD45C65FDB06F40DD6FF7D44BA982DDE2691FA6B63B60C6183F24B165267
920C16BC391F5EE6608C8FD34DB25B1C87ABBB97FF26C266EF056B5D097DC142
6342CE9AD7FAB80EB745476DACABE460C03A720CDB13A9FFE29E000CCC63768E
D3BA9B31B0B8B2469CED7192E35526F07CAB2D33DE5927CF37D594B92838E1E0
0967BB5EDC8B761635A25AB894750A1AB42A3C39AE557B5AB9C6357F7DA2E657
7883BC10213B209DBA1B10FD88E772B496E1865DFBC132A0AF8705FABA8F8F70
3FD489FD8497EC7BA66EB525D956957F65695C3398FA5B5867C41B4851BFE2E0
DF98B5BD7681F073B80206002F71CED9D59D965EBD645B4611F11B8E333AB91D
A0C4822DFC35271C6C384F366B64049DFD365610406767064E96F1FB88139FBD
8C55E6B2BE3FB642588162DC87CF2883F34A29750A0A1F8A09860DDEE5657722
D0E3B85E6F466FF24933A96E1F15A879676B5DA1C6D35792770C44F9FB354614
AAFB278C45C18BB6B4915EA6317EBB100EE74E54D5B397A7BB2B16850C69623D
382054782C644ECE67FC9EB4323AC0F5006142152558F89844B32BB2CF81CBC4
F72C73C56D9E7DD57DBEB8565C7C578037449702D22D0ABF1DD31BEF3030738C
93B466B3FA8FB0317BB82AE769A713CC503DC31F11E86D70DFEA04BE47FD46D4
79677BE56F9BAE25964488BBDD7CFEDF35A6136F00C45A3F075C79C1733E77BC
6AA0981B5D52056EA38DB46F55A7CC21A46A822F0464BD6DAD0FECDD920A71CF
67C47EDE75A92F17B34E1015D19E2511F19F8F07AF9E9E310AA925C7118F9290
5B0B6E27A50CB723C75643356310FF2647D3DCFD907E28AC1E65CE75ABA0281F
DEE2D78C5625C81A9387C3EC282CA2AD7D4D3F7065F2551D33012193D8823260
2A65B37A79EB08F008C13BF20AD92D5EC25BA5B57FFB20996EE78DCDA3F46ECB
46615CFDF0AF07A95A95B6EE1E5CE9D6F7D1D41BBD5AF5F1929C7ECC9B421774
70C146673605B504ECF1DD85870F15B8D27F1B17A2BA5FEB9E6145ED74C5CB4F
9BB5AF7D423175F6170A00CE113E4D8F11CA8F3B78001F7612769AE79A2BF321
3AD487C411A4AECC1428C3FBA8583D50A0F8B76877DEC47949B58F36E5B6C042
59EA99A4627B6B0D4AD6A35775D8991DDDA31D0823FF169F12C4E7C2F6442FA1
2B3AC7720E9EDFF7BB43FCC6C411ADA9719C6E5105B8F2D62BB2239D25A442FA
2D70D21471E7AC6D9C619A00ED42FFE02299F1D1D9D9AC7B4C8396A165E7F2A6
79662534A148FDD6586255B68651C8682527C2DF288357074EEA1C166AE9C07F
65313451D3F2A34735A865884C5C955C6AB93ECA3FD41420AD1B2678C03C9773
7E2314347448B57226D871CAF6D6D32E0B39561963D88FD88010F82AFB8E985C
64354DA9DEADA992649BC7A1066BA4179FE13087E13EAF9155FBCEAEEEBC4FEE
488E0FF2F8BA7FA3957BEA6E322D00E922C89852B23C80F0AEB2AB25160FDDB0
DBFA7D3EA78AB706C75E857347D392165FD4F5B82BA4CB39BC7C80FE0DDD5BF6
FCD25ECF53880B546A6DF3525FF71A42669AD22E4DAEBD0EAB76FB053C949E4F
B3A417348EAFDFFC06F3D28DBE51D84B18C8EBEC5E364DE877DF6CF0ECA79189
8324583C34D2A17221EB46D33E2EB5B452F4A7C6B11BD73F1FCD8B838B09C75C
1AE3CFEBA470CD045475C5382AB17AC69D5D6736FD2155FF5C23568EF3A6FC03
91CE9F62DA2D7F2AA53752B6022312A5A7EBB87898C3F3BE8AF51ECDBF25014C
8A813CF8F2FDF2EEB62D524CA1EB570DD59098C5EA1C438D1320905DB413B6FC
560EADB914422E316A483654B48492E0CCA71D2F9FABE7E0D0625A7BA559885F
0C1FFA4533927661581DEA599B25AC5D647F7D9D90CFAFDB2DD927BFD0AAAF0B
B0BED926522D118E1C5EC23C9949CE216DDDA5F132EA434E169883957A83DAEC
F181EB6367172E7F8D7C902351F64DF124707C7B0F8BA6F3077FB9DAC8A1953A
656E1BEF1AEDAE4684673689701F6F28B442B0F69DDFEB03929BC1D280FC85A7
4B96EF403728B84844DC5BCCF743F65CAADA913B998E155E05B2F3825175711C
F100EAC748663E2332803C26F4E9F05C683CD94E191178B5395F0BE24FC22F6E
3D3ABB8E08A2C2AD16CC2665C1487DDCB0F7680A8A7198A1EC2FE223C01655D6
1C02EB0B28D040858E3D92DD23072869E5D447CB2F3258072FD22C504893D91E
9494F3EF643E371E612605F6D342A5DA422FA504C0E24F17925CACA3065870FB
9712A2D197A0D99C3C7E93F7DEEFA335B51D266DBDBA76FC7443948CD3153CE4
E60BCAC183C7B56A1D3AB0FC58B508A1207646A617797A3BE287741AE7D86BDD
9D32DA2D53F6B42F8626B295F1855774B10CDC192ED7CB3C4FBFA50461A640D4
4C5EAE831D167D15CA8058C767FCCC8940249914B19073683D5EAA1FF93F8CF2
00C32BE7A764A607B239A5AC8E2C200CA26740CF3BC83807827D79BC91C0BB43
CA7E8892DE9224030986F8C984F54B45C290B193D9746645B574586DFED2AEEC
49E83EAC17F8AD4F104F5462645C98A2B8967BBCE9EA9D2F907594A23C5C6077
4F0076ADB625DC0EE579C9B37C2B3D5DB886E10C54F24C2A2547ED9CEDFBE16B
8BDC8630F9AD38358F912F3C8B0EF46C729F66BCF5410B73403461108FBBD297
64EF554132BA38B9ABCC149C00C88F553FCF3E13B73DED52D5631F95B8632DF3
5F7B190E9ED7ECFDCCF1FBEE995EB7A6CD1A5A2DC264DC59C044312924D3BC5B
ED76B3C4DE35038CDCDB1705D8BD1016908567FD5FBF4964CDC7911425F4DE74
050167352CBD363C27793C3247ACD9E1B2E4021199ECA7C936E5EE0C5E762BE2
73812E6CBB7FC72DD368C93FAC75147014C02247E18CBB0A8F612892636DF74A
F7FD16DE8B8A7566C198315542D90BFB5E145676673BB91EBD52689C1A9627A8
C15351CC8CC2C2E13F64B49EE3CA23D0D0346A23756D57920BF2E21D8F25E8B1
204E199F7DE5DC89EE0B58FB65E50F040E94A5C9DCD7882DCCC03549DFAE286C
3707EB75D31FFAE9F4541DCAF37F3253CC3DFCA56E6F333F3737DAA1D52E9F55
3402A1329711BA5A2279344A8ED66D58813038A31EF171FEB933406ABF42B584
32A505EE4E6EB54B64BFE30F9A03A15F7C492C77143D05980A5AB2F94A80C7C1
20F423AF2BBE565B977FDE2846693C499963C52ECDA1FF4B049BCB805BA2585D
112426E224FDDDE3CE849F4E190C7C5DF9428B6B431365BF9AC756CC4A909316
339901FDFE5D77E3F9D665008041C364E0AFF84F2F7D2BAC7F0DC5051023BD77
AFB600289F3BF4718C6A775FD0BACB285003EF5A3297F5ED0C27EC4E72551C9A
F64DC0EA211A891FCE2085992134FA09069A492E78D662B34E1FCD662F619910
045BEC8C79E81408D923C16986A81E32EE2BEBA0DF495308B06F09E54897A8BA
9C86FFBA329198C221595E68092EA6681944E56043C667A4D9EF6E32B2D8ED10
478E4D2E42B1C6D751C9E9B2204BDFA6D2499F1004343ED95ED76E4DDEF7DB81
7CDBD2C173BDB1D360646E0BC9C8F4C7E2C05F310744DAFDAC09E5DB2E8D51C1
046786FB9CD9B866F09AF7EF9F03A0982A4C35C25A2C050CF29C42770B173749
9429D3D7C236FCEFBE1032383F12783FACBC9B9AE0D56EED2CF72C2D442AE32A
4519A33A37A4D302B63E4E2AB205B6E970497E172A5CB0AB8341FD073E7EEC97
54CAA6D0BA59844DEEA25DE1F35422590A31913C661334CD4E48127400FC806F
1E6CA850E395522E3B4EB128973F0D80B9F69793D477287D34A8C21F0E26064F
55C02FBFCCEEEE773CE6A4C1D77671FB23971481416CDBE48C20D5891623DABE
BAD5BDC98F14D2C3116136E3F44CDDEE138B2A2A0DE5F48DDC73243DBB98FEE1
9BE6021B4647DE75EF970AC5D1D1C6F85B61B9F851BBD1699FABE587EB6AB776
CC29EC283B971DACEC3F01B34FB974B9C439A7782F7DABA19825658A19564A11
8B2DF63552BD884C5B742F73198F1B8BDDB9B0B89DD7366178C10BC2C727C4C2
675D1E75AE96C223C7DE03C2A9425A5C34F1143BBEBB4D85EE1FE65DD4A1FF6A
2CF2DBE5E3E1A624A709E9E9E6AF735A43172FDA05DE321895D2F37A677C3936
50DBFB5CE9E76904060132087A3EB41D8744EA7F36ABE1F5E23E5C422F22F1A6
564B8203BCA1FC29D4F2A655DCDCCAE689C98E45F7C6D7311FDF11A53CD4F87E
D1D3AB5E6273C20391C1A4A90DF39BEA4278077BAC69C5D9DFBDF6C2923B1A29
505189BECDDA55EA2FEFF9B3BE29B7688339A7BCC04265DCB5043086672AD4C3
DCE274C3AF2D9E79751BE1D17D68BB384E085ACD14281BAB38E9FE15DDCA13DD
E9A272007222677F4A0E0F48AA9BFDDA4C563F249B97827E0A048A32CF82ADD4
AB7DDEC5489DA812003E92D8DD7B86B87DA6C870D9583BD98B3C3205DF3B9423
F1C1B7CF487747D2EF800E20A202CF350018B0FA23D1120956125FC7922E8C69
33EEF20C2C2CF196F66B06DB9FB1B28424B0964CCC02A5278B01DA550E13784C
E5B8AA0EB05A00A8F6D39E1584FAA11945DDA15F3931130A449AC01FF6832BE2
8663668DE5EA8D909D176DA4096AAE59C83366417DFFD4B551F2CEA305AF7811
2D26AD7F0815A07FF72A216F5FF9DE5ABD3AB021EE52D7EB0CCB92C3549E4D6E
FF2D9ACFBDB699BD9C6A69C6FF28D82DEF879FA06F173005A1A87284113BC9F5
F70BEE5D878DF9A1654537DE8F706386E59B85E79BA2F246D8E689AE425EB971
58030B53C150316A5EF10CF937D6112A81CADFD7F588FB9790762573D64C0392
26AF1C9EF59B981C5059F31A33801F6124ADDB2CF50F8C4EA118CF5B89ABF4B0
0F188CB2F72305233641C4108732923C27DC7946FFE415222B5D7E47B2AD121C
0A2D9CBC9B3979E92FAFEAF378F7E9CFC1EBC070D56299B00EF2EE09C2EBE4BD
7965718B8ECD5B484F257FCB39F1F01D8FF4EA8DEAA7663B932286C8000E86C4
BB5C923AE9CED34E2F913B680CCD7316E7FE4AC474F28F3C3CAF6BDB1A65880A
A4D10BCB3D95421044AA76E6BBFAC750AB9A463184B9B688AD1F87F3F825A56D
D7CC4B0C2712B18F0EF5B5E727B3E84C5F9477F6186F5C0840CE7724517C667D
53541ECF46D0BE65A105778ADEB230AC199505A7D459145997E9C06F0D1A1822
B7F2B3F1C2855E3044186375B8D830590B818D5EBF134AFE5BB83DA56E077208
8B10A1C6C8BD0FBE8B36962946B5CF1461960F5847DEE8D3CA3FBDD9E66BD202
5ECC1545F34EC2399ABAC22338DF59FC774DEF8C85871D6693662C2BECE19613
35A5F90D1D3C4E5B0FC2954CC725B02C0569F290F95D536EEA53F358F2CEC54C
A2A14FB4FBBB85E38349ED574A50C98D5D26B09D25C4D3FE42763D0C0ED834F8
4E4A624071EB0DE807D718D7D057A9BA4ED84EF03334EC8A26A34B47EDE8D193
4FC9A02849173C7CADDC2C515A7060509B8961F8AEACEB02A9FA494A32615875
765907C5A3C43E47B9864A50BB763A3870B39FAAAA142B9DD71896FC52AA3F27
E37007A765452A4B1184437A7B3C3437576889E8A8520CF3FF28B979A3F76F46
7A89D8890D22B673A42D268F03EB0BE2C5A6D358ECF854A696CC469E23C6F93D
CB344F2B72CFC59D3D82403E62602ADB20F3DEA7392D0CB4620AFC50EAA4CE34
738C6E716A09CEBDDADFD5DCCA11925F789E161FBE44E749AA22C4949E9D13D9
33E6E0DB910F75F82526AC9A98C2397368108D9020C1D1787C6AFFB09B264890
62C8D2D0412D8C856DE8CCE8885DADCE23E485A90B8DDA3BC4F35B5E73B55628
7D16A594388547D73CB3E2CDC8C48E56D27E700B9C2EB5C8BDF880608CA8C26D
D669BCA4DCA1D14C890E5DC9B40E179D8D69427D598DE8A4C51F1ED040AC9483
9C41ABA69D06A399060676C97FECDA0BC6383C0DB8EB9E8C071B1E5626ADA68F
9261292A06CD519AEF92638C9B400B13D442D118715ADA4F8A46C1AD1D16DAA3
FE543C00B84CE5A6296B25E24CBAD71535D16622C8DB18A53363894C372BF084
A71667C1DAAEA530E983CFC90D662BC826FC597328BFA25295222F61E1CD9B76
D7E0ACFABDB4EE48F0663B287F753B5585449B41F2E31995FD1A7F4DBD23E01C
B87C49A0C6A4F045B612487D42DE946876DBB72B6953328834E26C3BE7A1ED75
BE64E57B7CFC82519BCD46E15B8F44689DE3F6F66EB143E8EB9F0DEE34A8C63B
870790D89657B4CA37D4C246DCBA8132049E95EF2D2D813CECFD5F2721E326D9
EB2EBA3E0FC0CFE696630587379392956AF958267A5E8296A366E35C99631F99
E98659A12E6F819FCEB8F7B8AAEA29FC8573141F02597EF0F1C971E424F95934
F6B272D718E94F07960EA082F905A69297750E83FE4166968D4A4F8391CACF24
007C9A152C89D37A1F4F05090C7189E5CA567C1D60CC084F0DB65A2676E893D0
A505BEA6C8E91A74E5468ADA882D6204DA2FFECD94F2CD1380A8130AAE4A5B37
293782F14665A31A781D52E30782B632E2CBA464C0BB9679F9754B7713B562C5
3CAEE887B9583F7DAB6A27918BDA6757CBCB8F4F9D0DB867DCB9DC9451A5724C
8FE8C957714376DD293456D09D66740DCBE7AE046B6210CB3C9590B99549B7C8
DDBA85FDEA046C047613485A1649B2CFBA9828DBE077B158917F46705A95987B
DE83784BC6A2E8140A85690DCF4EF80930916545C50CBB29133D955B75726414
B41C6C863EF9A94C1F0F2C8DC01F11F6853A8953BAEF68A83099F286FF204590
8B07424B467B86C115072831F9E7429F2708DD4023258507F7217B0224A56AEC
847E57EC8AFC8DA556CD507106480159DB7FFF99878D7121BF5A77AA8F3B9119
DF4B04C7047D695302BC677B9CFEC54CCD135C9F859958A92FF0CE41D50B9C78
FF3A45271FE7577595851B3216450749612C35E5194AC501CA9A1B909A52F6BC
09F9715601F1975A315C7181C56D7FF8C4B1CF6B22D71968F7BDF9FB621D0080
636B40968554DB31B7339A434AD8932EA34D281E1C6583D474AB8ACBE2A75EC6
43BE8DB4ADEEE20DC70E336C36FE34161A418C983B6975B5F9727ABB933DFDC8
5B1AA2BE635C67F29D0B1B58265CEAFCE314B9C49B413F7B096F739E64EAA2BB
B3B179CCD63E965FD57B20B36E6E327ABB61B84446D54FD352884D1E68F82D82
71E23394A804D00C256A3285EEED803C9A71C3AE497B69FAE7B747C01342B016
705016B48771EF7F2EC5E0D26F55F3E82A93E03E0E8ADF9D654B5C72A0257688
46F5F9782FF65402E3DE3E3D10B3C01F0A1BC600A178828E25D2C77F6593842A
13E5D07AC6B98DC39BA3F72F2F7CABB3ADF303F1C808F01FDB5C563045297667
BF548E2BA7663685403D9817678B4FD9205315807EC2046E27DD184A06224CD1
B80DEA590B48DF65CB6C12FF77F6634863AF956B7CA7B75ACCCE5F05E005E7F1
5A88C6D704F7AC4664FC3D81F4278E0223819CF77D1A0C04653C2D93BE5024FC
5E233849A18148020792A58E7AE2E6230156E17369CA466F35A08EFC9BD2150F
91D5AEF4BABFF7105E8E9F4E9529926C1AC10E14C5065C20B5B6582433A5B42B
6FEF7271054F33291D3F39DC071FB780E241993AF86C4C475EA6AF75201F4CA8
3D43C8963CBB6BDB439FA20414191F3F404EF150F56A3A52299DBDE204B4E5C3
5D4E9C45BB2B03888C2DAC71456701127FE068D295717FB95EED4D5C27091EC6
9E71722BC9933EC2921AA31DB8ABCAFA8A5E7E93BFB424771C2A8B213C9F809B
9CBD50371D344C92AB16730DEFD901E25868B9BAE574773106AA0690B55ADBCA
174C6A5ACF49E734E2BA4E584201A310A338A100950CE99BFF0619DE90A1C735
B5566C56AE016E7DDA80BD582B7E4C7478C6A5CC1882FEF0159F1ADE24DD98F1
1B2ED610B2C444ACDE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
30F40A9C74C8E7773BE601C0E245E7FC10C029398B71B3A91C685AE00CF42D33
8431A9C71520F67EC995576BD17BCFCD8B09F507534E1AA39C4FFA6E7D55E358
FC91453C1D85F9D663C222B0F9A2800D95BB8840D4BD9033A87C49DEBE11B0D7
103C268A2E26A4AD63BD93B79F9CD0FAFA24552111EDA7A26C0B8D1EEE6D6D56
5D60AAFC9B4740243F3167A63ACFCE6BEE762CE736023CD2CFB5AAEA510D4C54
BBAD1D5C15FBF3573A7D278C93E48F11A52E9BC4C8259A78B2015992A5811529
1A0F623642EF02222E97FDDAF610A075BFC98E347FBD578272E472B04E303DED
668360ABD131D72A0C137FF815F3122F716B0BAFF08996D512C982CBCD229042
8719723AF8704195D57C06332C0CB2B4A1623A51A7373DF21FEF63F22D2264D6
2560BA7FB17527387C4FBE3AE150CC8C0037161AA10B706FC3106FF634049769
09F1ED7A5FD87A79FEE78DE837BE077AD361C8FD17247C4EAF97ACA8A23330E0
9BAAFEC5AAB152EA2C19821E46C9173B71BDD30EBE07DACFE317FBDB7276598B
D8238EE389F62B5BAF9C1D3306EDB68B5B4046C32721FE2FCEDC71C77E45644D
E302DBAB5F674AD0275D41207AB0C1DC339083456A5BA3E7A69FD131C4988642
CE2E075306E5E3DC1720C1DCE26BA71C3CCC3AA57DCB3ED11141DFBD16ECCF81
FCB9A647D67B418B620E4E063749755A4BBEA5D98A81A054E7B64B15973CA761
7239165898FEF4D95D7E815F6D6EA57D5F35896720B896C4635ED6B9094A81BF
6A4CE2C636F7BCB6A68D2EE7622F315E646B265BB4907B879B773F057C94C7B8
6193F84CBABD28D399BE6DF38995DA31CF6AADB5D22BDC3C2C6E939EE4B29FF7
5F03C39A25CA9E1BE924D9234E3FD84D5516056D45E74EC0D51CE338EBACE840
E6693D6E590A8D22EFFF1548D28AF649545D1A3B01633D68F4CE84A30133091E
8E8F1204BAD9F340DE7634A30535D33D8C2934DB503BD72E38C8DBDA37BE191F
0465E284A366F61345F028423BB49EEBB54FE78C4D40BAF13A2F9B4E89B664AE
C52466C39EE9D99439195F31C61F67188FAF575034BD5C876B49EC9529A1468E
60FEE964CC54CD62B6C7E39B51F2AF50BAA2C83948C41467E30FC26A3DE1C702
D23300602DA42620E43A3575BB3E1D69E788C01055C0E892AEC83DAAE8AB9962
70A4D5C856424E0B3A1A084EBFCB80D6223D9FF63C89265A47FC181AA0CB948A
77CA248D390009D86E7038648AFE24764CE9F7157C92BC9810C840B03D52FA12
3CA90B6ECD5A57100E68A77A2F9FABEECEA8D8AF321BAFB43AC294816418864A
AD14C1B27F9884F03D5110C10A277B8720AC82DEC629FC10009E12E983714683
1C649229A62DCAAA3470633BCE0FD0F70DA655B1D8A06DFD04066677D1700618
84897BC054918DE0BBF17A174F322EAE266C0324724BF56712EE9DB57F5C0998
4D0EFCC4D4702ABB9AFF27459F4FC47E2111F4B00D052048FC3065FEBF99FE5A
5F1AC8E6EC618CD8405C5AE3FCFB310700B38DB8491DFB06186C33844FDF1254
F0D685897A8187069A17FD09C0D9181D67261B42BF40ABCDAE032CCFB603F39A
7D7DB273C31391124366EA235B6E6A4980B473A0951F4B874B160F33F38CE11C
79FFA738AB6FFBDE25B631EA95A2160B6DC1899C37B20F9CA6B42FC1BB989365
F2CAF20C6A764CDE507E9CE1A05733228E0B5F596E8654FA2BFD09170D919C65
B70C4392F5B2A5B5A6641D88CDC2CCD904DE623269D75676BBAFDA4BBD27E02E
874C939F5784A269393F5B554F2DA3FFD0E2E51919E19D1F7540DDBEC8D42206
23D8DF642C386F396F9E3B1658998B2694671E32776F3C65AFC0A1170A0D108C
D6CADE27FEC421C6AAAD6061485F740052F4D8A12C24128EB79E08DDF9DEF7A9
716D289DECDBC32DD7FA0176F0AD94008BB55B242FEC826F17F4B32EBCC5B6F4
3FE182C53BACB825B5E13DDCACDDD8A0701F2C2D06A4B91222679580974B4C08
EAA4BE63C9880C4835628C3FA9D50721FDBC6580AD9801A23830F65B19974C2E
9D8C181D5B6E9A1E365D98BAC1C0B2F7820E7B5DD555742225B6DB5452766EC3
3C830A964461244075D8D00E130E481216A0A7400D0CF2C1E806E92D8DC2A987
E281453F7BBD1DE95543DDC61BD239CA9983818E94BE27C11F155D0A7A4B095B
F22F7723F7332B45963F310D2072B3094A6272D2FBAD5CB7344D786B0FC87C9D
D192C1260E18D2D948875C102A9634B6A94B1959F2C10D4264FE9155416AE042
2C571FA4A442FC749C15DCF57EB7039D5020E98C37AB944F2F412564CF13A2B9
AFA77B9044E24C1F1E86C3967D9825D5947970660F026A03CA91A797F7FAC727
0D8E07B9DF2630052998408DA8FB9807DA0D027A69B9CFC36FDB53588BB97038
842CD9665CC02C17F94569D83F2D2855885DDD6B46CB9DC803F1F8F99F38CB8C
2E91BB74176F70018551832676449DD5E0D338FFD2CC6F659AEB2C81B5921B03
D49688FEC7721AE49CA93C9D9ACCF29E39BCD9E5F32B5272A3CB2BCC4CC9FDEC
DDC14613C7F79AF8F888FCEE3F397DAE725F18B70E3872857BC74AB45FE90011
39F4CB6321824A91F1AF4CAE35E2FD1D3F39E855A55F74B946DD13A6FB937D54
4E9BA56D8A2BF7A94B46AD3371A53A65E3F257EE94C4A82F3642A75017C22BC6
D46C3F64655F83E0A0F428127706EA941E33D5207631849D0B1ECC6D4564902C
42225D8142C1AA664C985D71D86F61A721D763ED18925C66C59602E59C8A3C6F
BE055F5335A810565D6CC5C1389AD74458D48416E72EA60596DE22B3AD16CEB8
7839C95D611C7097FDD47CB6D6B194747D85D4C48328A521A56764E76AB92A93
CEC557E4437CDBF841C1ACEF4228A3D3FEE66EB17B352FE3311E4BE8C2E18F41
81A7F0410E2230EE5D15BA66CC354CA24B1B9DB8F860827B79D0771075C67780
84ECC6DE45C69C49ECCE14D705FEF853949EC592B26E02A7E1B62EBDC5AF0F13
16417E7092F563EFBA3E842FF33EC79C387C50BCC63758E1F69FBFB2F229BFD8
8C304840ABB75134BBEBD591D4D916F5468C4B8A0620EF082C53755EEDF130E4
1D7D4F6A8C5A912DF6D11F97F4C5D435F5A3552FD4344DE3E47818F4A7CE875F
D490B820B1403A0BBFF97EB64349D417DD876F4786530A4A934264ABCD2FDA54
160C8E7EB3AE66927E9068206E60569C936FDFDB1C8CCAA5EAD4498011F50E5F
C55605641AE1321264891F289DA5C0EF49919024434AE94A8193633EDF1E5E8A
1E66437278D2B0EA12168E4A57290CC03493D2D723D1F1C390545DD3DCF43A2A
D82D25691D78A9E6F21675ADF2A0513C3C9922DE35650E54223A52F972628F34
94B3143F9764735FD6271A0878C0F0788015B8B060D485CD17B65411252478AD
98EA03A2934939F4971600472D73EF8AC1FE7D288584E0D812C9ED26DC682C73
D4EB07014A60EA36691879AB403D6D1B178399C5339963B9F9A7820A5455705C
414C82E19F94CD8579D7FE922475366F877D535E8F64F293D81F6A71B94AB4A9
CD8DFFCC8E694665A19FC87163C39C96C56413E3BB4E7A8E01BD10EFEBD2934B
E943C4B88CB15ACC2E8D72D990FD9692D0380D4C1160B46407D4A65AA0377993
B8F2AEEDE13232A08A024B6BCAE499BF47F7FEB4CFEB70714C29E52AE7545073
4E87713C6E3C9E9A9642EF6098A399808944BA052E326E51F7121DCEEB4DB160
1C80C2240F20212523F526CC0B5E1758236AA05124A0BFA4CF1961FEB1712D11
7BE231A0C3DA30DF6C9DAA4AE07882A36968B6DA4DAF5A971BF369D6582B3AB4
F24A4E7282BE3582FFB01070DEA59F351E04F8337FC7A1F347ED318FA41A9469
DAAFB3501531520FD08CCBF0E6BD74CCA2DC29FA2C32BAE1E02A40365971C111
B881B163336C679AF868BCD1DE4D5C049A9DA43A8FB10612316004930791F7DF
70651A51D8C441E53E42018EC530A047E742214A71689AD566C13B7DAC50CF47
43DC0E44978117B52460DC47B94D47E6348FDAFC7355F700B3F765857273DE47
68175E6DCFDBE340BC74413C4BDA9F793CEED6359FCB9732365FA9D90B265FDD
3BB2A56505D38CC47864677C75A54A07721521879B2534D93EF108E7A55584FE
9AC85849753CB385BA63D364D77775F7463BF3559CC89272C911AAD24908F8F0
C238C4C1E342CF3F6585016787335E5437F8D0C783CA2770E002C0DC957DD290
FE651F68971428074534BB634FE13512C3159F6A5BF6AD418C47901FDBA34EF7
34089477DE9AFAE2F492DE65F54952436914D42F965CE7B81C0B6571270928DC
D445208979A96D37D6F140738BA646E6E61CA1018F0521C67752CB1CC93CBC57
11EDC4538F8F366155800E6D7A3E30F2E39F929A6D38793D587B0DA3C9558EDA
D4C86B4172C400A86D93B78C929405489A8B56F0B1C51996F676564A11240A69
F3D39321220EB20AF960DD0F30D0C0D12C31CF5541E5E5B2981AA43EA6CD522E
7A213A3B323D63319490EAE097279EB57C8680A2C702C8E2DA7AB479573D3B85
318237EE3262C0758ECDB7D05E1ECF82DC4222A34961E6308D54A03031B7F6F8
CE0EAE1E651B8AB99EE580C66FDE4A23D993F53563EB1538F6FC13CF7BFBAFAC
2CDD16C43A007FE258EA0B55B94CB5CECB34D4D39866B1AB25D0813C2E0080E8
E9E8FD76333C22FE5B04538E863FDD38D7714D10E8A15BC05A7E99D9D3B25909
E596D794E00748732C9359411F258564A4B80B6014607385DF9EDE3A9011F10A
6234D85F23CAB3118AD09ACDB36BD293F711FB1935A55743752F103F24577802
F5C6C23C0F965EFA66ADEF611453EC6541582178496DA6B33A3CF36EA7051885
D3A4BD28F4F6665982A5527BCA5AB722D6F14C7340C18D23990BBDF0F2842D0C
0E18F1BB8F5F040B2F368CFDAD5D4F8644A2648F76994AE83FBD707FE28231F3
530E5A1FB3761FE285F756629B20689F988119580BE19D457FC59209539EF714
846B1089DF47725982914286F0F4D5AAAF4438B3ED2E7AAFD66F62A58CD84C9F
687824EA3515366715D8FFC58B6A93D0980124F8BB2E2FBFCFF4E5952A3B971C
B6F686AE86A5B29542DB532C1296C2E77096008DE834EF7ECFCC45DA60131774
4756CB9DAF2F4E38FC9CA1D39BC627439230B58AC0E4ACFBB7A4BC45EE8D1E58
4EDCFE4737676CD59ECBEED6AF65ACD08BF4CA29FEF079D3EC13750DA01BD6B3
1AA373DDDC1995331961665D911676CC32E6CA2DBE11817FD66A90521700C0AC
2BC9A6E9ACBFBDF34023E253220ACE1CF04756AEBAE4417E5AB4FC0A33ABDCB4
2144AA70A56E0D1744A146466C1FCFACD0EEA7923350C23B7FBBED4F6EA647FE
E912309060F71A39B96F060220E2373DE21EF653AD842B3DC678777ECDDEE5FB
99BE62343FA147542338369F725560EB9DB6E7654C591AD8708C453273975D4D
2543B2E254F6D67D127B48135A5F446BFE3A073D7E936A5336A0EC036D34240D
F36286F3B7B54D1DFCABBD070F40BF1EE0FF83269681F819FF2B52BD714F996E
03C2C80B7446C4B97F505258F849C14E60616E1A83A913711AA930DA04ECE655
70F5590B3341F4B424DF33BE54235C5BA4E2BC4026AB0C0CD8643CBFBA025B43
53C2F0B3FBF3D203A38C60CB4D54FD427DF3311099D40C3910C06FFEABCD0142
B8A04F5F8B2BB6B6E9B5C4C1675909EE22A2308C5B987C35A696EAA29306B20F
00035E574EA5C3595101BD73CCFAE8741B390EF35D2D129DBC677588912D89D6
7D0DC6CA5DA93FDC72ACDA954BEF11720C0990E42ECD10A1B32E70A97D036EB3
3CE8D779A40DE7E7F2FDC71DCA932C371A0F59741C6CDBE6689C5286658F13C2
30CA8191E6C42B0395BA2445ECCFA0D560EBE9DA4BF123D5C44B7EF8ADB0E2C1
140DB23EB79D7FAF55767D5CA1FF3D4809B5D0C05371D75EF5C9D49535D6F4C2
E4E215DD0CB0D8843E97991FDF0628FDECD45CE820F712FBAA6028E8A2723C21
A86ADE099A93C4EFB83F484B69F94BE8A31991B3E2D9A15F6A1FE4D97EC833E6
59556A7B027EE86E680CB0DB57701427AD7AD9D90CB20878BCA4EE9C47F43951
EAF8252278AE204AFABDF53822411B4410DA6601A30C044762514FA1BAEA79ED
3E3A601EE1380BDE3769C068C105FE6F29DB2C71B3518EE50A54275E8B6DC6F8
9E550E096AC1B2549283001D21DB29AE6AC929B07DF6FD635DDCBFCC5457844C
D63C3F7F11F836E2EACF949571715A8A52B08D05E4AF1D37BC3964C8AF18B0C8
7EE480334E791C52D0F9BAB28AE7A2A8FA62A70BCD003162435499AB78F41ADB
BF1AAD06E09B7ED2425F6B1DAB88A1619DA3E9EF7511B58ADFC28552C22F341D
C9DA5C7CCE6D188ECAFAB02C3F43205F6C15096567D822BC24EB514D20BBA23A
0D712FBC6A42B4681F2A7116D17F572B75409F6A2AB2FF3A6C6B58B3520C99E9
8DDAFC3EF50849597D424E797621F29065F2E0B85C3EBAE35A9126429D73A5F2
F08D9D44C5FE35C4A755B4E98DA0E24D9FC9675F41726A90937F3660A029A91C
A2B9B8C39C5FEB773E2974C8D7C4F12FE6525F09423AD8D2907CCAA7731AEF9D
5AA3B3301CA991BC2A4E187CC00D2A7F4966489C4CCCAAB6C301747E2C7E4A32
973F270217343236458A43E134BE64817642D6517A591A090CF32CA284BB0B50
BE089BA3A58A4AFB28AE28CCA09F2C1A4B60B1D987B4B47D2E668AED1905AAF1
88FE261D5903538BCF1AD50563F7971D910DA7EC20CB330C678083FFC85481DF
62C90BB1164F0F14E87754F9CEF4F0349F681FFE4A8CBDB26413BB97EFD9D9D8
A2809403736EF22FD757A5F151C2490E02498976A0BC6A22CA4D080443290A04
6B69C9B02B12CCC84328CD961B264D9B5DF9BFE7FE1ADDA39C1DDFD43509E4F2
C6E5D3B752720DBFB7EC6DABAD07A6AD0B1EFCA31C7BA248DD48411F25EE4CFE
C348D0E08282ED66B77C945AD77D5183971A6A9D3BD798A4FBD680FB33216D98
0D4A6F4EE30CD5DD6D88C47DC259F5A8B491D0A259C04B01BC0D3F1C186560D8
9DBE6E0366C067B8238105D6267799BDF16CFB6FDA62C0D579F3D6DA91434AEE
5102A6115508D2C980E7CDEBBB4534D3E07C21475C48FE990803F5318C8208A0
AB29D6FC352901D895F4F866714F6F6F5CD5B92353DE514705957F77A836545E
063938B1010B6A43BC6597B3C94F7A8003CC3311C888E007BD585C0021B4F157
B31C8362BD0F95F1D77CC77295318AEB52D3A120330BCD6F8D05A2F8365B7563
9DF335CA66240961503D8B66FD41B4CDAEC94E12D0F4E88D97C2E7EA990FA8B4
C12CC5C8BB6DEAFEF37AD89EDDA64D4BA5C32137871CCCEE0D3569DF0E25F710
E4719CD79157543D0B2B9C8BADA6ABF0081799F567CCBB06308FA1FD1A0B4D0D
C8FD2654021BF05A67A4817FF20DB739D802040844A5EFDCF1076B33BDC51CBF
33F8F337324D892996D91B27ADD0C5F1E27BA5169F210A8CE7432CFD6B1B8CB6
375100F6796D97161B427E0C0289A1D5C6BC62E5F866B5126BBE75B3C1E28E66
B0DA25D2106B3D53B72AA61C19EFD868E6F7D8B43895B61F70692BEA2726248A
91EB5156BAC8D0D1244B9A4FE253B37DB5DB9D2CF269A7182FEC2BB42EC6B324
3BAA2FA96E34AED4B0BBB090B7FA6E32B58EBE1FAE4BEAB0A216746B14B2DE06
07CE47AEA133BA55973222D5EC3507E4D6EA37259968729594934C2C6244CCBA
57BBDBF7A096E7C172B6BB44A65D701A00B89A9A7F5B86572D89756595391A67
1D8C992F5E9A599ED18FEDAC6F6E6EC6F70087DC0AFA3954FB2DFCFB53EC5226
BE8EAE4048BAA2AA8C195BED843057F2C73EB02B8E6C7B2A2EAEABB258C92D8D
54E9B18292D54331B4C6F75B328835FEE8531572E47212C0ED5B61F23C3C0001
7287A2B0B1241F186ACE5AB307F84D0768831D674A532968685FD4A9145A3E16
5D770FCF4D0CFB7AE6DC95E83F4B450524A83DCA8E86BB452763677B719D0626
7FF27668714EE8A79D18A75DC53DB57F5C4E4E66649E91F502C5D06F98F90E4C
20DD1C21D1A0FD83081666AE4A183BD92A2B910ACB8A065FD57CC6E6369E2549
0B855877CADF5B5D1FCCDBF7A3236910C684E99EDBACA33B54657DFA6EE2CDE0
5D16278AD449007F9264CD86D78F8763EF5E04B7797A03FC3B51C8AB9A3F597D
DADD48EC50DABD6CBC1B3B7D33C5ECCEDA2538783B8010B9791EED438269FB0C
BDAC74F2FBF3DE14CB2750816402C818C8DC5C444A8B8D1C03D1BEF232A55683
1499372A282E14C5CE3B7AB8FFE6ECC3557E0A08B7684D9BB4E13908D2F1C59E
48BF3F51B60329A628C4E6AD37D91F578543DD730DE28D97C5F1E0B351B13AB5
0E41F757300427B8814B160EF8E1A9A16C509A409A208657ED87DB799508EB61
4D45BD649BE7B346DECFF9E2BEC5B5CFC26EF6196C7D726AC8A1585F9EF8F1BD
7BD47516BD403FF99AE7A2BAE69EA158091B82D66D6ABE3849938CECB91109F0
C489BC2B76A1C119581812EA009744735948917318AA5B17EFEAEA369D4ED725
AE8132532FC7C2D519402F60039402E1009C13FF42DA90259583A091AEDCF19D
BF660286E0FDCDE2DE2BCE393CDFECF8F83A969DC82265441F78C55D7DB55C8E
B7094DA04E85066576ACE1FE45B1AD844D0FB0148E957B16BA7A023F7B89163E
833F43FC60B0047F2456F061A694BD80E21942C8920833C2348B4C03BCD776A9
070F2252FF8BC84F9472361E543DEA88BD72D47F83C70303E364F6EB64DEBD37
C625BFAE559C7A24DDB0AD7A48D1AAFB7623B0D078C2BE4A18EF77E730FB05E9
8A22BC17D8AB84F9B5F6A7ECB93FE17E1219BCEC742735C5A0FF9765FD983594
D0B9A157D429B555EADCCA87F6CCE865CEC30B5D1BBA02CDD82E64B687AC1442
BDA00EF9E78F49580F0BF76EDA0D1DFD4BF3DED8B090FEC1724D3A50C0898C3F
3B41B5E9E1A6B01A5D70A43B8A2569C9A18155350418C51FC01C7C924B0FAC90
5FD46425C831235F50D458660849810407089E2A4AED3C176B9FF7AB6705EA45
0D25F67D486BFE5CEC7D1607E6FF1D523C068AC69D8F8A63C03566A09B061E9F
5A58CB623EC6BE0FD635E192518AB296E3FEE6E4B10A3F03BDEAC1270BAA3108
6020D80999CABBEAFF664BD18763EB41A9955124F452C71A4CB44FF194C9E3A8
6DC76983F556127E0B0F71465EA5200258360D695614C760E452D2DE5C78291A
FBA26A93C4192767CA09C8A987E2814E3DE50394C816E43935572CD03861CB52
012B956AC1C32CAB142760E7E7E732D3EC440AAE9C37202965792C8C9EDB15BC
E82CBFDE823E39DA8F9864FBB37A9841ED4BAC898C56990FA49F13B59063F91B
60BF72CE8D888018397B28AC48D2A2B5089B25F9BB7EDC13F5BE75E9DAD791EC
1DFEB8A3F2562FA0F20C56DE3AEB1D1EA570D42CAF126E4AA3C2CA5294E2666D
B09DB0FB656F753BF450B3A114AA5D28A4881EF2580288F62E34438FDE7B8DEF
3D9CDEE43DD40DB623580C2D5447AF09E5B653AC1CD603881AD0CC2B10FA18FF
EF1B37DB62313A76D23FB81ADBDEC66DD45AE471E414C24682F903B6695E7610
DEBF37290C929CEE48681CF8E4EBFD881C47539BFB4937B313CBE297A68A8685
EAD5601312CE4D36C54E914B3E9F905660A0DE8519948D005CD6E5303B60E176
6238E540642ED52B5EC7812609485AD2AC346AC27BC18C1FF17C0EE789B88E9C
C8D68202DB0E8E9B14E665C1B0677F7F2EB25A59EF4ED59E846FEDCBEF9DF8BF
CBB3078FBB0379E4B0EFA38E1578E80ED521982D98EC28EBE16B39391104B91F
C0C5E789E30558DB80AE135FF42D4545BB3D43C5F128517DC41830EFE470E703
489627FA34CC8FE847EC6D23D68926F8DA2E6FA21EBF69E3A894B087A01883F5
8876034FEFF74CD08F11519DFD7F65C21F106C9EE9669557F71F94A286670299
3C8DC00DE74B85A6965336DFCE1D854C66B4A7F45065D3E9D48FDFBF862FEBC8
443F1E34D6FAA37F38BFBF87C9E7279505E26159E098B54E418495D43F8AC743
E2F413D9858E0F2390CF78CB50848FE23FE9FA4EBBF2ECD649CA32DC933E4692
5FFA531BFD6CA0EB659738DD52E14748AC87EE9732954B4C5F692527BAA65C48
DA9F9A0DF692EBBB878FD281037DFA985835323EE1D65172F638CB9173664FD9
596F0C5818B1069451914AC56B584605B3BCD70E6665EB9391C3E499840F21EB
7A9370281D57548CDA40772B1C23F6D412F46B0F7D39E8CBCF9C4C99E9C25A8B
5521169F1286A1F3E77B4BDC018A780AD1E6182A0B8368BA157E4B2FEB793786
FA11BA3B999EC2385D0A4363FB02436E17EA5063713AB3D975400C1042E6140C
9B08667577AF79708A099BCDE51E18E2915064F13F7399D71DBEBB83C4E39235
023F7E7ACFD7CB487B9E3645B961DF8BFF9BFCB05352561AD729D7E232D6A00A
6971F1A1DB549B27A9E60A7F5AC41BFB7227B8375F3CCA2995921DD1F61110E8
3B78E208A0F058BA4170CED8B74FE73829D473C87BC82BCCFABD0DC590166BAF
053EF1CFB35F319F7CC6EB9D31CB6F5F6279DD74F5867C2E11EE6A21CEE3BF9B
AC27BDEA848354817195D0F6E4ED0EB872AAA429E3073E1EF1661FE6C0E4AC66
05F170CD833C3F57784FAA89F32B6EC2B6FC96E449E6F3158E42675467F43F0E
0B47B6C684CA31E2F0E2DEB741EA3B4B22381D25972CFE08D8194F87641E07C7
E48ABC8B8868BB23D2152618E24A97A95541FD5503D446685742140547ED77C0
98A8452508DBFC55041B037DD7892DDFF09BE7772C505443732AB541322C453F
FC9D574DB1E1C63A5021D4BEF846C4D6474DDCCEDFA98B0457052D23330EE19D
E34E618101144F2AF95D276D548A97B03155092F9DC40C77C4871AA5EA734C5E
D06304D37D41A3B838C9B63C04726FBE33BD67A14F3DE3B24C44FF8582E7B2F9
643FB3FC8C133BAB11071C69A9EE6D5A1AAF34E15D8C943A79113C03796A236C
E70BAF45767E8BF39A80CE61C0933F2683656F38DC7EC81755B861A2D458EE98
7F9DAF29D7CE304EA23F0E32F2D110A32452F883BC91EF31D2581C60F3A72957
396E446489E3EBD58BBBAAF5D0B66D80B7199E187DD60B8BBD0387E363670A69
2AFBAC4F72154F80DA072CCFB68FA1189187B67AF7432E62463F949610AA7E85
D9609B039CCBAFE4CEC0A78285D850F4F78C97526CE4E0DBBD6094B03805703B
A30A38699E8819703D022B7CB51A3BAF5FEBEE09E340EF2468738ED643862235
65C9944C95467F2E802E184D63FC460ABAB3C0AAA36BC1925A0EDBDF6AB39704
F08A177F993AD8D6F782E1300D54C55E05DE1A14B3C0360870934D5CE097CE32
9D4A8D918F0D77D879049A3458F23E0EA5CE67796E47841EC9438D6060BADC04
042EA7170D9B93E1F159D9AE537BB16610FB0B448909A94E823BC88875C0BB61
C6D34542098C63E4C2EC1C69E75B544C614C808207E0C97EFF2D2F75138B5D37
3A3990B5F7E19B0338C3D9FA8C2EE22B757C84C9A643A842787450E94BB38902
4F11440AD170A816318FA827A856DBD95D6D834F8BAECD3675F2C6A3F323FB2E
9E50C868547BC11DC58D6EAA5DDD73373C38492F29C112244D7EBE08EDD5A9F0
E883724F16D3B1E55670BB7EB4EC8170AEA03472A992C72157E0C57E1BD7EBF8
3C932CC76F1273C5F09BB9654EF71B24665B1002B78FAEE374F85F25FE82F70E
088F81BA02E5383AAC930909428DE45F29EF68D3267308FCBB94AE50AE4AD823
FFD5C9DA4A36BF9A3963D821A069118ED77F0F86CE3D96F79768974974C858C3
5508788748ABC512826AD99F2ECE2E2D066E146156BFDE97550B414FE8AFD3C7
F82191965507AE88A2605DA6E08A23AFBE3735E962828842C3549C4237030F92
B7583051A9BF22B004A80006740AF5B1C35FF905C292769F551A9EE169C83880
DA246CD3D7FC396E4A1B9A3BC0EE567007CAE9DFE3DB8D348394224DBC074FCD
5947FE80E02869982194C4F31722C7FC5EB5BA734FDD84F64C749F6730D73001
E332AC269400227C027F1EF83A40789BB9D4106FE974F8608D36F0F9BB8BD971
7064CDA85B7ED572F4B0F49001D43E666324C41FFBDFD4A3E6098376E7F6C6B0
747F11E93AF984264D04C7066B77FD9E5B8BB3A848387C807DC56393AB8CA622
6347ECF2C307D51BBEED6ACD46617CC97362C72218292B99AD69D8660035B6D4
1F33E796CBE45AD3A5F46877B4358C2F3C349D755760545EEC39FBBF2D86D9A3
29B69EF8F3141498BB4E01BC6CB6B15D9119551961F27A3BED321DD2A75E703C
0C168075DF8EA4988FFB457619D15B96D278B71D53791E9E574CC11C7AD27F9E
1E0A62FA0739AE13E747AF6890F21AE2CD7EDE034DF5DC60F98F95EC8C8BC487
468FEDD1263341F6B7AFDA0B053BAFF6E8456547B318309F6A871A0D353176F5
F986A66DC299114D1CE0B9B7B6631B6A84ACAA499D659BAADBD46746FE3FFB29
0D167C944D5B46C9C65305564F2329C4E7721CA7238399DBD762096E76831C77
4B4E209F62B926F613C6AAFB75C4387161F5AE6A5CED5395F4D3E405B9378BCE
EA27352AFFA24830C89F4765C60F7E10BA6F7E5B47BCF56223D85FF73D3618F4
1144DBDCD732ED44E5FD375DAFDD524BCB9502BD92E0050F9C39700411E0F603
FBE9C2BB0348BE45F838A12BAD9EDAF7A70D7FF969B64220C718BED8EA0ADEAE
9AB0AF552BF8254104624ACB33B0F236E2FC6F4116F1CE9772DB61CE8C001671
59BA33FE1B2380D0E23493FC2081FAAC0D9FFDFFFE64BA880D2FC29F1C66AB98
D32F277BE4278FFBD72DB1B252AD2D13AD03B7B553B2866E7F2F13384B08360C
E3637BD5EB4BD6C329C5ABFC900BB6106C243CD37BADB6DDAD7AE2BC5DFBBD1F
1A71990FD2E71245206C2D1C95AE7838DDC07BFEF876CF00A701BEEE7A71AAE8
3D7D008A44964F7DB0F9DA0F2CB3F1A9124FA7A2C3971211AD4DC2CBF7C5954C
260E0E397EA7DAA33C0A2548E867C9761ACF39E326BA93E7B5411D553BC95B98
9D09D1DC8EFDE7D657B9EC802AD01C3892091427488068D08B1B725246CF24F1
E6206BBFF1F153EF92B1D77B128B9CA68175653EC1E99E57962B4F27061D54CC
ECED66B688EC0F4D25D90D3920C355ABC0D9F4599B77924337100D9140B69B0C
B744D2566ED47DEFC8175A4834565F92DC79BC3696B9070BB039A8528A1D6DE2
A8CA956746D8A907BFACFC6ECFF8F68FE32B85ECA1163B5ADA9E6A0E165CB096
69F3CF6B6160F16BF9CDABE7C1FF2839491284E665D891C537F7C3002227C23F
CBE67C784806E396E58EF4A9EEFFB34ED469EC302B9EC6703520AEAD5046029E
0159CB531C053965E63E3712994435C3D5134223E0F8BBACB5DB8B2036D27442
3D81A2E1AE53EEA865463D6D13BD746B7F1512857A6DA1E942661B9C4E3ADA03
E30E1B30C5CB6952BC0A33D42A243AB48665B1E3745D7CFA502C1DBF68F54922
75FD096A431ABCF040E6BE9CF5AB89877C8F0360C69D51EF2A4A9122C7C92E1E
9D4A4444C5C420F37DBBB33201EDD9AF6124FE152392A4A811159D34AA1D7EAE
25CCE45280399E9E21E584BE4879B3D187C12A7F0114E58EB651A7566CBF1E9E
C92E741D8745B89C4EC6C3BF6405AFE0B9C76BE1CF618CF3DFC0C53D639EC81E
E16B338142D13BD462
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E8D8BB7E0851D7E745E9AFA5513C893594B54712B752BEDB91A0F81CD1C286A
E88D11F0CF22B7661365211242B9D99E3C42B003795A8B6D73ACB990D89DB4F5
2210447DADEE0483F4FD3F4ADB04028A52437F7B271BD8FB7701ABBA6307866E
382E32CB54E924F44D54A73E2769D2F44C54C1D4322CDA0534A96C62BA1BE130
10F29D3287C7269B4F6ED050FF1895E2CCFFB1B3839866A584DB1E41F6948583
6F8205152E62FBA92CA98345D2418C11C4DF6C66066784D365CAC8DA80454FCA
68ABC3B2EEB3E80B9502B195093D6A72E66799CBE55B760FD6F39AE58AA1EF86
21A35EA275DE907FC221D063321B176690F1D778279A4656D65934320DBA8B43
0F5466DB6B72DEBF99622137B4D5E815A3B74C4269683A1ABED2E71C4806248F
0ABBCB448D5163287E3FE70B656CCFDE0647E0AD44FC3C2ED3A8284DFD7F8764
AAE821E8A19934EC59116240ACAC326B8F8388266A38C434C5C4CA80E6659D25
C6E383E794095A1E65182750BB655C5DB188042727B58FA12E9A357EFD5E1807
15E8CE049DA949F983F662CA6DF0CE83E91E03F4ABE9FD7AF87DDD00C0DA0DB0
8876E7106D4EDF705EE4A0E6CEBF6B57F4F5DBE9B8B271F48144956A20CCC656
E9808112680D986262799FB5EF575013F04B7F19F3A40810E44F2A46323682E6
D52674F1837FF65056C47DBB8D15E38647CAE70D31293F5AEAC6B0552C0E138C
7EF186D204C5305222E0B756AEFEFF338725E751DB9799EACE46CEFD9E6DC207
C9ED02FCAE9B81F69A83809FF9675B1F2799C653E6EB5CF918E08AEEF5239780
B18EA5E13C4C8AB7EDFF139E7A3300B16392ABE04286E4DB86D1F4B97C9FA0EA
638336CE749244F8EC11C6FB2DA6F82D045960ACE8197A34D7185FE04D1D9B8C
306768E57DA8A0F767B68FDF97622ED625C849D984283342A1C500C47EBAA724
7F10436C3E95B7150F1FE6596964B9C3E7727BEC803C44F777BBB06E1E0A1DC0
F215F9CEB24F27B6C3DEDDC589C0206F46C72383817D37D654E289A64EC477C1
CB5F6DB4CD4AF87FA5E963A9947DFD2A98E04374AE241DEB0D08142720351C13
5CAD2E58D27C8C673636407105CB8FE781191F3A57D1C8658890A3EA1AD97576
A801F72144E7942F9D87D62BB92AF3E8242C29DEAA386D10F0912F7BDDE6397B
A80DBAB53BC2C04C87670F60FF1A4883EE050EC905F5E1BF4E0AA3C91B1489E6
8271C4AB017DF9CCFDDC6C04818C29FC84B9A8998C2DB55628AE59897EFD8BD8
3221978B0B3F5815D213772E5A61F1296613CF20FEB4AE0BC5156668D7FA1DC2
D8F4529AD46284A91D48D78E2AC8318942E21D24D6AE9EC5853353CE11B06FCF
EE3C6FD10A3FEDE3998901BE3AD8EC69FA76AA8F8121CFA0161A10272DD1D546
FF858E5C581291C5B3ACF8B2676A0F5B3CEE8D61521EE9B21680DEF46AD756C9
1310BD4F2E4A7BD076DB2A4B0BF853F2268FDAB0E4F66D73F7E1115312922AFA
FD512A4A8EDE5CABD5FEAC1D3BC8E36BE7E8978913B5EEC26C98959FA59813D9
17788D05F78D30836592EFD359227CB1DA86070C01724134546000E693D39297
043D5F5B86936989ACBC28937612BBCBBD4CD7CB29BBD19D99093BEED2AEDDD2
BDD1CD983E94B0A9EC1AB28AA258BFD1005E0F3C942A6F7817EE4BCAA27A2410
6785B47CEE98E6BD9CE18029D2F10F4569E711F12B9979B8DC6E5508E48BD131
84B210BEBE4A6B6B8420474CF035201C5F8D26C43D6427F6F497C71E6D06C1A4
EAC05F5C72E05D3F939AAF5134BB0C9EB4A8B5F9945531669CD32524B2BD7E6F
3E96BB821171EBF77325495F819AA5330CECEEB7DEDD8485C8D1346D03BB62C2
CF165A7B1B9A9E5FCE459CCB73DE5D99ED826C10334C386DEF4794427FE0E8F5
633A752B5044874C1C71AE76A79BDAB704A3E49B517F450357F6D8E76549E153
19B21AF25D51A064465A7BB334DFBD479013BF072DFB2DA7C9F41A5A8CD02B2D
7B06ABF3B4DC81EB1718844F401EAE846341CE35951BE44C74509ACD4622056D
148A5215D9A919D961578506432D6C4E36E86A8C6C8956D92474E3DEF8DD147C
823CB88C6AC4B9E3DEC78B7027108232F7CCDD5A56695F878D557AC84CEB3555
978DF7E1A963AA59AF4EA474FC1815FAEAC8AD348ECACFAA503AC3241351069E
9D845C4E81422EDD2EEED1709A79C40D39C55EA92FEEE870D5C58BE3C9E2EC3E
79B02EDFAFFF6F0074B27E346C06913BD07F69E9B012EE56A70F6B381C1CF417
3943E416110B6E8188AEBD751A745B1FDFEDB283ADF333EAB95928D34654F47B
EC1EC4C804D4D019B4487521E16CB9DCA2610AC220DD88E80C5C0D768AAE0DB6
EF6AAE0D9459C9E0B827EABF3442CBC9767FEB49B34EE9F6F8EC820F80029274
4A37C07E153151B45A5A31699361A4B7F2BE6446958F1AD62C019DE5D5276AF6
C3566FDF196EA3C48F1227C29BC073F65436CC6ED8D98F1580863C70DEFFBC5A
D34E98CA23BE90BD9CBB676B03AB23DAD59E4D7790A440FBDBC97DB845BAA4BB
6BA884E0EB7F7AC5E13A71D4757E83A199CC58CFB41C894ABA2395028DEE339F
E9FC9CB270105A7F6077D54F83275F6E83D671EC59855DA6CD2D1210CB43EA66
112CEBA669CE6027EE6FA07131B25A4D3E77DBC90ABE18239AE1A06CF781C153
475611ACDCADB2AB2877BBEA39AF0126B4C215557879A8F4160E07C3A1D22CAF
C9DF671B4478F62106CD0A064072AF930FFE9ED268342CC8CF3886AFACE30573
5EDF996D91956AAE93789C530EB4F8533643C60674AEA3BBDD2DECB9B56A2FF8
E4334BC62F354323534724219227BAAEB38853D3648E015B868C93D353B088DA
44C0EFE3EFCF423A3E808418977F0D7A7279EC1C66F25C2E6CF61DEC6AAE6310
E5317D43AFD20A7DBEC754D3B259F32979F76BD75B25B64DAA19C2120DFAE4DD
8ABA6887CD7A0BC48F457AE3A24FE95A4534D378D7A1CA1CFF1D8AE09ABA9C1E
B4CB9D03883D76D7518A3526EE93B72D6532B1564B971237198FCBD7CE7BDB7A
A421EDBD55094672AA7CE7B49A1A3C176ABB940855450F7C3EB1AE1C1E1596B9
FB4601B08A28424C71933CB0D0A2B3271733D679E97348B9C086A152506949AD
C5B471FC603B61807C41685B96F4F52780FCE75414F5C765A92A47A74C9A9E09
91AC1B5C768C4946108515E56092B8CE4387F7CC0CEF3BE7E1D879F55AE2E6C1
F67E97590946C862FA412CCDEAD17575C1778768055D35365AAE3B33EEE7C046
39D572DB1EA14C790935F4999147F9A861AC14C12701F342BA8661928DD3665E
40D6C4A5B5D8A95EE6F109C447ADC2C2DE4828014B4EC54359526538D9EAF26E
7E4DC089FE6294612777457D8CD7EE2DC2E5EE90EEDF25D7633D848B4E3A4976
87E7D6B8A6C4EC6018BE23F486A62CBDC104235FB0C3DA115BF34E021CC5BE5F
310F5B3EA6C77C048BFEE0C616EB4EF5C7E9B423C150F16DA3CBEC7F7553C788
1DD98CBBADC915A1D88A062BD46438B144E55511C34EBE45AEC00BF41889119C
1BD1DD7821F577ED797745C309BBF4D90AA5626539C2D3BED02F1DA6E5D78F96
8CA8A1CA25FC7B13F8A100EDBA948D9E8F0FD3DFF23136289AC922AFA670F2A5
55016DEFB3C30DA6587D16A77DDB3736A1AFC0A445C69FF15F78C8E8DF3962B7
5C26A3EEAA1572432E355271EF726FD350373BB9CA2E282C1E2F2709E4A12FA9
9697FCA2CE9F1845AC61C82CD476E2CC3CE0F4ED0CA3713E92ED9C68B94675C2
F2AEF4679250E785AB22C7675E51840720B551F70445F0C0320487F19BA1A792
D6DAE247FB1CE253B2B8796BE5177B0974FE8C4F26DE9526762F33555EE693C5
4B2E34BC46D06853932A517CE75572008D612802124415B1AB7FB4477FB3B42A
5EC1BB142DCEDE6BD87D9EEB29E908FF837E46DBA0D30DFF4CA36DA2076F386F
6AA449CF3E9175E5867F76775CB1304AF7AAED61638420397C56E7E648F00172
C3F3BE9AC960E83D7A368A3822B49675A7E884ADEB655517637536156E8C55C7
BBF73DC7B6E16771FEE32BEAC0EDEAFD74BF553CDEE76966F84433BD7E69455B
945829BF6DD5F039A85A1E0F173501B09DD6D337ABA82D8404568F0A9182566D
9C914F0B2D2AFDD687BB1288FFA128BC48624F97257553A7A491DD0855E6F95D
995A8B86788A780808DE37BBD38B3D00183EB535865CB571621BCF43A5E79982
F53F2F3786F50F9A42DC7E4CC58770217BD13457457622913739914C636FC40A
17A78F92935C4AD2B995FB52E8D67C070210C7B179171EB289B60D43F8D3457B
2E35873C87D3B447346A08E6C110B6A31CD86626B4735BEF91686FFE8D912AB9
766AAE205177AC4D49A60706B15652736ADA6AD958257ECAB9274ACC48843DE5
DD38096B2B97C4229AB46C12C6FF55ABAB685F32F5673001E56355C5F3E9112A
F72482B018F270D04255B4260D19CACD56FCD772CACCA9961C5254B42AF6E67A
BFA0AE7D79A8107593EDB1FADA3575E16916F20F06853A448531899BB739AEF4
0484170A6CD86DFD524EE1286FE52A79BD13266E856F61F11D9C74F50772B521
549CE4E0F5A71A0849C091D1FB63661A012E3B6F86339F23C44530947FD51A9C
DCCD1C2AB9AC3E82B0D5F9A6FAFE551A35CADDDBC15720A230A9212001DAAFFD
AFA9034BAF7AEF6BED1A709995D517E08741F3B1C35446E589A970B2CEB48BC0
5A395B5726040D748331D2FF66684728FA08A7A18A65EF827D596E3A54FF99CC
B05ABEB3D5C5A56DF35DBFB3F5AA49CDD18095ED8ABBD402F853C1974D4D1F39
A936EEC7D1570F1D1B88E21473AA11E92BA7519A46394BBB5C090A5C64B050FA
C90646B6BC3DE915FCE916ACC17AFCF5F85345FB57426DEEF4EF301446BBEB0C
0E63B179CEEB83A055B375F115F2E5C6F5AF5C74A6F70AE3CFF93121F0B12588
66A2BA448EB4CC11A5D7AF4F4112A286A7A47FBA7A0BB5EC8F15F18F674C0DF7
DF171BC34BAF681CF85188F5611CF24ED2CF9FC9F818E28990FBBDAB80ED8A8B
16C910221B36689D04D7CC344FC76172C2B6CB48B63D44D0921548EF0DB8671A
C3CB3BD303B93D443D61E04DD6B2433CD33FD3DFFBDADFACBF422D06A6F4A085
15540287FE07E1534263774DE78F1DC6E2E880C65D85C5C0A974C15414EF9F2C
B1DD5383C19E454B102E7EF6F667C48C007F2D6F30ECD5E6FC56DF8B43DDA09A
3E3E1C3584CFF067B13B35271B92F5B86247A2A2F71367AF28C5497C7A0B5073
8603AB5CC934CFAF85E423FC0FEBA76A66009256280A2C0373FC0FA731972939
856A4667E5864A441050728660D5E99F69C185A0BF2CE1123B77DC1A88F8BB09
60875CD74BA69EE73D8985CCBC229E6B845C601248A89AB2AF2BA2B9FCF96034
0CFAE7BE2AF7E38A719B28FB9BB3E2C5991F916A7AFC6457AE5979D8275ECD46
D49ADB29BB205B65488190292B56BE5453D0945992B3ECC3DF98282B13681A81
A22090CF88F5B91C26E33C665A298036AD3EA158020822A5BCEB5B4C28040BF9
5C00AB446A60C72C9EE9EB3E41C7189B2D360D36DCFF2495C89C18A0F81F1F44
0D110E1F906AE58F690D1F325BC202DF9A1219D2BC23DE51472F10E431FA40C0
FCA74243AB09B35167E78C2B38DA2A1C5E77836654A472D702F3DE0868886A92
843DDB1FCB7E79AD6ED4AEC8671E0BCEFC4B20DB39598F78C488FD13E35C84DE
A99BBE54E27EB33267274D93E0BB144AB3F0856EAEE47CAEBDFC182F764686E4
6121BBA651A862AF8E5627EF1C20D2CBD5FA321E58A9F86626901B1810A7F69D
DD858C68B0BF0764846A60CD3178ECD8C75AC5A964137DDE7EBF3C27CE543CA7
E20CCEB37CFAF2BC3DBBE68194905A29D5C16F6EBF8C837D6DE993B172DDB430
2706C176E22F359CB67AE6C72E20267204676222E69128CBC96EE9C2E21FA65A
A7E0602EE9A0BB60C5FED73F0A5B7F9C666417EFA08A3E65753C950C285199C1
55DECA978DA132F3914BC7623765CD5286776E31F97630E7842F54BE2579E432
F15AFA514E45FDEDF341604F93BA05B0E8B036F57BC7631251AC8E51DA2EB605
F505364E877B285D5B3A74CF7C9C34DD0A4D3014D6580AA541D4250066D0AEA9
9769B52BA7E8B445F2DDEF0587A0FA3CF6CB63C0D6FC1C6CD34672F31ABDCAA5
929FB2146FF2F35CBB891AEE59731886B0FD94BF092AC61CDFDAC85640F1C153
F25838EE7860E52E03EE4CA0A6468283D9A61A178E63A2E92733871DA78A1FA2
E40E509D3B1E329FF7F53D31B1AC5F43E556B1C984580BC1E15475C6F6EA0A7C
CB799693FA8853A3A2A86DE43789EEA3FA63DAFDDC057D5E5CC71000435A6C29
0889F3B8D4A1E4A4A2667371AF5C0E5C14E3BC0A2880A2262CF696AEF66C7C17
E3B65B2A0189EEA867C092F588B0F72E4ECD43B02F02365B284F76F27D665EF1
06CB41295DDEC74B190A75156F2D07E0126E93464022854775ECA5CE9CFC9BE0
97632789F76876CAEE5C4A5694DC50FE62EC0519E607DDAD3F37F3C09772ABF3
8D1A3BC972A31AE4D2256A7DBBBAA23CB3FCA1F4635BD7188F7484132A32CB30
FA263991C5DC7B17435994173173191452445803220E4AC46EEA112FABD44597
5BF8502E74659A64D2497DA4FE6FD350C5D777E1525184F5F9E26E77F200F8E2
9D0AB808F3C05CF0B2BC6122A5D5AFEB984F9C86456E1533BE3C9EA7765A919C
60BBC749655EBC1C3EFA6EFAD6AAEEFC47E2BA503272A261F38A9CBDB4F810C3
9F2A2E33FD6A643DF44AEC66F902645BC62069B3D5C6A4C0F965D96424B59D67
D5F4A425556F5AE052693A4A85457F767CBAC597E7151721C8C5AA57B2829333
FA67B713D74015284D7452B2192696886A3313C20C56DBCAA358146C8B1F5A24
E309650E9CBA7CAF730855675C953A48A9508F3D4F29C47FCFB34595CE66178D
702E222D042035ABCD4021FEF09C3D4B048BBCEB330156AEC41352F6B4BCD68E
185A9A3533B76CD7942ADDA8E6640B0C3A74AC70D217ACC374BA9F670A03B65A
B3B9DB16D634C2D936930E7C92E336EFB6FBCA14EAFFDBB9B2789538A6858228
F236F37C93BB38C1E6CE77D91B02AE60B47CFDEA8D021B58DAC946579B6DEA74
0D1867255EF32A9CDC7CF2FB93B7346F68A91B4FE5F6BAA25A3308CF142E16E3
6DB82B5F2289C28421E46F31CBB61438CE272C007993E271E0FE0DAF1C23035B
C74C026B82702C62CB87362818B137FE1E25F1F36EFBAC80379198CDE89D3E85
FAF2EBA5B8B306F8EAD757B84B3A13A743F1500FDF880346F0C6C2B7BE68C349
F9D064233F9AD7738D0151343D5EFC3A759ACD34EF0D08EAAB37CD4D3C54CF87
F26F3CF65089E257ABD345AA0F8E7A686F4DC573D9696FF15A9628074C7CCD29
4857A618C32BF539955FD20005C9678AC55F4AF9BFCB03A66306309E26A28C34
29AD86806088A375414BB5A322CA67157155CD12593535D715C1A007CBA3EB89
5C37C0FAAEF4DFD65C1E00E14B4FCC00824BA7AE3D68E97548695CC08A9C1811
4D239A2056C2DA2F5609D97E3A9D5B902506572CEDFFED99C3AB4A1BA534444B
B5520437BB7E579FE0DD17D23F816AD4A06ED4557594C71E3EC2CF78CEF525D8
2FFAFD214F6E5551B5FD13D5DE8CAF2B7CB8BD21AB3C835E2F385C90B85FB61F
1A385709A28A64D33435E7AEDE0CEDF3CD5F7B262C9AF9CD7B18BE9FC23C01E3
9E7B23357D1F72E404C4BC506ECE064C53DB9EC6501257AC67B27C5F0D447F44
BF371EFE1D615ED5AE191887CB2763280E8CA7F323C5759B12AB40A5DE3A867C
9A2E09D6181E3CD948C0646C157D4A048F8BC383B5B76C3243DE290607F92753
7DAB155BB0E979D7FC7EFE8C6EE3F4C4C612D85EC3B4F41A189A965F769EAF4A
E321028B9E607C48A66BD1CAB3FB327D60C5B9739C75A185A20499B05D78FFCB
AA66631746735CFE6CAF3D2A217ECCCA9B63F5E2474A70179B457FE5E7472DA8
FBCBD6C0E4BF73E1FD4CA1A290ACC6D33F97572DEBDEF705B4825E295AA1E099
F42F9F5F0006C890A2317DBF76C0B8C0BF2C362A28AEA896F4CA876384E1453F
F0AE4D79F93A57884F1E7F375F995F2550F8864B4D1AF48C67CF2859A9F51039
D70B045910B67332DD38394A2E0D7929DED0DB8F91734BAE01055149AD49E1F8
A960A22D41D9C065C3B189F2B8B0E0C14AB9DAD51A87E5E2E41ECA31737263F5
DDB294ECD72888E1A15CC2EBF32541BF1E5CEB427FD122D4D4EA36FAF764F80F
7DC2933D8A428EBA74B083035931F9100C7C491D52D6AC7F66293FC5CADEDD12
87AC9AC7684D618DE0A329FEAE545E463DD881D58C231D1C00BE0F7B9294506D
C7B6426F829E55BDE0571650F455A5F1FDC4D69421D19D12D187A1C024259A5A
682B3C92CF6EA1A8B0F923F4D65C860D6A9F9DB9FF8EA6CE6D9E97993265A72C
7343103163FC97DAF645075EE06F303AA2A738D92F144FAC36085693BBB17717
D10849ED8B88CB3B83B344A9A9D3C17F6DF7600E52BC4F423CF43921EA6D4CBB
7E3E2EBFD3F245FC85515E4AE128FA636899C2EEBBAF9622A8CA1D185BF42766
F0629BA6BAE1F8681AF77FDEAF3012E78DF9B30A7D70F73ECB5503A3AC951DD8
6FED8F6EA71354D5FA64A230B76B6F9E91EDC641B1054429D958D9F2492ADF96
CEB9A8F73FB9E96C622B185FEB36876C0D95FA50936D0B330F85550C14C61B1D
B0867D7E5D1D2559BC5AA1D32DEA34B05D55FC6C140704F240F286342923B9F1
4632BC848176378F35DB0D9D85C998D662F74F305BE49820A4C320229EF4C647
35E50DC5E02193C19982E22E30D29437B1D471BC8DAFCC757F1A24B396CF56D4
32F3A7D7DD192796CB6A6C965F2D4C7418EAD8051B81EEF103CEF14E5A2FC02C
3BE8B2D6599A60F53F5DD50F4C663FBFE2890D1939F1EC9231B1EC6EDC0CBBA4
B412F5FBAA4911FD428E428F0543C00B953DCB1E7D40636A29CF05169B5B43E2
33446A9052DC425CCF48D82044593C4962BEA7A2EB3F340030D2031C8AF06CA4
7C155E2DFD8249406D86A9C2AB752989DA3896EB9FDAE820846072FBEB6FD6FD
3C9B0251741584AFBA8EE2444AF382BE3377F0CC71F43963341871134F22D769
9AE0D4A9FBA8FB7CBC5D466E448C8F37BE3EBDE63217D399A1506DA5704CD7D3
3619BBC282FD9FD8C1392B4DF3CCD419D821AC25E41387027110007227D4370E
2E54A6601B347C28581BBC1B2AE583240AD0EA39532A7AE6710B4E195EA5F1C0
4B99CF531BE350280C8DCA7C9C6744A15645D7591F812C4327B2B221DA2B7917
924C7958BF69D4C7EBAF7EAE02F07CAE5C66BB3C213FDBA6899B132DE7E5B47A
C0FB597520AC8C22D18E23682D3FE081FA7C43DF0C50439921E53B70414B8D11
A422122D48FB2A006820285CD329E9888A8CDC9C2B8F1DBFA2C1B2D92D0070FC
99BDE7B15E292755CB68E0A96D565351E58A29183FEA53C0FD7FB1D2DD8B35DD
E49F39E2AB9D9856D84D41436B4008368CD9DB3B3203A28EE6B0A4BB9D09D8DD
E45436DC5A1F4179A1DEDEE23D1E0490ADA67248554108543D5C29C5B87DD240
15B1E4837ABA407CF8F77A2F8B8765BFB1E5767FA2029061DEFEF96F93A22441
205686F108C5E78FFE0C703A286F4B4C5C7D2B61F4EA0D4A272DE90C7EEA510A
88602BED759EF837308076840A4FF5414378845D058F47C7745D773C297F199E
DCAAD050B92055A203B2ABDDCF7A784F0B8C60284E454F3A5F0B6ABC37430A21
665120B32E34E8230D207E93566EBD5C6D1C4413193555BD8894B10CFEC6663C
273674EB38B2F0E8A735A66E56BADCA0D0B82AFF70A2B751AFAC605AF491EE4B
085B50A813CE3E79C3FD4352934CA11F169AAA7C342772F7CCC46B1E7FACDB56
A8766C90F9A2A785071E79B2C61E19EBB99698D1CD2B8AA52D094C25DD786412
2928EDF096BBCD693E3664C4EA0A1246664B2019AAE307ABE256F790076A8F7E
CCB90109882E80F536114C47748A708EC187A40D36ED8216CD2BC7E755129141
717146170961DD87481F0D371F851FE051FAB0718B18F5941636D05B75B976BB
776FBFF48C193DBC7650C0984A95B5FCE764FEE68F21911273ACE0DA15A4D182
0C60185EBA060FDEBE86561D0BB0C9FAB07BD91AC02BFB59661519A7ADF2266A
3EEAA54CE711E125232EC289E04363B5FF50EE134FEE0431FCEC5D49C7D404C7
434B7B619B73059CCFA8460ADD7ABAD5D083EBB0873AAA622B99D197E8752BBF
A8FD5A551318BEAF7B9CF6E60C583364984DE37B96DECC58EC4D39C290667FE0
023DD525D13C6F1F7E7B7032EE8416CEDE79D21655A732849FC03443958DC8D0
21EAA6DB2FCA5A7A54758DED5D18408198B02C440E989DB561C17FC6883559F3
E9BD1AEB21B568AB6E4E612EA2805535216AE30BC3A08C104BB7944C572A5EE6
212AD72AE3C27DCDC63F001B6A6518E2A2C7A224BE61838D2E872B7F47C84C5F
8AC7D682DCA180BE8D374AE84827D822BD582E91181094ED37945C401248B28B
42B4772495A0F576226296B2CA8A7491D3B820ED10968CBB0F402CDBA31DD4D0
A9E622D3905407A6D7720BF25BF838DA47933E051460E2846F1913BE3143C2D3
68508E4750CBED0B0DCE6A19682FD78D739B4B3748F75A94337C5B24FD6CA0CF
05B4EF08B95155F7F6C0A83F6140ABBDD2048EC968A3844DBB08D71215E94EE1
0DB73F2EAE3DE4C2CD176BE3236A0024C05130794E86E02295E797DAE4681D80
876AF9C0BA69BF808C231422EF4D168B601D7FABAE928F606666102488CAB093
A1C6180985426A5B7C889CE7C240BCC2FFB7336D45733B4B00F3B6EAB5CE8E6E
12BCBDB6B25F53D767307CCB4C9028060834EB9439FE0200C9852BB45F6FAEE9
1F53FBE7DE15C9D3F0912D9C334D67657D81B3EF101710EBB38F1146466228C9
5CEB8C7FA0EDC5D2F66BC6F0AA8B93A7AEFAF4B3AF733D21D019BCC15964D378
86CE76ED9FA2F954D707B1F33ACE0DB3B8E83FF9DBB2833583C445ED4D7876F0
59799D30258862EF3776C5EFAC0B0DB65579C09ED35007A6D28D0F94C296F6FA
1975FE8E86C39A0F9E5A4190676BD8D4D4EF7CDBD33E9AD0CB620EAEB1ED696D
823540295BE654866C473C9FB89139148591B48AE6CA04DDAF07A2AD01950DB3
71D5BA6169707C257589255D48982564AD5008801AB5A8DD0E973BE4B485B80E
185F882506118CF71CFD267F56551A6ECCC7AF31E5A665F25D57AA602577A240
57CA284BE377DAA7BB55AE76DDF26DF661C5D803B685C4D5FE193DCB72CCB2E4
4D671630C518657CDA63C6E6680204326B3CD523D98714C11D31ED6ED85F650C
3E47BBE721366F142EA3F8CD16E95CFEC57064ABCDE93EDAAC33FDAC77836BFA
202767A17E296042682216F2BF37F6958398D27416780DB49F683A28B015FFF4
89C40AC46AAAAB60939BF9167B190DDF4666EF9249AACEC5E5989EC1EDA04646
A29BD45A4F145123C26338197816A83D79A859E9EE21845DF0399B0FFFDE4DD1
706258496F2B5E35BD8F98B24055CD1B061C6BC2E3A93A3DDD3E9DF7A4BF996E
447CF1B69562F29D009791438097B4FBAC12740A399CBC2BE0D0D30460A1740D
F02BEF86258F831F1E046F27705900CD0D5F6888502FE094B75A04EB1EF83172
A99826D30961082D62B7E95A50FCA3F20D05931734EB4D26A2BA3507465E06F5
EFD860DEFE3EB83C527CBB8819EC9A9DA1B44E5B974CD2BC5FDC63844342ACE4
DBE0C1616EB76B20A8B831F68EA98483E168A9B632488C4645DCD34AB1ED522F
E5F67D3F70F1CB120331088F55835504621147376085DC8031E1E6FBB5772341
9A9BCD0B9CA1D8A9E422A0FB8AEA93A7134182EF10D8D8C80438826591BC0754
C82AFE5BDAC4D8D5F5733E7306375D48EA623D94A41D256AFF5BCFCCFC87AFD7
F023F4D2F9AEF0ABE4358704266DA25EE26BBC5B4032E8B764DF683568E9B34D
EA2840476ECCCB5206B3961A29BA0766073917CA1DD4BD69112BD043F9D866D3
733178AA5F9433AC23D9EADAE91FE71A0564AD80332E22F8B836EFBB26BEE141
B9F8BBCF5F662F3C4B108D8FBB54B09342EB845A89144FFDF0BE9D271EF6852B
D5E7066CAFE3BF23E13F70A908B9388BB9AB0BC2B783DC41C6274D869FC077EF
892CD6B2E1E9309C6EC49BA659DDB79FA207DC1CEC6997FCE2EC30D2DB8C249A
DF81723EE6B6D80EB00C15194B5389F5B4C5262BC3A965ADD18BDE4239A2D036
20BA9E4201C42503A2A7FBF58EC175EE129119897292D6C593140160A642C3D5
A77DFBF96AE7C8B136940937127C9C61083F1160DF5B67FFD1D32BAA9A34CFBA
754374967E3A90A55E7CEF2059E19F868BD7B37D8A5A9C7F5ACD8F4E0A691776
D188765A5EB055C0FE469B27909F9B319F8C890F18D01A5B18522201381706F3
42AB1B624E97F87A7CE2366ACD13EB79C8F33E5F348DD26B2AAD290062A1260F
48480AB58910BE97565BCDB711F429CCBF580D30EC1E1C442E404A2297E667A8
EA4D675795EE271A3F46EA0AAAA7B404A6CF0111537138A29CEA4AC085D9E585
4FBB36FE127A6276193F41EA29951FDC8D647A6B97AD1773D17AF304736A80BA
C95F162B26441EEA8D7D0E6D8432D59C4F93678B253525EE6CC61250628F7FF6
DFA86BC3E2B2300527400D6974A41A33374888D4542CEF12BE0589FD9431C9F8
018C75D9E8E5ACE6A1A26BA2BD011F5DD593ABFE079E9A40E8BF6E132F1C2450
21871BEA4C9D6F3F0595AB64E5ADFAD66F40B9BF0AB12FAE2210D0CE6946AC40
8EF2E12D74C4441CB181F921C05DB440A6ADC1E5EB7EDA8092AC8DD091CE7734
171DDE5541C8DDC054CB54DD844619B288C9F9041703936B16DC51B6FB509395
F46904257B3D02CD98B820DD1198BEAF6B50EB82F862E543305915B836FDE2E6
444E5B9DB8CDFB9D70BE9B93E627618135127BD0D348E6AEA94F9F8068820D59
228A8567BBE987C146138B0F349DAE81EB837C16EAD81B55A69B3355E7204D4F
DDC8D13BA8C9ECD757AB94B8213EC808B7C26C61BC8C05EAFCCAD1E4D9B40290
FAEB92984100E76D9CDB069F6926AD4A9CDD6B5DA4023B2B5B3C5228AD2F449F
6D399EBEC6D6BAD1468E228152C48C78F8F66FD0640826BD116C92259B0B19FD
36271A15A44A264614132D49FC05B1FA35DC263812516E797B866DAEAA1BE50C
9CF5766C26FB2FE7F10911B356E7967A038E44DEC4897EB2D3387DA5BC8559A2
EA915034E93C317032D18F7A44DC6F260C431655F7FD737474148DAD822FED13
E15E65956D0F8DB7CCDF74E0C5FBC64A6CDB1139C250DDCCBDFA863E96688F04
16BCE16B3B908A1323ADB07E54F4B46E0F16A642B3963F622FB1A39C8492875A
29AE42C2B7A98CDD425B5545B86B53DF51CA1E16810C5EBEE596AB89D20E7661
F9F8B0B8B824B1285C3402F40590E0FE32A94858E04E4B12C70ADC0BA999B9CA
540F420D708D8D1B86E221D254F8951806EC9B041E0D394ACB009F26F08BCC9E
C6F96E653377FB5AD360EEF795CFBECB60E768C03E3A3429914303210484FB08
3A43F7769A4598EE05F40996A8DD9FD0B685A061825DD64342C54A628523B395
4DB706DD827AA5C22FA0BD796AC8C15DEFF1B382A7C8EE7A721724DCA3BFCAC3
D32766E0115CD2B8214242660054609CBB777D2DDB00297CCAC8899EF555C88C
6466806BCEE9FCEA7859EE1B70FA11D98DD4F3437213F936D713D449A159BEC0
2E1AED1D87FBCDC6242C6FB90526423A5D0A00907FF8FD9A1547BAFE882CC0CB
DB05DDA8D65C76FBAA5CD4B52F359A59EBE7CA1A79A80326FC455DE6EDE0B149
7A6EE01F6999CA53A8451CFBA57AC9EB3446C3C4CFC7E34FC881D03E6931A55D
77DE4F6D63124932D9D78AE3A98ADE2EF87F445ACC19053C5318190CC8AF819F
2CD8415481434E47BB3DBDCA5483A47C1C7533424A315C77530461901AA27E5B
AC9A16F9A4F6FE7854063579C77E8ABD609AFB81D062ED58026BF86804D28CEE
1EB4BF2D2B4C4016E36CF323856ABCE36FFAA255CDD4A499E91C9D3CC5A8B0EB
DC7A0AA8BD85C79B7762393A66020A9AC243A25C5464FA7B056B1425DF6CF6F3
312571CCFAB27D5CF7D2823A60E4E8671B6C2048F34962EBA66C7A1A32D44366
62026096571FC8EE8C8B644DCC357834C311DFEFE161351954C15612CFD66B0F
B5E8F08EC72FEB14383870BFA7337C25A8DCA547B1E4DC2A6689B52AE52ADC4C
2B483382EA7755265F69B8A14201C5FD526DE44BD36BE87EF9B0814CBBEA790B
E2CF5C6103B187AEF1F6219DA3D3489D8589506410124E357CAD6586C65BBF96
0340B9820F2D920B328873F22C0C32E843ECEFA53F4F6698774A36E1CA2CFB3A
C649BEDD54560CB7F86E1BC0B4A4A76B163FA0955FAFDC3450B30D026B8964A9
2F09774910292BD1909B6BB8C363547DDBBE6333BCBC82865250B7FC5685221B
1D05456ADC9D968092B9FC8581BD9E65D24A306E1CFDD05F8F79C0E6630690E0
F6CE21345A9FA804FEC7BE776F7E23B3D0C187343EBF40B6C58D4450C056770C
677979985533286C02722DDAB71200F9E25715D4A1578E22CE36DEC25254B6AF
3B0E4FA27436FA238525745A62AFD443F2E458DDB40C9BAFAE0E196174301E3D
73B3B882FF229F96A2DE39774486F8B61E3D47F32E18489C98D714B14CC8BB5E
BA6E1E29116B23A35340A758801C4682624552237E2BFA509E55F36DEF6B2517
5E4F9673AC8AA03E97E3073F6CE37E0DC63B9C39D3485FD557027C63E8BF52A2
73122C39E178C2586CB9AF41FACE95E661283085CE51F6602798501A1227354C
5DF0BD8B0BBAE843FA7878845E18CFDF9EE82D84FEE383B5C69A08A442514C66
49EEF4B30B38BD82B70CB60B26851238B78DD9D9D4D22034095904DD242A8E1B
2F3C18AEEC21EA5FB7BB821B4BA6CAB5C74EBE96327A8B978185F866D07FC117
464BA2D6A5E0222546910D948F5A196179CB96DDC310F5D03541D1CF7A4CFA64
0A3C8A291093870202B1371A2C04B07FFD54C6AA38635354DB7331D801096A64
8261CCA6438106DEA380523DBCA96890233CBD61E42E45B7D8176F224ED32112
54DA8565B311C2A5869A31C32121176EF1B3E1AD52F3B3097293636FCB5178A8
026BFEBFC5A07923FC8C51D60B1FA436FC498BE8B87C5973921D052B5FAC9D3E
113B7109919CB9CD84ED47C2F4C93D6405B653EC3D4329AC3DFB3474BB4655AD
78B2A4F5C0A45D161BDBAE0DDE49666694E8B1D68FFADEB481C961B76C293323
E4E8D7AF1BC6D122619DB15F2D64DB7A68ECDDE651C3E529D20B8649727F59BC
DA541B5C2E2922DDA2483BA786A6D2D08387B4C3987A583350809427FB8671B2
515DF5FDCDD35547643772CA616557C1FD776899CCC9239642FA0B4F28FF3333
11EAFCE8E01BE40B794A50BAA3AADBFB467B209E2983406B9A644B2FDB322CF9
79D2AA74245D695026C22F8D69DF7CDB621E513FCB1F17782BE26356FA70F42A
89D1B33106BFC970074B66AB9E91A3B2866AB3025D71B6EE9E13B44F3B655E53
4438A30ECD347E73961C4D5B6E7931CD60F176C1FF4A6F5F74F14C393FAE6289
96615696C42C1EC18A39F6AC58376E3FA82DA166E464D6043CC8D951B68B493C
91C8402D40774CF4E9E13ED145037B14BFEFBFA85FE3681C061389D90AF7AA80
72C14D347D0CDD6C44AE00B756229E55133CBEBBD3AEADA5FB97DC469C1BE72D
C92A28FF329D76C9263D8D5AE61793586799A6D7E2241FA73730301D143C8801
8859BE49B0499221C90FE5A17F2FC9FCFF68D9CC14679590F9FC4B0228D5DE28
99CBF639FCCCE8244B4963B96967AD77CF4E553C564565DEF0DE98AA64607F91
739DCE8B1072916A88FCF5826F839D209FAA45AE3585B8B8BF2AB8874D6AB1B3
BCE151A8E21B5D1BF20C5865229756521678FE87A7AB69BDA9E6FC5AD45E4E5F
498A071D29991A0917455397B396089CFC6DDD06750CDF679508C99A68D7DB99
9E70D0020C02EF436A11E66CA940DD698CC27C516E1248BAD81CAAA1270F3261
00A5A0CFB8DA41E8D979A1E12B87401F2EA001C38B0E8635AE2E3BC278968886
1039ECDE6855C90F289A3834E29D61B5E6ED75072177CAC028B25113ECCA21EE
59739144873CE12172B663A2982D55B3F85A278647718D33306EC60C455D8A3D
5424BA9288479720CBA18F26EA6102D9006C3A4D58B4F13787FBF52191C44E3A
440494B2D8DEC32FBB0C70D28DBD365F18C91CE2420037B723CC264911BD305F
C786668BB9A4926E6A2F169F25FE8DFF1D7300D0BD4A7F640AF5AA236B431C95
613F8DFDA7E2893ED7993D22B4DE9B372BC4391BF958796840E61857D813BEB5
3A8043ADBEA5279076639C7D7488ECF1939B94ED19A2D743EA971CA7E5B91576
58D608C62381208A6AB7F80BC711328D951D8316E56FD9F788411EE302A8E21E
3758EF66C63F8F71806096EEDD299338AB235B53C17A87171C4E81183A032D00
98F103318B597902D0ADB462D3E22842A6D07C8897860E012FEE45E30F0531D0
E67A900054074E2751862C0F4C1DAFB87067308BFB407BF57CEE1F88DB69CA8C
874812C4529C5C9CA0ACD5D65B18682E2E30F2E1C5D2BD7B6BAA2AFC0061BCBC
3E06257DBC70F58AD4F608BCD972CADFFD8558D712DAE7128C291F8988655B77
BDA06BECEDAE989C47446134FB9674ABB17D9985A523B0D80EDCF1EFCEE85FB4
BDF97EA806CD748E611AE869F21460B9EAF8AE7D7606420C18BAF09DDBBB6665
0625019B327BDE8CFA6576FACE0FE5CA43F8E391EB81C36AD173A356743E00B7
6138AB20F92EDDF268FA3D44DBAA8D9658A25DBCCCD360591FC7F7AD31EBFBCC
FCE03861F513F8BF20422D5A986A76CA83083DC1089775CF392687FE746BEC81
B4AE1A1018EDCFC6E73C623DD621695C9E68FD1D491C47722CB0A14BC9749DFB
C026B3E508AB7596D7ED3D2EA26A00B8845772D4D2040C15A90B63F19F4B4B1D
C6FE907BBA4E823FF6A02C1B89E55F44E2A2895DB0779061302339AED4AB158C
0455A69A9D716525A63EFB46900B4C0175797E4266E5009359278E75975917BA
42D5D669FBBB958BBCEBFAEC1C52A9C10B43AF4BB02ED23DD01B1ED6CE0281EA
1B0A57A1940DA92C362D1C485BDBA2D9C59C15DB99F4A2A869118D74E685645E
1351D33181EFFC49C00236C3B8F87C8D5BA79C348B71273CA6D0EE6B4624E970
46B5E8F4F02C70B3899EAF34E2D3777F8A17A498B9F4933F5FA905327678FE8C
058C378867A0F774655B0007539C77A8EE1A5463904D4F099C9ACD9440DF3561
89440919FFBB05A64B476D37CD72CDEF40F3E7D6023A4EEF7E8448F02B39F4D3
77E11BD56A9359237502B71F0FCFD8E506F0ABC5DA8D0A223F82C38034FA540B
403CFA6904D9048DC579C5D1FB3E6761F1B70A2FB918CE4CF5A0445D779ED8D7
7EA2AE5ECB48B3E01B4640A0C4DBD8AD7E8EB2CE44E5A44EEE8450374E1549B9
CD68FA3F1BEAE50DDD3F24900889750ACC1060A919867BE9AE37DD3B45D8B6FC
08925208ED5EFCE4DAFDD88219C2B3C5CF8101BDED35149D13A5109C0F3FDC35
A3CD17606AD8DC480CC0AF4A86E71D0DF9EE7F9A0A950152DFBEA92DE59DDB24
72CF3B0A425D61544B3AF00F0D452FB1301EE0F452771FD6A8D4B6790A6E555A
9BA20E6DB01165E6FA148266D035E65CC0134B1276ADA8E0279D7CEB43C95637
F199613E8F0818DC34ABE4E457094DC926424D8EC42A88CC7E12F85F668454BB
538884EE4A69BD4846A144A5F78CA5D17E3D2DAAA09D70F933D85CBF741CB7C3
2798D74A0122C3147935B02A729A06AAB79BB8464A36C2A8F80B41AF231D0A81
1D64871F5EE37E1DFCD114F5F2AC07573632C4A05E21134786354405241EC768
237CA765079698D34892DD7B0537776777A8ABB75BA8FC3872AFF765F82551FE
D43B65BAEFF24880A899E0F5AE2A6801395B31E4399DE1A8DDBAB1F6820C6FC3
9EA8E1DFB2EC85735D687EB7ABBE7CC4988F0541B488C0459A857666F5516F10
9258A17E7C6A74CAC61D1D3C3AFEEF234EC307072EB02CA47BD367CCDBEC6887
93CB456070A29348177A4369DB2C025AE13805E425839F77C80A41C384236551
9A6E0E2B2408AB6CABF9FF688F30230E3C8C11413A5BACEC64CC9629104515EB
31E7C5EC0797D88B4590C27AE8C2C49705568C17EE6E465DD20507C84F7DB11A
84BE48A8ABBB07EE2972917827D2972E041E9258292B726A8EA71351A08326CC
27CF94173E2EFBA91672D0D19745496C66FFDB3597C417A244B7FE1CFDBE9C73
86846B2AE1C9B8948B415D3ED2E49C6F8549D3BCA306E3E68C3A42727E9E1AC0
E5A0767F58974FB8C4D5960CD9044839E684DB97EDE12488C19778896BC59A5A
352CA4E13BAD51EFEA953C0543156BD28EB5E3E896808ABBF3CE146AB56D4454
B09C39B933EF06C3B80DB15E6A641034EA9D5D21577FE2A23D0968684BE5E9AE
CB23F2BC896FDEFC5A18B15210BD9F76C20DF4DEEF532537D7D08B346F054B12
FC5FE52C514D48053CC4A514CF0C2AD8865A0EEDE6043C2090C3B658FD838F9E
E5967523958DAAA544D33EAF470859EE70A4ECC40C9BA52C928BCE8A1744F75B
405D1EB6E242DEAA689F8EA68A8883DE489A0913EEC17CF5734A7381E4D188EB
25D808605F3AA0736A520741342C128B5043AD90074AE27E8B8E8478D0CB1BCD
89661AA5A4DBF8710A3E91E1C9494204669E75F5FCEC22FCB3AE33C8A96137EA
3154D3FADDE941522B0029C134C775A5F7F10AFC8A90C5A39899135403A9DFFC
1786ADF7325DE4E7C42AC34BC4D5035E538BDD75075ED49B4EB2CF19E5AC6E79
F510C4700564240B49440AF248A963DBA2A2C01F0C6FBA2DC351ABB78125A868
C86CF188D726CC7A9C18AE79D8546B791A8933456B6CC70E3CA15FC946BEC3FE
66217EC62BCC9F5E078035B2E8C64F1F40871BC2B68D7E23DA023C432514713C
40E8E76967F3CCF793E62B9C7A1C416969B081C411DF67CB96091D989153A73A
0C8702C3627C72F5C57683CA643FD6595F2D86BAF6B0E329216CFCDBAF152724
29FE600B19928726CBB81D3F82FFDB9CA1B6A6634F79143053C7F79DFD10C93B
89D15124C400FD27F2F0B505BD55F05F2BB4623E2E768C0887294749D32EA429
70DBAEE981DE8376F78E348CD327239BB5AB179EAE992945181BA8D0231E8C70
D509C5BCA45AE9D4C039893683616F37206AC96C2D827AD3A8F789D516DC0215
A5D19BA736EBFBCF5D2748FD88F2279EA21A124D7AAC6AE5A9D52C279DCAB1FE
25131203BA916C147E22DA61845F2A3D7EC3A5363B44422DCD1C570D84999086
8C820C8127A87D3232E6AF2EAF8B28BD5D03AABDB9A03042BA54933DF9D3D05A
CC47860CEBA149A4FFDF54A145A50435D9AD8DCEEC30382B2384179D63C9A397
1A62C61CCF2251A21B5C2A3A98654501215E669D6DF61B9D8D0EB0DB6FC70250
AB47344DA4935867318A2D603D6C6586DE50D6B9E5A6DA0AF1C5A129E13747A8
11D02FC12836DDEAEFE872EB72DDE3239EC1D140C038CCEC2FE5275459DC3683
5C253D76833C9BF14C6CAD880A295B209FAE2DAE7FCFD566F5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-33 -250 945 749}readonly def
/UniqueID 5000795 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B41DE2C137B6
5F08F4B3113B88E58DCE4BD2C89AB6F3BEFFDC94A771543542E02364F8CA14D8
C099338C1D8BFCECE04A6DF0670F4917C3E7C85AA3268310740C395E391B2A05
9AEF2B066ED800C316F13F606FD9EF71A05EF4063F469BCC3D16EF807676EF43
423423C7AF6DE49F8361568A5F93090B0BF7CE0C07F97825D76E48581DFEAE7D
2AF0050A92C7FF6C6BF206627AEDEFEA28E33B75CAF7720025867CC4FD293F1F
FA4ECA0E3C938471D1FAE9AAC9B68F1CBA7BAD5116C6F4B08C86E8F17E2BBE82
041F1945B6F38CC845F6E3435ED6250528ACA86FA51F70177A17B97401DD729A
C5F3380CDD0295469A6CDD855A1795E4800AF513155755DE9E2BC95B5CC86472
1FC32F48F1798BD35DA21857C0BE22EF8F3B02738883370CECD45991549DB167
79557F3A21441AFC0B9666EB02B0209FD6D60EC86E658AC492896B86ABFBF620
D36AF404B4A2C9DBF2C66F5713F3099E1EEEE8E83362DFE20251C0759B332C87
CD36DDDADB9A5A9C821D8DC743DDC90B901D8859BB710605FBE365D5F22B9D3C
60B596E653EFCFD3AEB14282889F7507BDD14D9BA349676DD14BB62B5AAF49FE
F974A7E6BD607FF81814F1BC9E7FD3A4F4C4AB8BAAC227A40064C5EF3933DCD6
80743ABD5FFD8C476408C3E9283DF886427D9DC3E2FCDC3EE87839B3AFF9D876
712B15AE40EAEF4BA0DC6188F7F3A145258D4BEECE2BE181C7BDAE2F67A666C8
7D10613AFB3BF9E31CCFDF72B85D1D80109FAA1B6BE6B643BCE37842738A39EC
5C890E6BCC81056EB8FE38750F6A718778AFCCEF9200F5820E6A2174558F7215
9177F0092A87E58C9AEC46CE10EC782E1627BCA49D0BBDB2CDA22DE3ACDD02BD
304AF8413E260E4BC4CA1FA1CD7B3729E19A3D16884D072B03793E436287218D
AB01CC15929010F16B0D358208A09DDC545B3AB221931FAB7CDDA012B20CD226
6840146556B33DE2072DEEA3DE09432B3C29054E7A2DCA783D82046DA2046D95
B52F1BEDF66C83EB1F16AEC51A68128606732588A7C795108F9CD580BF031869
2F47D9825F5D2ED2FDFE5F3EA76D67EA2D8090957D6652491399DCE7EDE751FB
7BB80DE444DB0326660D4AFDB201034E457B30375233F47D969D4B36C3FB899B
7816B1534DD2498CF9FCCAFD637CF2BE866792BE1A93B4DFDA2A1F3A113BA9FF
F14660869E851B843427ED9B103C045C3A4148764B2D55CBB000E7E47A0A429E
F2D426478A67CB335024337604274040900678717E73DB0D3A06F0AE418CF124
E93EA955BFD1FD662E8C7E4BCD23F854BCF8C03B61A3374C9AC36F792EF6A5DC
E1A71431F95148B2F21D4E29265EF99B0A0C590A1E3ECB591BA8192A0C9CF0F2
E53827D597631874B84A9C0504970CC766D81A17A2E158632D1744D112C253CC
92540E34BDEB471EBAB0377090AC04F80C1165CB9C2008316B422300628D5D67
75BCDC83D41E9E24C0E2F76680EA9D5BE268F22083DC9569D89D533C97F620E3
AF773720B26896EE3149D4AEA89370717A945AE4C00D93EA2467A3E85B78A0A0
20ACB1B32FB7B131943A45C3C5BFAC40F6AE91A508EF6DDF64522B4D66F76785
83CA78E0518995CDAB9C99D72D0DC118146F044FD14F86203665311F093F51ED
10A2D9E14CFE943E617F65414E5ECE54EC561D197AE2F2FF59A9F36C24F028DC
8CEA1F68BD68D131A5B323DA790E8631905D8CA7CA0B4D7A6B2BEE0B977A6CE2
99F20A334F2B2127ED98109379EABAF57A77A1DA50804FE04B57295A802EF95B
E167EB212E7F9B2A501E999738EA8E54EE1B242A2C5C821E0E6AE7DDECDB0D98
72B843746B7E1BBF77E16D7EF82C66E4098CBDDE0D1F9A93657781FE16AADC3F
6CCB653D5F5E85FAE4A18623F2F21F57AB264F495257DF50862EF974F76E2714
7015D78279C5D9F79E5D266773F7981762D4287512FCFD297A3F94200333137A
5F139D4CC481DAA24BA0D213607AE0CBA255A8B1337DD451826A537FD1589001
8C0AFF629BC0C165D8CB331C39B8430B9E7B8043C2613E4E5C9DAD2E02750AFF
8E56E66D3640B1977DEFDB0D9852D7234734A1E2384BF8DE3ED22B9C0FC5CE75
A9BC697B61AB17215A1307A472F74B5DD1E39CAA88238D27EDFF73C05FB8BF53
688E607E97954150F446DABEB5F4B9660C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 8000 8000 (main.dvi)
@start /Fa 255[692{ TeXbbad153fEncoding ReEncodeFont }1
774.872 /CMSY7 rf /Fb 253[861 2[{ TeXbbad153fEncoding ReEncodeFont }1
1106.96 /CMSY10 rf /Fc 204[441 441 50[{
 TeXf7b6d320Encoding ReEncodeFont }2 774.872 /CMR7 rf
/Fd 140[437 3[553 4[338 4[492 1[492 615 48[553 553 553
5[430 430 40[{ TeXf7b6d320Encoding ReEncodeFont }11 1106.96
/CMR10 rf /Fe 134[636 1[636 636 1[636 636 636 1[636 636
636 1[636 636 1[636 636 1[636 636 1[636 636 636 40[636
4[636 9[636 636 40[{ TeX09fbbfacEncoding ReEncodeFont }22
1212.12 /CMTT10 rf /Ff 150[471 471 103[943{
 TeXbbad153fEncoding ReEncodeFont }3 1212.12 /CMSY10
rf /Fg 133[531 631 598 863 598 697 432 531 548 1[664
664 731 1063 332 598 399 399 664 598 399 598 664 598
598 664 9[1298 2[930 731 948 996 881 996 966 1165 815
1[682 501 1[1005 848 881 981 930 914 966 6[399 664 664
664 664 664 664 664 664 664 664 664 399 465 399 4[399
24[1146 1[731 797 11[{ TeX74afc74cEncoding ReEncodeFont }63
1328.35 /CMTI12 rf /Fh 206[812 243 48[{
 TeXbbad153fEncoding ReEncodeFont }2 664.176 /CMSY6 rf
/Fi 149[340 296 20[486 84[{ TeXaae443f0Encoding ReEncodeFont }3
664.176 /CMMI6 rf /Fj 205[406 406 49[{
 TeXf7b6d320Encoding ReEncodeFont }2 664.176 /CMR6 rf
/Fk 167[1919 7[1402 46[1052 1052 12[978 978 18[{}6 1328.35
/CMEX10 rf /Fl 137[588 1[438 9[499 21[708 3[778 1[974
3[672 2[953 11[337 337 40[602 17[{ TeXaae443f0Encoding ReEncodeFont }11
1212.12 /CMMI10 rf /Fm 133[539 640 640 875 640 673 471
478 475 1[673 606 673 1010 337 640 370 337 673 606 370
539 673 539 673 606 7[909 1[1246 2[875 673 2[825 943
909 1[758 1[623 438 1[951 791 825 926 875 859 909 3[943
1[337 337 1[606 1[606 606 1[606 606 606 606 1[337 404
337 943 1[471 471 337 24[1010 1[673 707 11[{
 TeXf7b6d320Encoding ReEncodeFont }62 1212.12 /CMR10
rf /Fn 138[774 2[574 8[387 1[697 1[639 30[877 11[387
697 697 697 697 697 697 697 697 697 697 2[465 45[{
 TeXf7b6d320Encoding ReEncodeFont }18 1212.12 /CMBX10
rf /Fo 134[746 745 1020 707 824 511 647 666 707 785 785
863 1255 394 707 472 472 785 707 531 707 785 707 707
785 51[551 30[1388 1[896 1004 11[{ TeX74afc74cEncoding ReEncodeFont }29
1328.35 /CMBXTI10 rf /Fp 130[684 1[684 684 684 1[684
684 684 684 684 684 1[684 684 684 684 684 684 1[684 684
684 684 684 684 684 684 684 1[684 7[684 1[684 1[684 2[684
684 684 3[684 7[684 684 3[684 684 684 684 1[684 1[684
684 684 684 684 684 684 684 684 684 684 684 684 684 684
40[{ TeX09fbbfacEncoding ReEncodeFont }55 1328.35 /CMTT12
rf /Fq 149[261 2[470 470 418 418 418 418 47[627 941 255
47[732{ TeXbbad153fEncoding ReEncodeFont }11 885.568
/CMSY8 rf /Fr 139[340 3[474 5[381 320 4[484 15[548 572
2[597 5[514 8[705 3[470 732 42[472 17[{
 TeXaae443f0Encoding ReEncodeFont }13 885.568 /CMMI8
rf /Fs 149[369 517 517 664 664 590 590 590 590 47[886
1328 20[1328 3[1033 2[1033 1033 1[1033 2[664 12[1033
369 1033{ TeXbbad153fEncoding ReEncodeFont }20 1328.35
/CMSY10 rf /Ft 194[732 3[470 470 1[470 470 470 470 470
470 470 4[732 43[{ TeXf7b6d320Encoding ReEncodeFont }11
885.568 /CMR8 rf /Fu 135[739 1[629 1[470 3[653 2[1138
1[676 538 444 4[676 2[683 12[762 800 990 1[838 994 1042
3[719 2[1026 4[988 975 2[1012 650 1012 361 361 29[565
10[642 17[{ TeXaae443f0Encoding ReEncodeFont }27 1328.35
/CMMI12 rf /Fv 133[664 789 789 1079 789 830 581 589 610
1[830 747 830 1245 415 789 1[415 830 747 457 682 830
664 830 726 9[1544 2[1039 830 1115 1[1021 2[1418 898
1[772 557 1168 2[981 1145 1079 1[1128 6[415 747 747 747
747 747 747 747 747 747 3[498 3[581 581 27[830 12[{
 TeXf7b6d320Encoding ReEncodeFont }52 1328.35 /CMBX12
rf /Fw 133[1377 1635 1635 2238 1635 1721 1205 1222 1265
1[1721 1549 1721 2582 861 1635 1[861 1721 1549 947 1414
1721 1377 1721 1506 9[3200 2[2155 1721 2311 1[2117 2[2939
1862 1[1600 1154 2423 1[1948 2034 2375 2238 2203 2340
6[861 1549 1549 1549 1549 1549 1549 1549 1549 1549 3[1033
45[{ TeXf7b6d320Encoding ReEncodeFont }51 2754.12 /CMBX12
rf /Fx 134[946 946 1295 946 996 697 707 732 946 996 897
996 1494 498 946 548 498 996 897 548 818 996 797 996
872 9[1852 1[1378 1247 996 1338 1[1225 1347 1402 1701
2[926 2[1410 1127 1177 1374 1295 1275 1354 6[498 2[897
3[897 897 897 2[498 598 498 4[498 24[1494 14[{
 TeXf7b6d320Encoding ReEncodeFont }52 1594.02 /CMBX12
rf /Fy 131[1301 650 578 686 686 939 686 723 506 513 506
686 723 650 723 1084 361 686 397 361 723 650 397 578
723 578 723 650 3[361 650 361 795 975 975 1336 975 975
939 723 957 1012 885 1012 975 1192 813 1011 668 469 975
1021 849 885 993 939 921 975 3[1012 1[361 361 650 650
650 650 650 650 650 650 650 650 650 361 434 361 1012
1[506 506 361 1012 1084 2[650 14[650 4[1084 723 723 759
8[1012 2[{ TeXf7b6d320Encoding ReEncodeFont }87 1328.35
/CMR12 rf /Fz 242[1594 13[{ TeXbbad153fEncoding ReEncodeFont }1
1594.02 /CMSY10 rf /FA 139[677 1[677 3[977 4[478 977
2[777 977 2[877 13[977 83[{ TeXf7b6d320Encoding ReEncodeFont }9
1912.83 /CMR17 rf /FB 134[824 2[824 867 607 616 607 824
867 780 867 1301 434 2[434 867 780 477 694 867 694 867
780 7[1170 3[1170 1127 867 2[1062 1214 1170 1430 975
2[563 1170 1225 1019 1062 1192 1127 1[1170 12[780 1[780
780 780 1[434 1[434 31[867 12[{ TeXf7b6d320Encoding ReEncodeFont }45
1594.02 /CMR12 rf /FC 134[1136 1[1554 1136 1196 837 849
879 1[1196 1076 1196 1793 598 1136 1[598 1196 1076 658
982 1196 956 1196 1046 9[2223 2[1497 1196 1605 1[1470
1616 1[2041 1293 1[1111 801 1[1691 1353 1[1649 1554 1[1625
9[1076 1076 1076 1076 1076 1076 1076 2[598 717 45[{
 TeXf7b6d320Encoding ReEncodeFont }46 1912.83 /CMBX12
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 4558 1328 a FC(Dynamic)717 b(Pro)60
b(cessor)717 b(Allo)60 b(cation)716 b(for)h(Adaptiv)-60
b(ely)12899 4251 y(P)g(arallel)717 b(W)-179 b(ork-Stealing)715
b(Jobs)25176 7350 y FB(b)-43 b(y)20109 10450 y FA(Siddhartha)579
b(Sen)2000 13549 y FB(Submitted)501 b(to)i(the)f(Departmen)-43
b(t)501 b(of)h(Electrical)f(Engineering)g(and)i(Computer)23529
15542 y(Science)6377 17534 y(in)520 b(partial)h(ful\257llmen)-43
b(t)518 b(of)i(the)g(requiremen)-43 b(ts)518 b(for)j(the)f(degree)f(of)
2000 20634 y(Master)474 b(of)g(Engineering)g(in)f(Electrical)f
(Engineering)i(and)g(Computer)g(Science)23962 23733 y(at)521
b(the)6998 26833 y(MASSA)-43 b(CHUSETTS)521 b(INSTITUTE)h(OF)e
(TECHNOLOGY)20581 29932 y(Septem)-43 b(b)43 b(er)519
b(2004)3512 32984 y(c)3062 33032 y Fz(\260)i FB(Massac)-43
b(h)g(usetts)518 b(Institute)i(of)g(T)-130 b(ec)-43 b(hnology)520
b(2004.)695 b(All)520 b(righ)-43 b(ts)519 b(reserv)-43
b(ed.)2000 42109 y(Author)388 b(.)254 b(.)e(.)h(.)g(.)g(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)
f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)
8618 44101 y(Departmen)-43 b(t)520 b(of)g(Electrical)e(Engineering)i
(and)h(Computer)f(Science)36647 46094 y(Septem)-43 b(b)43
b(er)519 b(10,)h(2004)2000 51954 y(Certi\257ed)g(b)-43
b(y)179 b(.)252 b(.)h(.)f(.)h(.)g(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)
f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)36057 53947 y(Charles)520
b(E.)g(Leiserson)43761 55939 y(Professor)37921 57932
y(Thesis)f(Sup)43 b(ervisor)2000 64368 y(Accepted)519
b(b)-43 b(y)328 b(.)252 b(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)g(.)f(.)
h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)g(.)38641 66361 y(Arth)-43
b(ur)521 b(C.)f(Smith)11798 68353 y(Chairman,)g(Departmen)-43
b(t)520 b(Committee)f(on)h(Graduate)h(Theses)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 25675 75321 a Fy(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 4851 1328 a Fx(Dynamic)599 b(Pro)50
b(cessor)599 b(Allo)50 b(cation)598 b(for)f(Adaptiv)-50
b(ely)600 b(P)-50 b(arallel)18363 3321 y(W)-149 b(ork-Stealing)599
b(Jobs)25176 5313 y FB(b)-43 b(y)20754 7306 y(Siddhartha)521
b(Sen)3663 10904 y Fy(Submitted)432 b(to)i(the)f(Departmen)-36
b(t)433 b(of)h(Electrical)g(Engineering)g(and)f(Computer)g(Science)
11530 12509 y(on)h(Septem)-36 b(b)36 b(er)432 b(10,)i(2004,)h(in)f
(partial)g(ful\257llmen)-36 b(t)433 b(of)h(the)17470
14114 y(requiremen)-36 b(ts)433 b(for)h(the)f(degree)g(of)5846
15719 y(Master)g(of)h(Engineering)g(in)f(Electrical)i(Engineering)e
(and)h(Computer)f(Science)2000 19570 y Fx(Abstract)2000
22033 y Fy(This)397 b(thesis)f(addresses)g(the)g(problem)g(of)i(sc)-36
b(heduling)395 b(m)-36 b(ultiple,)404 b(concurren)-36
b(t,)403 b(adaptiv)-36 b(ely)398 b(par-)2000 23638 y(allel)419
b(jobs)f(on)f(a)h(m)-36 b(ultiprogrammed)417 b(shared-memory)g(m)-36
b(ultipro)36 b(cessor.)574 b(Adaptiv)-36 b(ely)418 b(parallel)2000
25243 y(jobs)584 b(are)g(jobs)g(for)g(whic)-36 b(h)583
b(the)h(n)-36 b(um)g(b)36 b(er)582 b(of)i(pro)36 b(cessors)584
b(that)f(can)h(b)36 b(e)583 b(used)g(without)g(w)-36
b(aste)2000 26848 y(v)-72 b(aries)411 b(during)e(execution.)571
b(W)-108 b(e)410 b(fo)36 b(cus)411 b(on)f(the)g(sp)36
b(eci\257c)410 b(case)g(of)h(parallel)h(jobs)e(that)g(are)g(sc)-36
b(hed-)2000 28453 y(uled)352 b(using)h(a)f(randomized)h(w)-36
b(ork-stealing)353 b(algorithm,)370 b(as)353 b(is)g(used)f(in)g(the)g
(Cilk)i(m)-36 b(ultithreaded)2000 30059 y(language.)3951
31664 y(W)-108 b(e)487 b(b)36 b(egin)488 b(b)-36 b(y)487
b(dev)-36 b(eloping)488 b(a)g(theoretical)g(mo)36 b(del)487
b(for)h(t)-36 b(w)g(o-lev)g(el)489 b(sc)-36 b(heduling)486
b(systems,)502 b(or)2000 33269 y(those)322 b(in)g(whic)-36
b(h)322 b(the)g(op)36 b(erating)322 b(system)h(allo)36
b(cates)324 b(pro)36 b(cessors)322 b(to)h(jobs,)345 b(and)322
b(the)f(jobs)i(sc)-36 b(hedule)2000 34874 y(their)618
b(threads)f(on)h(the)g(pro)36 b(cessors.)1133 b(T)-108
b(o)618 b(analyze)i(the)d(p)36 b(erformance)619 b(of)g(a)f(job)h(sc)-36
b(heduling)2000 36479 y(algorithm,)498 b(w)-36 b(e)485
b(mo)36 b(del)485 b(the)f(op)36 b(erating)485 b(system)g(as)g(an)g(adv)
-36 b(ersary)-108 b(.)732 b(W)-108 b(e)485 b(sho)-36
b(w)484 b(that)h(a)g(greedy)2000 38084 y(sc)-36 b(heduler)321
b(ac)-36 b(hiev)g(es)323 b(an)f(execution)h(time)f(that)g(is)g(within)g
(a)h(factor)g(of)f(2)h(of)g(optimal)g(under)d(these)2000
39689 y(conditions.)673 b(Guided)464 b(b)-36 b(y)465
b(our)g(mo)36 b(del,)473 b(w)-36 b(e)466 b(presen)-36
b(t)464 b(a)h(randomized)g(w)-36 b(ork-stealing)466 b(algorithm)2000
41294 y(for)642 b(adaptiv)-36 b(ely)642 b(parallel)h(jobs,)693
b(algorithm)642 b(WSAP)-108 b(,)642 b(whic)-36 b(h)641
b(tak)-36 b(es)642 b(a)f(unique)g(approac)-36 b(h)641
b(to)2000 42899 y(estimating)353 b(the)f(pro)36 b(cessor)353
b(desire)g(of)g(a)g(job.)552 b(W)-108 b(e)353 b(sho)-36
b(w)353 b(that)f(attempts)g(to)h(directly)g(measure)g(a)2000
44504 y(job's)338 b(instan)-36 b(taneous)337 b(parallelism)h(are)g
(inheren)-36 b(tly)337 b(misleading.)547 b(W)-108 b(e)338
b(also)g(describ)36 b(e)337 b(a)h(dynamic)2000 46109
y(pro)36 b(cessor-allo)g(cation)635 b(algorithm,)684
b(algorithm)634 b(DP)-108 b(,)634 b(that)f(allo)36 b(cates)635
b(pro)36 b(cessors)634 b(to)f(jobs)h(in)2000 47715 y(a)644
b(fair)g(and)f(e\261cien)-36 b(t)643 b(w)-36 b(a)g(y)-108
b(.)1208 b(Using)644 b(these)f(t)-36 b(w)g(o)644 b(algorithms,)696
b(w)-36 b(e)644 b(presen)-36 b(t)642 b(the)h(design)g(and)2000
49320 y(implemen)-36 b(tation)298 b(of)g(Cilk-AP)-108
b(,)299 b(a)g(t)-36 b(w)g(o-lev)g(el)298 b(sc)-36 b(heduling)298
b(system)g(for)h(adaptiv)-36 b(ely)299 b(parallel)g(w)-36
b(ork-)2000 50925 y(stealing)434 b(jobs.)579 b(Cilk-AP)435
b(is)e(implemen)-36 b(ted)433 b(b)-36 b(y)434 b(extending)f(the)g(run)
-36 b(time)432 b(system)i(of)h(Cilk.)3951 52530 y(W)-108
b(e)625 b(tested)f(the)h(Cilk-AP)h(system)f(on)g(a)g(shared-memory)g
(symmetric)g(m)-36 b(ultipro)36 b(cessor)2000 54135 y(\(SMP\))468
b(with)h(16)h(pro)36 b(cessors.)686 b(Our)468 b(exp)36
b(erimen)-36 b(ts)469 b(sho)-36 b(w)470 b(that,)478 b(relativ)-36
b(e)470 b(to)f(the)g(original)i(Cilk)2000 55740 y(system,)660
b(Cilk-AP)615 b(incurs)f(negligible)h(o)-36 b(v)g(erhead)615
b(and)e(pro)-36 b(vides)615 b(up)e(to)i(37\045)g(impro)-36
b(v)g(emen)g(t)2000 57345 y(in)470 b(throughput)e(and)i(30\045)h(impro)
-36 b(v)g(emen)g(t)470 b(in)g(resp)36 b(onse)470 b(time)g(in)g(t)-36
b(ypical)471 b(m)-36 b(ultiprogramming)2000 58950 y(scenarios.)3951
60555 y(This)544 b(thesis)f(represen)-36 b(ts)543 b(join)-36
b(t)543 b(w)-36 b(ork)545 b(with)e(Charles)h(Leiserson)g(and)f(Kunal)g
(Agra)-36 b(w)g(al)545 b(of)2000 62160 y(the)505 b(Sup)36
b(ercomputing)504 b(T)-108 b(ec)-36 b(hnologies)506 b(Group)f(at)h
(MIT's)g(Computer)f(Science)g(and)g(Arti\257cial)2000
63766 y(In)-36 b(telligence)434 b(Lab)36 b(oratory)-108
b(.)2000 66551 y(Thesis)434 b(Sup)36 b(ervisor:)578 b(Charles)434
b(E.)g(Leiserson)2000 68156 y(Title:)579 b(Professor)25675
75321 y(3)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 25675 75321 a Fy(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 2000 1328 a FC(Ac)-60 b(kno)g(wledgmen)g(ts)2000
4249 y Fy(I)598 b(w)-36 b(ould)598 b(lik)-36 b(e)599
b(to)e(thank)h(Prof.)1072 b(Charles)598 b(Leiserson)g(for)g(his)g
(in\257nite)f(energy)-108 b(,)639 b(in)-36 b(telligence,)2000
5854 y(wisdom,)384 b(and)370 b(guidance)h(throughout)e(the)i(course)f
(of)i(this)e(thesis.)557 b(Charles)372 b(is)f(one)f(of)i(v)-36
b(ery)371 b(few)2000 7459 y(professors)383 b(I)g(ha)-36
b(v)g(e)384 b(met)e(who)h(is)h(just)e(as)i(h)-36 b(uman)381
b(and)i(real)g(as)h(he)e(is)h(smart)g(and)g(accomplished.)2000
9064 y(I)i(w)-36 b(ould)385 b(also)g(lik)-36 b(e)386
b(to)f(thank)f(Dr.)563 b(Bradley)385 b(Kuszmaul)g(for)g(his)g(help)f
(with)h(systems,)395 b(and)384 b(Prof.)2000 10669 y(Mic)-36
b(hael)434 b(Bender)f(for)h(man)-36 b(y)433 b(useful)h(discussions)g
(on)f(the)g(theoretical)h(asp)36 b(ects)434 b(of)g(this)f(thesis.)3951
12274 y(I)499 b(w)-36 b(ould)498 b(lik)-36 b(e)500 b(to)f(thank)f
(Kunal)h(Agra)-36 b(w)g(al)499 b(for)g(w)-36 b(orking)500
b(with)f(me)f(on)h(all)g(asp)36 b(ects)499 b(of)g(this)2000
13879 y(pro)72 b(ject.)652 b(I)458 b(w)-36 b(ould)459
b(also)g(lik)-36 b(e)459 b(to)f(thank)g(the)f(other)h(mem)-36
b(b)36 b(ers)457 b(of)i(the)f(Sup)36 b(ercomputing)456
b(T)-108 b(ec)-36 b(h-)2000 15485 y(nologies)419 b(Group)d(at)h(MIT:)h
(Elizab)36 b(eth)418 b(Basha,)j(John)c(Danaher,)k(Jerem)-36
b(y)417 b(Fineman,)k(Zardosh)-36 b(t)2000 17090 y(Kashe\256,)526
b(Angelina)508 b(Lee,)526 b(Sean)508 b(Lie,)526 b(Tim)508
b(Olsen,)526 b(and)507 b(Jim)h(Sukha.)800 b(All)508 b(ha)-36
b(v)g(e)508 b(con)-36 b(tributed)2000 18695 y(in)581
b(some)h(w)-36 b(a)g(y)582 b(or)g(another)f(to)g(this)g(thesis.)1022
b(Sp)36 b(ecial)582 b(thanks)f(to)g(Tim)h(for)g(helping)f(me)h(get)2000
20300 y(ev)-36 b(erything)434 b(together)f(at)h(the)f(last)h(min)-36
b(ute.)3951 21905 y(I)298 b(w)-36 b(ould)298 b(lik)-36
b(e)299 b(to)f(thank)g(Abhina)-36 b(v)297 b(Kumar)h(for)h(his)e(help)h
(with)g(mathematical)g(pro)36 b(ofs)299 b(related)2000
23510 y(to)635 b(our)f(algorithms.)1183 b(Abhina)-36
b(v)635 b(sp)36 b(en)-36 b(t)634 b(da)-36 b(ys)635 b(trying)g(to)g
(break)g(a)g(conjecture)f(w)-36 b(e)635 b(initially)2000
25115 y(though)-36 b(t)432 b(to)i(b)36 b(e)434 b(true,)f(and)g(ev)-36
b(en)g(tually)434 b(managed)g(to)f(break)h(it.)3951 26720
y(I)533 b(w)-36 b(ould)533 b(lik)-36 b(e)534 b(to)f(thank)f(m)-36
b(y)533 b(family)i(for)e(their)g(endless)f(supp)36 b(ort)532
b(and)g(lo)-36 b(v)g(e.)877 b(They)534 b(ha)-36 b(v)g(e)2000
28325 y(b)36 b(een)448 b(there)h(for)g(me)g(at)g(ev)-36
b(ery)450 b(turn)e(of)h(m)-36 b(y)450 b(life,)k(and)448
b(ha)-36 b(v)g(e)449 b(tolerated)h(ev)-36 b(ery)449 b(one)g(of)h(m)-36
b(y)449 b(vices)2000 29930 y(with)434 b(remark)-72 b(able)434
b(grace.)3951 31535 y(Finally)-108 b(,)447 b(I)d(w)-36
b(ould)444 b(lik)-36 b(e)444 b(to)g(thank)g(F)-108 b(a)-36
b(y)g(e)443 b(McNeill)i(for)f(all)h(of)f(her)f(help,)j(supp)36
b(ort,)446 b(and)d(lo)-36 b(v)g(e,)2000 33141 y(esp)36
b(ecially)405 b(during)e(these)f(past)h(t)-36 b(w)g(o)404
b(w)-36 b(eeks.)569 b(She)403 b(is)g(the)g(reason)h(I)f(w)-36
b(as)404 b(giv)-36 b(en)404 b(a)g(heart)f(and)g(the)2000
34746 y(abilit)-36 b(y)435 b(to)e(lo)-36 b(v)g(e,)435
b(and)e(she)g(will)i(stand)e(b)-36 b(y)434 b(m)-36 b(y)433
b(side)h(forev)-36 b(er.)579 b(That's)434 b(a)g(promise.)25675
75321 y(5)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 25675 75321 a Fy(6)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 2000 10239 a Fw(Con)-86 b(ten)g(ts)2000
17681 y Fv(1)1204 b(In)-42 b(tro)42 b(duction)36333 b(11)2000
20696 y(2)1204 b(High-Lev)-42 b(el)499 b(P)-42 b(olicy)499
b(Decisions)26390 b(13)2000 23711 y(3)1204 b(A)499 b(Theoretical)h(Mo)
42 b(del)497 b(for)h(Sc)-42 b(heduling)501 b(Adaptiv)-42
b(ely)499 b(P)-42 b(arallel)500 b(Jobs)4514 b(17)3951
25382 y Fy(3.1)1331 b(A)433 b(Mo)36 b(del)434 b(for)g(Adaptiv)-36
b(ely)434 b(P)-36 b(arallel)435 b(Jobs)730 b(.)665 b(.)f(.)g(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(17)3951 27052 y(3.2)1331 b(An)433 b(Adv)-36 b(ersarial)434
b(Mo)36 b(del)434 b(for)g(Tw)-36 b(o-Lev)g(el)435 b(Sc)-36
b(hedulers)894 b(.)664 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(19)3951 28723 y(3.3)1331 b(Analysis)434 b(of)g(Greedy)g(Sc)-36
b(hedules)1262 b(.)665 b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911 b(22)2000 31738
y Fv(4)1204 b(A)499 b(Randomized)g(W)-125 b(ork-Stealing)500
b(Algorithm)g(for)3951 33343 y(Adaptiv)-42 b(ely)500
b(P)-42 b(arallel)500 b(Jobs)28506 b(27)3951 35013 y
Fy(4.1)1331 b(Algorithm)433 b(WSAP)h(in)f(the)g(Adv)-36
b(ersarial)435 b(Mo)36 b(del)1346 b(.)664 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)g(.)h(.)1911 b(27)3951 36684 y(4.2)1331
b(Algorithm)433 b(WSAP)h(in)f(Practice)1188 b(.)665 b(.)f(.)h(.)f(.)h
(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(30)2000 39699 y Fv(5)1204 b(A)499 b(Dynamic)g(Pro)42
b(cessor-Allo)g(cation)502 b(Algorithm)e(for)3951 41304
y(Adaptiv)-42 b(ely)500 b(P)-42 b(arallel)500 b(Jobs)28506
b(37)3951 42974 y Fy(5.1)1331 b(Prop)36 b(erties)433
b(of)h(a)g(Go)36 b(o)g(d)434 b(Dynamic)g(Pro)36 b(cessor-Allo)g(cation)
436 b(Algorithm)557 b(.)664 b(.)g(.)h(.)1911 b(37)3951
44645 y(5.2)1331 b(Algorithm)433 b(DP)593 b(.)665 b(.)f(.)g(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911 b(39)2000 47660 y Fv(6)1204
b(Cilk-AP:)333 b(A)f(Tw)-42 b(o-Lev)g(el)334 b(Sc)-42
b(heduler)334 b(for)e(Adaptiv)-42 b(ely)333 b(P)-42 b(arallel)334
b(W)-125 b(ork-Stealing)3951 49265 y(Jobs)41617 b(43)3951
50935 y Fy(6.1)1331 b(Design)434 b(Ov)-36 b(erview)1209
b(.)664 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(43)3951 52606 y(6.2)1331 b(Implemen)-36 b(tation)786
b(.)664 b(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(51)2000 55621 y Fv(7)1204 b(Exp)42 b(erimen)-42 b(tal)499
b(Results)30469 b(57)3951 57291 y Fy(7.1)1331 b(Ov)-36
b(erhead)433 b(of)h(Cilk-AP)847 b(.)664 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)
h(.)1911 b(58)6943 58962 y(7.1.1)1490 b(Exp)36 b(erimen)-36
b(t)433 b(O1:)578 b(All-Pro)36 b(cs)434 b(Time)g(Ov)-36
b(erhead)854 b(.)665 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(58)6943 60632 y(7.1.2)1490 b(Exp)36 b(erimen)-36 b(t)433
b(O2:)578 b(Running)433 b(Time)h(Ov)-36 b(erhead)1294
b(.)665 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(60)6943 62303 y(7.1.3)1490 b(Exp)36 b(erimen)-36 b(t)433
b(O3:)578 b(Pro)36 b(cess)434 b(Con)-36 b(trol)434 b(Ov)-36
b(erhead)557 b(.)665 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(61)3951 63973 y(7.2)1331 b(P)-36 b(erformance)433 b(of)i(Cilk-AP)1218
b(.)664 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911 b(62)6943 65644
y(7.2.1)1490 b(Exp)36 b(erimen)-36 b(t)433 b(P1:)578
b(Arriv)-72 b(al)435 b(of)f(a)g(New)g(Job)514 b(.)664
b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(62)6943 67315 y(7.2.2)1490 b(Exp)36 b(erimen)-36 b(t)433
b(P2:)578 b(Changes)434 b(in)g(P)-36 b(arallelism)435
b(During)e(Run)-36 b(time)1012 b(.)664 b(.)h(.)1911 b(63)6943
68985 y(7.2.3)1490 b(Exp)36 b(erimen)-36 b(t)433 b(P3:)578
b(The)434 b(Greedy-Sc)-36 b(heduling)432 b(Bound)1128
b(.)664 b(.)h(.)f(.)h(.)f(.)g(.)h(.)1911 b(64)2000 72000
y Fv(8)1204 b(Related)498 b(W)-125 b(ork)35461 b(71)25675
75321 y Fy(7)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 2000 1328 a Fv(9)1204 b(Conclusion)37409
b(73)25675 75321 y Fy(8)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop 2000 10554 a Fw(List)1032 b(of)h(Figures)3951
17031 y Fy(2-1)1258 b(Theoretical)661 b(p)36 b(erformance)660
b(of)h(static)f(vs.)1258 b(dynamic)661 b(pro)36 b(cessor-allo)g(cation)
6943 18636 y(p)g(olicies)577 b(on)f(a)g(system)g(with)g
Fu(P)757 b Fy(pro)36 b(cessors.)1006 b(In)576 b(scenario)g(a\),)613
b(jobs)576 b(A)g(and)6943 20241 y(B)502 b(are)h(running)e(and)h(job)h
(C)g(en)-36 b(ters)501 b(the)h(system)h(at)g(time)f Fu(t)p
Fy(;)537 b(in)503 b(scenario)g(b\),)6943 21846 y(jobs)335
b(A)h(and)f(B)h(are)f(running)g(and)g(exhibit)g(complemen)-36
b(tary)336 b(parallelism)h(pro\257les.)715 b(15)3951
25002 y(3-1)1258 b(A)340 b(fully)i(strict)f(m)-36 b(ultithreaded)339
b(computation.)547 b(The)341 b(shaded)f(blo)36 b(c)-36
b(ks)342 b(represen)-36 b(t)6943 26607 y(threads,)612
b(the)577 b(circles)g(represen)-36 b(t)576 b(tasks,)614
b(and)577 b(the)g(horizon)-36 b(tal)577 b(edges)g(within)6943
28212 y(eac)-36 b(h)480 b(thread)f(are)i(con)-36 b(tin)g(ue)480
b(edges.)718 b(Threads)481 b(are)f(connected)g(to)g(eac)-36
b(h)481 b(other)6943 29817 y(b)-36 b(y)484 b(spa)-36
b(wn)484 b(edges,)498 b(sho)-36 b(wn)484 b(as)h(do)-36
b(wn)g(w)g(ard-p)36 b(oin)-36 b(ting,)497 b(shaded)483
b(edges,)498 b(and)484 b(de-)6943 31422 y(p)36 b(endency)365
b(edges,)379 b(sho)-36 b(wn)366 b(as)g(curv)-36 b(ed)365
b(edges.)556 b(This)366 b(computation)g(con)-36 b(tains)366
b(20)6943 33027 y(tasks)434 b Fu(v)10874 33226 y Ft(1)11399
33027 y Fu(;)221 b(v)12610 33226 y Ft(2)13137 33027 y
Fu(;)g(:)g(:)g(:)i(;)e(v)16678 33226 y Ft(20)18109 33027
y Fy(organized)434 b(in)-36 b(to)433 b(six)i(threads.)967
b(.)665 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(18)3951 35076 y(3-2)1258 b(The)621 b(dag)g(corresp)36
b(onding)621 b(to)h(the)e(computation)h(in)h(Figure)f(3-1,)668
b(with)622 b(the)6943 36681 y(critical)521 b(path)e(sho)-36
b(wn)520 b(in)g(b)36 b(old.)839 b(The)520 b(progression)g
Fs(h)p Fu(G)35011 36880 y Ft(0)35537 36681 y Fu(;)221
b(G)37145 36880 y Ft(1)37671 36681 y Fu(;)g(:)g(:)g(:)j(;)d(G)41610
36880 y Fr(T)42344 36681 y Fs(i)520 b Fy(sho)-36 b(ws)6943
38286 y(the)427 b(subgraph)f(remaining)i(after)g(eac)-36
b(h)427 b(incomplete)h(step)f(of)i(a)f(greedy)f(sc)-36
b(hedule.)715 b(24)3951 41442 y(4-1)1258 b(State)433
b(diagram)h(of)g(a)g(pro)36 b(cessor's)434 b(execution)g(in)f
(algorithm)i(WSAP)-108 b(.)370 b(.)665 b(.)f(.)g(.)h(.)1911
b(29)3951 43491 y(4-2)1258 b(The)677 b(LOOPY)f(b)36 b(enc)-36
b(hmark:)1065 b(a)678 b(m)-36 b(ultithreaded)676 b(computation)h(with)g
(w)-36 b(ork)6943 45096 y Fu(T)7705 45295 y Ft(1)8600
45096 y Fy(=)368 b Fu(N)11161 44614 y Ft(2)11982 45096
y Fy(+)294 b Fu(N)572 b Fy(and)433 b(critical-path)h(length)f
Fu(T)29538 45295 y Fq(1)30904 45096 y Fy(=)368 b(2)p
Fu(N)139 b Fy(.)671 b(.)664 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h
(.)1911 b(32)3951 48252 y(5-1)1258 b(Example)500 b(allo)36
b(cations)501 b(for)f(a)g(system)g(with)g Fu(P)662 b
Fy(=)481 b(20)501 b(pro)36 b(cessors)500 b(and)f Fu(J)604
b Fy(=)481 b(5)6943 49857 y(jobs;)390 b(the)367 b(fairness,)382
b(e\261ciency)-108 b(,)381 b(and)367 b(conserv)-72 b(atism)368
b(conditions)g(are)g(ev)-72 b(aluated)6943 51462 y(on)490
b(the)h(righ)-36 b(t.)750 b(Eac)-36 b(h)491 b(large)h(circle)g
(represen)-36 b(ts)489 b(a)j(job,)506 b(and)490 b(the)h(small)h
(circles)6943 53067 y(within)645 b(the)g(job)g(represen)-36
b(t)644 b(its)i(pro)36 b(cessor)646 b(desire;)751 b(small)646
b(circles)g(that)f(are)6943 54672 y(gra)-36 b(y)g(ed)424
b(represen)-36 b(t)423 b(actual)h(pro)36 b(cessors.)576
b(The)424 b(gra)-36 b(y)425 b(circle)f(that)g(is)h(crossed)f(out)6943
56277 y(in)543 b(Job)g(3)h(of)g(the)f(second)g(allo)36
b(cation)546 b(represen)-36 b(ts)542 b(a)i(pro)36 b(cessor)543
b(allo)36 b(cated)545 b(to)6943 57882 y(the)433 b(job)g(b)36
b(ey)-36 b(ond)434 b(its)f(desire.)480 b(.)664 b(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h
(.)1911 b(38)3951 59931 y(5-2)1258 b(A)433 b(sample)h(allo)36
b(cation)435 b(trace)f(for)g(algorithm)g(DP)g(on)g(a)g(16-pro)36
b(cessor)434 b(system.)2015 b(40)3951 63087 y(6-1)1258
b(Ov)-36 b(erview)363 b(of)g(the)f(Cilk-AP)h(system.)555
b(Jobs)362 b(record)g(their)g(pro)36 b(cessor)362 b(desires)g(in)6943
64692 y(the)386 b(GA)-108 b(T)387 b(and)g(recompute)g(the)f(allo)36
b(cation)389 b(for)f(the)f(en)-36 b(tire)387 b(system)h(if)g(necessary)
-108 b(.)715 b(44)3951 66741 y(6-2)1258 b(A)446 b(sample)h
(desire-estimation)f(trace)h(for)g(job)g Fu(j)521 b Fy(with)447
b Fu(\264)438 b Fy(=)391 b(0)p Fu(:)p Fy(5.)618 b(There)447
b(are)g(16)6943 68346 y(pro)36 b(cessors)440 b(in)h(the)f(system)h(and)
f(one)h(other)f(job)h(running)e(concurren)-36 b(tly)440
b(with)6943 69951 y Fu(j)508 b Fy(whose)434 b(desire)f(is)h(consisten)
-36 b(tly)434 b(greater)g(than)f(8)h(pro)36 b(cessors.)673
b(.)664 b(.)h(.)f(.)h(.)f(.)g(.)h(.)1911 b(47)3951 72000
y(6-3)1258 b(Comparison)434 b(of)g(alternativ)-36 b(e)434
b(strategies)g(for)h(main)-36 b(taining)433 b(the)g(GA)-108
b(T.)791 b(.)664 b(.)g(.)h(.)1911 b(49)25675 75321 y(9)p
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 3951 1328 a Fy(6-4)1258 b(The)436
b(thread)g(state)g(arra)-36 b(y)437 b(\(TSA\))f(used)g(b)-36
b(y)437 b(the)e(Cilk-AP)j(sc)-36 b(heduler)435 b(to)i(orga-)6943
2933 y(nize)420 b(the)g(w)-36 b(ork)g(ers)421 b(of)g(a)f(job.)574
b(The)421 b(\257rst)e Fp(active)f Fy(w)-36 b(ork)g(ers)421
b(are)f(either)g(w)-36 b(orking)6943 4539 y(or)481 b(stealing;)506
b(the)481 b(next)g Fp(procs)p 22553 4539 411 45 v 490
w(with)p 25779 4539 V 490 w(work)326 b Fs(\241)i Fp(active)479
b Fy(w)-36 b(ork)g(ers)482 b(are)f(sleeping)6943 6144
y(with)602 b(w)-36 b(ork;)687 b(and)602 b(the)g(last)g
Fu(P)591 b Fs(\241)410 b Fp(procs)p 27980 6144 V 490
w(with)p 31206 6144 V 491 w(work)600 b Fy(w)-36 b(ork)g(ers)603
b(are)f(sleeping)6943 7749 y(without)433 b(w)-36 b(ork.)773
b(.)665 b(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(53)3951 10461 y(7-1)1258 b(The)448 b(parallelism)h(of)g(four)f(Cilk)i
(jobs,)j(deriv)-36 b(ed)447 b(from)i(w)-36 b(ork)449
b(and)f(critical)h(path)6943 12066 y(measuremen)-36 b(ts.)578
b(The)434 b(all-pro)36 b(cs)435 b(time)f(and)f(running)g(time)h(of)h
(eac)-36 b(h)434 b(job)g(using)6943 13671 y(the)f(Cilk)i(system)e(is)h
(sho)-36 b(wn)434 b(on)f(the)g(righ)-36 b(t.)578 b(All)434
b(times)g(are)g(in)f(seconds.)1218 b(.)664 b(.)h(.)1911
b(59)3951 15276 y(7-2)1258 b(The)494 b(all-pro)36 b(cs)495
b(time)f(of)i(di\256eren)-36 b(t)493 b(jobs)i(using)f(the)g(Cilk-AP)h
(system,)511 b(sho)-36 b(wn)6943 16881 y(on)433 b(an)g(absolute)h
(scale)g(in)g(\(a\))f(and)h(in)f(terms)g(of)527 b Fp(est)p
33795 16881 V 491 w(cycle)431 b Fy(in)j(\(b\).)656 b(.)665
b(.)f(.)g(.)h(.)1911 b(65)3951 18486 y(7-3)1258 b(The)494
b(all-pro)36 b(cs)495 b(time)f(of)i(di\256eren)-36 b(t)493
b(jobs)i(using)f(the)g(Cilk-AP)h(system,)511 b(sho)-36
b(wn)6943 20091 y(as)433 b(a)h(ratio)g(of)h(the)e(all-pro)36
b(cs)434 b(time)f(using)h(Cilk.)1298 b(.)665 b(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911 b(66)3951 21696 y(7-4)1258
b(The)433 b(all-pro)36 b(cs)434 b(time)g(of)g(the)f Fp(loopy)e
Fy(program)j(using)f(Cilk-AP)i(and)e(Cilk-AP-)6943 23302
y(INST,)507 b(a)g(v)-36 b(ersion)508 b(of)g(Cilk-AP)g(that)e(uses)h
(instan)-36 b(taneous)506 b(parallelism)i(mea-)6943 24907
y(suremen)-36 b(ts)432 b(to)i(estimate)f(a)h(job's)h(desire.)1349
b(.)665 b(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g
(.)h(.)1911 b(67)3951 26512 y(7-5)1258 b(The)527 b(running)e(time)j(o)
-36 b(v)g(erhead)527 b(of)g(the)g(Cilk-AP)h(system)f(for)h(di\256eren)
-36 b(t)526 b(jobs,)6943 28117 y(expressed)433 b(as)h(a)g(p)36
b(ercen)-36 b(tage)433 b(of)h(the)f(corresp)36 b(onding)433
b(running)g(time)g(using)h(Cilk.)751 b(68)3951 29722
y(7-6)1258 b(The)328 b(o)-36 b(v)g(erhead)328 b(of)g(pro)36
b(cess)329 b(con)-36 b(trol)328 b(when)f(the)h(n)-36
b(um)g(b)36 b(er)326 b(of)j(w)-36 b(ork)g(ers)329 b(in)f(the)f(sys-)
6943 31327 y(tem)411 b(exceeds)g Fu(P)592 b Fy(\(=)369
b(16)412 b(in)f(the)g(ab)36 b(o)-36 b(v)g(e)412 b(exp)36
b(erimen)-36 b(ts\).)570 b(Eac)-36 b(h)411 b(time)h(represen)-36
b(ts)6943 32932 y(the)433 b(mean)g(resp)36 b(onse)433
b(time)h(of)g(jobs)g(1)g(and)f(2)h(in)f(seconds.)1280
b(.)664 b(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911 b(68)3951
34537 y(7-7)1258 b(Theoretical)389 b(v)-72 b(alues)390
b(for)f(the)f(mean)h(resp)36 b(onse)389 b(time,)398 b(throughput,)e
(and)388 b(p)36 b(o)-36 b(w)g(er)6943 36142 y(ac)g(hiev)g(ed)347
b(b)-36 b(y)346 b(the)h(Cilk)h(and)e(Cilk-AP)i(systems)f(in)f(scenario)
i(\(a\))f(of)g(Figure)g(2-1.)6943 37747 y(The)433 b(ratio)h(of)h
(Cilk-AP)f(to)g(Cilk)h(is)f(sho)-36 b(wn)433 b(for)h(eac)-36
b(h)434 b(metric.)c(.)665 b(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(69)3951 39352 y(7-8)1258 b(Exp)36 b(erimen)-36 b(tal)692
b(v)-72 b(alues)693 b(for)g(the)e(mean)h(resp)36 b(onse)692
b(time,)758 b(throughput,)d(and)6943 40958 y(p)36 b(o)-36
b(w)g(er)596 b(ac)-36 b(hiev)g(ed)597 b(b)-36 b(y)597
b(the)f(Cilk)i(and)e(Cilk-AP)i(systems)f(in)g(scenario)g(\(a\))g(of)
6943 42563 y(Figure)584 b(2-1.)1032 b(The)585 b(ratio)g(of)h(Cilk-AP)f
(to)g(Cilk)h(is)g(sho)-36 b(wn)584 b(for)h(eac)-36 b(h)585
b(metric.)6943 44168 y(Three)433 b(instances)g(of)527
b Fp(fib\(38\))431 b Fy(are)j(used)e(to)i(represen)-36
b(t)432 b(jobs)i(A,)g(B,)g(and)f(C.)990 b(.)1911 b(69)3951
45773 y(7-9)1258 b(The)428 b(mean)h(resp)36 b(onse)428
b(time)g(and)g(pro)36 b(cessor)429 b(usage)g(of)g(the)f(Cilk)i(and)e
(Cilk-AP)6943 47378 y(systems)492 b(in)g(scenario)g(\(b\))g(of)g
(Figure)g(2-1.)754 b(The)493 b Fp(knary)c Fy(program)j(is)h(used)e(to)
6943 48983 y(implemen)-36 b(t)432 b(the)h(serial)i(and)e(parallel)i
(phases)e(of)h(jobs)g(A)g(and)f(B.)588 b(.)665 b(.)f(.)h(.)f(.)g(.)h(.)
1911 b(69)3951 50588 y(7-10)608 b(The)558 b(running)g(times)g(of)i
(di\256eren)-36 b(t)557 b(jobs)i(using)f(the)h(Cilk-AP)g(system,)590
b(com-)6943 52193 y(pared)534 b(here)g(to)g(the)h(greedy-sc)-36
b(heduling)533 b(b)36 b(ound)534 b(in)g(Theorem)h(3.)882
b(All)535 b(times)6943 53798 y(are)433 b(in)h(seconds.)396
b(.)665 b(.)f(.)g(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)g(.)h(.)1911
b(70)25350 75321 y(10)p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 2000 10282 a Fw(Chapter)1033
b(1)2000 15915 y(In)-86 b(tro)86 b(duction)2000 22046
y Fy(An)384 b Fo(adaptively)499 b(p)-78 b(ar)g(al)78
b(lel)498 b(job)490 b Fy(is)385 b(a)g(job)f(for)h(whic)-36
b(h)385 b(the)f(n)-36 b(um)g(b)36 b(er)383 b(of)i(pro)36
b(cessors)385 b(that)f(can)g(b)36 b(e)2000 23651 y(used)289
b(without)h(w)-36 b(aste)291 b(v)-72 b(aries)291 b(during)e(execution.)
531 b(This)291 b(n)-36 b(um)g(b)36 b(er)288 b(represen)-36
b(ts)289 b(the)h(instan)-36 b(taneous)2000 25256 y(parallelism,)428
b(or)c(pro)36 b(cessor)424 b(desire,)j(of)e(the)e(job.)576
b(In)424 b(this)g(thesis,)i(w)-36 b(e)425 b(in)-36 b(v)g(estigate)425
b(the)e(problem)2000 26861 y(of)560 b(sc)-36 b(heduling)559
b(m)-36 b(ultiple,)592 b(concurren)-36 b(t,)590 b(adaptiv)-36
b(ely)560 b(parallel)h(jobs)f(on)g(a)g(m)-36 b(ultiprogrammed)2000
28466 y(shared-memory)553 b(m)-36 b(ultipro)36 b(cessor.)938
b(W)-108 b(e)554 b(fo)36 b(cus)554 b(on)f(the)g(sp)36
b(eci\257c)554 b(case)g(of)g(parallel)h(jobs)e(that)2000
30071 y(sc)-36 b(hedule)554 b(their)h(computation)g(on)g(a)g(giv)-36
b(en)556 b(set)f(of)g(pro)36 b(cessors)556 b(using)f(a)g(randomized)g
(w)-36 b(ork-)2000 31677 y(stealing)434 b(algorithm,)h(as)f(is)g(used)f
(in)g(the)g(Cilk)i(m)-36 b(ultithreaded)432 b(language)j([5,)169
b(19,)g(47].)3951 33380 y(The)478 b(problem)g(of)h(sc)-36
b(heduling)477 b(parallel)j(jobs)e(on)g(m)-36 b(ultiprogrammed)478
b(parallel)h(systems)g(is)2000 34985 y(t)-36 b(w)g(o-fold:)917
b(\257rst,)644 b(the)603 b(pro)36 b(cessors)603 b(are)f(allo)36
b(cated)604 b(to)f(the)f(comp)36 b(eting)603 b(jobs,)646
b(and)602 b(second,)645 b(a)2000 36590 y(thread)470 b(from)h(a)f(job)h
(is)g(c)-36 b(hosen)470 b(to)g(run)g(on)g(eac)-36 b(h)470
b(of)i(the)d(job's)j(allo)36 b(cated)471 b(pro)36 b(cessors)471
b([17].)690 b(In)2000 38195 y Fo(single-level)569 b(sche)-78
b(duling)139 b Fy(,)457 b(the)450 b(decision)h(of)h(where)e(to)h(allo)
36 b(cate)453 b(a)e(pro)36 b(cessor)451 b(is)g(com)-36
b(bined)2000 39800 y(with)555 b(the)f(decision)h(of)g(whic)-36
b(h)554 b(thread)g(to)h(run)e(on)i(it;)615 b(in)555 b(other)f(w)-36
b(ords,)585 b(the)554 b(op)36 b(erating)555 b(sys-)2000
41405 y(tem)498 b(sc)-36 b(hedules)498 b(all)i(threads)e(of)h(all)g
(jobs.)774 b(In)499 b Fo(two-level)621 b(sche)-78 b(duling)139
b Fy(,)516 b(the)498 b(t)-36 b(w)g(o)499 b(issues)g(are)2000
43010 y(decoupled:)709 b(the)498 b(op)36 b(erating)499
b(system)h(is)f(resp)36 b(onsible)499 b(for)h(allo)36
b(cating)501 b(pro)36 b(cessors)499 b(to)g(the)g(jobs)2000
44615 y(\(the)351 b(\257rst)h(lev)-36 b(el)353 b(of)g(sc)-36
b(heduling\),)368 b(and)351 b(the)h(jobs)h(are)f(resp)36
b(onsible)352 b(for)h(sc)-36 b(heduling)351 b(their)h(threads)2000
46220 y(on)511 b(those)f(pro)36 b(cessors)511 b(\(the)f(second)g(lev)
-36 b(el)512 b(of)g(sc)-36 b(heduling\).)809 b(Since)510
b(pro)36 b(cessors)511 b(are)g(allo)36 b(cated)2000 47826
y(to)576 b(jobs,)612 b(sharing)576 b(is)g(done)g(using)f
Fo(sp)-78 b(ac)g(e)705 b(slicing)139 b Fy(,)613 b(where)575
b(the)h(pro)36 b(cessors)576 b(of)g(the)g(system)2000
49431 y(are)421 b(partitioned)g(statically)h(or)f(dynamically)i(among)e
(the)f(di\256eren)-36 b(t)420 b(jobs.)575 b(In)420 b(con)-36
b(trast,)424 b Fo(time)2000 51036 y(slicing)523 b Fy(shares)383
b(pro)36 b(cessors)383 b(b)-36 b(y)382 b(rotating)h(them)f(from)i(one)e
(job)h(to)g(another)f(during)g(eac)-36 b(h)383 b(time)2000
52641 y(quan)-36 b(tum)433 b(and)g(is)h(more)f(common)h(in)f
(single-lev)-36 b(el)435 b(sc)-36 b(heduling.)3951 54344
y(W)-108 b(e)444 b(ha)-36 b(v)g(e)444 b(dev)-36 b(elop)36
b(ed)444 b(a)g(theoretical)h(basis)f(for)h(analyzing)g(the)e(p)36
b(erformance)444 b(of)h(t)-36 b(w)g(o-lev)g(el)2000 55949
y(sc)g(hedulers.)545 b(W)-108 b(e)336 b(mo)36 b(del)336
b(the)f(in)-36 b(teraction)336 b(b)36 b(et)-36 b(w)g(een)335
b(the)h(\257rst)f(and)g(second)h(lev)-36 b(els)337 b(of)g(sc)-36
b(heduling)2000 57554 y(b)g(y)412 b(pla)-36 b(ying)414
b(a)e(game)i(b)36 b(et)-36 b(w)g(een)412 b(the)f(op)36
b(erating)413 b(system)g(and)f(the)g(job)h(sc)-36 b(heduler,)416
b(in)c(whic)-36 b(h)413 b(the)2000 59159 y(op)36 b(erating)334
b(system)g(acts)g(as)g(an)f(adv)-36 b(ersary)-108 b(.)545
b(A)334 b(similar)h(approac)-36 b(h)333 b(is)h(tak)-36
b(en)333 b(b)-36 b(y)334 b(Arora)g(et.)545 b(al.)334
b([2])2000 60764 y(to)534 b(mo)36 b(del)533 b(m)-36 b(ultiprogrammed)
533 b(en)-36 b(vironmen)g(ts)533 b(for)h(their)f(thread)f(sc)-36
b(heduler.)877 b(W)-108 b(e)534 b(de\257ne)e(an)2000
62369 y(adaptiv)-36 b(ely)344 b(parallel)f(job)g(using)g(the)f
(graph-theoretic)g(mo)36 b(del)343 b(of)g(m)-36 b(ultithreaded)341
b(computation)2000 63975 y(dev)-36 b(elop)36 b(ed)434
b(b)-36 b(y)433 b(Blumofe)h(and)f(Leiserson)h([7].)579
b(W)-108 b(e)433 b(extend)g(the)g(mo)36 b(del's)434 b(de\257nition,)f
(ho)-36 b(w)g(ev)g(er,)2000 65580 y(to)467 b(supp)36
b(ort)466 b(the)g(idea)h(of)h(adaptiv)-36 b(e)467 b(parallelism)h(when)
f(executing)g(a)g(m)-36 b(ultithreaded)466 b(compu-)2000
67185 y(tation.)837 b(In)519 b(particular,)542 b(the)519
b(mo)36 b(del)520 b(can)g(handle)f(a)h(scenario)g(where)g(the)f(op)36
b(erating)520 b(system)2000 68790 y(\(adv)-36 b(ersary\))463
b(c)-36 b(hanges)463 b(the)f(n)-36 b(um)g(b)36 b(er)462
b(of)h(pro)36 b(cessors)464 b(allo)36 b(cated)464 b(to)f(a)g(job)g(at)g
(the)g(b)36 b(eginning)462 b(of)2000 70395 y(ev)-36 b(ery)482
b(time)g(step.)722 b(W)-108 b(e)482 b(sho)-36 b(w)482
b(that)f(it)h(is)g(still)g(p)36 b(ossible)482 b(for)g(a)g(job)g(sc)-36
b(heduler)481 b(using)h(a)g(greedy)2000 72000 y(algorithm)404
b(under)d(these)h(conditions)h(to)g(ac)-36 b(hiev)g(e)404
b(an)f(execution)g(time)g(that)f(is)h(within)g(a)g(factor)25350
75321 y(11)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 2000 1328 a Fy(of)434 b(2)g(of)h(optimal.)3951
2933 y(Using)401 b(our)g(theoretical)g(mo)36 b(del,)409
b(w)-36 b(e)401 b(ha)-36 b(v)g(e)401 b(dev)-36 b(elop)36
b(ed)401 b(a)g(randomized)g(w)-36 b(ork-stealing)402
b(algo-)2000 4539 y(rithm)504 b(for)h(adaptiv)-36 b(ely)506
b(parallel)g(jobs,)523 b(algorithm)506 b(WSAP)e(\(for)h(\\w)-36
b(ork)506 b(stealing,)524 b(adaptiv)-36 b(ely)2000 6144
y(parallel"\),)453 b(that)448 b(can)f(handle)h(dynamically)h(c)-36
b(hanging)448 b(pro)36 b(cessor)449 b(allo)36 b(cations;)457
b(WSAP)448 b(is)g(an)2000 7749 y(extension)492 b(of)g(algorithm)g(WS)f
(presen)-36 b(ted)490 b(in)h([7].)752 b(W)-108 b(e)492
b(also)g(describ)36 b(e)491 b(a)h(dynamic)f(pro)36 b(cessor-)2000
9354 y(allo)g(cation)332 b(algorithm,)352 b(algorithm)330
b(DP)h(\(for)f(\\dynamic)h(partitioning"\),)351 b(whic)-36
b(h)330 b(allo)36 b(cates)332 b(pro-)2000 10959 y(cessors)489
b(to)h(jobs)f(b)36 b(oth)488 b(fairly)j(and)e(e\261cien)-36
b(tly)489 b(b)-36 b(y)489 b(resp)36 b(onding)488 b(to)h(c)-36
b(hanges)489 b(in)g(the)g(pro)36 b(cessor)2000 12564
y(desires)543 b(of)h(jobs)f(during)f(run)-36 b(time.)906
b(Using)543 b(these)g(t)-36 b(w)g(o)543 b(algorithms,)571
b(w)-36 b(e)544 b(ha)-36 b(v)g(e)543 b(designed)f(and)2000
14169 y(implemen)-36 b(ted)431 b(a)h(t)-36 b(w)g(o-lev)g(el)433
b(sc)-36 b(heduling)431 b(system)h(for)g(adaptiv)-36
b(ely)433 b(parallel)g(w)-36 b(ork-stealing)433 b(jobs)2000
15774 y(running)442 b(on)i(a)f(m)-36 b(ultiprogrammed)443
b(shared-memory)g(system.)609 b(In)443 b(the)g(\257rst)g(lev)-36
b(el)444 b(of)g(sc)-36 b(hedul-)2000 17379 y(ing,)488
b(w)-36 b(e)477 b(use)g(algorithm)g(DP)g(to)g(allo)36
b(cate)479 b(pro)36 b(cessors)477 b(to)g(the)f(running)g(jobs,)488
b(based)477 b(on)f(their)2000 18984 y(curren)-36 b(t)421
b(pro)36 b(cessor)424 b(desires.)574 b(In)423 b(the)f(second)h(lev)-36
b(el)424 b(of)f(sc)-36 b(heduling,)425 b(w)-36 b(e)423
b(use)g(algorithm)g(WSAP)2000 20589 y(to)411 b(sc)-36
b(hedule)411 b(the)g(computation)f(of)i(a)g(single)g(job)f(and)g(rep)36
b(ort)411 b(its)g(curren)-36 b(t)410 b(pro)36 b(cessor)412
b(desire)f(to)2000 22195 y(the)433 b(\257rst-lev)-36
b(el)433 b(sc)-36 b(heduler.)3951 23800 y(The)461 b(manner)g(in)g(whic)
-36 b(h)461 b(a)g(job's)h(curren)-36 b(t)460 b(pro)36
b(cessor)462 b(desire)f(is)g(estimated)g(is)h(an)f(in)-36
b(terest-)2000 25405 y(ing)557 b(problem)f(on)h(its)g(o)-36
b(wn.)948 b(In)556 b(particular,)588 b(w)-36 b(e)557
b(sho)-36 b(w)557 b(that)f(measuring)h(the)f(instan)-36
b(taneous)2000 27010 y(parallelism)467 b(of)g(a)g(job)g(can)f(grossly)h
(underestimate)f(the)f(actual)i(parallelism)g(in)g(the)e(job.)677
b(W)-108 b(e)2000 28615 y(prop)36 b(ose)340 b(a)g(strategy)h(that)f
(proactiv)-36 b(ely)341 b(explores)g(the)e(parallelism)j(of)e(a)h(job)f
(and)g(uses)g(feedbac)-36 b(k)2000 30220 y(from)434 b(w)-36
b(ork-stealing)435 b(statistics)f(to)g(tune)e(the)h(estimated)h
(desire.)3951 31825 y(W)-108 b(e)527 b(ha)-36 b(v)g(e)528
b(implemen)-36 b(ted)526 b(our)h(t)-36 b(w)g(o-lev)g(el)529
b(sc)-36 b(heduler)526 b(b)-36 b(y)527 b(extending)h(the)e(run)-36
b(time)527 b(system)2000 33430 y(of)495 b(the)g(Cilk)h(m)-36
b(ultithreaded)493 b(language.)763 b(W)-108 b(e)494 b(call)i(our)e
(system)h(Cilk-AP)-108 b(.)496 b(The)f(original)h(Cilk)2000
35035 y(sc)-36 b(heduler)345 b(implemen)-36 b(ts)346
b(algorithm)i(WS)e([7],)365 b(whic)-36 b(h)346 b(assumes)h(that)f(the)g
(n)-36 b(um)g(b)36 b(er)344 b(of)k(pro)36 b(cessors)2000
36640 y(allo)g(cated)403 b(to)f(a)f(job)h(remains)g(\257xed)f
(throughout)g(its)g(execution.)568 b(W)-108 b(e)402 b(mo)36
b(di\257ed)401 b(the)g(sc)-36 b(heduler)2000 38245 y(to)452
b(implemen)-36 b(t)451 b(algorithm)h(WSAP)-108 b(,)451
b(whic)-36 b(h)452 b(handles)f(dynamically)i(c)-36 b(hanging)451
b(pro)36 b(cessor)452 b(allo-)2000 39851 y(cations,)370
b(and)354 b(w)-36 b(e)354 b(added)f(a)h(user-lev)-36
b(el)354 b(extension)g(that)f(implemen)-36 b(ts)353 b(the)g(pro)36
b(cessor-allo)g(cation)2000 41456 y(algorithm)426 b(DP)-108
b(.)426 b(Cilk-AP)g(uses)f(a)h(tec)-36 b(hnique)425 b(called)h(pro)36
b(cess)425 b(con)-36 b(trol)426 b([48])g(to)g(co)36 b(ordinate)426
b(the)2000 43061 y(reallo)36 b(cation)352 b(of)f(pro)36
b(cessors)351 b(b)36 b(et)-36 b(w)g(een)350 b(the)g(\257rst)g(and)g
(second)g(lev)-36 b(els)352 b(of)f(sc)-36 b(heduling.)550
b(This)351 b(tec)-36 b(h-)2000 44666 y(nique)448 b(is)g(di\256eren)-36
b(t)446 b(from)i(the)f(tec)-36 b(hnique)447 b(used)g(in)h([2],)k(b)36
b(ecause)448 b(it)f(ensures)g(that)g(the)h(n)-36 b(um)g(b)36
b(er)2000 46271 y(of)540 b(virtual)f(pro)36 b(cessors)540
b(used)e(b)-36 b(y)539 b(a)g(job)h(alw)-36 b(a)g(ys)540
b(matc)-36 b(hes)539 b(the)g(n)-36 b(um)g(b)36 b(er)537
b(of)j(ph)-36 b(ysical)539 b(pro)36 b(ces-)2000 47876
y(sors)567 b(assigned)g(to)g(it.)979 b(Empirical)567
b(results)g(demonstrate)f(that)h(Cilk-AP)g(has)g(lo)-36
b(w)568 b(o)-36 b(v)g(erhead)2000 49481 y(and)541 b(impro)-36
b(v)g(ed)541 b(p)36 b(erformance)541 b(o)-36 b(v)g(er)542
b(the)e(original)j(Cilk)f(system)g(in)f(a)h(v)-72 b(ariet)-36
b(y)542 b(of)g(situations.)2000 51086 y(These)343 b(results)g(also)h
(suggest)g(that)f(algorithm)g(WSAP)g(runs)g(in)g(asymptotically)i
(optimal)f(time,)2000 52691 y(although)433 b(w)-36 b(e)434
b(ha)-36 b(v)g(e)434 b(not)f(y)-36 b(et)434 b(v)-36 b(eri\257ed)433
b(this)h(conjecture)f(theoretically)-108 b(.)3951 54296
y(The)474 b(remainder)g(of)h(this)g(thesis)f(is)g(organized)h(as)g
(follo)-36 b(ws.)703 b(In)474 b(Chapter)g(3,)485 b(w)-36
b(e)475 b(dev)-36 b(elop)475 b(a)2000 55901 y(theoretical)418
b(mo)36 b(del)418 b(for)h(adaptiv)-36 b(ely)419 b(parallel)f
(computation,)j(using)d(the)f(t)-36 b(w)g(o-lev)g(el)419
b(sc)-36 b(heduling)2000 57507 y(approac)g(h.)1218 b(Chapter)646
b(4)i(presen)-36 b(ts)645 b(our)i(randomized)f(w)-36
b(ork-stealing)649 b(algorithm)e(for)h(adap-)2000 59112
y(tiv)-36 b(ely)365 b(parallel)f(jobs,)379 b(algorithm)364
b(WSAP)-108 b(,)363 b(and)g(Chapter)h(5)g(presen)-36
b(ts)362 b(our)h(dynamic)h(pro)36 b(cessor-)2000 60717
y(allo)g(cation)481 b(algorithm,)492 b(algorithm)479
b(DP)-108 b(.)480 b(In)f(Chapter)f(6,)492 b(w)-36 b(e)479
b(discuss)g(the)g(design)g(and)f(imple-)2000 62322 y(men)-36
b(tation)471 b(of)i(our)f(t)-36 b(w)g(o-lev)g(el)472
b(sc)-36 b(heduling)472 b(system,)482 b(Cilk-AP;)473
b(w)-36 b(e)472 b(presen)-36 b(t)471 b(empirical)h(results)2000
63927 y(for)564 b(Cilk-AP)h(in)f(Chapter)f(7.)970 b(Chapter)563
b(8)h(discusses)g(previous)g(w)-36 b(ork)564 b(and)g(w)-36
b(e)564 b(conclude)f(in)2000 65532 y(Chapter)433 b(9.)25350
75321 y(12)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 2000 10227 a Fw(Chapter)1033
b(2)2000 15804 y(High-Lev)-86 b(el)1031 b(P)-86 b(olicy)1032
b(Decisions)2000 21880 y Fy(In)592 b(this)g(c)-36 b(hapter,)631
b(w)-36 b(e)593 b(justify)g(some)f(of)h(the)f(ma)72 b(jor)593
b(p)36 b(olicy)594 b(decisions)e(in)g(our)g(approac)-36
b(h)592 b(to)2000 23485 y(sc)-36 b(heduling)433 b(adaptiv)-36
b(ely)435 b(parallel)f(jobs.)579 b(In)433 b(particular,)h(w)-36
b(e)434 b(discuss)f(the)g(adv)-72 b(an)-36 b(tages)434
b(of)3445 25829 y(1\))651 b(t)-36 b(w)g(o-lev)g(el)434
b(sc)-36 b(heduling)433 b(o)-36 b(v)g(er)434 b(single-lev)-36
b(el)435 b(sc)-36 b(heduling,)3445 27773 y(2\))651 b(dynamic)433
b(pro)36 b(cessor)434 b(allo)36 b(cation)436 b(o)-36
b(v)g(er)434 b(static)g(allo)36 b(cation)435 b(,)f(and)3445
29718 y(3\))651 b(co)36 b(ordinated)433 b(pro)36 b(cessor)434
b(reallo)36 b(cation)435 b(o)-36 b(v)g(er)434 b(unco)36
b(ordinated)433 b(pro)36 b(cessor)434 b(reallo)36 b(cation.)3951
32104 y(When)509 b(c)-36 b(ho)36 b(osing)510 b(these)f(p)36
b(olicies,)530 b(w)-36 b(e)510 b(fo)36 b(cus)510 b(on)g(their)f
(applicabilit)-36 b(y)511 b(to)f(shared-memory)2000 33709
y(systems)499 b(that)e(use)h(the)g(\\w)-36 b(orkpile-of-tasks")501
b(programming)d(mo)36 b(del,)515 b(in)498 b(whic)-36
b(h)498 b(a)h(computa-)2000 35315 y(tion)469 b(is)g(represen)-36
b(ted)467 b(as)i(a)g(w)-36 b(orkpile)469 b(of)h(tasks)f(that)f(are)h
(executed)f(b)-36 b(y)469 b(a)g(v)-72 b(ariable)469 b(n)-36
b(um)g(b)36 b(er)467 b(of)2000 36920 y(w)-36 b(ork)g(er)457
b(threads)e([17].)648 b(The)456 b(mo)36 b(del)457 b(for)f(adaptiv)-36
b(ely)458 b(parallel)f(computation)f(that)g(w)-36 b(e)456
b(presen)-36 b(t)2000 38525 y(in)433 b(Chapter)h(3)f(is)h(a)g(v)-72
b(arian)-36 b(t)434 b(of)g(this)g(mo)36 b(del.)2000 43226
y FC(Tw)-60 b(o-Lev)g(el)717 b(Sc)-60 b(heduling)2000
46233 y Fy(The)465 b(\257rst)g(p)36 b(olicy)466 b(decision)g(w)-36
b(e)466 b(consider)f(is)g(the)g(c)-36 b(hoice)466 b(b)36
b(et)-36 b(w)g(een)465 b(single-lev)-36 b(el)466 b(and)f(t)-36
b(w)g(o-lev)g(el)2000 47838 y(sc)g(heduling,)422 b(the)e(t)-36
b(w)g(o)420 b(basic)h(approac)-36 b(hes)420 b(to)g(sc)-36
b(heduling)419 b(in)h(m)-36 b(ultiprogrammed)420 b(parallel)h(sys-)2000
49443 y(tems)433 b(de\257ned)f(in)i(Chapter)f(1.)3951
51091 y(In)330 b(single-lev)-36 b(el)331 b(sc)-36 b(heduling,)350
b(the)329 b(op)36 b(erating)330 b(system)g(is)g(resp)36
b(onsible)330 b(for)g(sc)-36 b(heduling)329 b(all)i(job)2000
52696 y(threads)360 b(directly)h(on)-36 b(to)361 b(the)f(pro)36
b(cessors.)555 b(The)360 b(problem)h(with)g(this)f(approac)-36
b(h)360 b(is)h(that)g(it)g(incurs)2000 54301 y(high)396
b(op)36 b(erating-system)396 b(o)-36 b(v)g(erhead)396
b(and)f(ma)-36 b(y)397 b(not)f(b)36 b(e)395 b(resp)36
b(onsiv)-36 b(e)397 b(to)f(application)g(needs)f([17].)2000
55906 y(Since)378 b(man)-36 b(y)380 b(sc)-36 b(heduling)378
b(decisions)h(are)g(a)g(result)g(of)g(sync)-36 b(hronization)379
b(conditions)g(among)h(the)2000 57511 y(application's)375
b(threads,)386 b(pa)-36 b(ying)374 b(the)g(op)36 b(erating)375
b(system)f(o)-36 b(v)g(erhead)375 b(at)f(ev)-36 b(ery)375
b(sync)-36 b(hronization)2000 59117 y(p)36 b(oin)-36
b(t)349 b(is)h(exp)36 b(ensiv)-36 b(e.)551 b(The)350
b(cost)g(is)g(esp)36 b(ecially)351 b(high)f(in)f(\257ne-grained)g
(applications,)367 b(where)350 b(suc)-36 b(h)2000 60722
y(in)g(teractions)382 b(b)36 b(et)-36 b(w)g(een)382 b(threads)g(are)g
(n)-36 b(umerous)381 b(and)h(frequen)-36 b(t.)561 b(F)-108
b(urthermore,)391 b(the)382 b(op)36 b(erating)2000 62327
y(system)476 b(is)g(unable)g(to)g(optimize)g(the)f(sc)-36
b(heduling,)487 b(b)36 b(ecause)475 b(it)h(lac)-36 b(ks)477
b(information)g(ab)36 b(out)476 b(the)2000 63932 y(application's)434
b(c)-36 b(haracteristics)434 b(and)f(sync)-36 b(hronization)434
b(patterns.)3951 65580 y(The)485 b(solution)h(to)f(this)g(problem)g(is)
h(to)g(use)f(t)-36 b(w)g(o-lev)g(el)486 b(sc)-36 b(heduling,)498
b(where)485 b(the)g(op)36 b(erating)2000 67185 y(system)525
b(is)f(only)h(resp)36 b(onsible)524 b(for)h(allo)36 b(cating)526
b(pro)36 b(cessors)525 b(to)f(the)g(comp)36 b(eting)524
b(jobs,)548 b(and)524 b(the)2000 68790 y(applications)529
b(themselv)-36 b(es)528 b(p)36 b(erform)528 b(the)g(\257ne-grain)f(sc)
-36 b(heduling)527 b(of)i(threads)f(on)-36 b(to)528 b(allo)36
b(cated)2000 70395 y(pro)g(cessors)511 b(in)g(a)g(w)-36
b(a)g(y)511 b(that)f(satis\257es)h(sync)-36 b(hronization)511
b(constrain)-36 b(ts.)809 b(The)511 b(in)-36 b(ternal)510
b(lev)-36 b(el)512 b(of)2000 72000 y(sc)-36 b(heduling)600
b(allo)-36 b(ws)603 b(the)d(application)i(to)f(ha)-36
b(v)g(e)601 b(more)h(threads)e(than)g(allo)36 b(cated)602
b(pro)36 b(cessors.)25350 75321 y(13)p eop end
%%Page: 14 14
TeXDict begin 14 13 bop 2000 1328 a Fy(It)497 b(also)i(mak)-36
b(es)498 b(it)f(p)36 b(ossible)498 b(to)g(create)f(systems)h(where)f
(the)g(allo)36 b(cation)499 b(c)-36 b(hanges)498 b(at)f(run)-36
b(time)2000 2933 y(and)393 b(applications)i(are)f(exp)36
b(ected)394 b(to)g(resc)-36 b(hedule)393 b(their)g(threads)g
(accordingly)-108 b(.)566 b(This)394 b(approac)-36 b(h)2000
4539 y(is)526 b(w)-36 b(ell)527 b(suited)f(to)g(the)f(w)-36
b(orkpile-of-tasks)528 b(programming)e(mo)36 b(del,)550
b(where)526 b(the)f(tasks)i(can)f(b)36 b(e)2000 6144
y(executed)433 b(b)-36 b(y)434 b(a)g(v)-72 b(ariable)434
b(n)-36 b(um)g(b)36 b(er)432 b(of)i(w)-36 b(ork)g(er)435
b(threads.)3951 7807 y(While)522 b(t)-36 b(w)g(o-lev)g(el)522
b(sc)-36 b(heduling)521 b(is)h(not)f(univ)-36 b(ersally)523
b(accepted)e(for)h(all)g(t)-36 b(yp)36 b(es)522 b(of)g(m)-36
b(ultipro-)2000 9412 y(grammed)502 b(parallel)i(systems,)520
b(it)503 b(is)g(p)36 b(erfectly)503 b(suitable)f(for)h(shared-memory)f
(systems)h(using)2000 11018 y(the)363 b(w)-36 b(orkpile-of-tasks)365
b(programming)e(mo)36 b(del)364 b([17],)379 b(whic)-36
b(h)363 b(are)g(the)g(fo)36 b(cus)364 b(of)g(this)f(thesis.)555
b(The)2000 12623 y(presence)431 b(of)h(shared)f(memory)g(mak)-36
b(es)432 b(it)g(p)36 b(ossible)432 b(for)g(tasks)g(to)f(b)36
b(e)431 b(executed)g(b)-36 b(y)432 b(an)-36 b(y)431 b(w)-36
b(ork)g(er)2000 14228 y(thread)444 b(on)g(an)-36 b(y)445
b(pro)36 b(cessor.)612 b(In)445 b(fact,)j(if)e(the)e(shared)g(memory)h
(is)g(cen)-36 b(trally)445 b(lo)36 b(cated,)449 b(memory)2000
15833 y(allo)36 b(cation)447 b(\(e.g.)613 b(to)446 b(implemen)-36
b(t)444 b(the)h(shared)f(w)-36 b(orkpile\))446 b(is)g(completely)g
(decoupled)e(from)i(the)2000 17438 y(allo)36 b(cation)544
b(of)f(pro)36 b(cessors.)904 b(Previous)543 b(w)-36 b(ork)543
b(has)f(also)h(sho)-36 b(wn)542 b(that)g(single-lev)-36
b(el)543 b(sc)-36 b(hedulers)2000 19043 y(tend)433 b(to)g(w)-36
b(ork)435 b(p)36 b(o)g(orly)434 b(on)g(shared-memory)f(systems)h([22,)
169 b(38,)g(50,)g(51].)2000 23842 y FC(Dynamic)717 b(Pro)60
b(cessor)717 b(Allo)60 b(cation)2000 26881 y Fy(The)324
b(\257rst)f(lev)-36 b(el)325 b(of)g(a)f(t)-36 b(w)g(o-lev)g(el)325
b(sc)-36 b(heduling)323 b(system)h(allo)36 b(cates)326
b(pro)36 b(cessors)324 b(to)g(jobs)h(using)e(either)2000
28487 y(a)513 b(static)f(or)h(dynamic)f(allo)36 b(cation)515
b(p)36 b(olicy)-108 b(.)815 b(In)512 b(a)h Fo(static)583
b Fy(p)36 b(olicy)-108 b(,)533 b(the)512 b(n)-36 b(um)g(b)36
b(er)511 b(of)i(pro)36 b(cessors)2000 30092 y(assigned)469
b(to)f(a)h(job)g(remains)f(\257xed)g(throughout)f(the)h(job's)h
(execution.)684 b(In)468 b(a)h Fo(dynamic)538 b Fy(p)36
b(ol-)2000 31697 y(icy)-108 b(,)635 b(the)594 b(n)-36
b(um)g(b)36 b(er)593 b(of)i(allo)36 b(cated)595 b(pro)36
b(cessors)595 b(ma)-36 b(y)595 b(c)-36 b(hange)594 b(during)f(run)-36
b(time.)1060 b(The)594 b(curren)-36 b(t)2000 33302 y(Cilk)446
b(sc)-36 b(heduler)444 b(can)h(only)h(b)36 b(e)444 b(used)g(with)h(a)h
(static)f(pro)36 b(cessor-allo)g(cation)446 b(p)36 b(olicy)-108
b(,)449 b(since)c(it)g(as-)2000 34907 y(sumes)359 b(that)h(a)g(job's)g
(pro)36 b(cessor)361 b(allo)36 b(cation)361 b(do)36 b(es)360
b(not)g(c)-36 b(hange)359 b(during)g(run)-36 b(time.)553
b(The)360 b(Cilk-AP)2000 36512 y(sc)-36 b(heduler)314
b(presen)-36 b(ted)314 b(in)h(Chapter)f(6,)340 b(on)315
b(the)f(other)h(hand,)338 b(cop)36 b(es)315 b(with)g(dynamically)i(c)
-36 b(hanging)2000 38117 y(allo)36 b(cations,)436 b(and)d(so)h(it)f(is)
h(suitable)g(for)g(use)f(with)h(a)g(dynamic)g(p)36 b(olicy)-108
b(.)3951 39781 y(The)528 b(disadv)-72 b(an)-36 b(tage)528
b(of)h(a)f(static)h(pro)36 b(cessor-allo)g(cation)529
b(p)36 b(olicy)529 b(is)g(that)e(it)h(leads)g(to)h(frag-)2000
41386 y(men)-36 b(tation)496 b(of)g(pro)36 b(cessor)497
b(resources)f(and)f(it)h(compromises)h(fairness.)766
b(Since)496 b(job)g(allo)36 b(cations)2000 42991 y(are)647
b(\257xed)g(during)f(run)-36 b(time,)699 b(new)647 b(arriv)-72
b(als)648 b(are)f(forced)h(to)f(w)-36 b(ait)647 b(in)g(a)g(queue)g(if)h
(su\261cien)-36 b(t)2000 44596 y(pro)36 b(cessors)588
b(are)f(not)h(a)-36 b(v)-72 b(ailable.)1041 b(V)-108
b(arious)588 b(strategies)g(to)f(reduce)g(queuing)g(ha)-36
b(v)g(e)588 b(b)36 b(een)587 b(pro-)2000 46201 y(p)36
b(osed)362 b([16,)105 b(42,)g(43,)g(49],)383 b(but)361
b(all)j(of)f(these)f(strategies)i(essen)-36 b(tially)364
b(reserv)-36 b(e)363 b(pro)36 b(cessors)362 b(for)i(future)2000
47806 y(arriv)-72 b(als,)509 b(th)-36 b(us)492 b(w)-36
b(asting)494 b(system)f(resources)g(and)g(limiting)h(ac)-36
b(hiev)-72 b(able)493 b(utilization.)758 b(In)493 b(addi-)2000
49411 y(tion,)339 b(static)316 b(p)36 b(olicies)316 b(are)g(unable)e
(to)i(adapt)f(to)g(c)-36 b(hanges)315 b(in)g(pro)36 b(cessor)316
b(requiremen)-36 b(ts)314 b(exhibited)2000 51017 y(b)-36
b(y)433 b(jobs)h(during)f(run)-36 b(time.)3951 52680
y(Unlik)g(e)532 b(static)h(p)36 b(olicies,)558 b(dynamic)532
b(pro)36 b(cessor-allo)g(cation)533 b(p)36 b(olicies)533
b(allo)-36 b(w)533 b(the)f(system)g(to)2000 54285 y(resp)36
b(ond)577 b(to)g(load)h(c)-36 b(hanges,)614 b(whether)577
b(they)g(are)h(caused)f(b)-36 b(y)577 b(the)g(arriv)-72
b(al)579 b(of)f(new)f(jobs,)615 b(the)2000 55890 y(departure)463
b(of)j(completed)e(jobs,)473 b(or)465 b(c)-36 b(hanges)465
b(in)f(the)g(parallelism)i(of)g(running)d(jobs|the)i(last)2000
57496 y(case)602 b(is)h(of)f(particular)g(imp)36 b(ortance)602
b(to)g(us)f(b)36 b(ecause)602 b(of)g(our)g(study)f(of)i(adaptiv)-36
b(ely)603 b(parallel)2000 59101 y(jobs.)726 b(In)483
b(all)h(three)e(cases,)496 b(a)483 b(dynamic)g(p)36 b(olicy)484
b(is)f(able)g(to)g(redistribute)e(pro)36 b(cessor)483
b(resources)2000 60706 y(to)434 b(accommo)36 b(date)434
b(the)f(c)-36 b(hange)434 b(in)f(load.)3951 62369 y(T)-108
b(o)379 b(see)g(ho)-36 b(w)380 b(this)e(resp)36 b(onse)379
b(compares)g(to)g(that)g(of)g(a)h(static)f(p)36 b(olicy)-108
b(,)391 b(consider)379 b(the)f(example)2000 63975 y(scenarios)568
b(presen)-36 b(ted)567 b(in)h(Figure)f(2-1.)982 b(In)567
b(scenario)i(\(a\),)601 b(jobs)569 b(A)e(and)h(B)g(start)f(running)g
(at)2000 65580 y(time)526 b Fu(T)708 b Fy(=)526 b(0)g(with)g
Fu(P)108 b(=)p Fy(2)528 b(pro)36 b(cessors)526 b(eac)-36
b(h,)550 b(where)526 b Fu(P)707 b Fy(is)526 b(the)g(n)-36
b(um)g(b)36 b(er)524 b(of)j(pro)36 b(cessors)527 b(in)f(the)2000
67185 y(system,)391 b(and)378 b(a)i(third)e(job)i(requesting)f
Fu(P)108 b(=)p Fy(2)381 b(pro)36 b(cessors)379 b(arriv)-36
b(es)380 b(at)f(time)g Fu(T)550 b Fy(=)369 b Fu(t)p Fy(.)560
b(In)379 b(the)g(static)2000 68790 y(case,)493 b(all)482
b(pro)36 b(cessors)480 b(of)i(the)e(system)h(are)f(busy)-108
b(,)492 b(so)481 b(job)g(C)g(is)g(forced)g(to)f(w)-36
b(ait)482 b(un)-36 b(til)480 b(either)g(A)2000 70395
y(or)447 b(B)g(\257nishes;)453 b(this)447 b(p)36 b(olicy)448
b(compromises)f(fairness)h(and)e(su\256ers)h(from)g(reduced)f
(throughput.)2000 72000 y(The)472 b(dynamic)h(p)36 b(olicy)-108
b(,)483 b(on)472 b(the)g(other)g(hand,)481 b(is)473 b(able)g(to)f
(redistribute)f(the)h(pro)36 b(cessors)472 b(of)i(the)25350
75321 y(14)p eop end
%%Page: 15 15
TeXDict begin 15 14 bop 2000 1328 a Fy(system)578 b(at)g(time)g
Fu(t)g Fy(and)f(giv)-36 b(e)579 b(eac)-36 b(h)578 b(job)h(a)f(fair)h
(share)f(of)g Fu(P)108 b(=)p Fy(3)580 b(pro)36 b(cessors,)614
b(th)-36 b(us)577 b(ac)-36 b(hieving)2000 2933 y(b)36
b(etter)540 b(throughput.)899 b(In)540 b(scenario)i(\(b\),)567
b(only)542 b(jobs)f(A)g(and)f(B)h(are)g(running)f(in)h(the)f(system,)
2000 4539 y(but)505 b(they)g(exhibit)h(complemen)-36
b(tary)506 b(parallelism)h(pro\257les)e(\(indicated)g(b)-36
b(y)506 b(the)f(dashed)g(line\).)2000 6144 y(In)417 b(the)f(static)h
(case,)k(no)c(c)-36 b(hanges)417 b(can)g(b)36 b(e)416
b(made)h(to)g(the)f(pro)36 b(cessor)418 b(allo)36 b(cations)418
b(once)f(the)g(jobs)2000 7749 y(ha)-36 b(v)g(e)565 b(started,)598
b(so)565 b(there)f(are)h(p)36 b(erio)g(ds)565 b(during)f(whic)-36
b(h)565 b(some)g(of)g(the)g(pro)36 b(cessors)565 b(are)g(p)36
b(o)g(orly)2000 9354 y(utilized.)565 b(This)394 b(problem)g(do)36
b(es)394 b(not)f(o)36 b(ccur)394 b(in)g(the)f(dynamic)h(case,)403
b(b)36 b(ecause)393 b(the)h(p)36 b(olicy)395 b(is)f(able)2000
10959 y(to)368 b(redistribute)f(underutilized)g(pro)36
b(cessors)369 b(from)f(job)h(A)f(to)g(B)g(and)g(vice)h(v)-36
b(ersa.)557 b(The)368 b(resp)36 b(onse)2000 12564 y(times)434
b(of)g(b)36 b(oth)433 b(jobs)h(are)g(also)g(b)36 b(etter)433
b(b)36 b(ecause)434 b(the)f(pro)36 b(cessors)433 b(are)h(used)f(more)h
(e\261cien)-36 b(tly)-108 b(.)5366 46180 y @beginspecial
84 @llx 83 @lly 703 @urx 565 @ury 3714 @rwi @setspecial
%%BeginDocument: dyn-vs-static.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Thesis Figures.ppt)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910130614-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 84 83 703 565
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
84 83 moveto 703 83 lineto 703 565 lineto 84 565 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
84 83 619 482 rectclip
[ 0 -1 1 0 1.03983 649.6022 ] concat
/N53 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font ACDLEF+TimesNewRoman,Bold
11 dict begin
/FontName /ACDLEF+TimesNewRoman,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/D 
<10bf31706ae1a2410dd640e3e63d847a829b887bc572c26d027aaf3e136c
2965f1293615651feb84663300d52dce5d4a1961bda9cad7337a8805c555
166a043880853e78ef403eb7fe435d03cab0551af60247e85130f09c90ee
3c94d2d750604e6844157c0d126af0ef65c2ffa230950278db25e9809ea7
9a8c1fa4413a025279b92ff5101f46204b53ff6a0cd3f132f97577e39b91
6b4a047cd64857ea8d45d29ad846499212ffe6976c40507ef6807317f99f
4b6e39b4058fe2a6f1ec74e6> ND 
/S 
<10bf31704d4d2f6115e62eb3cb4a9ddfe5db9cde1ae983f5728ba6db2f41
314d20066a19799bf57ae2dbe01a0b61f8c2a6e42b2f8d918c37811d5f70
25e5ac7e73fd1ec59e9775c0cede584da8df39f8d2add4534fa37460fbd9
dae4a220a5f6fbc49ab223ba031a8d18b19668d10e453118f3fe781a6ca4
9ea97b3a0d73b13b22e8ae77669dd6c88e1b9b68dd8f7b7fe964bf532900
c4d5709fca3afda461ac703c3e3e8b96f1a46b23454036057cd11c016ab5
9498270bb64ebc20243227d866d9101252cc6e707890e5fee274a276aa20
d2eb6b7cc56e4e5597254e2da0c7a35d81099f865acf33314c8d04d484f3
6e2da3527c7dcc93dc75cb24ec34139fcb9835a375> ND 
/a 
<10bf31704ab21818500193ceb7cb34e9df44d2f8ec9dd5c98d55ae22888d
9df2e6f213a10b28cefcaf95aa9640c835b3bd1ffcdc75a4a63fa25c6d04
6e0087c66cd64147f3ed96dff91cb0244813473d9381cce21ce83d903943
f4ac8f3242bc292da1de1531cc532a86e1f3cc7d1e021df739aea871418b
5de99006d4c5ab2682816c98649eed26a6b084e7f7ec911ec66ec74f0ad5
38dbeb4cb0b01a394cc508cff8b61d71209af50bf8f8ceff036e8a30b999
2cc25f8ecf6950be6e3e9dff42e54836dd89050eeb2b37dd3a0be262e8d0
35a9d19daa2c018f11edad2db0075ba942763369ef43d94cbf0bc2410fbc
2ce40e96872b5ba313aee01224b418272066554dc36af669eca48e0dfc1b
4fcee06d> ND 
/c 
<10bf3170435d9d6bdca5552f143ea8eb00c0f43aa73ae186a90dee90257c
64691c2333fd0a4a4dc6b26abc1900c24aba3f592c7bcbc889fe7b599700
778b0a93f96f5579a87f760b1dbd87bf8d1ff4e807fa73245f81d5812a13
e76b05bfefadfd217cb7b7b5fc9876179e2b2989aa002dde4d77d381e7f0
f6ace03d73f2b18f749bc10e6974c8b964b6425bd099adf48ae2e4868a46
74e70af2af4f77dd356ffc858f87> ND 
/i 
<10bf3170524a2d226105953d5eb24f8564e6b6f09006dcc5de63bfd94641
5431d498669f2a636dd1ce21202db89c173adcec99d9be4feb68a686a334
a4c32747de504ee5b288cf4791bb5cdd4a6f4abb420134e012ba9028a116
613f1accf2a80106e9041eb6299349713fdcc742227c93df73e17499d587
d463b9326464b14774fda5181e4133> ND 
/m 
<10bf3170422e98c5ed7ba2b7088d79e9e2818a90b5d814a1206a981fa47f
862545d86e5774c22cb75288f646fafd458bbc6d054d4d3cc74a2523e484
fe78e199ddcb1968c8b6caca0f25aad70888cf9affb9ce4bc81b508f7bc6
f3f4101e8765442e5856ef14e7a67b3953f86d293654380a72cc0ce0f93d
60af394ae7f77acf9b4841bf6367ee3f347d52adc3d20b75e623aebcc7e1
454939c521c56d240ca699f20d4a909d8615bb761de2ab6e367e19048e80
a0e981d6b5a2c1dec33f9c2a025f5e1d45fa3c1cde2284b6ebd1ceb33dc5
06c68f7f2e925b9679318e5c8e29e1c69aa269822e7f13aac7a0d100833d
688b3c0c7e400b85a20a96fbdff0737ab054bd03b86538f9e1a745606112
63b89a0a4210a8c322f6c572a07c4ce8a71ee425fa57fd69c1d5bf> ND 
/n 
<10bf31705fc1934666df69889b5e7716ef594193b6332fd6e87679d4002a
60b418d237a9a7fcd602eb906106efaf0b01b4528edbdaffd7aa13593d7f
0f21d9915346ad8e6da94702995c89ac1ca2bf2b32ba15e8cfbcb839038e
d3cfc8235729a16269b2f6c14c0345f60ae251ed8180347001c22289ef41
5cf4384a45d9a8e999484bc9b88c99f3dd7539b38fdb724af0e4ec8e215f
e0c6184ff35603d3cc911f6a426176dc15e6fe4e94358cddf593f4927f46
> ND 
/t 
<10bf31706c43702a3ba333d6396a27008c7d9ec0f97f7d821e81c4dfe978
3a6528b50abbe393ef5d601f52bf5d77ebc263fe98283b2ecc6b82e445f0
03e67be8c4d981c7a936b403802ec79ac9fadee0d8907b8e4791f6ac32b5
6afce28831bdbf6534dcb0234b10e060c060d99eb3> ND 
/y 
<10bf3170612e883674ba1652c0ab7cf860cb3fab7a30d213e7dee46c987f
7a59f1f2b004f2417db5ae17465d9ac2a69a0d6e1f1996eda9172f4c4d34
991863a26e69b6425108e74d4f5b0c42cc93e48cdc09ebea4885c41e6403
7e081eba1021614ff3ce259cd6b5ddb2b3d492f19700d136fc19e0eb5e55
7117ac8ad30edd6bf4443303a41df826163e43b5f55768466b5aafbcfff4
0e77aada54e22b600686d2278b06e2a9a3b609d2ceebd2837c5030035b7b
9989469c2d68bbbb5732930446e8bbf181a1acd10aaeb0> ND 
/ellipsis 
<10bf317012d812ee6c1cfe6912aee08488a1c06a42647d7aa06987fb2664
823ceda37d819cab6655b51193d1830ecaa857159cacd9f0559b37484c2e
582460e2a6f587c7ab3eae04195e36200e300b7ddfe8932caee1acf51b84
4b042c14412a4d25dfd51913641028be0838fa26f04a646d8306425e2f41
065beeb6f631d4f11f3e8a585e4ef70e7812a6a7c4145478e2cd16a10442
b8098d4acff55887e9f240c5f3ea81f99ef0a58f5ea06f12ba76a7e40af7
c052c6f1ea2a212f03cf3305> ND 
/multiply 
<10bf3170245e278dce0892d177e931474f6b8ffefdd0495eb420ae00e873
a102d81e1865cb7080157d5e584fb6587a42416c14fc03d252afce08dfa7
ed71dba87426> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDLEF+TimesNewRoman,Bold findfont /Encoding get
dup 0 /.notdef put
dup 68 /D put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 116 /t put
dup 121 /y put
dup 133 /ellipsis put
dup 215 /multiply put
pop
%%EndResource
[/N58/ACDLEF+TimesNewRoman,Bold 1 TZ
%%BeginResource: font ACDLCF+TimesNewRoman
11 dict begin
/FontName /ACDLCF+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/space 
<10bf317079c757bf91> ND 
/parenleft 
<10bf317046e70250e8bd40d114dd6e816b58f4d3349c0c7727832e7501d9
0d48751e5ed01a4a989a3de6f3df4e8150bcde04496d7ebf18ade860af48
8df404b0480a8fe53e55e37acb5a554f9e5cbbe042244d6fc0aa0fdafde4
acb4c52d35fe39221cd926f89c> ND 
/parenright 
<10bf3170537b448b82841392ad69a78470fcf6ad5b9860e31496592c5fd2
8c2a948b7ef1391379bc9dc9754e13aa1a0d8be5cfd2e3bc1b6a246b4628
a43a8883776071abf86a7883d030defeed590f0bf1949e72bae27054def5
466be78152f4af0ef71e17f1> ND 
/slash 
<10bf31707ecffa29aa99596df40b96812e390790337673cf79e85a6235> ND 
/zero 
<10bf31705d64a97b17e82784743dd8afd77cc124ffedf62073386a4af3bd
86fd28c9c7a756e9ef18e3ca007b94f0e02e9eb268494f71c4e6ce33e23a
daf3d98e6e397ae6d95a99deac335d9d72bffd478071defcda00cb768906
0b44c557ecf61de22b31359bb158f6fec05d2caffa2d64aa1e2dc65d6175
e933567afd84f788ad9d2ecdc1d1277289609d3478a2f9ff64e3fec0e6b8
8edb35e90668db5b556d9651c4b7ff49d0e2> ND 
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
/four 
<10bf317069b1fd7146b17c113b617a69456a1f46fa86f93a1743e1bde519
49e5c8665d9cf49ab4179aecaf779fa834a317855eb2ce61cdee1d727f> ND 
/five 
<10bf317049845615ceab2cb35844ace30baf3e54b0e1773fc25e2037b21b
b58b95d34cefc92bea69dc9b438084ed7eb5c6702a368454ebc82a5856ce
9936aede12d64deba22dd59cd070d9cd700c552563a2157176094ad577ca
7175d4c555582970bb6ced51f021b279f79ea313c4e45258856c7401f914
3fd613f871ff33cdce06d0175d18b29427c1e70009e3e10e63caa0676029
8c0b976669b8d245> ND 
/six 
<10bf3170448bf7f9a4e5f8472a5a2d45b7594de91351c6ec052ffd8b762a
bed41ed16809fa2365105c6627f46205709a8a1309c7141139fd941188bd
c8d9b0b55c47d641558ff36ded37dddb1b216d36df7ff3e4cecb5e93a247
22d0b6b5e65a4a2dcc56b02d7259d8fd5b7ec0999a61dac27e80da2f8676
34759b4e247227f13713c39238726a89a708bbed3b752173bdebcebaeea7
71ee266a3e95119dcfb78b31c6beeef7041756c5788d9d3d80a0bb3f669d
9ba6d8b1667d5d5aa89f4142cfd220ffe9eb070e> ND 
/seven 
<10bf3170422f935763586cd8dbf7f37293dfe15df8bc3e09eef989653acc
203875a79f5d3c366f49e5ce0c7723933c8d3b9a4fd39991> ND 
/eight 
<10bf31703a9bd69293aaf1980d4004db29512cfbcdf83050f262f22394b0
ef479114fcd1ed3780f8e8379ec274149787838cb972946ff925f327dc43
fe0a268771c55ebbfb2b11062f0229b6b8245dcdaee1f4d128ae888b5b31
2979a0a0311f4e185869859bc2f66d09f1f0a58e4c124d00e52b1afc6fde
a6cc391f21431f05bfb725982450ba002876f8730b821ec63f425acc7fbc
dbd469c4bbc842a4c448a96aef6e173e7ebf5f5a7a17953e1579490627e0
98ff8ddd57718c580a5c4db5f0f85a39de87a2ee8507278f64c74b506e5f
c484dc38505671de2149f16a16f5b3bd2bd178fe57f2540526157d2501cd
a1ec9d05b086c77bbf39961b> ND 
/nine 
<10bf317041f0a9496f308eef332a89569c6f19bf3d9e8151f98106b7f3b4
863943549b6788f898c785f107f2fd33dafee552c5021ce35f862500ffe7
90b89ba5e8ca74771847acf24a3921944b9ff12aa20c31cc240b97d0bfbf
3bfa98131e7f0af00c2c1318418f0b901e30e5ac56e17f3033ea0f27da78
6ba05aa35f7d1182c74c8b5d63906ddf3add8563ed2127e6e60e74dcaeec
cd2fc89d6ac5e14d494f0e9d12d3f290592c4f786ec533bdf4b038336f9c
5e802b11> ND 
/A 
<10bf3170612fa8ae288a2f767c6f2d22480749f87ffaef88db9508f355b3
d621b9e09a8d1290afe57d05190debf7b19b92f6309b70e08d2409abdf50
3b6a0e5daa0043a6e298cadec0a7dbd5588f8ba0646e339db53e322e33db
33e9ac93d421016e880386d59c5f84e2c9dcb201c618c0d88390bc39b5b5
dcf9b13cb5b08470f0d83c168f6d7ea2244d1b> ND 
/B 
<10bf31706ea8189a0122a2c3dc80451ea987f9cc6dc7afa0c8f0365e6d8e
59a275ca593c5d46c9efa9ebe4192f8e472ac6f0efdf90f5d264a8b47fa4
3bcd031546c0586a98250a46abdef7d038322a132dd14df107aae195c311
99c6fa7558e3ee2379999d05cf38ad7f22726f37f2f0654cf65c11005a88
2feb945df6452201e1abb666d0244ac9dc622994ec7112e71f49ba0b5306
4d49384d5d74864da9fc7636c8b9964886a4103e2320a1f33cb3f7f7bcc7
104eb429cfd6cfab753b2e30fdbce693ce1dcc5a7fe31d75680753c52fe9
350712be59c0ee4a2780b638de9e8e44870622e76d3c23cdfd281b0b8177
c0aff3531220d18c12c91634c02401e01a11> ND 
/C 
<10bf31705d65c09013f5e74d02fbfce579927dc4371245d5279a0be7ec2d
bd3b1448f6fd9c53426e6238d321f77957395a071b4b8eae65710650ca99
5020550eaa4528d828ef4c47ac3d29b589dd7f1c7cfe44b10e3e8fa63e50
7c3e4eb74e257f81314f58ef9126142bc9d3a940c619a0d5450ffb6600e9
bb7f776713c2df8dd431070f31717d2477542aecd1539231d249a65da0e1
ee77958319b99e72488e0e9fa74f4d170e269189eb39aa1a> ND 
/D 
<10bf31706ea8518093a448f0413d9dd2503cf14562d62f8e03c59ef262c0
e81d3c5037d7a8fbf15657e5bea1080fe305ab71bf0048720c010cf41197
6f2c354776e6ac045fcbc3395f65891cbe4c7f0093e58d10b57eae23372e
4cc99d7f2f11c1f1c023288641813a3b8b65e70e4b5173920a628da83be4
7b524c38228036fccc15a820529e8626ae48a60adbbae5fd> ND 
/E 
<10bf31705245888107d641c65df0d045384b4474a865698169ff2c4c5759
f26e2217c59fcbe377198e20e38aaa44f075831908ff3584c8503712a3f9
da462024eae3426d516a8864b3756edb7e42923b77324ddcf4879e1b61b4
02502bf9f5c08a938a8b9111b299fb506f1aa6115b23bb6038633ef2c172
1c1c4fba6b5b7baae1d192358092d890074dc21b1d5f65994b78807f042e
8945e17dc9fd4baebebbadfc790575a38910eab682188d9cdb44060faa47
1dcf91df296595839280be99912fd6d9ac4594d1b8a3> ND 
/F 
<10bf317069b1b5630e42cd6c8ff2cb4d3f7bc188fb90c1fdbffc389a7b7c
590172825fc5f7c1632f0e00f7f24a69c85e73a086926561cd7597f366b9
c557c28ba97bd9e48588932b584d925e90f75351236f8dee991d8b2912e0
edc0500223be1a5bd4cd44c3c3de75aa12b7e63ed3a399ba00214a66fe95
b5d95b0096ce0321bb87083de3bbc29cfe8ef473870f448ffcd9f71c6888
fa2bf4ba82669c30c14d2655a8b69d82e43f233aafad0cc27d2d> ND 
/I 
<10bf31705600a7ed90307a9003ca62013c6a672423969cbfb09d38b977c3
3bb76a0a443b03ca15feffb7f47ead3efae89c4da09011014b3ef74dfcc4
49aa62038fec2b8087c3eb93eadcca82adeba753d37fb428848495514418
28d8a0f3ad99e43ca7d439d4d98a470d6617f8dd1388> ND 
/J 
<10bf31705245662c028a7d41142a9172cb3f39702bb2297ba0998cbe201f
77e89fe57d5ed956b84574b1620f88a55c2a51aa279e3fc9cf923c80361d
86a3551f2534c353d520d3bc14bc4d344677b575ead159bbdfc8aaeec820
ded505d06fe178d1ea8a0d44df29931f663cf743408db506a44468a17c12
4775c79567328c125a4e927e096a92c7da53c382783cd0826b0553dedd74
> ND 
/P 
<10bf31706ea9c5bc0db16a9d0fb9334b7aae45fa9562423ca0efcafbe577
696190382686f72544b1109cd9a28e6e2fb8c3e703e277558d9de53e9bd4
331eb7411fa27fc9fbf9488ff1a8e626acd2f355101bb86e40f636dd5a74
50c4f3ac4c3fce01d454db469da536ea46528530bc3e44fdc91176a1e591
1b2932205e6c0eac6f4d330f0230a163b5b30ecdc649a4ff6b024a9513ec
d5f934e2e3b5d7f24bd0170221950b8bb0ffa0c50e77c36e34adf2e847c9
adbff54bf77ef65d9afdb3878865> ND 
/S 
<10bf3170383eecc69ba25cd9f9f1a3f877f72d54ca249226fb09a99225d4
fa4a892ae0bf757b41a46aaf766816bb2e9c6c4e867aeb02a76d05e762b6
353837bdf52bbc0c70c14510f08ced31ac95e2c8b5dfdbf8f1dffd4709a0
760737961b7464d75e4dbf7323db187fa23f8213fd84f092b3c292e45093
4a017d49f1fa4f8d834c3fd0c5126c0c5c896c1a48c0653753c6f56c23b6
627010a4379bd3d96b26db0b3531098cdc23704e1f8e25a61651df0d8d02
8f68c8b7a7de4652566ef5c50305a3ec674a5be2d1bf9f76580a00788d85
ad3f4dc24f5adec7880bc3a7db38c71260e951f8778b0aff0ff2e97effe6
f0b2b33485e5f0401138cd3f9e066ed25ff05e7594ebdb0029f3d5> ND 
/T 
<10bf31705b0718f462bb36d02a655e51f04593b972dbe0892a4279b53c95
62dbd237266bc0cb4e5967f6d053e97e3cc8fe6477448edcd2c2ed40f6e6
056ef32aac1986bf84927c9fb1e2806a71f53c8604421852f835782fd7d8
0fdb45127c08fbe24f16e5af9ede981de72f75b4f62ef25f8b6075081fcf
> ND 
/W 
<10bf31706ae2d6d9dcbe8344511f08de4b9db5ac28c5c661efe6fa9e7439
4bc84ffd6c26e5c964d324deb8a2be71c781983509fc7315f13f2f452574
0c432ccfa783a50be1522758812e78dd12223bf37e37be9a2b9de70daa25
87e5ce0c31b1dc8fd1e7856f2a379806580606a20898e7fccb07255b76ec
aa9ee467ae0d074d61c529177c4e36ba95b4a421f36bad34035a2ac2c04f
12a2abb782248776bfa1511003ff806b7b426cc8c17627c2470813ba31ae
1a22b8e70c403eb278204ab3b8eb7faa1ccbb1cca5799cb23970fbbc0204
4ae4346b70147e2d44e9f3315b6168df8cda1ca5> ND 
/a 
<10bf31705d647142d5ee6b7c4c12c41164f05a89990635873917bf00c5a2
b1b299b84b64fad030fdefe54a736fd84981f1bdecf34c327a4087285dd7
ff9a128a9fff4f1e5e34e2c477e4543546f0e505eb84b8e6141c12199331
8a7bef58caa55697aff5d8bf4fe61eb63478ae931b5c51fe7be8aa76cee5
cf639a1d462398300117c6a9c09614a29dfc50b3c7ddbacc1c6e2f7accb0
35d51bb776dfa4f2180b5bfa695d4ee30d466764f5192b628fd7c4971313
cd38d55ff99cfe805727052d975c4756402eb9230dd87b777a603efe9c10
65e950375d54aa41ed1c701bfac764ae78b65834b8918a99ed1f017d5313
eb0950b1f45353f40dc633104ecc941e4bbbf8359d5ae9042ef0f4edfdb8
> ND 
/b 
<10bf31707b35db816a4355a1c9cd0401bf6033c55938246c8b69de26e575
c058903a4e9b57b68075848962a6cd3da069ec2730d8699e3ccf520befe1
1a090d11586ebd56effd705bd3a5ced6c4343ddaabfe70e422082141dc06
c695cc46ee2dde408c0760a4c361b784ab85994758cbad73179f314048f1
c5a0c06c0e0ad84ded3a7904f207403afdd3193bf093fb903dbdef2de225
7307e43f8ee047d711ed22adc155c93b72dbad1a68> ND 
/c 
<10bf31705fc10320935f517e088588bc677b6f6b1116d76a45fb5fc081aa
57ad08a2f19e4ebd5e7f2e40678b64d780ab49e945b6f1fcf8c1bf2edd40
201d9d025abf1aec5b1b3268a3f2a9365f1c6e4133cdb11264503de1434e
2553cdd7a1785e8aefca6abe49ef29279001bfee84321f1c29e0a5b47534
7f9b91833b42fbc209dedbbca6bb8dac3b6f01ececb32ee525fd2275d1f3
f94c46a2dc92d591> ND 
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
/g 
<10bf31705b0767a01e9193e4d997e718ba6351677893b73d138e3fe6ba14
fc659a3bcdee55e0cfe8324eeac72638d3bd305a7a0220257ff3808a1470
04dc5c3c9fcb344358fed8b5ae71f4f49bb62f7c38ae95fdb022e2f50d0f
f7edd042065f7148993d640d50d67f360ac97639f25c381784672dcecf1d
1627665bc46b98264545bb45b967dbd7f6dce2f63c1e6751d9e493efd546
e255705157ddc690cb167218c88d537fe6a759d15d23d8bf19975778954b
513e4f87de1d7e922f34c8ee289c3522056d92971a6692e2b85efc32e805
5f726b3e561153ede1bd48ac9ed5e0024936e813717a672f7da4b25e0f4c
fa800bfb48a1e7e6e175f9ef63c0a88c39518c20ae1f79f29fe16a404d8f
590228fa5880231b26e78848d12ee249c635fcfa1c6175dbe52bf4c85030
42acafcb20327b817e4efb88945955dd6d08889ea1fb3f310e8cb4172190
21cc423288f3c72f1f0ebcd75197d45530bfc75571856796dc6ba51fbdd3
ed9cec0c0d7ad50b11a85f88370b45b4a51e0293d38df958b8> ND 
/h 
<10bf3170638bba13892b6a5edf1363fbad8b95e15d8b1d61c9ff2e20460e
9fbee5ce56a3b804c731461fc79898dd9aa49a7578bd0636027b48157921
a917a207198baeee00a6aeca2924ff3a229448490e59b468fb8b3164c353
d9bc2653f19a1e5c4133f967037a72c7c8fbf885e7d2fe25db116b7c8e10
b3fd50a5bf16ce8ee83140eeca023c94dedee552fcf1a7935a31030ea899
3824e06eab9cf113ffc3161399601c0b8fff6a9768bb0205ffc7ac68a666
f3075641cdac00a867c63305b98c782f2fa25a94358084fd7f1a3e8a9aba
49e32a58f5abe91c09f7098b61c81b8653e474549ba40c7470f7bc> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/k 
<10bf3170612e883674d2675aac39fa142a2f9de407f255952adbf70a8f61
dcc97f11c5b525f88e1dd0499bf87fea87e955adf630d83711a3925899c0
03b9f91dc3443000903cbe22625747190de827d6aed57c3f807366bbd6c6
3854786e273f1b9d2f49315171b285fa450532e1a996be3dfd2aafc74743
b4a57fabf2eddb1c25e9905cc57139486ad514add7eb942d1d1b791b6056
19d6f363ea6b92b2c94caf9a33a7be72eed5a355a7d76c1048097efb20dd
2f6c3a18d26def6109f03e7d30d5356121f15317baa59d193def17f7d470
1728dc814db541582ec9d0f98c682c14> ND 
/l 
<10bf31705b0817c8e08e579d70bd731872938fa19da6249b22a36add018f
2d71afb39a24cba2d5b131292eaf2ea6440cd481b67673b68d5de7db4045
53f0515df79be16519f0349ec3761dc09575b85d12a0ca2ef3e3cac5171f
27c0bb5b6c16bd708dadf6acc7da72304e> ND 
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
/n 
<10bf3170638bba1389001ebc99bd428947467ee318fefc1fb124f3371d83
7e6e4fd04510bb88359fc2d65b2f295b6f18b7850f6ca41f0fd067e40bcc
1e6a5b41ca20f07f1559265c094e47681cd30c939ca836f577db4be36b05
95c3d60cd00f5b5495365e7e02e3400714839e79cc3816e739cdb0ba1b66
3f096ef3ea59642b52897d5ef4b5012d68776aa74244415b9e96a4f773a5
8085f9fe5bb74ace5b6860ca975ea43b7d0db4eefeddd777982336d72d05
c093ca194b7cd3478661a723994ed178a305b939140b4ac4b7ef4bb11e73
> ND 
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/q 
<10bf31705e925b80bb44afdd80449a9019004483157f7a206da365a5b3f7
8e817f7d85ccb98decc0413cb1aad3badad1cc03a563c391c8aa6068d7e3
0e7f25d81543c3055a792149dafa6b421b59bb9a7c586f00d982f84e34a8
6eb81a6d2e5d0469a0475534487ff8a1de86976d09002e57cf1b9a5b9651
783da658816ced2d26e352c444560625e85828b2e4e4558755e30d1a05aa
ed4f42608d7e2eeedb01e0259b91825941bd1b5a38ce6f06522b93ba8b0d
c3140f68c73955f4b4bd495b40f7a8977e75e8b1c2519046a0f0449793> ND 
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
/u 
<10bf31707ec0b061a3e31ce6a8e02f67c79fc6fb9433b583752df0b97381
ced785f0788651d9110f4d168d6f4fb870b9f8634f66a1fe17ef5bb051c8
5b17a112a0ece57f7e85709c1e46ba1a1de6ef26a274c75bdde36925dd09
efae6e5faacef2f29e68904c9555df5e0f6550945360d079ca305237daa8
7397519a4b0aef19668718de15c20ef2e07af7217dbd27700833b73e8190
1c7d2aacb619fbf2f1396d79a94fea4ca18c65bd942fda84> ND 
/v 
<10bf3170612e88360faf380e328fa052d16002b3a6eb4d26fc61a8261d88
5d55beefaa23f749e4680928d2ec50b44ff8d74a2a42a0e615124d351c37
a9b6b3979ac1eedcff65bc4e156ed5711cac4c00ba96902c9956d3adb8e9
345080689b72e5082717e79b08e915301d3c209a4fac7e8f857cfb983000
d031a94c1a8ab5b2b0900013f2ae> ND 
/w 
<10bf3170638a0228cdcc4cd6455c35265f3b472ea1e128291ab8c91c671e
7bd658e474e8a0535d503ea2a6704bc9226df8b7fd4286af923f66233992
4a9bd89766cd1ad48ee99eac3f679bc5f41535050fefd334434033683a0c
453c86e866b1ef55892a380c8fcdccf1c4eac1b6e4f71a2a006a7f483456
13b3a00d36c64291144c8cc1dac83b7c06950c85f226495588d8cb0539f8
dacf025ed3c1593eb5f55ae6c66c3ae3939545fa200eff0116> ND 
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
/ellipsis 
<10bf317005a3205c8c1ade8b08220239c090e4bcc9980e1cca609a2d4d10
d9ac81cf840ef58d470313f2aa080d2edd9fcba3916373473b3af2ee5c86
d03e77ac42465a929f227203e9947419868ef6872ae4cf8eebf4d8959f6c
7a0d73c65112c717159e6b1143a38d56f38c0bfb6641b059c420c669b174
283ad5674adb76e78a4c9174f94c3257ef08af279dc17b93c98677c3acdb
61453c7ad9365f3a5a793919a4c97a3726887fe01492b780bd16b89f5a85
0d94b0a447171065596e> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDLCF+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N55/ACDLCF+TimesNewRoman 1 TZ
q
n
36 756 540 -720 re
eoclip
n
false setSA
n
36 756 540 -720 re
1 1 1 setrgbcolor
f
Q
1 J
1 j
0.75 w
10 M
[] 0 d
false setSA
n
302.76 684 m
302.76 456 l
177.24 150 m
303.24 150 l
303.24 378 m
303.24 150 l
0.0039978 0.0039978 0.0039978 setrgbcolor
S
n
208.74 234 47.46 -84 re
0.501999 0.501999 0.501999  setrgbcolor
f
0 j
8 M
n
208.74 150 47.52 84 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
255.72 234 47.52 -84 re
0.697998 0.697998 0.697998  setrgbcolor
f
n
255.72 150 47.52 84 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
255.72 318 47.52 -84 re
0.867004 0.867004 0.867004  setrgbcolor
f
n
255.72 234 47.52 84 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
1 j
10 M
n
177.24 456 m
303.24 456 l
S
n
208.74 498 47.46 -42 re
0.501999 0.501999 0.501999  setrgbcolor
f
0 j
8 M
n
208.74 456 47.52 42 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
255.72 498 47.52 -42 re
0.697998 0.697998 0.697998  setrgbcolor
f
n
255.72 456 47.52 42 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
271.98 558 31.62 -60 re
0.867004 0.867004 0.867004  setrgbcolor
f
n
271.98 498 31.62 60 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
208.74 558 32.34 -60 re
0.501999 0.501999 0.501999  setrgbcolor
f
n
208.74 498 32.4 60 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
240.96 558 31.02 -60 re
0.697998 0.697998 0.697998  setrgbcolor
f
n
241.02 498 30.96 60 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
256.2 600 47.04 -42 re
0.867004 0.867004 0.867004  setrgbcolor
f
n
256.26 558 46.98 42 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
1 j
10 M
n
411.24 150 m
537.24 150 l
537.24 378 m
537.24 150 l
S
n
442.74 300 47.46 -150 re
0.501999 0.501999 0.501999  setrgbcolor
f
0 j
8 M
n
442.74 150 47.52 150 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
489.72 300 47.52 -150 re
0.697998 0.697998 0.697998  setrgbcolor
f
n
489.72 150 47.52 150 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
137.34 91.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(a\))
[7.14149 5.36339 ] pdfys
371.339 93.3603 m
(b\))
[8.04056 5.3651 ] pdfys
237.359 185.28 m
(AA)
[287.218 287.218 ] pdfys
229.319 522.78 m
(A) show
464.339 221.28 m
(A) show
524.338 222.119 m
(B) show
262.318 523.26 m
(B) show
282.598 472.98 m
(B) show
293.098 523.619 m
(C) show
283.317 574.619 m
(C) show
1 j
10 M
n
413.22 456 m
539.22 456 l
539.22 684 m
539.22 456 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
443.22 456 m
491.22 456 l
491.22 475.38 l
509.22 475.38 l
509.22 509.16 l
473.22 509.16 l
473.22 528.54 l
509.22 528.54 l
508.98 567.06 l
490.98 567.06 l
491.22 576.9 l
443.22 576.9 l
443.22 456 l
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
443.22 456 m
491.22 456 l
491.22 475.38 l
509.22 475.38 l
509.22 509.16 l
473.22 509.16 l
473.22 528.54 l
509.22 528.54 l
508.98 567.06 l
490.98 567.06 l
491.22 576.9 l
443.22 576.9 l
443.22 456 l
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
463.08 513.48 m
(A) show
322.14 331.26 m
/N55 [0 13.98 -13.98 0 0 0] Tf
(Time)
[8.53335 3.87812 10.8681 6.19859 ] pdfys
213.12 133.98 m
(P) show
261.12 124.859 m
(P/2)
[7.76306 3.87662 6.98019 ] pdfys
n
208.74 146.4 m
208.74 150 l
256.02 146.4 m
256.02 150 l
304.14 192 m
307.74 192 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
321.12 190.62 m
(t) show
164.4 121.26 m
(Processors)
[7.78973 4.67209 7.00685 6.22376 6.22376 5.51787 5.45496 7.00685 4.67209 5.45496 ] pdfys
283.86 186.12 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(BC)
[85.1398 85.1398 ] pdfys
321.36 637.26 m
/N55 [0 13.98 -13.98 0 0 0] Tf
(Time)
[8.53335 3.87812 10.8681 6.19859 ] pdfys
164.64 421.261 m
(Processors)
[7.78973 4.67209 7.00685 6.22376 6.22376 5.51787 5.45496 7.00685 4.67209 5.45496 ] pdfys
n
303.9 498 m
307.5 498 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
320.88 496.62 m
(t) show
555.36 331.26 m
(Time)
[8.53335 3.87812 10.8681 6.19859 ] pdfys
397.619 121.26 m
(Processors)
[7.78973 4.67209 7.00685 6.22376 6.22376 5.51787 5.45496 7.00685 4.67209 5.45496 ] pdfys
557.159 637.26 m
(Time)
[8.53335 3.87812 10.8681 6.19859 ] pdfys
399.358 427.26 m
(Processors)
[7.78973 4.67209 7.00685 6.22376 6.22376 5.51787 5.45496 7.00685 4.67209 5.45496 ] pdfys
213.239 439.86 m
(P) show
260.639 430.739 m
(P/2)
[7.76306 3.87662 6.98019 ] pdfys
n
208.86 452.22 m
208.86 455.88 l
255.48 452.22 m
255.48 455.88 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
447.36 133.5 m
(P) show
494.76 124.379 m
(P/2)
[7.76306 3.87662 6.98019 ] pdfys
n
442.98 145.86 m
442.98 149.52 l
489.6 145.86 m
489.6 149.52 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
447.78 439.5 m
(P) show
496.38 430.379 m
(P/2)
[7.76306 3.87662 6.98019 ] pdfys
n
443.4 451.86 m
443.4 455.52 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
538.98 456 m
490.98 456 l
490.98 480 l
508.98 480 l
508.98 498 l
472.98 498 l
472.98 539.22 l
508.98 539.22 l
508.98 564 l
490.98 564 l
490.98 576.72 l
538.98 576.72 l
538.98 456 l
0.697998 0.697998 0.697998  setrgbcolor
eofill
n
538.98 456 m
490.98 456 l
490.98 480 l
508.98 480 l
508.98 498 l
472.98 498 l
472.98 539.22 l
508.98 539.22 l
508.98 564 l
490.98 564 l
490.98 576.72 l
538.98 576.72 l
538.98 456 l
h
491.22 451.86 m
491.22 455.52 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
[2.25 3 ] 0 d
n
489.48 150 m
489.48 174 l
507.48 174 l
507.48 198 l
471.48 198 l
471.48 258 l
507.48 258 l
507.48 282 l
489.48 282 l
489.48 300 l
S
0 0 0  setrgbcolor
524.34 515.4 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(B) show
n
490.98 197.34 15.84 -22.38 re
1 1 1  setrgbcolor
f
0 0 0  setrgbcolor
101.16 226.14 m
/N58 [0 15 -15 0 0 0] Tf
(Static)
[8.32489 4.97978 7.48489 4.97978 4.15489 6.64467 ] pdfys
101.4 535.26 m
(D)
[10.8268 ] pdfys
(y) show
(n)
[8.33702 ] pdfys
(a) show
(m)
[12.4919 ] pdfys
(ic) show
n
490.5 282 15.84 -22.38 re
1 1 1  setrgbcolor
f
n
472.98 256.98 16.5 -56.88 re
f
0 J
2 w
[] 0 d
n
106.14 226.14 m
106.14 262.86 l
107.4 536.1 m
107.4 592.98 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 48792 a Fn(Figure)575 b(2-1:)728 b
Fm(Theoretical)499 b(p)34 b(erformance)499 b(of)h(static)f(vs.)824
b(dynamic)499 b(pro)34 b(cessor-allo)g(cation)498 b(p)34
b(olicies)2000 50298 y(on)409 b(a)g(system)g(with)g Fl(P)578
b Fm(pro)34 b(cessors.)551 b(In)409 b(scenario)f(a\),)i(jobs)g(A)f(and)
g(B)f(are)h(running)g(and)h(job)f(C)h(en)-34 b(ters)2000
51803 y(the)404 b(system)g(at)h(time)e Fl(t)p Fm(;)h(in)g(scenario)f
(b\),)h(jobs)h(A)f(and)h(B)e(are)g(running)i(and)g(exhibit)f(complemen)
-34 b(tary)2000 53309 y(parallelism)403 b(pro\257les.)3951
57554 y Fy(Dynamic)427 b(pro)36 b(cessor-allo)g(cation)427
b(p)36 b(olicies)427 b(ha)-36 b(v)g(e)426 b(b)36 b(een)425
b(studied)f(and)i(implemen)-36 b(ted)424 b(exten-)2000
59159 y(siv)-36 b(ely)535 b(in)f(the)f(past)g([8,)230
b(12,)g(15,)h(22,)f(27,)g(29,)g(30,)g(32,)g(33,)g(35,)g(37,)h(39{)q
(41,)f(44{)q(46,)g(48,)g(52].)880 b(Most)533 b(of)2000
60764 y(this)456 b(w)-36 b(ork,)462 b(ho)-36 b(w)g(ev)g(er,)463
b(assumes)456 b(that)f(the)h(instan)-36 b(taneous)455
b(parallelism)i(of)g(the)e(jobs)h(is)h(kno)-36 b(wn)2000
62369 y(and)506 b(used)h(b)-36 b(y)506 b(the)h(sc)-36
b(heduling)506 b(system)h(when)g(making)h(its)f(decisions.)799
b(In)506 b(practice,)526 b(this)507 b(in-)2000 63975
y(formation)500 b(is)f(not)g(easily)h(discernible,)515
b(and)499 b(in)f(some)i(cases)f(can)g(b)36 b(e)499 b(inheren)-36
b(tly)498 b(misleading.)2000 65580 y(\(W)-108 b(e)574
b(sho)-36 b(w)575 b(an)g(example)g(of)h(suc)-36 b(h)573
b(a)i(case)g(and)g(describ)36 b(e)574 b(our)g(solution)h(to)g(the)f
(problem)g(in)2000 67185 y(Chapter)366 b(6.\))556 b(In)365
b(particular,)380 b(at)366 b(presen)-36 b(t)365 b(not)h(only)g(do)36
b(es)367 b(the)e(Cilk)i(system)g(exp)36 b(ect)366 b(the)f(user)h(to)
2000 68790 y(man)-36 b(ually)433 b(en)-36 b(ter)431 b(the)h
(parallelism)i(of)f(a)f(job)h(b)36 b(efore)433 b(it)f(b)36
b(egins,)433 b(but)e(this)h(parallelism)i(remains)2000
70395 y(\257xed)512 b(throughout)e(the)i(job's)g(execution,)532
b(making)513 b(the)e(system)h(only)h(suitable)f(for)g(use)g(with)2000
72000 y(static)434 b(pro)36 b(cessor)434 b(allo)36 b(cation)435
b(p)36 b(olicies.)25350 75321 y(15)p eop end
%%Page: 16 16
TeXDict begin 16 15 bop 3951 1328 a Fy(The)412 b(primary)g(complain)-36
b(t)411 b(against)i(dynamic)f(pro)36 b(cessor-allo)g(cation)413
b(p)36 b(olicies)413 b(is)f(that)f(they)2000 2933 y(incur)579
b(more)h(system)g(o)-36 b(v)g(erhead)580 b(than)g(static)g(p)36
b(olicies)581 b(due)e(to)h(the)f(frequen)-36 b(t)580
b(reallo)36 b(cations.)2000 4539 y(This)468 b(o)-36 b(v)g(erhead,)477
b(ho)-36 b(w)g(ev)g(er,)477 b(is)468 b(signi\257can)-36
b(tly)468 b(reduced)f(in)h(shared-memory)f(systems)h(that)f(use)2000
6144 y(the)548 b(w)-36 b(orkpile-of-tasks)551 b(programming)e(mo)36
b(del,)579 b(b)36 b(ecause)549 b(the)f(presence)g(of)i(shared)f(memory)
2000 7749 y(mak)-36 b(es)533 b(it)f(p)36 b(ossible)532
b(for)h(tasks)f(to)h(b)36 b(e)531 b(executed)h(b)-36
b(y)532 b(an)-36 b(y)532 b(w)-36 b(ork)g(er)533 b(thread)e(on)h(an)-36
b(y)532 b(pro)36 b(cessor.)2000 9354 y(Moreo)-36 b(v)g(er,)478
b(the)467 b(reallo)36 b(cation)470 b(o)-36 b(v)g(erhead)468
b(also)h(dep)36 b(ends)467 b(on)h(ho)-36 b(w)468 b(c)-36
b(hanges)468 b(to)h(job)f(allo)36 b(cations)2000 10959
y(are)434 b(co)36 b(ordinated)433 b(b)36 b(et)-36 b(w)g(een)433
b(the)g(\257rst)g(and)g(second)g(lev)-36 b(els)435 b(of)f(sc)-36
b(heduling.)2000 15396 y FC(Co)60 b(ordinated)715 b(Reallo)60
b(cations)2000 18317 y Fy(An)363 b(imp)36 b(ortan)-36
b(t)362 b(p)36 b(olicy)365 b(decision)e(for)h(t)-36 b(w)g(o-lev)g(el)
364 b(sc)-36 b(heduling)362 b(systems)i(that)f(emplo)-36
b(y)363 b(a)h(dynamic)2000 19922 y(pro)36 b(cessor-allo)g(cation)477
b(p)36 b(olicy)476 b(is)f(the)g(manner)f(in)h(whic)-36
b(h)475 b(reallo)36 b(cations)476 b(are)g(co)36 b(ordinated.)702
b(In)2000 21527 y Fo(unc)-78 b(o)g(or)g(dinate)g(d)758
b Fy(reallo)36 b(cations,)659 b(the)612 b(op)36 b(erating)612
b(system)g(mo)-36 b(v)g(es)613 b(pro)36 b(cessors)612
b(without)g(in-)2000 23132 y(teracting)575 b(with)f(the)g(application,)
611 b(while)575 b(in)f Fo(c)-78 b(o)g(or)g(dinate)g(d)720
b Fy(reallo)36 b(cations,)612 b(pro)36 b(cessors)575
b(are)2000 24737 y(mo)-36 b(v)g(ed)446 b(in)g(concert)g(with)h(the)e
(application)i([33].)618 b(The)446 b(problem)g(with)g(unco)36
b(ordinated)445 b(reallo-)2000 26342 y(cations)522 b(is)f(that)g(a)h
(pro)36 b(cessor)521 b(migh)-36 b(t)521 b(get)h(preempted)d(while)j
(running)e(a)i(thread)e(that)h(holds)2000 27947 y(a)572
b(spin)g(lo)36 b(c)-36 b(k,)608 b(for)572 b(example,)608
b(causing)572 b(other)g(threads)f(to)h(spin)g(un)-36
b(til)571 b(the)h(critical)g(thread)g(is)2000 29552 y(resumed.)714
b(In)479 b(fact,)492 b(the)479 b(thread)f(need)g(not)h(b)36
b(e)479 b(holding)h(a)f(lo)36 b(c)-36 b(k,)492 b(but)478
b(ma)-36 b(y)480 b(b)36 b(e)479 b(critical)h(to)g(the)2000
31157 y(application)567 b(for)g(another)f(reason,)600
b(causing)567 b(other)f(threads)g(to)h(blo)36 b(c)-36
b(k)567 b(or)f(spin)g(at)h(the)f(next)2000 32762 y(sync)-36
b(hronization)399 b(p)36 b(oin)-36 b(t.)566 b(This)399
b(w)-36 b(aste)399 b(of)h(pro)36 b(cessor)399 b(resources)f(can)h
(signi\257can)-36 b(tly)399 b(deteriorate)2000 34367
y(b)36 b(oth)558 b(application)h(and)f(system)g(p)36
b(erformance)559 b([17,)245 b(33].)954 b(While)559 b(sev)-36
b(eral)559 b(lo)36 b(c)-36 b(king)560 b(proto)36 b(cols)2000
35973 y(ha)-36 b(v)g(e)596 b(b)36 b(een)595 b(prop)36
b(osed)595 b(to)g(alleviate)j(the)d(problem|for)g(example,)637
b(\\t)-36 b(w)g(o-phase")596 b(or)g(\\spin-)2000 37578
y(then-blo)36 b(c)-36 b(k")511 b(lo)36 b(c)-36 b(king)513
b([24,)216 b(28]|they)513 b(neither)d(eliminate)i(the)f(problem)g(nor)g
(target)h(threads)2000 39183 y(that)433 b(are)h(critical)g(for)h
(reasons)e(unrelated)g(to)h(lo)36 b(c)-36 b(ks.)3951
40788 y(T)-108 b(o)608 b(a)-36 b(v)g(oid)608 b(this)f(kind)g(of)i
(reallo)36 b(cation)609 b(o)-36 b(v)g(erhead,)651 b(w)-36
b(e)608 b(c)-36 b(ho)36 b(ose)608 b(a)f(p)36 b(olicy)609
b(that)e(p)36 b(erforms)2000 42393 y(co)g(ordinated)643
b(reallo)36 b(cations.)1208 b(In)642 b(a)i(co)36 b(ordinated)642
b(reallo)36 b(cation,)698 b(the)642 b(application)h(is)g(giv)-36
b(en)2000 43998 y(some)374 b(resp)36 b(onsibilit)-36
b(y)374 b(or)g(con)-36 b(trol)373 b(to)h(e\256ect)g(the)f(requested)g
(allo)36 b(cation)375 b(c)-36 b(hange,)386 b(or)374 b(at)f(the)g(v)-36
b(ery)2000 45603 y(least,)467 b(it)459 b(receiv)-36 b(es)461
b(noti\257cations)e(from)h(the)f(op)36 b(erating)460
b(system)g(when)f(imp)36 b(ortan)-36 b(t)459 b(sc)-36
b(heduling)2000 47208 y(ev)g(en)g(ts)568 b(o)36 b(ccur.)981
b(Since)567 b(the)h(application)g(kno)-36 b(ws)569 b(whic)-36
b(h)567 b(of)i(its)f(threads)f(are)h(critical)h(at)f(an)-36
b(y)2000 48813 y(giv)g(en)365 b(time,)379 b(it)365 b(can)f(a)-36
b(v)g(oid)365 b(preempting)f(the)g(corresp)36 b(onding)364
b(pro)36 b(cessors)365 b(in)f(the)g(ev)-36 b(en)g(t)365
b(that)f(its)2000 50418 y(allo)36 b(cation)379 b(needs)e(to)g(b)36
b(e)377 b(reduced.)559 b(F)-108 b(or)377 b(example,)389
b(an)377 b(application)h(that)f(follo)-36 b(ws)379 b(the)e(w)-36
b(orkpile)2000 52023 y(of)380 b(tasks)f(programming)g(mo)36
b(del)380 b(can)f(a)-36 b(v)g(oid)379 b(preempting)f(a)i(pro)36
b(cessor)379 b(whose)g(thread)f(is)i(in)f(the)2000 53629
y(middle)433 b(of)i(executing)e(a)h(giv)-36 b(en)435
b(task.)3951 55234 y(In)562 b(general,)595 b(co)36 b(ordinated)563
b(reallo)36 b(cations)564 b(allo)-36 b(w)564 b(us)e(to)g(\260exibly)h
(distribute)e(reallo)36 b(cation)2000 56839 y(resp)g(onsibilities)405
b(b)36 b(et)-36 b(w)g(een)403 b(the)g(application)i(and)e(the)h(op)36
b(erating)404 b(system.)569 b(The)404 b(more)g(resp)36
b(on-)2000 58444 y(sibilit)-36 b(y)353 b(that)e(is)i(giv)-36
b(en)352 b(to)h(the)e(application,)369 b(ho)-36 b(w)g(ev)g(er,)369
b(the)352 b(more)g(the)f(op)36 b(erating)352 b(system)h(needs)2000
60049 y(to)f(trust)e(that)i(it)f(will)i(resp)36 b(ond)351
b(to)h(allo)36 b(cation)353 b(c)-36 b(hanges)351 b(in)h(an)f(honest)h
(manner.)550 b(Sev)-36 b(eral)352 b(mec)-36 b(h-)2000
61654 y(anisms)523 b(ha)-36 b(v)g(e)523 b(b)36 b(een)523
b(prop)36 b(osed)522 b(to)h(implemen)-36 b(t)522 b(co)36
b(ordinated)523 b(reallo)36 b(cation)525 b(p)36 b(olicies,)547
b(suc)-36 b(h)522 b(as)2000 63259 y(sc)-36 b(heduler)510
b(activ)-72 b(ations)511 b([1],)531 b(\257rst-class)510
b(user)g(threads)g([31],)531 b(and)510 b(pro)36 b(cess)511
b(con)-36 b(trol)510 b([48].)811 b(The)2000 64864 y(Cilk-AP)398
b(system)f(uses)g(the)g(pro)36 b(cess)397 b(con)-36 b(trol)397
b(mec)-36 b(hanism,)404 b(whic)-36 b(h)397 b(w)-36 b(e)397
b(discuss)g(in)g(Section)g(6.2.)25350 75321 y(16)p eop
end
%%Page: 17 17
TeXDict begin 17 16 bop 2000 10261 a Fw(Chapter)1033
b(3)2000 15872 y(A)g(Theoretical)f(Mo)86 b(del)1033 b(for)2000
19193 y(Sc)-86 b(heduling)1034 b(Adaptiv)-86 b(ely)1032
b(P)-86 b(arallel)2000 22514 y(Jobs)2000 28624 y Fy(In)431
b(this)g(c)-36 b(hapter,)431 b(w)-36 b(e)432 b(dev)-36
b(elop)431 b(a)h(theoretical)f(mo)36 b(del)432 b(for)g(adaptiv)-36
b(ely)432 b(parallel)g(jobs)g(and)e(their)2000 30229
y(execution)550 b(sc)-36 b(hedules.)926 b(W)-108 b(e)550
b(assume)f(a)h(t)-36 b(w)g(o-lev)g(el)551 b(sc)-36 b(heduling)549
b(en)-36 b(vironmen)g(t)549 b(in)g(whic)-36 b(h)550 b(pro-)2000
31834 y(cessors)445 b(are)f(allo)36 b(cated)446 b(to)e(jobs)h(in)f(the)
g(\257rst)g(lev)-36 b(el)445 b(using)f(a)h(dynamic)g(p)36
b(olicy)-108 b(,)448 b(as)c(discussed)g(in)2000 33439
y(Chapter)415 b(2.)572 b(W)-108 b(e)415 b(b)36 b(egin)415
b(b)-36 b(y)415 b(mo)36 b(deling)416 b(an)f(adaptiv)-36
b(ely)416 b(parallel)g(job)f(as)h(a)f(\\fully)i(strict")e(\(w)-36
b(ell-)2000 35044 y(structured\))522 b(m)-36 b(ultithreaded)523
b(computation)g(with)h(a)h(giv)-36 b(en)524 b(execution)h(sc)-36
b(hedule,)546 b(where)524 b(the)2000 36649 y(n)-36 b(um)g(b)36
b(er)444 b(of)j(pro)36 b(cessors)446 b(allo)36 b(cated)447
b(to)f(the)f(job)h(ma)-36 b(y)447 b(c)-36 b(hange)445
b(at)h(eac)-36 b(h)446 b(step)g(of)g(the)f(execution.)2000
38254 y(Then,)467 b(w)-36 b(e)460 b(mo)36 b(del)461 b(the)e(in)-36
b(teraction)460 b(b)36 b(et)-36 b(w)g(een)460 b(the)g(\257rst)f(and)h
(second)f(lev)-36 b(els)462 b(of)f(sc)-36 b(heduling)459
b(b)-36 b(y)2000 39860 y(pla)g(ying)549 b(a)f(game)h(b)36
b(et)-36 b(w)g(een)547 b(the)g(op)36 b(erating)549 b(system)f(and)f
(the)h(job)g(sc)-36 b(heduler,)576 b(in)548 b(whic)-36
b(h)548 b(the)2000 41465 y(op)36 b(erating)395 b(system)f(acts)h(as)f
(an)g(adv)-36 b(ersary;)409 b(this)394 b(approac)-36
b(h)394 b(is)g(also)h(used)f(in)g([2].)566 b(W)-108 b(e)394
b(end)g(with)2000 43070 y(an)459 b(analysis)h(of)g(a)g(greedy)f(job)g
(sc)-36 b(heduler)458 b(in)h(this)g(adv)-36 b(ersarial)461
b(mo)36 b(del,)466 b(sho)-36 b(wing)459 b(that)g(greedy)2000
44675 y(sc)-36 b(hedules)433 b(ac)-36 b(hiev)g(e)434
b(an)f(execution)h(time)g(whic)-36 b(h)433 b(is)h(within)g(a)g(factor)g
(of)g(2)g(of)g(optimal.)2000 49585 y FC(3.1)2152 b(A)717
b(Mo)60 b(del)716 b(for)h(Adaptiv)-60 b(ely)715 b(P)-60
b(arallel)717 b(Jobs)2000 52662 y Fy(In)486 b(this)f(section,)499
b(w)-36 b(e)486 b(presen)-36 b(t)485 b(a)h(mo)36 b(del)486
b(for)g(adaptiv)-36 b(ely)487 b(parallel)g(jobs)f(based)f(on)h(the)f
(graph-)2000 54267 y(theoretic)476 b(mo)36 b(del)477
b(of)g(m)-36 b(ultithreaded)475 b(computation)h(describ)36
b(ed)475 b(in)h([7].)708 b(W)-108 b(e)476 b(mo)36 b(del)476
b(an)h(adap-)2000 55872 y(tiv)-36 b(ely)453 b(parallel)g(job)g(as)f(a)h
(fully)g(strict)f(m)-36 b(ultithreaded)451 b(computation)g(with)h(an)g
(adaptiv)-36 b(e)453 b(exe-)2000 57477 y(cution)433 b(sc)-36
b(hedule.)578 b(W)-108 b(e)433 b(de\257ne)g(eac)-36 b(h)433
b(of)i(these)e(terms)g(in)g(turn.)3951 59159 y(Our)483
b(de\257nition)g(of)i(a)f(m)-36 b(ultithreaded)483 b(computation)g(is)i
(iden)-36 b(tical)484 b(to)g(the)g(de\257nition)f(pro-)2000
60764 y(vided)411 b(in)f([7].)572 b(T)-108 b(o)411 b(summarize,)416
b(a)411 b(m)-36 b(ultithreaded)409 b(computation)i(consists)g(of)g(a)h
(set)e(of)i(threads)2000 62369 y(that)565 b(are)h(connected)f(to)g(eac)
-36 b(h)566 b(other)f(via)h(spa)-36 b(wn)566 b(or)f(data-dep)36
b(endency)564 b(edges.)975 b(A)565 b Fo(thr)-78 b(e)g(ad)2000
63975 y Fy(is)467 b(de\257ned)e(as)h(a)h(sequen)-36 b(tial)467
b(ordering)f(of)h(unit-size)f(tasks,)476 b(where)466
b(eac)-36 b(h)466 b(task)h(tak)-36 b(es)467 b(one)g(unit)2000
65580 y(of)552 b(time)f(to)g(execute)g(on)g(a)g(pro)36
b(cessor,)581 b(and)550 b(tasks)i(in)f(the)f(same)i(thread)e(are)h
(connected)f(b)-36 b(y)2000 67185 y Fo(c)-78 b(ontinue)534
b Fy(edges)419 b(that)f(sp)36 b(ecify)420 b(the)e(sequen)-36
b(tial)420 b(ordering)e(of)i(the)e(thread.)573 b(Figure)419
b(3-1)g(sho)-36 b(ws)2000 68790 y(an)482 b(example)h(of)g(a)g(m)-36
b(ultithreaded)481 b(computation.)724 b(During)482 b(its)g(execution,)
495 b(a)483 b(thread)e(\(whic)-36 b(h)2000 70395 y(w)g(e)411
b(call)h(the)e(\\paren)-36 b(t"\))410 b(ma)-36 b(y)411
b(create,)416 b(or)411 b Fo(sp)-78 b(awn)125 b Fy(,)416
b(other)410 b(threads)g(\(called)h(\\c)-36 b(hildren"\).)570
b(Eac)-36 b(h)2000 72000 y(spa)g(wn)430 b(is)h(represen)-36
b(ted)428 b(b)-36 b(y)430 b(an)h(edge,)g(called)g(the)f
Fo(sp)-78 b(awn)555 b Fy(edge,)432 b(whic)-36 b(h)430
b(connects)f(the)h(task)h(in)25350 75321 y(17)p eop end
%%Page: 18 18
TeXDict begin 18 17 bop 2000 1328 a Fy(the)332 b(paren)-36
b(t)331 b(thread)h(that)f(p)36 b(erformed)332 b(the)g(spa)-36
b(wn)332 b(op)36 b(eration)333 b(to)f(the)g(\257rst)f(task)i(of)g(the)f
(resulting)2000 2933 y(c)-36 b(hild)514 b(thread.)820
b(A)515 b(spa)-36 b(wn)514 b(is)h(similar)g(in)f(seman)-36
b(tics)515 b(to)f(a)h(subroutine)e(call,)536 b(except)515
b(that)f(the)2000 4539 y(paren)-36 b(t)433 b(thread)f(is)i(allo)-36
b(w)g(ed)435 b(to)f(op)36 b(erate)433 b(concurren)-36
b(tly)433 b(with)h(the)f(c)-36 b(hild)433 b(thread.)6566
28167 y @beginspecial 137 @llx 83 @lly 720 @urx 409 @ury
3498 @rwi @setspecial
%%BeginDocument: mtcomp-fs.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Thesis Figures.ppt)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910130614-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 137 83 720 409
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
137 83 moveto 720 83 lineto 720 409 lineto 137 409 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
137 83 583 326 rectclip
[ 0 -1 1 0 53.59982 545.60181 ] concat
/N53 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font ACDMFF+TimesNewRoman,Italic
11 dict begin
/FontName /ACDMFF+TimesNewRoman,Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 940 dict dup begin
/.notdef 
<10bf317005b8302fd45b07fb1549d56700cd874f9785acaaa30edf166f7d
7fe0592f51d07c5aaaff66bb85fa> ND 
/G 
<10bf317022f0081597cff576c41b27466fe1e52d193034b36888cf3b2ca3
68a68d779fafce3b72c5293d6a3f887f14f5a58b0034aee71698546c4c0b
991181b84d52072635415222f7bd056e66888b79f595879cd3baf7efe159
063d43845ef9a025705d8ec9651b457099654394d2992e33c012343fc4f2
66bd7986fb9a6f6efaf2a6ba768f8b612ddae90ca0c801101a2b8812c0d1
878114ac488c2949f4102b5df4236669c09640ae29afbccb443338828b0c
4517115a6e5e3eaba334cf1dcb7ac13c67e72a57aac6dbd46b8372a5bd25
904367c6e60889f07aa8786d7c3e90b25aad92f3e9244c386428145e> ND 
/J 
<10bf31709b62baa6ed3ff432fee50dc00607d5d72252eb6bcb129243db2d
20da9a1bba6a2a66e7e0aa49e064b3cd91583d479cde6fdea9b68aa6c210
4c340f6d9eaee545ca5b3220798b86c6c501559929908fda3517e01edd65
a0870f99744c55f160054bcc26b2401397f00007e631a3ec8136de71a1ea
54cb887274c598e3d9a0cf2e81ae1712a04402d31806c05b33b9d0d9e621
a3c3431c175d72d405299a8e75c6a1cb1be61e602566dfa0681fdb581ce1
0fdbd4208d25dddacc> ND 
/N 
<10bf31709dce1b1ed41c47addeb7a391f41ed8083f4afeff1c947df10a4d
2de36425e89f6bd82e60d9023e2d78bc84830b34e62f8a4568be7bc208ea
4fc6e9ca969e8aec41dd80f80f4c4fe472639ba3366569cb87de5f9213ad
98120d1a71b4584b509f09b5200a62d6e7ca1119d61533e703d2441b08cc
bd9b3c336c42188f729bae655049971d2e4b7d6cd44a7b76666f37ef7463
60a28e6259dace068776b5c8cc33f800437ece6dccba77e4b0e7> ND 
/P 
<10bf3170815b61898ffe1eb7109b3eb3fe8179c947126cde0ca1f0f3a57b
4fde4a0e49d820192254c426f8d7a6d5299e28c0b3aaba378c26c6f147b4
8a5a4c0122cff4b969b15e30e1453b0937d2109da30e4ce446da9a7e9ab9
e76e27900c04c0add80988c0c7b9922b0ef4ac86d418261120e07369b2d9
b1acf0aff00cee423b3cd264a8c70a5a05e09d6c0a09605b3b34e7c29b8d
125ff0629d3b1843ba7d87672b5291e3ddb8d717dd2e32b1285a5857a4d9
e80141d3d7199fd282a27fa888d0b8> ND 
/v 
<10bf317052452fc5aad0396ffeda7b26078ecb2bae9160e8a2ff79b8413c
c7863fa52f084c124f376817021d111fd45356a585fa0f70e03eec5a8676
69a27d45857cbfc4b89a5c4acca120869d8cdd588b39c064d4789bf98644
9a3831f33b7c7bd3b9aba947b52369d2b2d9cafbc4e36825d1ad23fe62d1
3909f21c6e75f9844e2a64feab8b455daba318be09eef7ede45676853dea
cc5a8d23424c2053e51531cbf2f4df> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDMFF+TimesNewRoman,Italic findfont /Encoding get
dup 0 /.notdef put
dup 71 /G put
dup 74 /J put
dup 78 /N put
dup 80 /P put
dup 118 /v put
pop
%%EndResource
[/N22/ACDMFF+TimesNewRoman,Italic 1 TZ
%%BeginResource: font ACDLCF+TimesNewRoman
11 dict begin
/FontName /ACDLCF+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/space 
<10bf317079c757bf91> ND 
/parenleft 
<10bf317046e70250e8bd40d114dd6e816b58f4d3349c0c7727832e7501d9
0d48751e5ed01a4a989a3de6f3df4e8150bcde04496d7ebf18ade860af48
8df404b0480a8fe53e55e37acb5a554f9e5cbbe042244d6fc0aa0fdafde4
acb4c52d35fe39221cd926f89c> ND 
/parenright 
<10bf3170537b448b82841392ad69a78470fcf6ad5b9860e31496592c5fd2
8c2a948b7ef1391379bc9dc9754e13aa1a0d8be5cfd2e3bc1b6a246b4628
a43a8883776071abf86a7883d030defeed590f0bf1949e72bae27054def5
466be78152f4af0ef71e17f1> ND 
/slash 
<10bf31707ecffa29aa99596df40b96812e390790337673cf79e85a6235> ND 
/zero 
<10bf31705d64a97b17e82784743dd8afd77cc124ffedf62073386a4af3bd
86fd28c9c7a756e9ef18e3ca007b94f0e02e9eb268494f71c4e6ce33e23a
daf3d98e6e397ae6d95a99deac335d9d72bffd478071defcda00cb768906
0b44c557ecf61de22b31359bb158f6fec05d2caffa2d64aa1e2dc65d6175
e933567afd84f788ad9d2ecdc1d1277289609d3478a2f9ff64e3fec0e6b8
8edb35e90668db5b556d9651c4b7ff49d0e2> ND 
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
/four 
<10bf317069b1fd7146b17c113b617a69456a1f46fa86f93a1743e1bde519
49e5c8665d9cf49ab4179aecaf779fa834a317855eb2ce61cdee1d727f> ND 
/five 
<10bf317049845615ceab2cb35844ace30baf3e54b0e1773fc25e2037b21b
b58b95d34cefc92bea69dc9b438084ed7eb5c6702a368454ebc82a5856ce
9936aede12d64deba22dd59cd070d9cd700c552563a2157176094ad577ca
7175d4c555582970bb6ced51f021b279f79ea313c4e45258856c7401f914
3fd613f871ff33cdce06d0175d18b29427c1e70009e3e10e63caa0676029
8c0b976669b8d245> ND 
/six 
<10bf3170448bf7f9a4e5f8472a5a2d45b7594de91351c6ec052ffd8b762a
bed41ed16809fa2365105c6627f46205709a8a1309c7141139fd941188bd
c8d9b0b55c47d641558ff36ded37dddb1b216d36df7ff3e4cecb5e93a247
22d0b6b5e65a4a2dcc56b02d7259d8fd5b7ec0999a61dac27e80da2f8676
34759b4e247227f13713c39238726a89a708bbed3b752173bdebcebaeea7
71ee266a3e95119dcfb78b31c6beeef7041756c5788d9d3d80a0bb3f669d
9ba6d8b1667d5d5aa89f4142cfd220ffe9eb070e> ND 
/seven 
<10bf3170422f935763586cd8dbf7f37293dfe15df8bc3e09eef989653acc
203875a79f5d3c366f49e5ce0c7723933c8d3b9a4fd39991> ND 
/eight 
<10bf31703a9bd69293aaf1980d4004db29512cfbcdf83050f262f22394b0
ef479114fcd1ed3780f8e8379ec274149787838cb972946ff925f327dc43
fe0a268771c55ebbfb2b11062f0229b6b8245dcdaee1f4d128ae888b5b31
2979a0a0311f4e185869859bc2f66d09f1f0a58e4c124d00e52b1afc6fde
a6cc391f21431f05bfb725982450ba002876f8730b821ec63f425acc7fbc
dbd469c4bbc842a4c448a96aef6e173e7ebf5f5a7a17953e1579490627e0
98ff8ddd57718c580a5c4db5f0f85a39de87a2ee8507278f64c74b506e5f
c484dc38505671de2149f16a16f5b3bd2bd178fe57f2540526157d2501cd
a1ec9d05b086c77bbf39961b> ND 
/nine 
<10bf317041f0a9496f308eef332a89569c6f19bf3d9e8151f98106b7f3b4
863943549b6788f898c785f107f2fd33dafee552c5021ce35f862500ffe7
90b89ba5e8ca74771847acf24a3921944b9ff12aa20c31cc240b97d0bfbf
3bfa98131e7f0af00c2c1318418f0b901e30e5ac56e17f3033ea0f27da78
6ba05aa35f7d1182c74c8b5d63906ddf3add8563ed2127e6e60e74dcaeec
cd2fc89d6ac5e14d494f0e9d12d3f290592c4f786ec533bdf4b038336f9c
5e802b11> ND 
/A 
<10bf3170612fa8ae288a2f767c6f2d22480749f87ffaef88db9508f355b3
d621b9e09a8d1290afe57d05190debf7b19b92f6309b70e08d2409abdf50
3b6a0e5daa0043a6e298cadec0a7dbd5588f8ba0646e339db53e322e33db
33e9ac93d421016e880386d59c5f84e2c9dcb201c618c0d88390bc39b5b5
dcf9b13cb5b08470f0d83c168f6d7ea2244d1b> ND 
/B 
<10bf31706ea8189a0122a2c3dc80451ea987f9cc6dc7afa0c8f0365e6d8e
59a275ca593c5d46c9efa9ebe4192f8e472ac6f0efdf90f5d264a8b47fa4
3bcd031546c0586a98250a46abdef7d038322a132dd14df107aae195c311
99c6fa7558e3ee2379999d05cf38ad7f22726f37f2f0654cf65c11005a88
2feb945df6452201e1abb666d0244ac9dc622994ec7112e71f49ba0b5306
4d49384d5d74864da9fc7636c8b9964886a4103e2320a1f33cb3f7f7bcc7
104eb429cfd6cfab753b2e30fdbce693ce1dcc5a7fe31d75680753c52fe9
350712be59c0ee4a2780b638de9e8e44870622e76d3c23cdfd281b0b8177
c0aff3531220d18c12c91634c02401e01a11> ND 
/C 
<10bf31705d65c09013f5e74d02fbfce579927dc4371245d5279a0be7ec2d
bd3b1448f6fd9c53426e6238d321f77957395a071b4b8eae65710650ca99
5020550eaa4528d828ef4c47ac3d29b589dd7f1c7cfe44b10e3e8fa63e50
7c3e4eb74e257f81314f58ef9126142bc9d3a940c619a0d5450ffb6600e9
bb7f776713c2df8dd431070f31717d2477542aecd1539231d249a65da0e1
ee77958319b99e72488e0e9fa74f4d170e269189eb39aa1a> ND 
/D 
<10bf31706ea8518093a448f0413d9dd2503cf14562d62f8e03c59ef262c0
e81d3c5037d7a8fbf15657e5bea1080fe305ab71bf0048720c010cf41197
6f2c354776e6ac045fcbc3395f65891cbe4c7f0093e58d10b57eae23372e
4cc99d7f2f11c1f1c023288641813a3b8b65e70e4b5173920a628da83be4
7b524c38228036fccc15a820529e8626ae48a60adbbae5fd> ND 
/E 
<10bf31705245888107d641c65df0d045384b4474a865698169ff2c4c5759
f26e2217c59fcbe377198e20e38aaa44f075831908ff3584c8503712a3f9
da462024eae3426d516a8864b3756edb7e42923b77324ddcf4879e1b61b4
02502bf9f5c08a938a8b9111b299fb506f1aa6115b23bb6038633ef2c172
1c1c4fba6b5b7baae1d192358092d890074dc21b1d5f65994b78807f042e
8945e17dc9fd4baebebbadfc790575a38910eab682188d9cdb44060faa47
1dcf91df296595839280be99912fd6d9ac4594d1b8a3> ND 
/F 
<10bf317069b1b5630e42cd6c8ff2cb4d3f7bc188fb90c1fdbffc389a7b7c
590172825fc5f7c1632f0e00f7f24a69c85e73a086926561cd7597f366b9
c557c28ba97bd9e48588932b584d925e90f75351236f8dee991d8b2912e0
edc0500223be1a5bd4cd44c3c3de75aa12b7e63ed3a399ba00214a66fe95
b5d95b0096ce0321bb87083de3bbc29cfe8ef473870f448ffcd9f71c6888
fa2bf4ba82669c30c14d2655a8b69d82e43f233aafad0cc27d2d> ND 
/I 
<10bf31705600a7ed90307a9003ca62013c6a672423969cbfb09d38b977c3
3bb76a0a443b03ca15feffb7f47ead3efae89c4da09011014b3ef74dfcc4
49aa62038fec2b8087c3eb93eadcca82adeba753d37fb428848495514418
28d8a0f3ad99e43ca7d439d4d98a470d6617f8dd1388> ND 
/J 
<10bf31705245662c028a7d41142a9172cb3f39702bb2297ba0998cbe201f
77e89fe57d5ed956b84574b1620f88a55c2a51aa279e3fc9cf923c80361d
86a3551f2534c353d520d3bc14bc4d344677b575ead159bbdfc8aaeec820
ded505d06fe178d1ea8a0d44df29931f663cf743408db506a44468a17c12
4775c79567328c125a4e927e096a92c7da53c382783cd0826b0553dedd74
> ND 
/P 
<10bf31706ea9c5bc0db16a9d0fb9334b7aae45fa9562423ca0efcafbe577
696190382686f72544b1109cd9a28e6e2fb8c3e703e277558d9de53e9bd4
331eb7411fa27fc9fbf9488ff1a8e626acd2f355101bb86e40f636dd5a74
50c4f3ac4c3fce01d454db469da536ea46528530bc3e44fdc91176a1e591
1b2932205e6c0eac6f4d330f0230a163b5b30ecdc649a4ff6b024a9513ec
d5f934e2e3b5d7f24bd0170221950b8bb0ffa0c50e77c36e34adf2e847c9
adbff54bf77ef65d9afdb3878865> ND 
/S 
<10bf3170383eecc69ba25cd9f9f1a3f877f72d54ca249226fb09a99225d4
fa4a892ae0bf757b41a46aaf766816bb2e9c6c4e867aeb02a76d05e762b6
353837bdf52bbc0c70c14510f08ced31ac95e2c8b5dfdbf8f1dffd4709a0
760737961b7464d75e4dbf7323db187fa23f8213fd84f092b3c292e45093
4a017d49f1fa4f8d834c3fd0c5126c0c5c896c1a48c0653753c6f56c23b6
627010a4379bd3d96b26db0b3531098cdc23704e1f8e25a61651df0d8d02
8f68c8b7a7de4652566ef5c50305a3ec674a5be2d1bf9f76580a00788d85
ad3f4dc24f5adec7880bc3a7db38c71260e951f8778b0aff0ff2e97effe6
f0b2b33485e5f0401138cd3f9e066ed25ff05e7594ebdb0029f3d5> ND 
/T 
<10bf31705b0718f462bb36d02a655e51f04593b972dbe0892a4279b53c95
62dbd237266bc0cb4e5967f6d053e97e3cc8fe6477448edcd2c2ed40f6e6
056ef32aac1986bf84927c9fb1e2806a71f53c8604421852f835782fd7d8
0fdb45127c08fbe24f16e5af9ede981de72f75b4f62ef25f8b6075081fcf
> ND 
/W 
<10bf31706ae2d6d9dcbe8344511f08de4b9db5ac28c5c661efe6fa9e7439
4bc84ffd6c26e5c964d324deb8a2be71c781983509fc7315f13f2f452574
0c432ccfa783a50be1522758812e78dd12223bf37e37be9a2b9de70daa25
87e5ce0c31b1dc8fd1e7856f2a379806580606a20898e7fccb07255b76ec
aa9ee467ae0d074d61c529177c4e36ba95b4a421f36bad34035a2ac2c04f
12a2abb782248776bfa1511003ff806b7b426cc8c17627c2470813ba31ae
1a22b8e70c403eb278204ab3b8eb7faa1ccbb1cca5799cb23970fbbc0204
4ae4346b70147e2d44e9f3315b6168df8cda1ca5> ND 
/a 
<10bf31705d647142d5ee6b7c4c12c41164f05a89990635873917bf00c5a2
b1b299b84b64fad030fdefe54a736fd84981f1bdecf34c327a4087285dd7
ff9a128a9fff4f1e5e34e2c477e4543546f0e505eb84b8e6141c12199331
8a7bef58caa55697aff5d8bf4fe61eb63478ae931b5c51fe7be8aa76cee5
cf639a1d462398300117c6a9c09614a29dfc50b3c7ddbacc1c6e2f7accb0
35d51bb776dfa4f2180b5bfa695d4ee30d466764f5192b628fd7c4971313
cd38d55ff99cfe805727052d975c4756402eb9230dd87b777a603efe9c10
65e950375d54aa41ed1c701bfac764ae78b65834b8918a99ed1f017d5313
eb0950b1f45353f40dc633104ecc941e4bbbf8359d5ae9042ef0f4edfdb8
> ND 
/b 
<10bf31707b35db816a4355a1c9cd0401bf6033c55938246c8b69de26e575
c058903a4e9b57b68075848962a6cd3da069ec2730d8699e3ccf520befe1
1a090d11586ebd56effd705bd3a5ced6c4343ddaabfe70e422082141dc06
c695cc46ee2dde408c0760a4c361b784ab85994758cbad73179f314048f1
c5a0c06c0e0ad84ded3a7904f207403afdd3193bf093fb903dbdef2de225
7307e43f8ee047d711ed22adc155c93b72dbad1a68> ND 
/c 
<10bf31705fc10320935f517e088588bc677b6f6b1116d76a45fb5fc081aa
57ad08a2f19e4ebd5e7f2e40678b64d780ab49e945b6f1fcf8c1bf2edd40
201d9d025abf1aec5b1b3268a3f2a9365f1c6e4133cdb11264503de1434e
2553cdd7a1785e8aefca6abe49ef29279001bfee84321f1c29e0a5b47534
7f9b91833b42fbc209dedbbca6bb8dac3b6f01ececb32ee525fd2275d1f3
f94c46a2dc92d591> ND 
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
/g 
<10bf31705b0767a01e9193e4d997e718ba6351677893b73d138e3fe6ba14
fc659a3bcdee55e0cfe8324eeac72638d3bd305a7a0220257ff3808a1470
04dc5c3c9fcb344358fed8b5ae71f4f49bb62f7c38ae95fdb022e2f50d0f
f7edd042065f7148993d640d50d67f360ac97639f25c381784672dcecf1d
1627665bc46b98264545bb45b967dbd7f6dce2f63c1e6751d9e493efd546
e255705157ddc690cb167218c88d537fe6a759d15d23d8bf19975778954b
513e4f87de1d7e922f34c8ee289c3522056d92971a6692e2b85efc32e805
5f726b3e561153ede1bd48ac9ed5e0024936e813717a672f7da4b25e0f4c
fa800bfb48a1e7e6e175f9ef63c0a88c39518c20ae1f79f29fe16a404d8f
590228fa5880231b26e78848d12ee249c635fcfa1c6175dbe52bf4c85030
42acafcb20327b817e4efb88945955dd6d08889ea1fb3f310e8cb4172190
21cc423288f3c72f1f0ebcd75197d45530bfc75571856796dc6ba51fbdd3
ed9cec0c0d7ad50b11a85f88370b45b4a51e0293d38df958b8> ND 
/h 
<10bf3170638bba13892b6a5edf1363fbad8b95e15d8b1d61c9ff2e20460e
9fbee5ce56a3b804c731461fc79898dd9aa49a7578bd0636027b48157921
a917a207198baeee00a6aeca2924ff3a229448490e59b468fb8b3164c353
d9bc2653f19a1e5c4133f967037a72c7c8fbf885e7d2fe25db116b7c8e10
b3fd50a5bf16ce8ee83140eeca023c94dedee552fcf1a7935a31030ea899
3824e06eab9cf113ffc3161399601c0b8fff6a9768bb0205ffc7ac68a666
f3075641cdac00a867c63305b98c782f2fa25a94358084fd7f1a3e8a9aba
49e32a58f5abe91c09f7098b61c81b8653e474549ba40c7470f7bc> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/k 
<10bf3170612e883674d2675aac39fa142a2f9de407f255952adbf70a8f61
dcc97f11c5b525f88e1dd0499bf87fea87e955adf630d83711a3925899c0
03b9f91dc3443000903cbe22625747190de827d6aed57c3f807366bbd6c6
3854786e273f1b9d2f49315171b285fa450532e1a996be3dfd2aafc74743
b4a57fabf2eddb1c25e9905cc57139486ad514add7eb942d1d1b791b6056
19d6f363ea6b92b2c94caf9a33a7be72eed5a355a7d76c1048097efb20dd
2f6c3a18d26def6109f03e7d30d5356121f15317baa59d193def17f7d470
1728dc814db541582ec9d0f98c682c14> ND 
/l 
<10bf31705b0817c8e08e579d70bd731872938fa19da6249b22a36add018f
2d71afb39a24cba2d5b131292eaf2ea6440cd481b67673b68d5de7db4045
53f0515df79be16519f0349ec3761dc09575b85d12a0ca2ef3e3cac5171f
27c0bb5b6c16bd708dadf6acc7da72304e> ND 
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
/n 
<10bf3170638bba1389001ebc99bd428947467ee318fefc1fb124f3371d83
7e6e4fd04510bb88359fc2d65b2f295b6f18b7850f6ca41f0fd067e40bcc
1e6a5b41ca20f07f1559265c094e47681cd30c939ca836f577db4be36b05
95c3d60cd00f5b5495365e7e02e3400714839e79cc3816e739cdb0ba1b66
3f096ef3ea59642b52897d5ef4b5012d68776aa74244415b9e96a4f773a5
8085f9fe5bb74ace5b6860ca975ea43b7d0db4eefeddd777982336d72d05
c093ca194b7cd3478661a723994ed178a305b939140b4ac4b7ef4bb11e73
> ND 
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/q 
<10bf31705e925b80bb44afdd80449a9019004483157f7a206da365a5b3f7
8e817f7d85ccb98decc0413cb1aad3badad1cc03a563c391c8aa6068d7e3
0e7f25d81543c3055a792149dafa6b421b59bb9a7c586f00d982f84e34a8
6eb81a6d2e5d0469a0475534487ff8a1de86976d09002e57cf1b9a5b9651
783da658816ced2d26e352c444560625e85828b2e4e4558755e30d1a05aa
ed4f42608d7e2eeedb01e0259b91825941bd1b5a38ce6f06522b93ba8b0d
c3140f68c73955f4b4bd495b40f7a8977e75e8b1c2519046a0f0449793> ND 
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
/u 
<10bf31707ec0b061a3e31ce6a8e02f67c79fc6fb9433b583752df0b97381
ced785f0788651d9110f4d168d6f4fb870b9f8634f66a1fe17ef5bb051c8
5b17a112a0ece57f7e85709c1e46ba1a1de6ef26a274c75bdde36925dd09
efae6e5faacef2f29e68904c9555df5e0f6550945360d079ca305237daa8
7397519a4b0aef19668718de15c20ef2e07af7217dbd27700833b73e8190
1c7d2aacb619fbf2f1396d79a94fea4ca18c65bd942fda84> ND 
/v 
<10bf3170612e88360faf380e328fa052d16002b3a6eb4d26fc61a8261d88
5d55beefaa23f749e4680928d2ec50b44ff8d74a2a42a0e615124d351c37
a9b6b3979ac1eedcff65bc4e156ed5711cac4c00ba96902c9956d3adb8e9
345080689b72e5082717e79b08e915301d3c209a4fac7e8f857cfb983000
d031a94c1a8ab5b2b0900013f2ae> ND 
/w 
<10bf3170638a0228cdcc4cd6455c35265f3b472ea1e128291ab8c91c671e
7bd658e474e8a0535d503ea2a6704bc9226df8b7fd4286af923f66233992
4a9bd89766cd1ad48ee99eac3f679bc5f41535050fefd334434033683a0c
453c86e866b1ef55892a380c8fcdccf1c4eac1b6e4f71a2a006a7f483456
13b3a00d36c64291144c8cc1dac83b7c06950c85f226495588d8cb0539f8
dacf025ed3c1593eb5f55ae6c66c3ae3939545fa200eff0116> ND 
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
/ellipsis 
<10bf317005a3205c8c1ade8b08220239c090e4bcc9980e1cca609a2d4d10
d9ac81cf840ef58d470313f2aa080d2edd9fcba3916373473b3af2ee5c86
d03e77ac42465a929f227203e9947419868ef6872ae4cf8eebf4d8959f6c
7a0d73c65112c717159e6b1143a38d56f38c0bfb6641b059c420c669b174
283ad5674adb76e78a4c9174f94c3257ef08af279dc17b93c98677c3acdb
61453c7ad9365f3a5a793919a4c97a3726887fe01492b780bd16b89f5a85
0d94b0a447171065596e> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDLCF+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N55/ACDLCF+TimesNewRoman 1 TZ
q
n
36 756 540 -720 re
eoclip
n
false setSA
n
36 756 540 -720 re
1 1 1 setrgbcolor
f
Q
false setSA
n
213.06 444.78 m
295.5 527.22 l
288.84 533.94 l
206.34 451.5 l
0.697998 0.697998 0.697998 setrgbcolor
eofill
n
326.76 379.38 m
406.26 416.46 l
402.24 425.1 l
322.74 388.02 l
eofill
n
327.84 241.62 m
404.1 267.9 l
400.98 276.84 l
324.78 250.62 l
eofill
n
327.72 160.92 m
400.2 125.58 l
404.4 134.1 l
331.92 169.44 l
eofill
n
212.28 277.2 m
284.04 194.7 l
291.24 200.88 l
219.48 283.44 l
eofill
n
282 530.22 m
282 525.3 286.02 521.22 291 521.22 c
327 521.22 l
331.98 521.22 336 525.3 336 530.22 c
336 645 l
336 649.98 331.98 654 327 654 c
291 654 l
286.02 654 282 649.98 282 645 c
eofill
n
396 411 m
396 406.02 400.02 402 405 402 c
441 402 l
445.98 402 450 406.02 450 411 c
450 590.22 l
450 595.2 445.98 599.22 441 599.22 c
405 599.22 l
400.02 599.22 396 595.2 396 590.22 c
eofill
n
396 255.72 m
396 250.8 400.02 246.72 405 246.72 c
441 246.72 l
445.98 246.72 450 250.8 450 255.72 c
450 366.72 l
450 371.7 445.98 375.72 441 375.72 c
405 375.72 l
400.02 375.72 396 371.7 396 366.72 c
eofill
n
396 105.72 m
396 100.8 400.02 96.72 405 96.72 c
441 96.72 l
445.98 96.72 450 100.8 450 105.72 c
450 216.72 l
450 221.7 445.98 225.72 441 225.72 c
405 225.72 l
400.02 225.72 396 221.7 396 216.72 c
eofill
n
282 152.22 m
282 147.3 286.02 143.22 291 143.22 c
327 143.22 l
331.98 143.22 336 147.3 336 152.22 c
336 464.22 l
336 469.2 331.98 473.22 327 473.22 c
291 473.22 l
286.02 473.22 282 469.2 282 464.22 c
eofill
n
168 214.5 m
168 209.52 172.02 205.5 177 205.5 c
213 205.5 l
217.98 205.5 222 209.52 222 214.5 c
222 589.5 l
222 594.48 217.98 598.5 213 598.5 c
177 598.5 l
172.02 598.5 168 594.48 168 589.5 c
eofill
n
173.88 236.22 m
173.88 224.64 183.3 215.22 194.88 215.22 c
206.46 215.22 215.88 224.64 215.88 236.22 c
215.88 247.86 206.46 257.22 194.88 257.22 c
183.3 257.22 173.88 247.86 173.88 236.22 c
1 1 1  setrgbcolor
eofill
1 J
1 j
0.75 w
10 M
[] 0 d
n
173.88 236.22 m
173.88 224.64 183.3 215.22 194.88 215.22 c
206.46 215.22 215.88 224.64 215.88 236.22 c
215.88 247.86 206.46 257.22 194.88 257.22 c
183.3 257.22 173.88 247.86 173.88 236.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
200.76 227.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
206.76 238.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(1) show
n
174 302.22 m
174 290.64 183.42 281.22 195 281.22 c
206.58 281.22 216 290.64 216 302.22 c
216 313.86 206.58 323.22 195 323.22 c
183.42 323.22 174 313.86 174 302.22 c
1 1 1  setrgbcolor
eofill
n
174 302.22 m
174 290.64 183.42 281.22 195 281.22 c
206.58 281.22 216 290.64 216 302.22 c
216 313.86 206.58 323.22 195 323.22 c
183.42 323.22 174 313.86 174 302.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
200.88 293.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
206.88 304.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(2) show
n
174 368.22 m
174 356.64 183.42 347.22 195 347.22 c
206.58 347.22 216 356.64 216 368.22 c
216 379.86 206.58 389.22 195 389.22 c
183.42 389.22 174 379.86 174 368.22 c
1 1 1  setrgbcolor
eofill
n
174 368.22 m
174 356.64 183.42 347.22 195 347.22 c
206.58 347.22 216 356.64 216 368.22 c
216 379.86 206.58 389.22 195 389.22 c
183.42 389.22 174 379.86 174 368.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
200.88 355.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
206.88 366.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(15)
[8.04056 8.04056 ] pdfys
n
174 434.22 m
174 422.64 183.42 413.22 195 413.22 c
206.58 413.22 216 422.64 216 434.22 c
216 445.86 206.58 455.22 195 455.22 c
183.42 455.22 174 445.86 174 434.22 c
1 1 1  setrgbcolor
eofill
n
174 434.22 m
174 422.64 183.42 413.22 195 413.22 c
206.58 413.22 216 422.64 216 434.22 c
216 445.86 206.58 455.22 195 455.22 c
183.42 455.22 174 445.86 174 434.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
200.88 421.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
206.88 432.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(16)
[8.04056 8.04056 ] pdfys
n
174 500.22 m
174 488.64 183.42 479.22 195 479.22 c
206.58 479.22 216 488.64 216 500.22 c
216 511.86 206.58 521.22 195 521.22 c
183.42 521.22 174 511.86 174 500.22 c
1 1 1  setrgbcolor
eofill
n
174 500.22 m
174 488.64 183.42 479.22 195 479.22 c
206.58 479.22 216 488.64 216 500.22 c
216 511.86 206.58 521.22 195 521.22 c
183.42 521.22 174 511.86 174 500.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
200.88 487.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
206.88 498.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(19)
[8.04056 8.04056 ] pdfys
n
174 566.22 m
174 554.64 183.42 545.22 195 545.22 c
206.58 545.22 216 554.64 216 566.22 c
216 577.86 206.58 587.22 195 587.22 c
183.42 587.22 174 577.86 174 566.22 c
1 1 1  setrgbcolor
eofill
n
174 566.22 m
174 554.64 183.42 545.22 195 545.22 c
206.58 545.22 216 554.64 216 566.22 c
216 577.86 206.58 587.22 195 587.22 c
183.42 587.22 174 577.86 174 566.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
200.88 553.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
206.88 564.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(20)
[8.04056 8.04056 ] pdfys
n
287.88 176.22 m
287.88 164.64 297.3 155.22 308.88 155.22 c
320.46 155.22 329.88 164.64 329.88 176.22 c
329.88 187.86 320.46 197.22 308.88 197.22 c
297.3 197.22 287.88 187.86 287.88 176.22 c
1 1 1  setrgbcolor
eofill
n
287.88 176.22 m
287.88 164.64 297.3 155.22 308.88 155.22 c
320.46 155.22 329.88 164.64 329.88 176.22 c
329.88 187.86 320.46 197.22 308.88 197.22 c
297.3 197.22 287.88 187.86 287.88 176.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
314.76 167.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
320.76 178.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(3) show
n
288 242.22 m
288 230.64 297.42 221.22 309 221.22 c
320.58 221.22 330 230.64 330 242.22 c
330 253.86 320.58 263.22 309 263.22 c
297.42 263.22 288 253.86 288 242.22 c
1 1 1  setrgbcolor
eofill
n
288 242.22 m
288 230.64 297.42 221.22 309 221.22 c
320.58 221.22 330 230.64 330 242.22 c
330 253.86 320.58 263.22 309 263.22 c
297.42 263.22 288 253.86 288 242.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
314.88 233.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
320.88 244.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(6) show
n
288 308.22 m
288 296.64 297.42 287.22 309 287.22 c
320.58 287.22 330 296.64 330 308.22 c
330 319.86 320.58 329.22 309 329.22 c
297.42 329.22 288 319.86 288 308.22 c
1 1 1  setrgbcolor
eofill
n
288 308.22 m
288 296.64 297.42 287.22 309 287.22 c
320.58 287.22 330 296.64 330 308.22 c
330 319.86 320.58 329.22 309 329.22 c
297.42 329.22 288 319.86 288 308.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
314.88 299.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
320.88 310.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(9) show
n
288 374.22 m
288 362.64 297.42 353.22 309 353.22 c
320.58 353.22 330 362.64 330 374.22 c
330 385.86 320.58 395.22 309 395.22 c
297.42 395.22 288 385.86 288 374.22 c
1 1 1  setrgbcolor
eofill
n
288 374.22 m
288 362.64 297.42 353.22 309 353.22 c
320.58 353.22 330 362.64 330 374.22 c
330 385.86 320.58 395.22 309 395.22 c
297.42 395.22 288 385.86 288 374.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
314.88 361.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
320.88 372.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(10)
[8.04056 8.04056 ] pdfys
n
401.88 128.22 m
401.88 116.64 411.3 107.22 422.88 107.22 c
434.46 107.22 443.88 116.64 443.88 128.22 c
443.88 139.86 434.46 149.22 422.88 149.22 c
411.3 149.22 401.88 139.86 401.88 128.22 c
1 1 1  setrgbcolor
eofill
n
401.88 128.22 m
401.88 116.64 411.3 107.22 422.88 107.22 c
434.46 107.22 443.88 116.64 443.88 128.22 c
443.88 139.86 434.46 149.22 422.88 149.22 c
411.3 149.22 401.88 139.86 401.88 128.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.76 119.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
434.76 130.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(4) show
n
402 194.22 m
402 182.64 411.42 173.22 423 173.22 c
434.58 173.22 444 182.64 444 194.22 c
444 205.86 434.58 215.22 423 215.22 c
411.42 215.22 402 205.86 402 194.22 c
1 1 1  setrgbcolor
eofill
n
402 194.22 m
402 182.64 411.42 173.22 423 173.22 c
434.58 173.22 444 182.64 444 194.22 c
444 205.86 434.58 215.22 423 215.22 c
411.42 215.22 402 205.86 402 194.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.88 185.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
434.88 196.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(5) show
n
402 278.22 m
402 266.64 411.42 257.22 423 257.22 c
434.58 257.22 444 266.64 444 278.22 c
444 289.86 434.58 299.22 423 299.22 c
411.42 299.22 402 289.86 402 278.22 c
1 1 1  setrgbcolor
eofill
n
402 278.22 m
402 266.64 411.42 257.22 423 257.22 c
434.58 257.22 444 266.64 444 278.22 c
444 289.86 434.58 299.22 423 299.22 c
411.42 299.22 402 289.86 402 278.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.88 269.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
434.88 280.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(7) show
n
402 344.22 m
402 332.64 411.42 323.22 423 323.22 c
434.58 323.22 444 332.64 444 344.22 c
444 355.86 434.58 365.22 423 365.22 c
411.42 365.22 402 355.86 402 344.22 c
1 1 1  setrgbcolor
eofill
n
402 344.22 m
402 332.64 411.42 323.22 423 323.22 c
434.58 323.22 444 332.64 444 344.22 c
444 355.86 434.58 365.22 423 365.22 c
411.42 365.22 402 355.86 402 344.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.88 335.64 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
434.88 346.26 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(8) show
n
402 434.22 m
402 422.64 411.42 413.22 423 413.22 c
434.58 413.22 444 422.64 444 434.22 c
444 445.86 434.58 455.22 423 455.22 c
411.42 455.22 402 445.86 402 434.22 c
1 1 1  setrgbcolor
eofill
n
402 434.22 m
402 422.64 411.42 413.22 423 413.22 c
434.58 413.22 444 422.64 444 434.22 c
444 445.86 434.58 455.22 423 455.22 c
411.42 455.22 402 445.86 402 434.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.88 421.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
434.88 432.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(11)
[8.04056 8.04056 ] pdfys
n
402 500.22 m
402 488.64 411.42 479.22 423 479.22 c
434.58 479.22 444 488.64 444 500.22 c
444 511.86 434.58 521.22 423 521.22 c
411.42 521.22 402 511.86 402 500.22 c
1 1 1  setrgbcolor
eofill
n
402 500.22 m
402 488.64 411.42 479.22 423 479.22 c
434.58 479.22 444 488.64 444 500.22 c
444 511.86 434.58 521.22 423 521.22 c
411.42 521.22 402 511.86 402 500.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.88 487.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
434.88 498.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(12)
[8.04056 8.04056 ] pdfys
n
402 566.22 m
402 554.64 411.42 545.22 423 545.22 c
434.58 545.22 444 554.64 444 566.22 c
444 577.86 434.58 587.22 423 587.22 c
411.42 587.22 402 577.86 402 566.22 c
1 1 1  setrgbcolor
eofill
n
402 566.22 m
402 554.64 411.42 545.22 423 545.22 c
434.58 545.22 444 554.64 444 566.22 c
444 577.86 434.58 587.22 423 587.22 c
411.42 587.22 402 577.86 402 566.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.88 553.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
434.88 564.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(13)
[8.04056 8.04056 ] pdfys
n
288 554.22 m
288 542.64 297.42 533.22 309 533.22 c
320.58 533.22 330 542.64 330 554.22 c
330 565.86 320.58 575.22 309 575.22 c
297.42 575.22 288 565.86 288 554.22 c
1 1 1  setrgbcolor
eofill
n
288 554.22 m
288 542.64 297.42 533.22 309 533.22 c
320.58 533.22 330 542.64 330 554.22 c
330 565.86 320.58 575.22 309 575.22 c
297.42 575.22 288 565.86 288 554.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
314.88 541.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
320.88 552.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(17)
[8.04056 8.04056 ] pdfys
n
288 620.22 m
288 608.64 297.42 599.22 309 599.22 c
320.58 599.22 330 608.64 330 620.22 c
330 631.86 320.58 641.22 309 641.22 c
297.42 641.22 288 631.86 288 620.22 c
1 1 1  setrgbcolor
eofill
n
288 620.22 m
288 608.64 297.42 599.22 309 599.22 c
320.58 599.22 330 608.64 330 620.22 c
330 631.86 320.58 641.22 309 641.22 c
297.42 641.22 288 631.86 288 620.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
314.88 607.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
320.88 618.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(18)
[8.04056 8.04056 ] pdfys
n
194.52 257.28 m
194.58 276.24 l
194.58 276.48 194.76 276.6 195 276.6 c
195.18 276.6 195.36 276.48 195.36 276.24 c
195.24 257.22 l
195.24 257.04 195.06 256.86 194.88 256.86 c
194.64 256.86 194.52 257.04 194.52 257.28 c
h
191.94 275.28 m
195 281.22 l
197.94 275.22 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
194.64 323.22 m
194.64 342.24 l
194.64 342.48 194.82 342.6 195 342.6 c
195.18 342.6 195.36 342.48 195.36 342.24 c
195.36 323.22 l
195.36 323.04 195.18 322.86 195 322.86 c
194.82 322.86 194.64 323.04 194.64 323.22 c
h
192 341.22 m
195 347.22 l
198 341.22 l
f
n
194.64 389.22 m
194.64 408.24 l
194.64 408.48 194.82 408.6 195 408.6 c
195.18 408.6 195.36 408.48 195.36 408.24 c
195.36 389.22 l
195.36 389.04 195.18 388.86 195 388.86 c
194.82 388.86 194.64 389.04 194.64 389.22 c
h
192 407.22 m
195 413.22 l
198 407.22 l
f
n
194.64 455.22 m
194.64 474.24 l
194.64 474.48 194.82 474.6 195 474.6 c
195.18 474.6 195.36 474.48 195.36 474.24 c
195.36 455.22 l
195.36 455.04 195.18 454.86 195 454.86 c
194.82 454.86 194.64 455.04 194.64 455.22 c
h
192 473.22 m
195 479.22 l
198 473.22 l
f
n
194.64 521.22 m
194.64 540.24 l
194.64 540.48 194.82 540.6 195 540.6 c
195.18 540.6 195.36 540.48 195.36 540.24 c
195.36 521.22 l
195.36 521.04 195.18 520.86 195 520.86 c
194.82 520.86 194.64 521.04 194.64 521.22 c
h
192 539.22 m
195 545.22 l
198 539.22 l
f
n
210.18 287.64 m
291 195.12 l
291.12 195 291.12 194.76 290.94 194.58 c
290.82 194.46 290.58 194.46 290.4 194.64 c
209.58 287.1 l
209.46 287.28 209.46 287.52 209.64 287.64 c
209.76 287.82 210 287.76 210.18 287.64 c
h
292.32 197.64 m
294 191.1 l
287.82 193.68 l
f
n
308.52 197.28 m
308.58 216.24 l
308.58 216.48 308.76 216.6 309 216.6 c
309.18 216.6 309.36 216.48 309.36 216.24 c
309.24 197.22 l
309.24 197.04 309.06 196.86 308.88 196.86 c
308.64 196.86 308.52 197.04 308.52 197.28 c
h
305.94 215.28 m
309 221.22 l
311.94 215.22 l
f
n
308.64 263.22 m
308.64 282.24 l
308.64 282.48 308.82 282.6 309 282.6 c
309.18 282.6 309.36 282.48 309.36 282.24 c
309.36 263.22 l
309.36 263.04 309.18 262.86 309 262.86 c
308.82 262.86 308.64 263.04 308.64 263.22 c
h
306 281.22 m
309 287.22 l
312 281.22 l
f
n
308.64 329.22 m
308.64 348.24 l
308.64 348.48 308.82 348.6 309 348.6 c
309.18 348.6 309.36 348.48 309.36 348.24 c
309.36 329.22 l
309.36 329.04 309.18 328.86 309 328.86 c
308.82 328.86 308.64 329.04 308.64 329.22 c
h
306 347.22 m
309 353.22 l
312 347.22 l
f
n
327.66 166.56 m
397.62 133.26 l
397.86 133.14 397.92 132.9 397.8 132.72 c
397.74 132.54 397.5 132.48 397.32 132.54 c
327.36 165.9 l
327.12 166.02 327.06 166.2 327.18 166.38 c
327.24 166.62 327.48 166.68 327.66 166.56 c
h
397.86 136.02 m
402 130.74 l
395.28 130.62 l
f
n
422.52 149.28 m
422.58 168.24 l
422.58 168.48 422.76 168.6 423 168.6 c
423.18 168.6 423.36 168.48 423.36 168.24 c
423.24 149.22 l
423.24 149.04 423.06 148.86 422.88 148.86 c
422.64 148.86 422.52 149.04 422.52 149.28 c
h
419.94 167.28 m
423 173.22 l
425.94 167.22 l
f
n
422.64 299.22 m
422.64 318.24 l
422.64 318.48 422.82 318.6 423 318.6 c
423.18 318.6 423.36 318.48 423.36 318.24 c
423.36 299.22 l
423.36 299.04 423.18 298.86 423 298.86 c
422.82 298.86 422.64 299.04 422.64 299.22 c
h
420 317.22 m
423 323.22 l
426 317.22 l
f
n
422.64 455.22 m
422.64 474.24 l
422.64 474.48 422.82 474.6 423 474.6 c
423.18 474.6 423.36 474.48 423.36 474.24 c
423.36 455.22 l
423.36 455.04 423.18 454.86 423 454.86 c
422.82 454.86 422.64 455.04 422.64 455.22 c
h
420 473.22 m
423 479.22 l
426 473.22 l
f
n
422.64 521.22 m
422.64 540.24 l
422.64 540.48 422.82 540.6 423 540.6 c
423.18 540.6 423.36 540.48 423.36 540.24 c
423.36 521.22 l
423.36 521.04 423.18 520.86 423 520.86 c
422.82 520.86 422.64 521.04 422.64 521.22 c
h
420 539.22 m
423 545.22 l
426 539.22 l
f
n
288 440.22 m
288 428.64 297.42 419.22 309 419.22 c
320.58 419.22 330 428.64 330 440.22 c
330 451.86 320.58 461.22 309 461.22 c
297.42 461.22 288 451.86 288 440.22 c
1 1 1  setrgbcolor
eofill
n
288 440.22 m
288 428.64 297.42 419.22 309 419.22 c
320.58 419.22 330 428.64 330 440.22 c
330 451.86 320.58 461.22 309 461.22 c
297.42 461.22 288 451.86 288 440.22 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
314.88 427.62 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
320.88 438.24 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(14)
[8.04056 8.04056 ] pdfys
n
308.64 395.22 m
308.64 414.24 l
308.64 414.48 308.82 414.6 309 414.6 c
309.18 414.6 309.36 414.48 309.36 414.24 c
309.36 395.22 l
309.36 395.04 309.18 394.86 309 394.86 c
308.82 394.86 308.64 395.04 308.64 395.22 c
h
306 413.22 m
309 419.22 l
312 413.22 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
308.64 575.22 m
308.64 594.24 l
308.64 594.48 308.82 594.6 309 594.6 c
309.18 594.6 309.36 594.48 309.36 594.24 c
309.36 575.22 l
309.36 575.04 309.18 574.86 309 574.86 c
308.82 574.86 308.64 575.04 308.64 575.22 c
h
306 593.22 m
309 599.22 l
312 593.22 l
f
n
329.4 247.62 m
398.16 271.02 l
398.34 271.08 398.58 270.96 398.64 270.78 c
398.7 270.54 398.58 270.36 398.4 270.3 c
329.64 246.9 l
329.4 246.84 329.22 246.96 329.16 247.14 c
329.1 247.32 329.16 247.56 329.4 247.62 c
h
396.36 273.18 m
403.02 272.22 l
398.28 267.48 l
f
n
327.84 384.6 m
401.82 419.94 l
402 420 402.24 419.94 402.3 419.76 c
402.42 419.58 402.36 419.34 402.12 419.28 c
328.14 383.88 l
327.96 383.82 327.72 383.88 327.66 384.06 c
327.6 384.3 327.66 384.48 327.84 384.6 c
h
399.78 421.86 m
406.5 421.74 l
402.36 416.46 l
f
n
210.72 449.04 m
294.24 533.46 l
294.36 533.58 294.6 533.58 294.72 533.46 c
294.9 533.34 294.9 533.1 294.72 532.92 c
211.26 448.5 l
211.14 448.32 210.9 448.32 210.72 448.5 c
210.6 448.62 210.6 448.86 210.72 449.04 c
h
291.66 534.6 m
298.02 536.76 l
295.92 530.4 l
f
n
402.12 194.64 m
401.28 194.64 l
400.44 194.7 l
399.54 194.82 l
398.7 194.94 l
397.86 195.12 l
396.96 195.36 l
396.12 195.6 l
395.28 195.9 l
393.6 196.62 l
391.92 197.46 l
391.14 197.94 l
390.3 198.42 l
389.52 198.96 l
388.68 199.56 l
387.9 200.16 l
385.56 202.14 l
384.78 202.86 l
384.06 203.64 l
383.28 204.42 l
382.56 205.2 l
381.12 206.88 l
380.4 207.78 l
379.74 208.68 l
379.02 209.58 l
377.04 212.46 l
375.84 214.5 l
374.64 216.66 l
373.5 218.82 l
372.42 221.1 l
370.5 225.78 l
369.66 228.24 l
368.88 230.7 l
368.16 233.22 l
367.56 235.8 l
367.02 238.38 l
366.54 241.02 l
366.36 242.34 l
366.24 243.66 l
366.06 244.98 l
365.94 246.3 l
365.76 250.26 l
365.76 252.96 l
365.64 255.6 l
365.4 258.24 l
365.28 259.5 l
364.92 262.14 l
364.74 263.4 l
364.5 264.72 l
363.96 267.3 l
363.36 269.82 l
362.64 272.34 l
361.86 274.74 l
361.02 277.2 l
360.12 279.54 l
359.1 281.82 l
358.08 284.04 l
356.94 286.26 l
355.74 288.36 l
354.54 290.34 l
353.22 292.32 l
351.9 294.12 l
351.18 295.02 l
350.52 295.92 l
349.8 296.7 l
349.08 297.54 l
347.64 299.1 l
346.86 299.82 l
346.14 300.54 l
343.8 302.52 l
343.02 303.06 l
342.24 303.66 l
341.46 304.14 l
340.68 304.68 l
339.84 305.1 l
339.06 305.52 l
338.22 305.94 l
337.44 306.3 l
336.6 306.6 l
334.8 307.08 l
334.62 307.08 334.5 307.32 334.56 307.5 c
334.62 307.74 334.8 307.86 335.04 307.8 c
336.84 307.32 l
337.74 306.96 l
338.58 306.6 l
339.42 306.18 l
340.2 305.76 l
341.88 304.8 l
342.66 304.26 l
343.5 303.66 l
345.06 302.46 l
345.84 301.8 l
348.18 299.64 l
348.9 298.86 l
349.62 298.02 l
350.4 297.24 l
351.12 296.34 l
351.78 295.5 l
352.5 294.6 l
353.16 293.64 l
353.88 292.68 l
355.14 290.76 l
356.4 288.72 l
357.6 286.56 l
358.74 284.4 l
359.82 282.12 l
361.74 277.44 l
362.58 274.98 l
363.36 272.52 l
364.08 270 l
364.68 267.42 l
365.22 264.84 l
365.46 263.52 l
365.7 262.26 l
366.06 259.62 l
366.3 256.98 l
366.36 255.6 l
366.48 252.96 l
366.48 251.64 l
366.54 250.32 l
366.54 249 l
366.6 247.68 l
366.96 243.72 l
367.14 242.4 l
367.32 241.14 l
367.5 239.82 l
367.74 238.56 l
368.28 235.98 l
368.88 233.46 l
369.6 230.94 l
370.32 228.48 l
371.22 226.08 l
372.12 223.74 l
373.08 221.4 l
374.16 219.18 l
375.3 217.02 l
376.44 214.92 l
377.7 212.88 l
378.96 210.96 l
379.62 210 l
380.28 209.1 l
381 208.2 l
381.66 207.36 l
383.1 205.68 l
383.82 204.9 l
386.04 202.68 l
387.6 201.36 l
388.32 200.76 l
389.1 200.16 l
389.88 199.62 l
390.72 199.08 l
392.28 198.12 l
393.12 197.7 l
393.9 197.28 l
394.74 196.92 l
395.52 196.62 l
396.36 196.32 l
397.2 196.08 l
397.98 195.9 l
399.66 195.54 l
400.44 195.48 l
401.28 195.42 l
402.12 195.36 l
402.36 195.36 402.48 195.18 402.48 195 c
402.48 194.76 402.3 194.64 402.12 194.64 c
h
335.4 304.32 m
330 308.22 l
336.42 310.2 l
f
n
402.12 566.64 m
400.44 566.52 l
398.82 566.28 l
397.2 565.8 l
395.52 565.2 l
393.9 564.48 l
392.28 563.52 l
390.72 562.44 l
389.16 561.24 l
387.6 559.92 l
386.04 558.42 l
384.54 556.8 l
383.1 555.06 l
381.72 553.2 l
380.34 551.22 l
378.96 549.18 l
377.7 547.02 l
376.44 544.74 l
375.3 542.4 l
374.16 539.94 l
373.14 537.48 l
372.12 534.9 l
371.22 532.26 l
370.38 529.56 l
369.6 526.8 l
368.88 523.98 l
368.28 521.16 l
367.74 518.28 l
367.32 515.4 l
366.96 512.46 l
366.72 509.52 l
366.54 506.58 l
366.42 500.64 l
366.3 497.7 l
366.06 494.7 l
365.7 491.76 l
365.22 488.82 l
364.68 485.94 l
364.08 483.06 l
363.36 480.24 l
362.58 477.48 l
361.74 474.78 l
360.78 472.08 l
359.82 469.5 l
358.74 466.98 l
357.6 464.52 l
356.4 462.18 l
355.14 459.9 l
353.88 457.68 l
352.5 455.58 l
351.12 453.6 l
349.68 451.74 l
348.18 449.94 l
346.68 448.32 l
345.12 446.82 l
343.5 445.44 l
341.88 444.18 l
340.26 443.1 l
338.58 442.14 l
336.9 441.36 l
336.9 441.3 336.84 441.3 336.84 441.3 c
334.98 440.82 l
334.8 440.76 334.62 440.88 334.56 441.06 c
334.5 441.3 334.62 441.48 334.8 441.54 c
336.66 442.02 l
336.6 442.02 l
338.22 442.8 l
339.84 443.7 l
341.46 444.78 l
343.02 445.98 l
344.58 447.36 l
346.08 448.8 l
347.58 450.42 l
349.08 452.16 l
350.52 454.02 l
351.9 456 l
353.22 458.04 l
355.74 462.48 l
356.94 464.82 l
358.02 467.28 l
359.1 469.8 l
360.12 472.38 l
361.02 475.02 l
361.86 477.72 l
362.64 480.42 l
363.36 483.24 l
363.96 486.06 l
364.5 488.94 l
364.92 491.82 l
365.28 494.76 l
365.52 497.7 l
365.7 500.64 l
365.82 506.64 l
365.94 509.58 l
366.24 512.58 l
366.54 515.52 l
367.02 518.4 l
367.56 521.34 l
368.16 524.16 l
368.88 526.98 l
369.66 529.74 l
370.5 532.5 l
371.4 535.14 l
372.42 537.72 l
373.5 540.3 l
375.78 545.1 l
377.04 547.38 l
378.36 549.6 l
379.68 551.64 l
381.12 553.68 l
382.56 555.54 l
384 557.28 l
385.56 558.96 l
387.12 560.46 l
388.68 561.84 l
390.3 563.1 l
391.92 564.18 l
393.6 565.14 l
395.28 565.92 l
396.96 566.58 l
398.7 567 l
400.44 567.3 l
402.12 567.36 l
402.3 567.36 402.48 567.24 402.48 567 c
402.54 566.82 402.36 566.64 402.12 566.64 c
h
336.48 438.42 m
330 440.22 l
335.34 444.3 l
f
n
288 439.86 m
286.32 439.92 l
284.58 440.04 l
282.9 440.28 l
281.22 440.58 l
279.54 440.94 l
277.92 441.36 l
276.24 441.9 l
274.68 442.5 l
273.06 443.1 l
271.5 443.82 l
270 444.6 l
268.5 445.44 l
267.06 446.34 l
264.3 448.26 l
261.78 450.42 l
260.58 451.56 l
259.44 452.7 l
258.36 453.9 l
257.34 455.16 l
256.44 456.42 l
255.54 457.74 l
254.76 459.06 l
254.04 460.38 l
253.44 461.76 l
252.9 463.14 l
252.66 463.86 l
252.42 464.52 l
252.24 465.24 l
252.12 465.96 l
251.94 466.68 l
251.82 467.4 l
251.76 468.12 l
251.7 468.78 l
251.64 469.5 l
251.64 470.94 l
251.58 471.66 l
251.52 472.32 l
251.4 472.98 l
251.28 473.7 l
251.16 474.36 l
251.04 475.08 l
250.8 475.74 l
250.62 476.4 l
250.38 477.12 l
249.84 478.44 l
249.24 479.76 l
248.58 481.08 l
247.8 482.4 l
246.96 483.66 l
246.06 484.86 l
245.04 486.12 l
244.02 487.26 l
241.74 489.54 l
240.48 490.62 l
239.22 491.64 l
237.9 492.6 l
236.52 493.5 l
235.08 494.4 l
233.64 495.24 l
230.64 496.68 l
229.08 497.34 l
227.52 497.88 l
225.9 498.42 l
224.28 498.84 l
222.66 499.2 l
220.92 499.44 l
220.74 499.44 220.56 499.62 220.62 499.86 c
220.62 500.04 220.8 500.22 221.04 500.16 c
222.78 499.92 l
224.46 499.56 l
226.14 499.14 l
227.76 498.6 l
229.38 498 l
230.94 497.34 l
232.5 496.62 l
234 495.84 l
235.5 495 l
236.94 494.16 l
238.32 493.2 l
239.7 492.18 l
241.02 491.16 l
242.22 490.08 l
243.42 488.94 l
244.56 487.8 l
245.64 486.54 l
246.66 485.34 l
247.56 484.08 l
248.46 482.76 l
249.24 481.44 l
249.96 480.12 l
250.56 478.74 l
251.1 477.36 l
251.58 475.92 l
251.76 475.26 l
251.88 474.54 l
252.06 473.82 l
252.18 473.1 l
252.36 470.94 l
252.36 469.56 l
252.42 468.9 l
252.48 468.18 l
252.6 467.52 l
252.66 466.8 l
252.84 466.14 l
252.96 465.42 l
253.14 464.76 l
253.38 464.1 l
253.62 463.38 l
254.1 462.06 l
254.7 460.74 l
255.42 459.42 l
256.2 458.16 l
257.04 456.84 l
257.94 455.64 l
258.9 454.44 l
259.98 453.24 l
261.06 452.1 l
262.26 450.96 l
263.46 449.94 l
266.1 447.9 l
268.86 446.1 l
270.36 445.26 l
271.8 444.54 l
273.36 443.82 l
274.92 443.16 l
276.48 442.62 l
278.1 442.08 l
279.72 441.66 l
281.34 441.3 l
283.02 441 l
284.64 440.82 l
286.32 440.64 l
288 440.64 l
288.24 440.64 288.36 440.46 288.36 440.22 c
288.36 440.04 288.18 439.86 288 439.86 c
h
221.7 496.74 m
216 500.22 l
222.24 502.68 l
f
n
288.12 620.64 m
286.44 620.58 l
284.76 620.46 l
283.14 620.28 l
281.46 620.04 l
279.84 619.68 l
278.22 619.26 l
276.6 618.84 l
275.04 618.3 l
273.48 617.7 l
271.92 617.04 l
270.48 616.38 l
268.98 615.6 l
267.6 614.82 l
266.22 613.98 l
264.9 613.08 l
263.58 612.12 l
262.38 611.16 l
261.18 610.14 l
260.1 609.12 l
259.02 608.04 l
258.06 606.96 l
257.16 605.82 l
256.32 604.62 l
255.54 603.48 l
254.82 602.28 l
254.22 601.08 l
253.74 599.82 l
253.5 599.22 l
253.32 598.62 l
253.08 598.02 l
252.96 597.36 l
252.84 596.76 l
252.72 596.1 l
252.6 595.5 l
252.54 594.84 l
252.54 594.24 l
252.48 593.64 l
252.48 592.98 l
252.3 591 l
252.06 589.68 l
251.88 589.08 l
251.7 588.42 l
251.22 587.1 l
250.68 585.84 l
250.08 584.64 l
249.36 583.38 l
248.58 582.18 l
247.68 580.98 l
245.76 578.7 l
244.68 577.62 l
243.54 576.54 l
242.34 575.52 l
241.08 574.5 l
239.76 573.54 l
238.38 572.64 l
237 571.8 l
235.56 570.96 l
234.06 570.18 l
232.56 569.52 l
231 568.86 l
229.38 568.26 l
227.76 567.72 l
226.14 567.24 l
224.46 566.82 l
222.78 566.52 l
221.04 566.28 l
220.8 566.28 220.62 566.4 220.62 566.64 c
220.56 566.82 220.74 567 220.92 567 c
222.66 567.24 l
224.28 567.54 l
225.9 567.96 l
229.14 568.92 l
230.7 569.52 l
232.2 570.18 l
235.2 571.62 l
236.58 572.4 l
237.96 573.3 l
239.34 574.14 l
241.86 576.06 l
244.14 578.1 l
245.16 579.18 l
246.18 580.32 l
247.08 581.4 l
247.92 582.6 l
248.7 583.74 l
250.02 586.14 l
250.5 587.4 l
250.98 588.6 l
251.16 589.26 l
251.28 589.86 l
251.46 590.46 l
251.52 591.12 l
251.64 591.72 l
251.7 592.38 l
251.76 592.98 l
251.76 594.3 l
251.94 596.28 l
252.06 596.88 l
252.24 597.54 l
252.36 598.2 l
252.6 598.86 l
252.78 599.52 l
253.02 600.12 l
253.56 601.38 l
254.88 603.9 l
256.56 606.3 l
258.48 608.58 l
259.56 609.66 l
260.7 610.74 l
261.9 611.76 l
263.16 612.72 l
264.48 613.68 l
265.8 614.58 l
267.24 615.48 l
270.12 617.04 l
271.68 617.76 l
273.18 618.42 l
274.8 619.02 l
276.42 619.56 l
279.66 620.4 l
281.34 620.76 l
284.7 621.24 l
286.44 621.36 l
288.12 621.36 l
288.3 621.36 288.48 621.24 288.48 621 c
288.48 620.82 288.36 620.64 288.12 620.64 c
h
222.24 563.76 m
216 566.22 l
221.7 569.7 l
f
n
402 345.36 m
398.46 345.36 l
394.98 345.24 l
391.44 345.06 l
387.96 344.76 l
384.48 344.46 l
381.06 344.1 l
377.7 343.62 l
374.4 343.14 l
371.1 342.54 l
367.86 341.94 l
364.74 341.28 l
361.68 340.56 l
358.68 339.78 l
355.8 338.94 l
352.98 338.1 l
350.28 337.2 l
347.7 336.24 l
345.24 335.28 l
342.9 334.26 l
340.68 333.24 l
338.64 332.16 l
336.72 331.08 l
334.92 329.94 l
333.3 328.8 l
331.86 327.66 l
330.6 326.52 l
329.52 325.32 l
329.58 325.44 l
328.8 323.94 l
328.68 323.76 328.5 323.7 328.32 323.82 c
328.08 323.94 328.02 324.12 328.14 324.3 c
328.92 325.8 l
328.92 325.8 328.92 325.86 328.98 325.86 c
330.12 327.06 l
331.38 328.26 l
332.88 329.46 l
334.5 330.6 l
336.36 331.74 l
338.28 332.82 l
340.38 333.9 l
342.6 334.98 l
344.94 336 l
347.46 336.96 l
350.04 337.92 l
352.8 338.82 l
355.56 339.66 l
358.5 340.5 l
361.5 341.28 l
364.56 342 l
367.74 342.66 l
370.98 343.32 l
374.28 343.86 l
377.64 344.4 l
381 344.82 l
384.42 345.24 l
387.9 345.54 l
391.44 345.78 l
394.92 345.96 l
398.46 346.08 l
402 346.14 l
402.18 346.14 402.36 345.96 402.36 345.78 c
402.36 345.54 402.18 345.36 402 345.36 c
h
331.62 323.94 m
326.64 319.5 l
326.04 326.16 l
f
0 0 0  setrgbcolor
161.76 215.4 m
/N55 [0 24 -24 0 0 0] Tf
(A) show
275.76 153.78 m
(B) show
390.48 106.5 m
(C) show
389.76 280.26 m
(DE)
[147.835 145.171 ] pdfys
275.76 535.26 m
(F) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 30780 a Fn(Figure)738 b(3-1:)1013 b
Fm(A)641 b(fully)g(strict)g(m)-34 b(ultithreaded)643
b(computation.)1252 b(The)641 b(shaded)i(blo)34 b(c)-34
b(ks)641 b(represen)-34 b(t)2000 32285 y(threads,)327
b(the)308 b(circles)d(represen)-34 b(t)307 b(tasks,)327
b(and)308 b(the)f(horizon)-34 b(tal)308 b(edges)f(within)h(eac)-34
b(h)307 b(thread)h(are)f(con)-34 b(tin)g(ue)2000 33791
y(edges.)536 b(Threads)399 b(are)f(connected)g(to)h(eac)-34
b(h)398 b(other)g(b)-34 b(y)399 b(spa)-34 b(wn)399 b(edges,)g(sho)-34
b(wn)400 b(as)e(do)-34 b(wn)g(w)g(ard-p)34 b(oin)-34
b(ting,)2000 35296 y(shaded)470 b(edges,)484 b(and)470
b(dep)34 b(endency)469 b(edges,)484 b(sho)-34 b(wn)471
b(as)d(curv)-34 b(ed)469 b(edges.)732 b(This)470 b(computation)g(con)
-34 b(tains)2000 36801 y(20)404 b(tasks)h Fl(v)7282 36983
y Ft(1)7807 36801 y Fl(;)202 b(v)8934 36983 y Ft(2)9459
36801 y Fl(;)g(:)g(:)g(:)f(;)h(v)12741 36983 y Ft(20)14140
36801 y Fm(organized)404 b(in)-34 b(to)405 b(six)f(threads.)3951
41460 y Fy(In)530 b(addition)f(to)h(spa)-36 b(wn)530
b(edges,)554 b(a)530 b(m)-36 b(ultithreaded)529 b(computation)g(ma)-36
b(y)530 b(also)h(con)-36 b(tain)530 b(de-)2000 43065
y(p)36 b(endency)415 b(edges)g(b)36 b(et)-36 b(w)g(een)416
b(threads,)i(mo)36 b(deling)416 b(b)36 b(oth)415 b(data)h(and)f(con)-36
b(trol)416 b(dep)36 b(endencies.)571 b(De-)2000 44670
y(p)36 b(endency)497 b(edges)h(allo)-36 b(w)499 b(threads)e(to)h(sync)
-36 b(hronize)498 b(with)g(eac)-36 b(h)498 b(other)f(and)h(m)-36
b(ust)497 b(b)36 b(e)497 b(satis\257ed)2000 46275 y(b)36
b(efore)513 b(a)g(thread)f(can)h(con)-36 b(tin)g(ue)512
b(executing.)816 b(F)-108 b(or)512 b(example,)533 b(task)514
b Fu(v)37109 46474 y Ft(9)38147 46275 y Fy(in)f(Figure)f(3-1)h(cannot)
2000 47880 y(execute)394 b(b)36 b(efore)395 b(tasks)g
Fu(v)14376 48079 y Ft(5)15296 47880 y Fy(and)e Fu(v)18414
48079 y Ft(8)19334 47880 y Fy(ha)-36 b(v)g(e)395 b(completed)e(b)36
b(ecause)395 b(of)g(the)e(dep)36 b(endency)393 b(edges)i(from)2000
49485 y Fu(v)2629 49684 y Ft(5)3572 49485 y Fy(to)418
b Fu(v)5775 49684 y Ft(9)6717 49485 y Fy(and)f Fu(v)9859
49684 y Ft(8)10802 49485 y Fy(to)h Fu(v)13005 49684 y
Ft(9)13530 49485 y Fy(.)573 b(If)418 b(the)f(execution)h(of)g(thread)f
(B)g(reac)-36 b(hes)417 b Fu(v)35815 49684 y Ft(9)36758
49485 y Fy(and)g(these)g(dep)36 b(endencies)2000 51090
y(ha)-36 b(v)g(e)444 b(not)f(b)36 b(een)443 b(resolv)-36
b(ed,)447 b(thread)c(B)h Fo(stal)78 b(ls)108 b Fy(;)450
b(the)443 b(execution)h(of)h Fu(v)35846 51289 y Ft(5)36815
51090 y Fy(and)e Fu(v)39983 51289 y Ft(8)40952 51090
y Fo(enables)553 b Fy(thread)2000 52695 y(B,)434 b(making)g(it)g
Fo(r)-78 b(e)g(ady)573 b Fy(for)435 b(execution.)3951
54322 y(In)343 b(general,)361 b(a)344 b(m)-36 b(ultithreaded)341
b(computation)h(can)h(b)36 b(e)343 b(view)-36 b(ed)343
b(as)h(a)f(directed)f(acyclic)i(graph)2000 55927 y(\(dag\))555
b(of)h(tasks)f(connected)g(b)-36 b(y)555 b(con)-36 b(tin)g(ue,)584
b(spa)-36 b(wn,)586 b(and)554 b(dep)36 b(endency)554
b(edges.)943 b(Since)555 b(it)g(can)2000 57532 y(b)36
b(e)522 b(imp)36 b(ossible)522 b(to)g(sc)-36 b(hedule)521
b(m)-36 b(ultithreaded)521 b(computations)g(with)h(arbitrary)g(dep)36
b(endencies)2000 59138 y(e\261cien)-36 b(tly)589 b([6],)629
b(w)-36 b(e)589 b(fo)36 b(cus)589 b(on)g(a)g(sub)36 b(class)589
b(of)h(m)-36 b(ultithreaded)587 b(computations,)627 b(called)590
b Fo(ful)78 b(ly)2000 60743 y(strict)596 b Fy(computations,)475
b(in)466 b(whic)-36 b(h)467 b(all)g(dep)36 b(endency)465
b(edges)i(from)g(a)g(thread)f(go)h(to)g(its)g(paren)-36
b(t.)2000 62348 y(W)-108 b(e)346 b(sa)-36 b(y)346 b(the)f(computation)g
(is)h(\\w)-36 b(ell-structured")345 b(in)h(the)f(sense)g(that)h(all)g
(dep)36 b(endencies)345 b(from)h(a)2000 63953 y(sub)36
b(computation)334 b(emanate)h(from)g(the)f(sub)36 b(computation's)335
b(ro)36 b(ot)335 b(thread.)545 b(An)-36 b(y)334 b(m)-36
b(ultithreaded)2000 65558 y(computation)647 b(that)g(can)g(b)36
b(e)647 b(executed)g(in)g(a)g(depth-\257rst)e(manner)h(on)h(one)h(pro)
36 b(cessor)647 b(can)2000 67163 y(b)36 b(e)612 b(made)g(fully)h
(strict)f(b)-36 b(y)612 b(altering)h(the)e(dep)36 b(endency)611
b(structure|p)36 b(ossibly)611 b(at)h(some)h(cost)2000
68768 y(in)540 b(lost)g(parallelism|but)g(not)g(a\256ecting)g(the)g
(seman)-36 b(tics)540 b(of)h(the)e(computation)h([4,)234
b(7].)898 b(The)2000 70373 y(computation)433 b(depicted)g(in)g(Figure)h
(3-1)g(is)f(fully)i(strict.)3951 72000 y(An)368 b Fo(exe)-78
b(cution)480 b(sche)-78 b(dule)482 b Fy(for)368 b(a)h(m)-36
b(ultithreaded)367 b(computation)g(determines)h(whic)-36
b(h)368 b(pro-)25350 75321 y(18)p eop end
%%Page: 19 19
TeXDict begin 19 18 bop 2000 1328 a Fy(cessors)434 b(of)g(a)g(parallel)
g(computer)f(execute)h(whic)-36 b(h)433 b(tasks)h(at)g(eac)-36
b(h)433 b(step)g([7].)579 b(A)434 b(pro)36 b(cessor)433
b(ma)-36 b(y)2000 2933 y(execute)455 b(at)h(most)f(one)g(task)h(during)
f(an)-36 b(y)455 b(step)g(of)h(the)f(execution)g(sc)-36
b(hedule.)643 b(In)455 b(addition,)461 b(an)2000 4539
y(execution)395 b(sc)-36 b(hedule)394 b(m)-36 b(ust)393
b(ob)36 b(ey)395 b(the)f(constrain)-36 b(ts)395 b(delineated)f(b)-36
b(y)394 b(the)g(con)-36 b(tin)g(ue,)402 b(spa)-36 b(wn,)402
b(and)2000 6144 y(dep)36 b(endency)393 b(edges)i(of)g(the)f
(computation)g(dag.)566 b(In)394 b(particular,)403 b(no)394
b(pro)36 b(cessor)395 b(ma)-36 b(y)395 b(execute)g(a)2000
7749 y(task)381 b(un)-36 b(til)379 b(all)j(of)e(the)g(task's)h
(predecessors)f(in)g(the)g(dag)g(ha)-36 b(v)g(e)381 b(b)36
b(een)379 b(executed,)391 b(i.e.,)h(the)380 b(task)h(is)2000
9354 y Fo(r)-78 b(e)g(ady)139 b Fy(.)573 b(The)416 b(execution)f(sc)-36
b(hedules)415 b(studied)f(in)h([7])i(assume)e(that)g(the)g(n)-36
b(um)g(b)36 b(er)414 b(of)i(pro)36 b(cessors)2000 10959
y(a)-36 b(v)-72 b(ailable)403 b(to)e(execute)g(a)g(computation)g
(remains)f(\257xed)h(o)-36 b(v)g(er)401 b(time.)568 b(W)-108
b(e)401 b(remo)-36 b(v)g(e)401 b(this)g(assump-)2000
12564 y(tion)357 b(in)g(our)g(mo)36 b(del)358 b(and)e(in)-36
b(tro)36 b(duce)357 b(the)f(notion)h(of)h(an)f Fo(adaptive)472
b Fy(execution)357 b(sc)-36 b(hedule,)372 b(whic)-36
b(h)2000 14169 y(is)484 b(iden)-36 b(tical)483 b(to)h(an)f(execution)h
(sc)-36 b(hedule)482 b(except)i(that)f(the)g(n)-36 b(um)g(b)36
b(er)482 b(of)i(a)-36 b(v)-72 b(ailable)485 b(pro)36
b(cessors)2000 15774 y(is)434 b(allo)-36 b(w)g(ed)434
b(to)g(c)-36 b(hange)434 b(\(instan)-36 b(taneously\))433
b(from)h(one)f(step)g(of)i(the)e(execution)h(to)f(the)g(next.)3951
17420 y(W)-108 b(e)352 b(no)-36 b(w)353 b(ha)-36 b(v)g(e)352
b(all)h(the)f(to)36 b(ols)353 b(necessary)g(to)f(mo)36
b(del)352 b(an)h(adaptiv)-36 b(ely)353 b(parallel)g(job.)552
b(An)352 b(adap-)2000 19026 y(tiv)-36 b(ely)480 b(parallel)h(job)e(is)h
(a)f(fully)h(strict)f(m)-36 b(ultithreaded)478 b(computation)h(with)g
(a)h(giv)-36 b(en)480 b(adaptiv)-36 b(e)2000 20631 y(execution)463
b(sc)-36 b(hedule.)664 b(The)462 b(execution)h(of)g(an)f(adaptiv)-36
b(ely)463 b(parallel)h(job)e(is)h(con)-36 b(trolled)462
b(b)-36 b(y)463 b(t)-36 b(w)g(o)2000 22236 y(en)g(tities:)626
b(the)457 b(op)36 b(erating)458 b(system,)465 b(whic)-36
b(h)457 b(con)-36 b(trols)458 b(the)f(n)-36 b(um)g(b)36
b(er)456 b(of)i(pro)36 b(cessors)458 b(allo)36 b(cated)459
b(to)2000 23841 y(the)465 b(job)g(during)g(eac)-36 b(h)465
b(step)g(of)h(its)g(execution,)474 b(and)464 b(the)h(job)h(sc)-36
b(heduler,)472 b(whic)-36 b(h)466 b(generates)f(an)2000
25446 y(adaptiv)-36 b(e)419 b(execution)h(sc)-36 b(hedule)418
b(sub)72 b(ject)419 b(to)g(the)f(allo)36 b(cations)421
b(dictated)d(b)-36 b(y)419 b(the)g(op)36 b(erating)419
b(sys-)2000 27051 y(tem.)562 b(These)384 b(en)-36 b(tities)384
b(corresp)36 b(ond)384 b(to)g(the)g(\257rst)f(and)h(second)g(lev)-36
b(els)385 b(of)g(a)g(t)-36 b(w)g(o-lev)g(el)385 b(sc)-36
b(heduling)2000 28656 y(system.)568 b(In)401 b(order)f(to)h(analyze)i
(the)d(execution)h(time)g(of)h(an)f(adaptiv)-36 b(ely)402
b(parallel)g(job,)408 b(w)-36 b(e)402 b(need)2000 30261
y(to)485 b(mo)36 b(del)485 b(the)g(roles)h(of)f(these)g(t)-36
b(w)g(o)485 b(lev)-36 b(els,)499 b(as)486 b(w)-36 b(ell)486
b(as)f(the)g(in)-36 b(teraction)484 b(b)36 b(et)-36 b(w)g(een)485
b(them.)732 b(W)-108 b(e)2000 31866 y(presen)-36 b(t)432
b(this)i(mo)36 b(del)434 b(in)f(Section)g(3.2.)2000 36557
y FC(3.2)2152 b(An)1008 b(Adv)-60 b(ersarial)1007 b(Mo)60
b(del)1008 b(for)g(Tw)-60 b(o-Lev)g(el)1009 b(Sc)-60
b(hed-)6902 38992 y(ulers)2000 41997 y Fy(In)581 b(this)f(section,)618
b(w)-36 b(e)581 b(presen)-36 b(t)580 b(a)h(mo)36 b(del)581
b(for)g(t)-36 b(w)g(o-lev)g(el)581 b(sc)-36 b(heduling)581
b(systems)g(based)f(on)h(the)2000 43602 y(mo)36 b(del)638
b(for)h(adaptiv)-36 b(ely)639 b(parallel)f(jobs)h(from)f(Section)g
(3.1.)1192 b(W)-108 b(e)638 b(describ)36 b(e)637 b(a)h(game)h(pla)-36
b(y)g(ed)2000 45207 y(b)36 b(et)-36 b(w)g(een)504 b(the)g(op)36
b(erating)505 b(system)f(and)g(the)g(job)h(sc)-36 b(heduler)503
b(to)i(execute)f(a)h(job,)523 b(in)504 b(whic)-36 b(h)505
b(the)2000 46812 y(op)36 b(erating)391 b(system)h(acts)f(as)h(an)f(adv)
-36 b(ersary)-108 b(.)565 b(Using)391 b(this)g(adv)-36
b(ersarial)392 b(mo)36 b(del,)401 b(w)-36 b(e)391 b(sho)-36
b(w)392 b(ho)-36 b(w)391 b(to)2000 48417 y(quan)-36 b(tify)434
b(the)f(execution)h(time)g(of)g(an)g(adaptiv)-36 b(ely)434
b(parallel)h(job.)3951 50063 y(There)619 b(are)h(three)f(main)h(en)-36
b(tities)619 b(in)g(a)h(t)-36 b(w)g(o-lev)g(el)620 b(sc)-36
b(heduling)619 b(system:)951 b(the)619 b(op)36 b(erating)2000
51668 y(system)604 b(\(represen)-36 b(ting)602 b(the)g(\257rst)h(lev)
-36 b(el)604 b(of)g(sc)-36 b(heduling\),)646 b(the)602
b(job)i(sc)-36 b(heduler)602 b(\(represen)-36 b(ting)2000
53273 y(the)540 b(second)f(lev)-36 b(el)541 b(of)g(sc)-36
b(heduling\),)566 b(and)540 b(the)f(job)i(itself.)899
b(The)540 b(execution)g(of)h(an)f(adaptiv)-36 b(ely)2000
54878 y(parallel)542 b(job)g(is)g(con)-36 b(trolled)541
b(b)-36 b(y)542 b(b)36 b(oth)540 b(the)h(op)36 b(erating)542
b(system)g(and)f(the)f(job)i(sc)-36 b(heduler.)901 b(W)-108
b(e)2000 56483 y(mo)36 b(del)464 b(the)f(in)-36 b(teraction)463
b(b)36 b(et)-36 b(w)g(een)463 b(the)g(\257rst)f(and)h(second)h(lev)-36
b(els)464 b(of)g(sc)-36 b(heduling)463 b(b)-36 b(y)463
b(pla)-36 b(ying)465 b(a)2000 58089 y(game)399 b(b)36
b(et)-36 b(w)g(een)398 b(these)h(t)-36 b(w)g(o)399 b(en)-36
b(tities.)566 b(W)-108 b(e)399 b(assume)g(that)f(there)g(is)h(only)g
(one)g(job)g(in)g(the)f(system)2000 59694 y(initially)470
b(\(extending)f(our)f(mo)36 b(del)469 b(to)g(handle)f(m)-36
b(ultiple,)478 b(concurren)-36 b(t)467 b(jobs)i(is)g(trivially)i(sho)
-36 b(wn)2000 61299 y(at)439 b(the)g(end)f(of)i(this)f(section\).)595
b(The)439 b(rules)g(of)h(the)e(game)i(are)f(simple.)595
b(During)439 b(eac)-36 b(h)439 b(time)g(step)2000 62904
y Fu(t)433 b Fy(of)i(a)e(job's)i(execution,)f(three)f(op)36
b(erations)434 b(o)36 b(ccur:)3590 65244 y(1.)651 b(The)371
b(op)36 b(erating)371 b(system)g(determines)f(the)h(n)-36
b(um)g(b)36 b(er)369 b Fu(P)32074 65443 y Fr(t)32841
65244 y Fy(of)i(pro)36 b(cessors)372 b(to)f(allo)36 b(cate)372
b(to)g(the)5252 66849 y(job)434 b(for)g(step)f Fu(t)p
Fy(.)3590 68790 y(2.)651 b(The)557 b(job)g(sc)-36 b(heduler)556
b(assigns)h(tasks)h(in)e(the)h(computation)f(that)g(are)h(ready)g(at)g
(time)g Fu(t)5252 70395 y Fy(to)477 b(one)g(or)g(more)h(of)g(the)e
Fu(P)18888 70594 y Fr(t)19761 70395 y Fy(pro)36 b(cessors)477
b(\(i.e.,)490 b(it)477 b(generates)g(one)g(step)g(of)h(the)f(adaptiv)
-36 b(e)5252 72000 y(execution)434 b(sc)-36 b(hedule\).)25350
75321 y(19)p eop end
%%Page: 20 20
TeXDict begin 20 19 bop 3590 1328 a Fy(3.)651 b(Eac)-36
b(h)413 b(pro)36 b(cessor)414 b(that)f(is)h(assigned)g(a)g(task)g
(\257nishes)f(executing)h(the)f(task)h(b)-36 b(y)413
b(the)g(end)g(of)5252 2933 y(step)433 b Fu(t)p Fy(.)578
b(\(Recall)434 b(that)g(all)g(tasks)g(in)g(the)f(computational)h(dag)f
(are)h(unit-sized.\))3951 6173 y(W)-108 b(e)447 b(refer)h(to)f(the)g
(pla)-36 b(y)g(ers)448 b(in)f(this)g(game)h(as)f(OS)g(and)f(JS,)i(for)g
(the)e(op)36 b(erating)448 b(system)f(and)2000 7778 y(the)359
b(job)h(sc)-36 b(heduler,)373 b(resp)36 b(ectiv)-36 b(ely)-108
b(.)555 b(The)359 b(role)h(of)g(OS)f(is)g(to)h(act)g(as)f(an)h(adv)-36
b(ersary)-108 b(,)375 b(similar)360 b(to)g(the)2000 9383
y(role)446 b(of)g(the)f(op)36 b(erating)445 b(system)h(in)f([2].)615
b(The)445 b(role)h(of)g(JS,)f(on)g(the)g(other)g(hand,)j(is)d(to)h(sc)
-36 b(hedule)2000 10988 y(the)379 b(job)h(as)g(e\261cien)-36
b(tly)380 b(as)g(p)36 b(ossible)379 b(giv)-36 b(en)381
b(the)e(allo)36 b(cations)381 b(pro)-36 b(vided)379 b(b)-36
b(y)379 b(OS,)g(minimizing)i(the)2000 12594 y(job's)369
b(execution)f(time.)556 b(There)368 b(are)g(no)g(restrictions)g(on)f
(the)h(p)36 b(olicy)369 b(used)e(b)-36 b(y)368 b(OS)f(to)h(determine)
2000 14199 y(the)433 b(job's)h(allo)36 b(cation)436 b(during)c(eac)-36
b(h)434 b(time)g(step.)3951 16131 y(T)-108 b(o)327 b(quan)-36
b(tify)328 b(the)e(execution)h(time)g(of)h(the)e(job,)349
b(w)-36 b(e)327 b(\257rst)g(de\257ne)e(some)j(terms.)542
b(Let)326 b Fu(P)45807 16330 y Fr(t)46530 16131 y Fy(b)36
b(e)327 b(the)2000 17736 y(n)-36 b(um)g(b)36 b(er)430
b(of)j(pro)36 b(cessors)432 b(allo)36 b(cated)433 b(to)f(the)f(job)h
(during)f(step)h Fu(t)p Fy(,)g(where)g Fu(t)368 b Fs(2)h
Fu(S)446 b Fy(=)369 b Fs(f)p Fy(0)p Fu(;)221 b Fy(1)p
Fu(;)g(:)g(:)g(:)k(;)c(T)181 b Fs(g)p Fy(.)2000 19341
y Fu(T)619 b Fy(is)439 b(the)f(execution)h(time)g(of)g(the)f(job)h(on)f
(an)h(ideal)g(mac)-36 b(hine)438 b(with)g(no)h(sc)-36
b(heduling)438 b(o)-36 b(v)g(erhead.)2000 20946 y(In)407
b(general,)414 b(w)-36 b(e)408 b(mak)-36 b(e)408 b(this)f(assumption)g
(for)h(all)g(theoretical)g(execution)g(times)g(in)f(our)g(mo)36
b(del.)2000 22551 y(W)-108 b(e)414 b(de\257ne)e(the)h
Fo(critic)-78 b(al)530 b(p)-78 b(ath)530 b(length)540
b Fy(of)414 b(a)g(job)g(to)g(b)36 b(e)413 b(the)g(length)g(of)i(the)e
(longest)h(directed)2000 24156 y(path)458 b(in)h(the)g(computational)g
(dag.)656 b(W)-108 b(e)459 b(denote)f(this)h(length)g(b)-36
b(y)459 b Fu(T)36170 24355 y Fq(1)37167 24156 y Fy(,)465
b(since)460 b(with)f(an)g(in\257nite)2000 25762 y(n)-36
b(um)g(b)36 b(er)373 b(of)j(pro)36 b(cessors,)387 b(eac)-36
b(h)374 b(task)i(along)f(the)f(critical)i(path)e(m)-36
b(ust)374 b(still)i(b)36 b(e)374 b(executed)g(serially)-108
b(.)2000 27367 y(W)g(e)547 b(de\257ne)f(the)g Fo(work)695
b Fy(of)548 b(a)f(job)g(to)g(b)36 b(e)547 b(the)f(total)i(n)-36
b(um)g(b)36 b(er)545 b(of)i(tasks)h(in)f(the)f(dag,)576
b(denoted)2000 28972 y(b)-36 b(y)443 b Fu(T)4578 29171
y Ft(1)5104 28972 y Fy(,)k(since)c(a)h(single)g(pro)36
b(cessor)444 b(can)f(only)h(execute)g(one)f(task)h(during)f(eac)-36
b(h)443 b(step.)608 b(W)-108 b(e)443 b(w)-36 b(an)g(t)2000
30577 y(to)490 b(b)36 b(ound)488 b(the)h(execution)h(time)g
Fu(T)670 b Fy(of)491 b(the)e(job)h(using)f(these)g(t)-36
b(w)g(o)490 b(quan)-36 b(tities,)504 b(similar)491 b(to)f(the)2000
32182 y(b)36 b(ounds)432 b(presen)-36 b(ted)433 b(in)g([7].)3951
34114 y(If)583 b(the)e(pro)36 b(cessor)583 b(allo)36
b(cation)584 b(of)e(a)h(job)f(remains)h(\257xed)e(during)h(its)g
(execution)g(\(as)h(in)f(a)2000 35719 y(static)403 b(allo)36
b(cation)404 b(p)36 b(olicy\),)410 b(then)402 b(our)g(situation)g
(reduces)g(to)h(the)f(situation)g(studied)g(in)g([7].)569
b(In)2000 37324 y(particular,)542 b(if)521 b Fu(P)10584
37523 y Fr(t)11496 37324 y Fy(=)516 b Fu(P)701 b Fy(for)521
b(all)g Fu(t)516 b Fs(2)g Fu(S)77 b Fy(,)542 b(then)519
b(the)h(follo)-36 b(wing)522 b(b)36 b(ounds)519 b(can)h(b)36
b(e)520 b(sho)-36 b(wn)520 b(for)h Fu(T)181 b Fy(:)2000
38929 y Fu(T)676 b Fs(\270)495 b Fu(T)5728 39128 y Fq(1)7233
38929 y Fy(and)507 b Fu(T)676 b Fs(\270)495 b Fu(T)13564
39128 y Ft(1)14090 38929 y Fu(=P)181 b Fy(.)801 b(The)508
b(\257rst)f(b)36 b(ound)506 b(holds)i(b)36 b(ecause)507
b(an)-36 b(y)508 b Fu(P)181 b Fy(-pro)36 b(cessor)508
b(execution)2000 40535 y(of)517 b(the)f(computation)g(m)-36
b(ust)516 b(execute)g(the)g(critical)h(path.)826 b(T)-108
b(o)517 b(sho)-36 b(w)517 b(the)e(second)i(b)36 b(ound,)536
b(w)-36 b(e)2000 42140 y(note)577 b(that)f(the)h Fu(P)758
b Fy(pro)36 b(cessors)577 b(can)g(execute)g(at)g(most)g
Fu(P)758 b Fy(tasks)578 b(p)36 b(er)577 b(time)g(step,)612
b(and)577 b(since)2000 43745 y(the)457 b(computation)g(has)g(a)h(total)
g(of)g Fu(T)20724 43944 y Ft(1)21708 43745 y Fy(tasks,)464
b(the)457 b(execution)h(time)f(is)h(at)g(least)g Fu(T)43266
43944 y Ft(1)43792 43745 y Fu(=P)181 b Fy(.)650 b(In)457
b(our)2000 45350 y(mo)36 b(del,)466 b(ho)-36 b(w)g(ev)g(er,)465
b(the)458 b(pro)36 b(cessor)459 b(allo)36 b(cation)461
b(p)36 b(olicy)460 b(used)e(b)-36 b(y)459 b(OS)e(need)h(not)h(b)36
b(e)458 b(static;)472 b(that)2000 46955 y(is,)438 b(the)d(v)-72
b(alues)437 b(of)g Fu(P)12113 47154 y Fr(t)12945 46955
y Fy(ma)-36 b(y)436 b(c)-36 b(hange)437 b(from)f(one)g(time)h(step)f
(to)g(the)g(next.)586 b(While)437 b(it)f(still)h(follo)-36
b(ws)2000 48560 y(that)616 b Fu(T)861 b Fs(\270)680 b
Fu(T)9099 48759 y Fq(1)10712 48560 y Fy(\(for)616 b(the)g(same)h
(reason)f(giv)-36 b(en)617 b(ab)36 b(o)-36 b(v)g(e\),)663
b(w)-36 b(e)616 b(cannot)g(mak)-36 b(e)617 b(the)f(statemen)-36
b(t)2000 50165 y(that)496 b Fu(T)657 b Fs(\270)477 b
Fu(T)8572 50364 y Ft(1)9098 50165 y Fu(=P)181 b Fy(,)513
b(b)36 b(ecause)496 b Fu(P)678 b Fy(is)497 b(not)f(a)h(\257xed)g(n)-36
b(um)g(b)36 b(er)495 b(in)h(our)g(case.)768 b(W)-108
b(e)497 b(can)g(try)f(to)h(pro)-36 b(v)g(e)2000 51770
y(a)605 b(similar)h(b)36 b(ound,)647 b(ho)-36 b(w)g(ev)g(er,)649
b(based)605 b(on)g(the)f(a)-36 b(v)g(erage)606 b(v)-72
b(alue)606 b(of)g Fu(P)36881 51969 y Fr(t)37276 51770
y Fy(,)648 b(whic)-36 b(h)605 b(w)-36 b(e)606 b(denote)e(b)-36
b(y)p 2000 52308 1020 54 v 2000 53375 a Fu(P)564 b Fy(=)382
b(\(1)p Fu(=T)181 b Fy(\))8272 52379 y Fk(P)9674 53763
y Fr(t)p Fq(2)p Fr(S)11540 53375 y Fu(P)12378 53574 y
Fr(t)12774 53375 y Fy(.)602 b(The)441 b(problem)g(with)h(using)p
27866 52308 V 441 w Fu(P)623 b Fy(as)442 b(de\257ned)e(is)i(that,)h(if)
f(OS)f(allo)36 b(cates)443 b(an)2000 55103 y(in\257nite)376
b(n)-36 b(um)g(b)36 b(er)376 b(of)i(pro)36 b(cessors)377
b(to)h(the)e(job)i(during)e(one)i(or)f(more)g(time)g(steps,)389
b(the)376 b(v)-72 b(alue)378 b(of)p 48981 54036 V 378
w Fu(P)2000 56708 y Fy(b)36 b(ecomes)473 b(in\257nite,)483
b(yielding)474 b(a)g(trivial)g(b)36 b(ound)472 b(of)i
Fu(T)617 b Fs(\270)437 b Fu(T)31160 56907 y Ft(1)31686
56708 y Fu(=)p Fs(1)g Fy(=)f(0.)698 b(T)-108 b(o)473
b(solv)-36 b(e)474 b(this)f(problem,)2000 58313 y(w)-36
b(e)486 b(mo)36 b(dify)488 b(our)d(de\257nition)h(of)p
18123 57246 V 486 w Fu(P)667 b Fy(to)487 b(cop)36 b(e)486
b(with)g(in\257nite)f(allo)36 b(cations.)738 b(In)486
b(particular,)499 b(giv)-36 b(en)2000 59918 y(the)376
b(allo)36 b(cations)379 b Fu(P)11439 60117 y Fr(t)12211
59918 y Fy(of)f(the)e(job,)389 b Fu(t)369 b Fs(2)f Fu(S)77
b Fy(,)389 b(let)377 b Fu(P)24719 60117 y Fr(t)25059
60240 y Fj(1)25576 59918 y Fu(;)221 b(P)26996 60117 y
Fr(t)27336 60240 y Fj(2)27853 59918 y Fu(;)g(:)g(:)g(:)j(;)d(P)31604
60117 y Fr(t)31944 60266 y Fi(T)32430 60377 y Fh(1)33785
59918 y Fy(b)36 b(e)377 b(the)f Fu(T)38444 60117 y Fq(1)39818
59918 y Fy(largest)h(allo)36 b(cations)2000 61523 y(receiv)-36
b(ed)496 b(b)-36 b(y)495 b(the)g(job)h(during)e(its)i(execution,)511
b(and)495 b(let)h Fu(S)31204 61041 y Fq(0)31989 61523
y Fy(=)474 b Fs(f)p Fu(t)34609 61722 y Ft(1)35135 61523
y Fu(;)221 b(t)36187 61722 y Ft(2)36713 61523 y Fu(;)g(:)g(:)g(:)j(;)d
(t)40096 61722 y Fr(T)40644 61833 y Fh(1)41566 61523
y Fs(g)496 b Fy(b)36 b(e)495 b(the)g(set)g(of)2000 63128
y(time)587 b(steps)g(corresp)36 b(onding)586 b(to)i(those)f(allo)36
b(cations.)1040 b(Notice)588 b(that)f(the)f(elemen)-36
b(ts)587 b(of)h Fu(S)47368 62646 y Fq(0)48266 63128 y
Fy(are)2000 64733 y(distinct)431 b(and)g Fu(S)10106 64251
y Fq(0)10786 64733 y Fs(\265)369 b Fu(S)77 b Fy(.)578
b(Also,)433 b(let)e Fu(R)20163 64932 y Fr(t)20990 64733
y Fy(b)36 b(e)431 b(the)g(n)-36 b(um)g(b)36 b(er)430
b(of)i(ready)g(tasks)g(in)g(the)f(computational)2000
66338 y(dag)j(at)g(time)f(step)g Fu(t)p Fy(.)578 b(Then,)434
b(w)-36 b(e)434 b(de\257ne)p 22601 65271 V 432 w Fu(P)615
b Fy(as)434 b(follo)-36 b(ws:)2000 72000 y Fv(De\257nition)500
b(1)650 b Fg(The)494 b Fo(aver)-78 b(age)586 b(e\256e)-78
b(ctive)585 b(pr)-78 b(o)g(c)g(essor)586 b(al)78 b(lo)-78
b(c)g(ation)p Fg(,)p 38711 70933 V 503 w Fu(P)181 b Fg(,)501
b(is)494 b(the)g(aver)-66 b(age)493 b(of)25350 75321
y Fy(20)p eop end
%%Page: 21 21
TeXDict begin 21 20 bop 2000 1328 a Fg(al)66 b(l)466
b Fu(P)4698 1527 y Fr(t)5093 1328 y Fg(,)f Fu(t)368 b
Fs(2)h Fu(S)77 b Fg(,)465 b(with)f(e)-66 b(ach)465 b
Fu(P)16374 1527 y Fr(t)16714 1662 y Fi(i)17585 1328 y
Fg(r)-66 b(eplac)g(e)g(d)464 b(by)h Fy(min)o(\()p Fu(P)27722
1527 y Fr(t)28062 1662 y Fi(i)28469 1328 y Fu(;)221 b(R)30041
1527 y Fr(t)30381 1662 y Fi(i)30788 1328 y Fy(\))465
b Fg(for)f(al)66 b(l)466 b Fu(t)36164 1527 y Fr(i)36909
1328 y Fs(2)368 b Fu(S)39040 846 y Fq(0)39351 1328 y
Fg(.)597 b(In)464 b(other)h(wor)-66 b(ds,)p 15149 4359
1020 54 v 15149 5426 a Fu(P)550 b Fy(=)18196 4528 y(1)p
18050 5121 943 54 v 18050 6337 a Fu(T)19347 3155 y Fk(\303)21060
4164 y(X)20399 6999 y Fr(t)p Fq(2)p Fr(S)50 b Fq(\241)p
Fr(S)23342 6747 y Fh(0)23861 5426 y Fu(P)24699 5625 y
Fr(t)25390 5426 y Fy(+)26696 4164 y Fk(X)26712 6999 y
Fr(t)p Fq(2)p Fr(S)28301 6747 y Fh(0)28836 5426 y Fy(min\()p
Fu(P)32348 5625 y Fr(t)32744 5426 y Fu(;)221 b(R)34316
5625 y Fr(t)34711 5426 y Fy(\))35217 3155 y Fk(!)36490
5426 y Fu(:)10475 b Fy(\(3.1\))3951 9664 y(The)480 b(mo)36
b(di\257ed)479 b(de\257nition)f(of)p 19381 8597 1020
54 v 480 w Fu(P)661 b Fy(replaces)480 b(v)-72 b(alues)480
b(of)g Fu(P)32131 9863 y Fr(t)33006 9664 y Fy(that)f(are)h(in\257nite)f
(with)g(the)g(cor-)2000 11269 y(resp)36 b(onding)561
b(v)-72 b(alues)562 b(of)g Fu(R)15347 11468 y Fr(t)15742
11269 y Fy(.)962 b(This)561 b(substitution)g(allo)-36
b(ws)563 b(us)e(to)g(calculate)p 40593 10202 V 562 w
Fu(P)743 b Fy(in)561 b(the)g(face)h(of)2000 12875 y(adv)-36
b(ersarial)469 b(b)36 b(eha)-36 b(vior)468 b(b)-36 b(y)468
b(OS.)g(It)f(also)i(mak)-36 b(es)469 b(in)-36 b(tuitiv)g(e)468
b(sense,)476 b(b)36 b(ecause)468 b Fu(R)41176 13074 y
Fr(t)42039 12875 y Fy(represen)-36 b(ts)467 b(the)2000
14480 y(maxim)-36 b(um)525 b(n)-36 b(um)g(b)36 b(er)523
b(of)i(tasks)g(that)f(JS)g(can)h(sc)-36 b(hedule)523
b(in)i(a)f(particular)h(step,)547 b(whic)-36 b(h)524
b(is)h(also)2000 16085 y(the)383 b(maxim)-36 b(um)384
b(n)-36 b(um)g(b)36 b(er)382 b(of)i(pro)36 b(cessors)384
b(that)f(can)h(b)36 b(e)383 b(used)g(in)h(that)f(step.)561
b(Without)383 b(the)h(mo)36 b(d-)2000 17690 y(i\257cation)448
b(to)p 8605 16623 V 449 w Fu(P)181 b Fy('s)448 b(de\257nition,)k(OS)447
b(could)h(apply)g(the)g(follo)-36 b(wing)450 b(\\winning")f(strategy)g
(to)f(ev)-36 b(ery)2000 19295 y(p)36 b(ossible)565 b(job:)840
b(allo)36 b(cate)567 b(an)d(in\257nite)g(n)-36 b(um)g(b)36
b(er)563 b(of)i(pro)36 b(cessors)565 b(to)f(the)g(job)h(in)f(the)g
(\257rst)g(time)2000 20900 y(step,)608 b(and)573 b(then)g(allo)36
b(cate)575 b(1)e(pro)36 b(cessor)574 b(during)f(eac)-36
b(h)573 b(succeeding)g(step.)998 b(In)573 b(this)g(scenario,)p
2000 21438 V 2000 22505 a Fu(P)568 b Fy(=)387 b Fs(1)444
b Fy(and)g(the)g(b)36 b(est)443 b(execution)i(time)f(JS)g(can)g(ac)-36
b(hiev)g(e)445 b(is)g Fu(T)568 b Fy(=)386 b Fu(T)36534
22704 y Ft(1)37060 22505 y Fy(,)448 b(since)c(only)h(one)f(task)h(is)
2000 24110 y(ready)503 b(during)f(the)g(\257rst)g(time)h(step)g(and)f
(at)h(most)g(one)g(task)g(can)g(b)36 b(e)502 b(executed)h(during)f(eac)
-36 b(h)2000 25715 y(succeeding)467 b(step.)678 b(Th)-36
b(us,)476 b(the)466 b(execution)h(time)h(on)f(an)g(in\257nite)f(n)-36
b(um)g(b)36 b(er)465 b(of)j(pro)36 b(cessors)468 b(is)f(no)2000
27320 y(b)36 b(etter)433 b(than)g(the)g(serial)h(execution)g(time)g
(\(when)p 27226 26253 V 433 w Fu(P)550 b Fy(=)368 b(1\).)3951
28926 y(Using)474 b(Equation)g(\(3.1\),)484 b(w)-36 b(e)474
b(can)g(no)-36 b(w)473 b(pro)-36 b(v)g(e)474 b(a)g(lo)-36
b(w)g(er)474 b(b)36 b(ound)472 b(on)i(execution)g(time)f(based)2000
30531 y(on)433 b(the)h(amoun)-36 b(t)432 b(of)j(w)-36
b(ork)434 b(in)g(the)f(computation.)2000 33292 y Fv(Lemma)499
b(2)650 b Fg(F)-100 b(or)335 b(any)e(adaptively)g(p)-66
b(ar)g(al)66 b(lel)334 b(job)f(with)h(work)g Fu(T)32182
33491 y Ft(1)33042 33292 y Fg(and)g(aver)-66 b(age)332
b(e\256e)-66 b(ctive)332 b(pr)-66 b(o)g(c)g(essor)2000
34897 y(al)66 b(lo)-66 b(c)g(ation)p 7878 33830 V 464
w Fu(P)181 b Fg(,)464 b(the)h(exe)-66 b(cution)463 b(time)h
Fu(T)646 b Fg(of)464 b(the)h(job)f(satis\257es)h(the)f(c)-66
b(onstr)g(aint)463 b Fu(T)550 b Fs(\270)369 b Fu(T)44383
35096 y Ft(1)44909 34897 y Fu(=)p 45559 33830 V(P)182
b Fg(.)2000 37658 y(Pr)-66 b(o)g(of.)1867 b Fy(During)400
b(eac)-36 b(h)401 b(step)g Fu(t)f Fy(of)i(the)e(job's)i(execution,)408
b(at)401 b(most)g Fu(P)36534 37857 y Fr(t)37330 37658
y Fy(tasks)g(can)g(b)36 b(e)401 b(executed,)2000 39263
y(since)416 b(there)e(are)i(only)g Fu(P)14298 39462 y
Fr(t)15109 39263 y Fy(pro)36 b(cessors)416 b(a)-36 b(v)-72
b(ailable)417 b(to)f(the)f(job)h(and)f(eac)-36 b(h)415
b(pro)36 b(cessor)416 b(executes)g(at)2000 40868 y(most)479
b(1)h(task)g(p)36 b(er)479 b(time)g(step.)716 b(The)479
b(sum)g(of)h(the)f Fu(P)28093 41067 y Fr(t)28488 40868
y Fy('s)h(therefore)f(serv)-36 b(es)480 b(as)g(an)f(upp)36
b(er)478 b(b)36 b(ound)2000 42473 y(for)434 b(the)f(amoun)-36
b(t)433 b(of)h(w)-36 b(ork)435 b(in)e(the)g(job:)22386
45565 y Fu(T)23148 45764 y Ft(1)24043 45565 y Fs(\267)25445
44303 y Fk(X)25610 47122 y Fr(t)p Fq(2)p Fr(S)27586 45565
y Fu(P)28424 45764 y Fr(t)29253 45565 y Fu(:)17712 b
Fy(\(3.2\))3951 49672 y(Let)445 b Fu(P)7131 49871 y Fr(t)7471
49994 y Fj(1)7988 49672 y Fu(;)221 b(P)9408 49871 y Fr(t)9748
49994 y Fj(2)10266 49672 y Fu(;)g(:)g(:)g(:)i(;)e(P)14016
49871 y Fr(t)14356 50020 y Fi(T)14842 50131 y Fh(1)16266
49672 y Fy(b)36 b(e)446 b(the)f Fu(T)21063 49871 y Fq(1)22506
49672 y Fy(largest)h(allo)36 b(cations)448 b(receiv)-36
b(ed)446 b(b)-36 b(y)446 b(the)g(job)g(during)f(its)2000
51277 y(execution,)489 b(as)477 b(b)36 b(efore.)709 b(If)478
b(w)-36 b(e)477 b(replace)h(eac)-36 b(h)477 b Fu(P)25973
51476 y Fr(t)26313 51611 y Fi(i)27197 51277 y Fy(with)g(min)o(\()p
Fu(P)33714 51476 y Fr(t)34054 51611 y Fi(i)34461 51277
y Fu(;)221 b(R)36033 51476 y Fr(t)36373 51611 y Fi(i)36780
51277 y Fy(\),)488 b(then)476 b(Inequalit)-36 b(y)478
b(\(3.2\))2000 52882 y(still)583 b(holds,)619 b(b)36
b(ecause)582 b Fu(R)14586 53081 y Fr(t)15563 52882 y
Fy(is)h(also)g(an)f(upp)36 b(er)581 b(limit)i(on)f(the)f(n)-36
b(um)g(b)36 b(er)581 b(of)i(tasks)f(that)g(can)g(b)36
b(e)2000 54488 y(executed)433 b(during)g(step)g Fu(t)p
Fy(.)578 b(Th)-36 b(us,)434 b(w)-36 b(e)433 b(restate)h(the)f(b)36
b(ound)432 b(as)i(follo)-36 b(ws:)12886 57580 y Fu(T)13648
57779 y Ft(1)15281 57580 y Fs(\267)18082 56318 y Fk(X)17421
59153 y Fr(t)p Fq(2)p Fr(S)50 b Fq(\241)p Fr(S)20364
58901 y Fh(0)20883 57580 y Fu(P)21721 57779 y Fr(t)22412
57580 y Fy(+)23719 56318 y Fk(X)23734 59153 y Fr(t)p
Fq(2)p Fr(S)25323 58901 y Fh(0)25859 57580 y Fy(min\()p
Fu(P)29371 57779 y Fr(t)29766 57580 y Fu(;)221 b(R)31338
57779 y Fr(t)31734 57580 y Fy(\))15281 62145 y Fs(\267)1107
b Fu(T)18585 60272 y Fk(\265)19842 61247 y Fy(1)p 19696
61840 943 54 v 19696 63057 a Fu(T)20772 60272 y Fk(\266)21971
59874 y(\303)23684 60883 y(X)23023 63718 y Fr(t)p Fq(2)p
Fr(S)50 b Fq(\241)p Fr(S)25966 63466 y Fh(0)26485 62145
y Fu(P)27323 62344 y Fr(t)28013 62145 y Fy(+)29320 60883
y Fk(X)29336 63718 y Fr(t)p Fq(2)p Fr(S)30925 63466 y
Fh(0)31460 62145 y Fy(min\()p Fu(P)34972 62344 y Fr(t)35367
62145 y Fu(;)221 b(R)36939 62344 y Fr(t)37335 62145 y
Fy(\))37841 59874 y Fk(!)15281 65560 y Fs(\267)1107 b
Fu(T)p 18364 64493 1020 54 v 181 w(P)615 b(:)p 49044
67581 957 45 v 49044 68449 45 868 v 49956 68449 V 49044
68493 957 45 v 3951 70395 a Fy(The)529 b(b)36 b(ounds)527
b(sho)-36 b(wn)528 b(in)h(this)f(section)h(hold)f(ev)-36
b(en)529 b(if)g(m)-36 b(ultiple)528 b(adaptiv)-36 b(ely)530
b(parallel)g(jobs)2000 72000 y(are)364 b(running)f(in)i(the)e(system,)
379 b(eac)-36 b(h)364 b(with)g(its)h(o)-36 b(wn)364 b(instance)g(of)h
(JS.)g(F)-108 b(rom)363 b(the)h(p)36 b(oin)-36 b(t)364
b(of)h(view)g(of)25350 75321 y(21)p eop end
%%Page: 22 22
TeXDict begin 22 21 bop 2000 1328 a Fy(the)417 b(JS's,)422
b(OS)417 b(is)h(an)g(adv)-36 b(ersary)-108 b(,)421 b(and)d(so)g(no)g
(exp)36 b(ectations)418 b(or)g(constrain)-36 b(ts)418
b(are)g(placed)g(on)g(the)2000 2933 y(allo)36 b(cations)400
b(it)f(pro)-36 b(vides)399 b(to)f(their)g(jobs.)567 b(Consequen)-36
b(tly)-108 b(,)406 b(eac)-36 b(h)399 b(JS)f(need)g(not)g(b)36
b(e)398 b(a)-36 b(w)g(are)400 b(of)f(ho)-36 b(w)2000
4539 y(man)g(y)486 b(other)f(JS's)h(are)g(in)g(the)f(system)i(or)f
(what)g(allo)36 b(cations)487 b(they)f(receiv)-36 b(e)487
b(from)f(OS,)f(whic)-36 b(h)2000 6144 y(mak)g(es)498
b(sense)g(since)g(the)f(JS)g(has)h(no)g(con)-36 b(trol)498
b(o)-36 b(v)g(er)498 b(either)f(of)i(these)e(factors.)772
b(All)498 b(a)g(JS)g(m)-36 b(ust)2000 7749 y(kno)g(w)371
b(in)f(order)g(to)g(p)36 b(erform)370 b(its)h(function)f(is)g(the)g
(allo)36 b(cation)372 b(of)f(its)f(o)-36 b(wn)371 b(job)f(during)g(eac)
-36 b(h)370 b(time)2000 9354 y(step)433 b(\(regardless)h(of)g(ho)-36
b(w)434 b(this)f(allo)36 b(cation)436 b(is)d(determined\).)2000
16011 y FC(3.3)2152 b(Analysis)715 b(of)i(Greedy)g(Sc)-60
b(hedules)2000 19664 y Fy(F)-108 b(or)595 b(the)g(case)h(of)h(static)e
(pro)36 b(cessor-allo)g(cation)598 b(p)36 b(olicies,)637
b(early)597 b(w)-36 b(ork)596 b(b)-36 b(y)595 b(Graham)g([20,)268
b(21])2000 21269 y(and)555 b(Bren)-36 b(t)554 b([10])j(sho)-36
b(ws)555 b(that)g(there)g(exist)h Fu(P)181 b Fy(-pro)36
b(cessor)555 b(execution)g(sc)-36 b(hedules)555 b(that)g(satisfy)2000
22874 y Fu(T)2762 23073 y Fr(P)4186 22874 y Fs(\267)640
b Fu(T)6621 23073 y Ft(1)7147 22874 y Fu(=P)586 b Fy(+)403
b Fu(T)11398 23073 y Fq(1)12395 22874 y Fy(,)633 b(where)593
b Fu(T)18068 23073 y Fr(P)19444 22874 y Fy(is)h(the)e(minim)-36
b(um)593 b(execution)g(time)h(o)-36 b(v)g(er)593 b(all)h
Fu(P)181 b Fy(-pro)36 b(cessor)2000 24479 y(execution)616
b(sc)-36 b(hedules.)1122 b(The)616 b(greedy-sc)-36 b(heduling)614
b(theorem)h(in)g([6])h(extends)f(this)g(result)g(b)-36
b(y)2000 26084 y(pro)g(ving)418 b(the)e(same)i(b)36 b(ound)416
b(on)h Fu(T)18693 26283 y Fr(P)19894 26084 y Fy(for)g(greedy)h(sc)-36
b(hedules,)420 b(or)e(sc)-36 b(hedules)416 b(that)h(attempt)g(to)g(do)
2000 27689 y(as)380 b(m)-36 b(uc)g(h)379 b(w)-36 b(ork)380
b(as)h(p)36 b(ossible)380 b(during)f(ev)-36 b(ery)380
b(step.)560 b(In)380 b(this)f(section,)391 b(w)-36 b(e)381
b(pro)-36 b(v)g(e)379 b(a)h(similar)h(b)36 b(ound)2000
29294 y(for)461 b(greedy)g(sc)-36 b(hedules)459 b(for)i(the)f(case)h
(of)g(dynamic)g(pro)36 b(cessor-allo)g(cation)462 b(p)36
b(olicies,)468 b(where)461 b(the)2000 30899 y(allo)36
b(cation)435 b(of)g(a)f(job)f(ma)-36 b(y)435 b(c)-36
b(hange)433 b(during)g(eac)-36 b(h)433 b(step)g(of)i(its)e(execution.)
3951 32865 y(W)-108 b(e)478 b(de\257ne)f(an)i Fo(adaptive)600
b(gr)-78 b(e)g(e)g(dy)599 b(sche)-78 b(dule)591 b Fy(to)478
b(b)36 b(e)479 b(an)f(adaptiv)-36 b(e)478 b(execution)h(sc)-36
b(hedule)2000 34470 y(in)370 b(whic)-36 b(h,)382 b(during)369
b(eac)-36 b(h)370 b(step)f Fu(t)h Fy(of)g(a)g(job's)h(execution,)383
b(if)370 b(at)g(least)g Fu(P)35981 34669 y Fr(t)36747
34470 y Fy(tasks)g(are)g(ready)-108 b(,)383 b(then)368
b Fu(P)49604 34669 y Fr(t)2000 36075 y Fy(tasks)352 b(execute,)369
b(and)351 b(if)h(few)-36 b(er)353 b(than)e Fu(P)20840
36274 y Fr(t)21587 36075 y Fy(tasks)h(are)g(ready)-108
b(,)368 b(then)351 b(all)i(execute.)551 b(In)351 b(the)h(sc)-36
b(heduling)2000 37680 y(game)485 b(describ)36 b(ed)483
b(in)h(Section)g(3.2,)498 b(the)484 b(adaptiv)-36 b(e)484
b(greedy)h(sc)-36 b(hedule)483 b(w)-36 b(ould)484 b(b)36
b(e)484 b(generated)g(b)-36 b(y)2000 39285 y(JS)370 b(in)g(resp)36
b(onse)369 b(to)i(the)e(allo)36 b(cations)372 b Fu(P)21356
39484 y Fr(t)22122 39285 y Fy(pro)-36 b(vided)369 b(b)-36
b(y)370 b(OS.)g(W)-108 b(e)370 b(no)-36 b(w)370 b(state)g(the)g
(Graham-Bren)-36 b(t)2000 40890 y(b)36 b(ound)432 b(for)j(adaptiv)-36
b(e)433 b(greedy)h(sc)-36 b(hedules:)2000 46814 y Fv(Theorem)499
b(3)g(\(The)f(adaptiv)-42 b(e)500 b(greedy-sc)-42 b(heduling)501
b(theorem\))651 b Fg(F)-100 b(or)333 b(any)f(adaptively)f(p)-66
b(ar-)2000 48420 y(al)66 b(lel)540 b(job)e(with)h(work)h
Fu(T)13935 48619 y Ft(1)14461 48420 y Fg(,)557 b(critic)-66
b(al)537 b(p)-66 b(ath)539 b(length)f Fu(T)27410 48619
y Fq(1)28407 48420 y Fg(,)557 b(and)539 b(aver)-66 b(age)538
b(e\256e)-66 b(ctive)537 b(pr)-66 b(o)g(c)g(essor)538
b(al)66 b(lo-)2000 50025 y(c)-66 b(ation)p 6031 48958
1020 54 v 609 w Fu(P)181 b Fg(,)647 b(any)611 b(adaptive)f(gr)-66
b(e)g(e)g(dy)609 b(sche)-66 b(dule)611 b(achieves)f Fu(T)821
b Fs(\267)639 b Fu(T)34578 50224 y Ft(1)35104 50025 y
Fu(=)p 35754 48958 V(P)585 b Fy(+)403 b Fu(T)39354 50224
y Fq(1)40350 50025 y Fg(,)647 b(wher)-66 b(e)611 b Fu(T)792
b Fg(is)610 b(the)2000 51630 y(exe)-66 b(cution)463 b(time)h(of)g(the)h
(job.)2000 57194 y(Pr)-66 b(o)g(of.)2492 b Fy(W)-108
b(e)638 b(classify)i(eac)-36 b(h)638 b(step)g Fu(t)g
Fy(of)h(a)g(job's)g(execution)f(as)h(one)f(of)h(t)-36
b(w)g(o)639 b(t)-36 b(yp)36 b(es:)988 b(in)638 b(a)2000
58799 y Fo(c)-78 b(omplete)759 b Fy(step,)699 b(there)646
b(are)g(at)g(least)h Fu(P)23724 58998 y Fr(t)24765 58799
y Fy(tasks)g(that)f(are)g(ready)-108 b(,)699 b(so)647
b(a)f(greedy)h(sc)-36 b(hedule)2000 60404 y(selects)548
b(an)-36 b(y)548 b Fu(P)9584 60603 y Fr(t)10527 60404
y Fy(of)h(them)e(to)h(execute.)921 b(An)548 b Fo(inc)-78
b(omplete)675 b(step)652 b Fy(has)548 b(strictly)g(less)g(than)g
Fu(P)49605 60603 y Fr(t)2000 62009 y Fy(ready)543 b(tasks,)571
b(and)543 b(so)g(a)g(greedy)g(sc)-36 b(hedule)542 b(executes)h(them)f
(all.)908 b(Since)542 b(eac)-36 b(h)543 b(step)f(is)h(either)2000
63615 y(complete)412 b(or)f(incomplete,)416 b(w)-36 b(e)412
b(can)f(b)36 b(ound)411 b(the)f(time)i(used)f(b)-36 b(y)411
b(an)g(adaptiv)-36 b(e)412 b(greedy)g(sc)-36 b(hedule)2000
65220 y(b)g(y)433 b(b)36 b(ounding)433 b(the)g(n)-36
b(um)g(b)36 b(er)432 b(of)i(complete)g(and)f(incomplete)h(steps.)3951
67185 y(Consider)388 b(the)f(complete)h(steps)f(\257rst.)562
b(If)388 b(ev)-36 b(ery)389 b(step)e Fu(t)369 b Fs(2)f
Fu(S)279 b Fs(\241)201 b Fu(S)35994 66703 y Fq(0)36693
67185 y Fy(of)388 b(the)f(job's)i(execution)f(is)2000
68790 y(complete,)473 b(then)464 b(exactly)j Fu(P)16236
68989 y Fr(t)17096 68790 y Fy(tasks)f(are)f(executed)g(during)f(eac)-36
b(h)465 b(of)h(these)f(steps)f(b)-36 b(y)465 b(a)h(greedy)2000
70395 y(sc)-36 b(hedule.)1007 b(Also,)614 b(since)576
b(min\()p Fu(P)18424 70594 y Fr(t)18820 70395 y Fu(;)221
b(R)20392 70594 y Fr(t)20787 70395 y Fy(\))613 b Fs(\267)g
Fu(R)24542 70594 y Fr(t)25514 70395 y Fy(for)577 b(all)h
Fu(t)612 b Fs(2)g Fu(S)33051 69913 y Fq(0)33362 70395
y Fy(,)h(no)577 b(more)f(than)g Fu(R)43848 70594 y Fr(t)44820
70395 y Fy(tasks)i(are)2000 72000 y(executed)487 b(during)f(the)g
(remaining)h(steps.)737 b(Since)487 b(no)g(more)f(than)g
Fu(T)36420 72199 y Ft(1)37433 72000 y Fy(tasks)i(can)f(b)36
b(e)486 b(executed)25350 75321 y(22)p eop end
%%Page: 23 23
TeXDict begin 23 22 bop 2000 1328 a Fy(b)-36 b(y)433
b(the)h(greedy)f(sc)-36 b(hedule,)433 b(w)-36 b(e)434
b(ha)-36 b(v)g(e)434 b(that)14156 4420 y Fu(T)14918 4619
y Ft(1)16551 4420 y Fs(\270)19352 3159 y Fk(X)18691 5994
y Fr(t)p Fq(2)p Fr(S)50 b Fq(\241)p Fr(S)21634 5741 y
Fh(0)22153 4420 y Fu(P)22991 4619 y Fr(t)23682 4420 y
Fy(+)24988 3159 y Fk(X)25004 5994 y Fr(t)p Fq(2)p Fr(S)26593
5741 y Fh(0)27129 4420 y Fy(min)o(\()p Fu(P)30640 4619
y Fr(t)31036 4420 y Fu(;)221 b(R)32608 4619 y Fr(t)33003
4420 y Fy(\))16551 8986 y Fs(\270)1107 b Fu(T)476 b Fs(\242)20872
8087 y Fy(1)p 20726 8681 943 54 v 20726 9897 a Fu(T)22023
6715 y Fk(\303)23075 7724 y(X)23240 10543 y Fr(t)p Fq(2)p
Fr(S)25215 8986 y Fu(P)26053 9185 y Fr(t)26744 8986 y
Fy(+)28050 7724 y Fk(X)28066 10559 y Fr(t)p Fq(2)p Fr(S)29655
10307 y Fh(0)30191 8986 y Fy(min)o(\()p Fu(P)33702 9185
y Fr(t)34098 8986 y Fu(;)221 b(R)35670 9185 y Fr(t)36066
8986 y Fy(\))36571 6715 y Fk(!)16551 12364 y Fs(\270)1107
b Fu(T)p 19634 11297 1020 54 v 181 w(P)614 b(;)2000 15298
y Fy(from)302 b(whic)-36 b(h)301 b(it)g(follo)-36 b(ws)303
b(that)e Fu(T)550 b Fs(\267)369 b Fu(T)19996 15497 y
Ft(1)20522 15298 y Fu(=)p 21172 14230 V(P)182 b Fy(.)534
b(Th)-36 b(us,)328 b(the)300 b(maxim)-36 b(um)302 b(n)-36
b(um)g(b)36 b(er)299 b(of)j(complete)g(steps)f(is)2000
16903 y Fu(T)2762 17102 y Ft(1)3288 16903 y Fu(=)p 3938
15836 V(P)181 b Fy(.)532 b(No)-36 b(w,)322 b(consider)292
b(the)h(n)-36 b(um)g(b)36 b(er)291 b(of)i(incomplete)g(steps.)531
b(Let)292 b Fu(G)h Fy(denote)f(the)h(computational)2000
18508 y(dag)386 b(of)g(the)e(job,)396 b(and)385 b(let)g
Fu(G)15897 18707 y Fr(t)16678 18508 y Fy(b)36 b(e)385
b(the)f(subgraph)h(of)h Fu(G)f Fy(that)g(remains)g(at)h(the)e(b)36
b(eginning)385 b(of)h(step)2000 20113 y Fu(t)p Fy(,)433
b(where)h Fu(G)8048 20312 y Ft(0)8943 20113 y Fy(=)368
b Fu(G)p Fy(.)578 b(During)434 b(eac)-36 b(h)433 b(step)g
Fu(t)p Fy(,)h(all)g(tasks)g(in)f Fu(G)31273 20312 y Fr(t)32102
20113 y Fy(with)g(in-degree)g(0)h(\(i.e,)g(tasks)g(that)2000
21718 y(ha)-36 b(v)g(e)430 b(no)f(unexecuted)f(predecessors\))h(are)g
(ready)h(to)g(b)36 b(e)429 b(executed.)576 b(If)430 b(w)-36
b(e)430 b(assume)f(that)g(ev)-36 b(ery)2000 23323 y(step)480
b(is)g(incomplete,)492 b(then)479 b(all)i(of)g(these)f(tasks)h(are)f
(executed)g(b)-36 b(y)480 b(a)g(greedy)h(sc)-36 b(hedule)479
b(during)2000 24928 y(step)370 b Fu(t)p Fy(.)558 b(Since)370
b(the)g(longest)i(path)e(in)h Fu(G)21395 25127 y Fr(t)22161
24928 y Fy(starts)g(with)g(a)g(task)g(that)g(has)g(in-degree)f(0,)384
b(the)370 b(length)2000 26533 y(of)365 b(the)f(longest)h(path)f(in)h
Fu(G)15370 26732 y Fr(t)p Ft(+1)17331 26533 y Fy(m)-36
b(ust)364 b(b)36 b(e)364 b(one)h(less)g(than)f(the)g(length)g(of)h(the)
f(longest)h(path)f(in)h Fu(G)49244 26732 y Fr(t)49639
26533 y Fy(.)2000 28138 y(In)493 b(other)h(w)-36 b(ords,)509
b(ev)-36 b(ery)494 b(incomplete)g(step)f(reduces)g(the)g(length)g(of)i
(a)f(longest)g(path)f(in)g Fu(G)h Fy(b)-36 b(y)2000 29743
y(one)462 b(unit;)475 b(since)462 b(this)g(length)f(is)i(precisely)f
(the)g(critical-path)f(length,)469 b(there)461 b(can)h(b)36
b(e)462 b(at)g(most)2000 31348 y Fu(T)2762 31547 y Fq(1)4105
31348 y Fy(suc)-36 b(h)345 b(steps.)549 b(F)-108 b(or)346
b(example,)365 b(Figure)346 b(3-2)g(illustrates)h(the)f(progression)g
Fs(h)p Fu(G)40756 31547 y Ft(0)41282 31348 y Fu(;)221
b(G)42890 31547 y Ft(1)43416 31348 y Fu(;)g(:)g(:)g(:)j(;)d(G)47355
31547 y Fr(T)48089 31348 y Fs(i)346 b Fy(of)2000 32954
y(dags)432 b(resulting)g(from)h(a)f(greedy)g(sc)-36 b(hedule)432
b(of)g(the)g(computation)g(in)g(Figure)f(3-1,)i(where)f(ev)-36
b(ery)2000 34559 y(step)376 b(is)g(incomplete;)396 b(the)376
b(length)g(of)h(the)f(critical)h(path)f(\(sho)-36 b(wn)375
b(in)i(b)36 b(old\))376 b(reduces)f(b)-36 b(y)376 b(one)h(unit)2000
36164 y(during)433 b(eac)-36 b(h)433 b(step.)3951 37875
y(Com)-36 b(bining)350 b(these)f(results,)367 b(the)349
b(total)h(time)g(for)g(executing)h(the)e(complete)h(and)f(incomplete)
2000 39480 y(steps)433 b(of)h(a)g(job)g(using)g(a)g(greedy)f(sc)-36
b(hedule)433 b(is)h(at)g(most)f Fu(T)30697 39679 y Ft(1)31224
39480 y Fu(=)p 31874 38413 V(P)476 b Fy(+)295 b Fu(T)35257
39679 y Fq(1)36253 39480 y Fy(.)p 49044 38569 957 45
v 49044 39436 45 868 v 49956 39436 V 49044 39480 957
45 v 3951 41631 a(The)462 b(result)g(of)h(Theorem)f(3)h(tells)f(us)g
(when)g(an)g(execution)h(sc)-36 b(hedule)461 b(can)h(ac)-36
b(hiev)g(e)463 b Fo(line)-78 b(ar)2000 43236 y(sp)g(e)g(e)g(dup)104
b Fy(;)528 b(that)495 b(is,)512 b(when)495 b(it)h(can)g(ac)-36
b(hiev)g(e)496 b(execution)g(time)g Fu(T)656 b Fy(=)474
b(\243\()p Fu(T)38560 43435 y Ft(1)39086 43236 y Fu(=)p
39736 42168 1020 54 v(P)181 b Fy(\).)765 b(In)496 b(particular,)2000
44841 y(w)-36 b(e)521 b(\257nd)f(that)h(this)g(o)36 b(ccurs)521
b(when)p 19810 43774 V 521 w Fu(P)699 b Fs(\267)518 b
Fu(T)23660 45040 y Ft(1)24187 44841 y Fu(=T)25599 45040
y Fq(1)26596 44841 y Fy(,)543 b(since)521 b(then)f(w)-36
b(e)522 b(ha)-36 b(v)g(e)521 b Fu(T)39675 45040 y Ft(1)40201
44841 y Fu(=)p 40851 43774 V(P)700 b Fs(\270)518 b Fu(T)44702
45040 y Fq(1)46220 44841 y Fy(and)j(so)2000 46446 y(a)541
b(greedy)g(sc)-36 b(hedule)540 b(executes)h(in)g(time)g
Fu(T)732 b Fs(\267)552 b Fy(2)p Fu(T)27201 46645 y Ft(1)27727
46446 y Fu(=)p 28377 45379 V(P)181 b Fy(.)900 b(The)541
b(quan)-36 b(tit)g(y)541 b Fu(T)39510 46645 y Ft(1)40036
46446 y Fu(=T)41448 46645 y Fq(1)42986 46446 y Fy(is)g(called)h(the)
2000 48051 y Fo(aver)-78 b(age)626 b(p)-78 b(ar)g(al)78
b(lelism)629 b Fy(of)504 b(the)f(computation.)787 b(Th)-36
b(us,)520 b(if)504 b(the)f(a)-36 b(v)g(erage)504 b(e\256ectiv)-36
b(e)504 b(pro)36 b(cessor)2000 49656 y(allo)g(cation)435
b(is)f(b)36 b(ounded)432 b(b)-36 b(y)434 b(the)f(a)-36
b(v)g(erage)435 b(parallelism,)g(linear)f(sp)36 b(eedup)432
b(o)36 b(ccurs.)3951 51368 y(The)450 b(pro)36 b(of)451
b(of)g(Theorem)f(3)g(also)h(pro)-36 b(vides)451 b(additional)f(in)-36
b(tuition)450 b(for)g(the)g(de\257nition)f(of)p 48981
50300 V 451 w Fu(P)2000 52973 y Fy(in)473 b(Equation)h(\(3.1\):)658
b(namely)-108 b(,)484 b(that)472 b(w)-36 b(e)474 b(only)g(need)e(to)i
(replace)f(the)g(largest)h Fu(T)41863 53172 y Fq(1)43333
52973 y Fy(v)-72 b(alues)474 b(of)g Fu(P)49605 53172
y Fr(t)2000 54578 y Fy(when)490 b(calculating)p 12084
53511 V 490 w Fu(P)182 b Fy(,)504 b(b)36 b(ecause)490
b(there)f(can)h(b)36 b(e)490 b(at)g(most)g Fu(T)32137
54777 y Fq(1)33623 54578 y Fy(incomplete)g(steps)g(when)f(using)2000
56183 y(a)471 b(greedy)f(sc)-36 b(hedule.)688 b(In)471
b(more)f(general)h(terms,)480 b(if)471 b(a)f(go)36 b(o)g(d)472
b(sc)-36 b(heduling)469 b(algorithm)i(is)g(used)f(to)2000
57788 y(determine)521 b(the)g(adaptiv)-36 b(e)522 b(execution)g(sc)-36
b(hedule)521 b(of)i(a)f(job,)545 b(w)-36 b(e)522 b(exp)36
b(ect)522 b(the)f(job)h(to)g(complete)2000 59393 y(after)434
b(no)f(more)h(than)f Fu(T)13926 59592 y Fq(1)15356 59393
y Fy(in\257nite-pro)36 b(cessor)433 b(allo)36 b(cations)435
b(b)-36 b(y)434 b(OS.)3951 61105 y(Theorem)g(3)g(can)f(b)36
b(e)433 b(easily)j(extended)c(to)i(sho)-36 b(w)434 b(the)f(follo)-36
b(wing)436 b(corollaries.)2000 65000 y Fv(Corollary)500
b(4)650 b Fg(A)-33 b(n)545 b(adaptive)h(gr)-66 b(e)g(e)g(dy)544
b(sche)-66 b(dule)546 b(yields)g(an)g(exe)-66 b(cution)544
b(time)g(that)i(is)g(within)f(a)2000 66606 y(factor)464
b(of)h(2)g(of)g(an)f(optimal)h(sche)-66 b(dule.)2000
70395 y(Pr)g(o)g(of.)1927 b Fy(The)450 b(lo)-36 b(w)g(er)451
b(b)36 b(ounds)449 b(pro)-36 b(v)g(ed)450 b(in)g(Section)g(3.1)h(state)
f(that)g(the)f(execution)i(time)f Fu(T)631 b Fy(of)2000
72000 y(an)474 b(adaptiv)-36 b(ely)476 b(parallel)f(job)g(satis\257es)f
Fu(T)620 b Fs(\270)438 b Fy(max)q(\()p Fu(T)28494 72199
y Ft(1)29020 72000 y Fu(=)p 29670 70933 V(P)181 b(;)221
b(T)32033 72199 y Fq(1)33031 72000 y Fy(\).)700 b(F)-108
b(rom)474 b(Theorem)h(3,)485 b(w)-36 b(e)474 b(kno)-36
b(w)25350 75321 y(23)p eop end
%%Page: 24 24
TeXDict begin 24 23 bop 11800 41667 a @beginspecial 94
@llx 88 @lly 520 @urx 713 @ury 2556 @rwi @setspecial
%%BeginDocument: greedy-incomplete.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Thesis Figures.ppt)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040901083045-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 94 88 520 713
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
94 88 moveto 520 88 lineto 520 713 lineto 94 713 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
94 88 426 625 rectclip
[ -1 0 0 -1 613.59816 801.33055 ] concat
/N56 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font DCEDGG+TimesNewRoman,Italic
11 dict begin
/FontName /DCEDGG+TimesNewRoman,Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 940 dict dup begin
/.notdef 
<10bf317005b8302fd45b07fb1549d56700cd874f9785acaaa30edf166f7d
7fe0592f51d07c5aaaff66bb85fa> ND 
/G 
<10bf317022f0081597cff576c41b27466fe1e52d193034b36888cf3b2ca3
68a68d779fafce3b72c5293d6a3f887f14f5a58b0034aee71698546c4c0b
991181b84d52072635415222f7bd056e66888b79f595879cd3baf7efe159
063d43845ef9a025705d8ec9651b457099654394d2992e33c012343fc4f2
66bd7986fb9a6f6efaf2a6ba768f8b612ddae90ca0c801101a2b8812c0d1
878114ac488c2949f4102b5df4236669c09640ae29afbccb443338828b0c
4517115a6e5e3eaba334cf1dcb7ac13c67e72a57aac6dbd46b8372a5bd25
904367c6e60889f07aa8786d7c3e90b25aad92f3e9244c386428145e> ND 
/J 
<10bf31709b62baa6ed3ff432fee50dc00607d5d72252eb6bcb129243db2d
20da9a1bba6a2a66e7e0aa49e064b3cd91583d479cde6fdea9b68aa6c210
4c340f6d9eaee545ca5b3220798b86c6c501559929908fda3517e01edd65
a0870f99744c55f160054bcc26b2401397f00007e631a3ec8136de71a1ea
54cb887274c598e3d9a0cf2e81ae1712a04402d31806c05b33b9d0d9e621
a3c3431c175d72d405299a8e75c6a1cb1be61e602566dfa0681fdb581ce1
0fdbd4208d25dddacc> ND 
/N 
<10bf31709dce1b1ed41c47addeb7a391f41ed8083f4afeff1c947df10a4d
2de36425e89f6bd82e60d9023e2d78bc84830b34e62f8a4568be7bc208ea
4fc6e9ca969e8aec41dd80f80f4c4fe472639ba3366569cb87de5f9213ad
98120d1a71b4584b509f09b5200a62d6e7ca1119d61533e703d2441b08cc
bd9b3c336c42188f729bae655049971d2e4b7d6cd44a7b76666f37ef7463
60a28e6259dace068776b5c8cc33f800437ece6dccba77e4b0e7> ND 
/P 
<10bf3170815b61898ffe1eb7109b3eb3fe8179c947126cde0ca1f0f3a57b
4fde4a0e49d820192254c426f8d7a6d5299e28c0b3aaba378c26c6f147b4
8a5a4c0122cff4b969b15e30e1453b0937d2109da30e4ce446da9a7e9ab9
e76e27900c04c0add80988c0c7b9922b0ef4ac86d418261120e07369b2d9
b1acf0aff00cee423b3cd264a8c70a5a05e09d6c0a09605b3b34e7c29b8d
125ff0629d3b1843ba7d87672b5291e3ddb8d717dd2e32b1285a5857a4d9
e80141d3d7199fd282a27fa888d0b8> ND 
/v 
<10bf317052452fc5aad0396ffeda7b26078ecb2bae9160e8a2ff79b8413c
c7863fa52f084c124f376817021d111fd45356a585fa0f70e03eec5a8676
69a27d45857cbfc4b89a5c4acca120869d8cdd588b39c064d4789bf98644
9a3831f33b7c7bd3b9aba947b52369d2b2d9cafbc4e36825d1ad23fe62d1
3909f21c6e75f9844e2a64feab8b455daba318be09eef7ede45676853dea
cc5a8d23424c2053e51531cbf2f4df> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/DCEDGG+TimesNewRoman,Italic findfont /Encoding get
dup 0 /.notdef put
dup 71 /G put
dup 74 /J put
dup 78 /N put
dup 80 /P put
dup 118 /v put
pop
%%EndResource
[/N22/DCEDGG+TimesNewRoman,Italic 1 TZ
%%BeginResource: font DCECFF+TimesNewRoman
11 dict begin
/FontName /DCECFF+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/space 
<10bf317079c757bf91> ND 
/parenleft 
<10bf317046e70250e8bd40d114dd6e816b58f4d3349c0c7727832e7501d9
0d48751e5ed01a4a989a3de6f3df4e8150bcde04496d7ebf18ade860af48
8df404b0480a8fe53e55e37acb5a554f9e5cbbe042244d6fc0aa0fdafde4
acb4c52d35fe39221cd926f89c> ND 
/parenright 
<10bf3170537b448b82841392ad69a78470fcf6ad5b9860e31496592c5fd2
8c2a948b7ef1391379bc9dc9754e13aa1a0d8be5cfd2e3bc1b6a246b4628
a43a8883776071abf86a7883d030defeed590f0bf1949e72bae27054def5
466be78152f4af0ef71e17f1> ND 
/slash 
<10bf31707ecffa29aa99596df40b96812e390790337673cf79e85a6235> ND 
/zero 
<10bf31705d64a97b17e82784743dd8afd77cc124ffedf62073386a4af3bd
86fd28c9c7a756e9ef18e3ca007b94f0e02e9eb268494f71c4e6ce33e23a
daf3d98e6e397ae6d95a99deac335d9d72bffd478071defcda00cb768906
0b44c557ecf61de22b31359bb158f6fec05d2caffa2d64aa1e2dc65d6175
e933567afd84f788ad9d2ecdc1d1277289609d3478a2f9ff64e3fec0e6b8
8edb35e90668db5b556d9651c4b7ff49d0e2> ND 
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
/four 
<10bf317069b1fd7146b17c113b617a69456a1f46fa86f93a1743e1bde519
49e5c8665d9cf49ab4179aecaf779fa834a317855eb2ce61cdee1d727f> ND 
/five 
<10bf317049845615ceab2cb35844ace30baf3e54b0e1773fc25e2037b21b
b58b95d34cefc92bea69dc9b438084ed7eb5c6702a368454ebc82a5856ce
9936aede12d64deba22dd59cd070d9cd700c552563a2157176094ad577ca
7175d4c555582970bb6ced51f021b279f79ea313c4e45258856c7401f914
3fd613f871ff33cdce06d0175d18b29427c1e70009e3e10e63caa0676029
8c0b976669b8d245> ND 
/six 
<10bf3170448bf7f9a4e5f8472a5a2d45b7594de91351c6ec052ffd8b762a
bed41ed16809fa2365105c6627f46205709a8a1309c7141139fd941188bd
c8d9b0b55c47d641558ff36ded37dddb1b216d36df7ff3e4cecb5e93a247
22d0b6b5e65a4a2dcc56b02d7259d8fd5b7ec0999a61dac27e80da2f8676
34759b4e247227f13713c39238726a89a708bbed3b752173bdebcebaeea7
71ee266a3e95119dcfb78b31c6beeef7041756c5788d9d3d80a0bb3f669d
9ba6d8b1667d5d5aa89f4142cfd220ffe9eb070e> ND 
/seven 
<10bf3170422f935763586cd8dbf7f37293dfe15df8bc3e09eef989653acc
203875a79f5d3c366f49e5ce0c7723933c8d3b9a4fd39991> ND 
/eight 
<10bf31703a9bd69293aaf1980d4004db29512cfbcdf83050f262f22394b0
ef479114fcd1ed3780f8e8379ec274149787838cb972946ff925f327dc43
fe0a268771c55ebbfb2b11062f0229b6b8245dcdaee1f4d128ae888b5b31
2979a0a0311f4e185869859bc2f66d09f1f0a58e4c124d00e52b1afc6fde
a6cc391f21431f05bfb725982450ba002876f8730b821ec63f425acc7fbc
dbd469c4bbc842a4c448a96aef6e173e7ebf5f5a7a17953e1579490627e0
98ff8ddd57718c580a5c4db5f0f85a39de87a2ee8507278f64c74b506e5f
c484dc38505671de2149f16a16f5b3bd2bd178fe57f2540526157d2501cd
a1ec9d05b086c77bbf39961b> ND 
/nine 
<10bf317041f0a9496f308eef332a89569c6f19bf3d9e8151f98106b7f3b4
863943549b6788f898c785f107f2fd33dafee552c5021ce35f862500ffe7
90b89ba5e8ca74771847acf24a3921944b9ff12aa20c31cc240b97d0bfbf
3bfa98131e7f0af00c2c1318418f0b901e30e5ac56e17f3033ea0f27da78
6ba05aa35f7d1182c74c8b5d63906ddf3add8563ed2127e6e60e74dcaeec
cd2fc89d6ac5e14d494f0e9d12d3f290592c4f786ec533bdf4b038336f9c
5e802b11> ND 
/A 
<10bf3170612fa8ae288a2f767c6f2d22480749f87ffaef88db9508f355b3
d621b9e09a8d1290afe57d05190debf7b19b92f6309b70e08d2409abdf50
3b6a0e5daa0043a6e298cadec0a7dbd5588f8ba0646e339db53e322e33db
33e9ac93d421016e880386d59c5f84e2c9dcb201c618c0d88390bc39b5b5
dcf9b13cb5b08470f0d83c168f6d7ea2244d1b> ND 
/B 
<10bf31706ea8189a0122a2c3dc80451ea987f9cc6dc7afa0c8f0365e6d8e
59a275ca593c5d46c9efa9ebe4192f8e472ac6f0efdf90f5d264a8b47fa4
3bcd031546c0586a98250a46abdef7d038322a132dd14df107aae195c311
99c6fa7558e3ee2379999d05cf38ad7f22726f37f2f0654cf65c11005a88
2feb945df6452201e1abb666d0244ac9dc622994ec7112e71f49ba0b5306
4d49384d5d74864da9fc7636c8b9964886a4103e2320a1f33cb3f7f7bcc7
104eb429cfd6cfab753b2e30fdbce693ce1dcc5a7fe31d75680753c52fe9
350712be59c0ee4a2780b638de9e8e44870622e76d3c23cdfd281b0b8177
c0aff3531220d18c12c91634c02401e01a11> ND 
/C 
<10bf31705d65c09013f5e74d02fbfce579927dc4371245d5279a0be7ec2d
bd3b1448f6fd9c53426e6238d321f77957395a071b4b8eae65710650ca99
5020550eaa4528d828ef4c47ac3d29b589dd7f1c7cfe44b10e3e8fa63e50
7c3e4eb74e257f81314f58ef9126142bc9d3a940c619a0d5450ffb6600e9
bb7f776713c2df8dd431070f31717d2477542aecd1539231d249a65da0e1
ee77958319b99e72488e0e9fa74f4d170e269189eb39aa1a> ND 
/D 
<10bf31706ea8518093a448f0413d9dd2503cf14562d62f8e03c59ef262c0
e81d3c5037d7a8fbf15657e5bea1080fe305ab71bf0048720c010cf41197
6f2c354776e6ac045fcbc3395f65891cbe4c7f0093e58d10b57eae23372e
4cc99d7f2f11c1f1c023288641813a3b8b65e70e4b5173920a628da83be4
7b524c38228036fccc15a820529e8626ae48a60adbbae5fd> ND 
/E 
<10bf31705245888107d641c65df0d045384b4474a865698169ff2c4c5759
f26e2217c59fcbe377198e20e38aaa44f075831908ff3584c8503712a3f9
da462024eae3426d516a8864b3756edb7e42923b77324ddcf4879e1b61b4
02502bf9f5c08a938a8b9111b299fb506f1aa6115b23bb6038633ef2c172
1c1c4fba6b5b7baae1d192358092d890074dc21b1d5f65994b78807f042e
8945e17dc9fd4baebebbadfc790575a38910eab682188d9cdb44060faa47
1dcf91df296595839280be99912fd6d9ac4594d1b8a3> ND 
/F 
<10bf317069b1b5630e42cd6c8ff2cb4d3f7bc188fb90c1fdbffc389a7b7c
590172825fc5f7c1632f0e00f7f24a69c85e73a086926561cd7597f366b9
c557c28ba97bd9e48588932b584d925e90f75351236f8dee991d8b2912e0
edc0500223be1a5bd4cd44c3c3de75aa12b7e63ed3a399ba00214a66fe95
b5d95b0096ce0321bb87083de3bbc29cfe8ef473870f448ffcd9f71c6888
fa2bf4ba82669c30c14d2655a8b69d82e43f233aafad0cc27d2d> ND 
/I 
<10bf31705600a7ed90307a9003ca62013c6a672423969cbfb09d38b977c3
3bb76a0a443b03ca15feffb7f47ead3efae89c4da09011014b3ef74dfcc4
49aa62038fec2b8087c3eb93eadcca82adeba753d37fb428848495514418
28d8a0f3ad99e43ca7d439d4d98a470d6617f8dd1388> ND 
/J 
<10bf31705245662c028a7d41142a9172cb3f39702bb2297ba0998cbe201f
77e89fe57d5ed956b84574b1620f88a55c2a51aa279e3fc9cf923c80361d
86a3551f2534c353d520d3bc14bc4d344677b575ead159bbdfc8aaeec820
ded505d06fe178d1ea8a0d44df29931f663cf743408db506a44468a17c12
4775c79567328c125a4e927e096a92c7da53c382783cd0826b0553dedd74
> ND 
/P 
<10bf31706ea9c5bc0db16a9d0fb9334b7aae45fa9562423ca0efcafbe577
696190382686f72544b1109cd9a28e6e2fb8c3e703e277558d9de53e9bd4
331eb7411fa27fc9fbf9488ff1a8e626acd2f355101bb86e40f636dd5a74
50c4f3ac4c3fce01d454db469da536ea46528530bc3e44fdc91176a1e591
1b2932205e6c0eac6f4d330f0230a163b5b30ecdc649a4ff6b024a9513ec
d5f934e2e3b5d7f24bd0170221950b8bb0ffa0c50e77c36e34adf2e847c9
adbff54bf77ef65d9afdb3878865> ND 
/S 
<10bf3170383eecc69ba25cd9f9f1a3f877f72d54ca249226fb09a99225d4
fa4a892ae0bf757b41a46aaf766816bb2e9c6c4e867aeb02a76d05e762b6
353837bdf52bbc0c70c14510f08ced31ac95e2c8b5dfdbf8f1dffd4709a0
760737961b7464d75e4dbf7323db187fa23f8213fd84f092b3c292e45093
4a017d49f1fa4f8d834c3fd0c5126c0c5c896c1a48c0653753c6f56c23b6
627010a4379bd3d96b26db0b3531098cdc23704e1f8e25a61651df0d8d02
8f68c8b7a7de4652566ef5c50305a3ec674a5be2d1bf9f76580a00788d85
ad3f4dc24f5adec7880bc3a7db38c71260e951f8778b0aff0ff2e97effe6
f0b2b33485e5f0401138cd3f9e066ed25ff05e7594ebdb0029f3d5> ND 
/T 
<10bf31705b0718f462bb36d02a655e51f04593b972dbe0892a4279b53c95
62dbd237266bc0cb4e5967f6d053e97e3cc8fe6477448edcd2c2ed40f6e6
056ef32aac1986bf84927c9fb1e2806a71f53c8604421852f835782fd7d8
0fdb45127c08fbe24f16e5af9ede981de72f75b4f62ef25f8b6075081fcf
> ND 
/W 
<10bf31706ae2d6d9dcbe8344511f08de4b9db5ac28c5c661efe6fa9e7439
4bc84ffd6c26e5c964d324deb8a2be71c781983509fc7315f13f2f452574
0c432ccfa783a50be1522758812e78dd12223bf37e37be9a2b9de70daa25
87e5ce0c31b1dc8fd1e7856f2a379806580606a20898e7fccb07255b76ec
aa9ee467ae0d074d61c529177c4e36ba95b4a421f36bad34035a2ac2c04f
12a2abb782248776bfa1511003ff806b7b426cc8c17627c2470813ba31ae
1a22b8e70c403eb278204ab3b8eb7faa1ccbb1cca5799cb23970fbbc0204
4ae4346b70147e2d44e9f3315b6168df8cda1ca5> ND 
/a 
<10bf31705d647142d5ee6b7c4c12c41164f05a89990635873917bf00c5a2
b1b299b84b64fad030fdefe54a736fd84981f1bdecf34c327a4087285dd7
ff9a128a9fff4f1e5e34e2c477e4543546f0e505eb84b8e6141c12199331
8a7bef58caa55697aff5d8bf4fe61eb63478ae931b5c51fe7be8aa76cee5
cf639a1d462398300117c6a9c09614a29dfc50b3c7ddbacc1c6e2f7accb0
35d51bb776dfa4f2180b5bfa695d4ee30d466764f5192b628fd7c4971313
cd38d55ff99cfe805727052d975c4756402eb9230dd87b777a603efe9c10
65e950375d54aa41ed1c701bfac764ae78b65834b8918a99ed1f017d5313
eb0950b1f45353f40dc633104ecc941e4bbbf8359d5ae9042ef0f4edfdb8
> ND 
/b 
<10bf31707b35db816a4355a1c9cd0401bf6033c55938246c8b69de26e575
c058903a4e9b57b68075848962a6cd3da069ec2730d8699e3ccf520befe1
1a090d11586ebd56effd705bd3a5ced6c4343ddaabfe70e422082141dc06
c695cc46ee2dde408c0760a4c361b784ab85994758cbad73179f314048f1
c5a0c06c0e0ad84ded3a7904f207403afdd3193bf093fb903dbdef2de225
7307e43f8ee047d711ed22adc155c93b72dbad1a68> ND 
/c 
<10bf31705fc10320935f517e088588bc677b6f6b1116d76a45fb5fc081aa
57ad08a2f19e4ebd5e7f2e40678b64d780ab49e945b6f1fcf8c1bf2edd40
201d9d025abf1aec5b1b3268a3f2a9365f1c6e4133cdb11264503de1434e
2553cdd7a1785e8aefca6abe49ef29279001bfee84321f1c29e0a5b47534
7f9b91833b42fbc209dedbbca6bb8dac3b6f01ececb32ee525fd2275d1f3
f94c46a2dc92d591> ND 
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
/g 
<10bf31705b0767a01e9193e4d997e718ba6351677893b73d138e3fe6ba14
fc659a3bcdee55e0cfe8324eeac72638d3bd305a7a0220257ff3808a1470
04dc5c3c9fcb344358fed8b5ae71f4f49bb62f7c38ae95fdb022e2f50d0f
f7edd042065f7148993d640d50d67f360ac97639f25c381784672dcecf1d
1627665bc46b98264545bb45b967dbd7f6dce2f63c1e6751d9e493efd546
e255705157ddc690cb167218c88d537fe6a759d15d23d8bf19975778954b
513e4f87de1d7e922f34c8ee289c3522056d92971a6692e2b85efc32e805
5f726b3e561153ede1bd48ac9ed5e0024936e813717a672f7da4b25e0f4c
fa800bfb48a1e7e6e175f9ef63c0a88c39518c20ae1f79f29fe16a404d8f
590228fa5880231b26e78848d12ee249c635fcfa1c6175dbe52bf4c85030
42acafcb20327b817e4efb88945955dd6d08889ea1fb3f310e8cb4172190
21cc423288f3c72f1f0ebcd75197d45530bfc75571856796dc6ba51fbdd3
ed9cec0c0d7ad50b11a85f88370b45b4a51e0293d38df958b8> ND 
/h 
<10bf3170638bba13892b6a5edf1363fbad8b95e15d8b1d61c9ff2e20460e
9fbee5ce56a3b804c731461fc79898dd9aa49a7578bd0636027b48157921
a917a207198baeee00a6aeca2924ff3a229448490e59b468fb8b3164c353
d9bc2653f19a1e5c4133f967037a72c7c8fbf885e7d2fe25db116b7c8e10
b3fd50a5bf16ce8ee83140eeca023c94dedee552fcf1a7935a31030ea899
3824e06eab9cf113ffc3161399601c0b8fff6a9768bb0205ffc7ac68a666
f3075641cdac00a867c63305b98c782f2fa25a94358084fd7f1a3e8a9aba
49e32a58f5abe91c09f7098b61c81b8653e474549ba40c7470f7bc> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/k 
<10bf3170612e883674d2675aac39fa142a2f9de407f255952adbf70a8f61
dcc97f11c5b525f88e1dd0499bf87fea87e955adf630d83711a3925899c0
03b9f91dc3443000903cbe22625747190de827d6aed57c3f807366bbd6c6
3854786e273f1b9d2f49315171b285fa450532e1a996be3dfd2aafc74743
b4a57fabf2eddb1c25e9905cc57139486ad514add7eb942d1d1b791b6056
19d6f363ea6b92b2c94caf9a33a7be72eed5a355a7d76c1048097efb20dd
2f6c3a18d26def6109f03e7d30d5356121f15317baa59d193def17f7d470
1728dc814db541582ec9d0f98c682c14> ND 
/l 
<10bf31705b0817c8e08e579d70bd731872938fa19da6249b22a36add018f
2d71afb39a24cba2d5b131292eaf2ea6440cd481b67673b68d5de7db4045
53f0515df79be16519f0349ec3761dc09575b85d12a0ca2ef3e3cac5171f
27c0bb5b6c16bd708dadf6acc7da72304e> ND 
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
/n 
<10bf3170638bba1389001ebc99bd428947467ee318fefc1fb124f3371d83
7e6e4fd04510bb88359fc2d65b2f295b6f18b7850f6ca41f0fd067e40bcc
1e6a5b41ca20f07f1559265c094e47681cd30c939ca836f577db4be36b05
95c3d60cd00f5b5495365e7e02e3400714839e79cc3816e739cdb0ba1b66
3f096ef3ea59642b52897d5ef4b5012d68776aa74244415b9e96a4f773a5
8085f9fe5bb74ace5b6860ca975ea43b7d0db4eefeddd777982336d72d05
c093ca194b7cd3478661a723994ed178a305b939140b4ac4b7ef4bb11e73
> ND 
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/q 
<10bf31705e925b80bb44afdd80449a9019004483157f7a206da365a5b3f7
8e817f7d85ccb98decc0413cb1aad3badad1cc03a563c391c8aa6068d7e3
0e7f25d81543c3055a792149dafa6b421b59bb9a7c586f00d982f84e34a8
6eb81a6d2e5d0469a0475534487ff8a1de86976d09002e57cf1b9a5b9651
783da658816ced2d26e352c444560625e85828b2e4e4558755e30d1a05aa
ed4f42608d7e2eeedb01e0259b91825941bd1b5a38ce6f06522b93ba8b0d
c3140f68c73955f4b4bd495b40f7a8977e75e8b1c2519046a0f0449793> ND 
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
/u 
<10bf31707ec0b061a3e31ce6a8e02f67c79fc6fb9433b583752df0b97381
ced785f0788651d9110f4d168d6f4fb870b9f8634f66a1fe17ef5bb051c8
5b17a112a0ece57f7e85709c1e46ba1a1de6ef26a274c75bdde36925dd09
efae6e5faacef2f29e68904c9555df5e0f6550945360d079ca305237daa8
7397519a4b0aef19668718de15c20ef2e07af7217dbd27700833b73e8190
1c7d2aacb619fbf2f1396d79a94fea4ca18c65bd942fda84> ND 
/v 
<10bf3170612e88360faf380e328fa052d16002b3a6eb4d26fc61a8261d88
5d55beefaa23f749e4680928d2ec50b44ff8d74a2a42a0e615124d351c37
a9b6b3979ac1eedcff65bc4e156ed5711cac4c00ba96902c9956d3adb8e9
345080689b72e5082717e79b08e915301d3c209a4fac7e8f857cfb983000
d031a94c1a8ab5b2b0900013f2ae> ND 
/w 
<10bf3170638a0228cdcc4cd6455c35265f3b472ea1e128291ab8c91c671e
7bd658e474e8a0535d503ea2a6704bc9226df8b7fd4286af923f66233992
4a9bd89766cd1ad48ee99eac3f679bc5f41535050fefd334434033683a0c
453c86e866b1ef55892a380c8fcdccf1c4eac1b6e4f71a2a006a7f483456
13b3a00d36c64291144c8cc1dac83b7c06950c85f226495588d8cb0539f8
dacf025ed3c1593eb5f55ae6c66c3ae3939545fa200eff0116> ND 
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
/ellipsis 
<10bf317005a3205c8c1ade8b08220239c090e4bcc9980e1cca609a2d4d10
d9ac81cf840ef58d470313f2aa080d2edd9fcba3916373473b3af2ee5c86
d03e77ac42465a929f227203e9947419868ef6872ae4cf8eebf4d8959f6c
7a0d73c65112c717159e6b1143a38d56f38c0bfb6641b059c420c669b174
283ad5674adb76e78a4c9174f94c3257ef08af279dc17b93c98677c3acdb
61453c7ad9365f3a5a793919a4c97a3726887fe01492b780bd16b89f5a85
0d94b0a447171065596e> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/DCECFF+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N59/DCECFF+TimesNewRoman 1 TZ
q
n
36 756 540 -720 re
eoclip
n
false setSA
n
36 756 540 -720 re
1 1 1 setrgbcolor
f
Q
false setSA
n
350.88 583.5 m
359.16 583.5 365.88 590.22 365.88 598.5 c
365.88 606.78 359.16 613.5 350.88 613.5 c
342.6 613.5 335.88 606.78 335.88 598.5 c
335.88 590.22 342.6 583.5 350.88 583.5 c
1 1 1 setrgbcolor
eofill
1 J
1 j
0.75 w
10 M
[] 0 d
n
350.88 583.5 m
359.16 583.5 365.88 590.22 365.88 598.5 c
365.88 606.78 359.16 613.5 350.88 613.5 c
342.6 613.5 335.88 606.78 335.88 598.5 c
335.88 590.22 342.6 583.5 350.88 583.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
358.62 601.89 m
/N22 -15.99 Tf
(v) show
351.51 605.88 m
/N59 -11.01 Tf
(14)
[-5.52045 -5.52045 ] pdfxs
n
231 121.5 m
239.28 121.5 246 128.22 246 136.5 c
246 144.78 239.28 151.5 231 151.5 c
222.72 151.5 216 144.78 216 136.5 c
216 128.22 222.72 121.5 231 121.5 c
1 1 1  setrgbcolor
eofill
n
231 121.5 m
239.28 121.5 246 128.22 246 136.5 c
246 144.78 239.28 151.5 231 151.5 c
222.72 151.5 216 144.78 216 136.5 c
216 128.22 222.72 121.5 231 121.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
236.01 139.89 m
/N22 -15.99 Tf
(v) show
228.9 143.88 m
/N59 -11.01 Tf
(1) show
n
231 163.5 m
239.28 163.5 246 170.22 246 178.5 c
246 186.78 239.28 193.5 231 193.5 c
222.72 193.5 216 186.78 216 178.5 c
216 170.22 222.72 163.5 231 163.5 c
1 1 1  setrgbcolor
eofill
n
231 163.5 m
239.28 163.5 246 170.22 246 178.5 c
246 186.78 239.28 193.5 231 193.5 c
222.72 193.5 216 186.78 216 178.5 c
216 170.22 222.72 163.5 231 163.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
235.89 181.89 m
/N22 -15.99 Tf
(v) show
228.78 185.88 m
/N59 -11.01 Tf
(2) show
n
351 205.5 m
359.28 205.5 366 212.22 366 220.5 c
366 228.78 359.28 235.5 351 235.5 c
342.72 235.5 336 228.78 336 220.5 c
336 212.22 342.72 205.5 351 205.5 c
1 1 1  setrgbcolor
eofill
n
351 205.5 m
359.28 205.5 366 212.22 366 220.5 c
366 228.78 359.28 235.5 351 235.5 c
342.72 235.5 336 228.78 336 220.5 c
336 212.22 342.72 205.5 351 205.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
356.01 223.89 m
/N22 -15.99 Tf
(v) show
348.9 227.88 m
/N59 -11.01 Tf
(3) show
n
230.88 205.5 m
239.16 205.5 245.88 212.22 245.88 220.5 c
245.88 228.78 239.16 235.5 230.88 235.5 c
222.6 235.5 215.88 228.78 215.88 220.5 c
215.88 212.22 222.6 205.5 230.88 205.5 c
1 1 1  setrgbcolor
eofill
n
230.88 205.5 m
239.16 205.5 245.88 212.22 245.88 220.5 c
245.88 228.78 239.16 235.5 230.88 235.5 c
222.6 235.5 215.88 228.78 215.88 220.5 c
215.88 212.22 222.6 205.5 230.88 205.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
238.5 223.89 m
/N22 -15.99 Tf
(v) show
231.39 227.88 m
/N59 -11.01 Tf
(15)
[-5.52045 -5.52045 ] pdfxs
n
351 247.5 m
359.28 247.5 366 254.22 366 262.5 c
366 270.78 359.28 277.5 351 277.5 c
342.72 277.5 336 270.78 336 262.5 c
336 254.22 342.72 247.5 351 247.5 c
1 1 1  setrgbcolor
eofill
n
351 247.5 m
359.28 247.5 366 254.22 366 262.5 c
366 270.78 359.28 277.5 351 277.5 c
342.72 277.5 336 270.78 336 262.5 c
336 254.22 342.72 247.5 351 247.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
355.89 265.89 m
/N22 -15.99 Tf
(v) show
348.78 269.88 m
/N59 -11.01 Tf
(6) show
n
411 247.5 m
419.28 247.5 426 254.22 426 262.5 c
426 270.78 419.28 277.5 411 277.5 c
402.72 277.5 396 270.78 396 262.5 c
396 254.22 402.72 247.5 411 247.5 c
1 1 1  setrgbcolor
eofill
n
411 247.5 m
419.28 247.5 426 254.22 426 262.5 c
426 270.78 419.28 277.5 411 277.5 c
402.72 277.5 396 270.78 396 262.5 c
396 254.22 402.72 247.5 411 247.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
415.89 265.89 m
/N22 -15.99 Tf
(v) show
408.78 269.88 m
/N59 -11.01 Tf
(4) show
n
230.88 248.25 m
239.16 248.25 245.88 254.97 245.88 263.25 c
245.88 271.53 239.16 278.25 230.88 278.25 c
222.6 278.25 215.88 271.53 215.88 263.25 c
215.88 254.97 222.6 248.25 230.88 248.25 c
1 1 1  setrgbcolor
eofill
n
230.88 248.25 m
239.16 248.25 245.88 254.97 245.88 263.25 c
245.88 271.53 239.16 278.25 230.88 278.25 c
222.6 278.25 215.88 271.53 215.88 263.25 c
215.88 254.97 222.6 248.25 230.88 248.25 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
238.5 266.64 m
/N22 -15.99 Tf
(v) show
231.39 270.63 m
/N59 -11.01 Tf
(16)
[-5.52045 -5.52045 ] pdfxs
n
170.88 290.25 m
179.16 290.25 185.88 296.97 185.88 305.25 c
185.88 313.53 179.16 320.25 170.88 320.25 c
162.6 320.25 155.88 313.53 155.88 305.25 c
155.88 296.97 162.6 290.25 170.88 290.25 c
1 1 1  setrgbcolor
eofill
n
170.88 290.25 m
179.16 290.25 185.88 296.97 185.88 305.25 c
185.88 313.53 179.16 320.25 170.88 320.25 c
162.6 320.25 155.88 313.53 155.88 305.25 c
155.88 296.97 162.6 290.25 170.88 290.25 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
178.5 308.64 m
/N22 -15.99 Tf
(v) show
171.39 312.63 m
/N59 -11.01 Tf
(17)
[-5.52045 -5.52045 ] pdfxs
n
230.88 625.5 m
239.16 625.5 245.88 632.22 245.88 640.5 c
245.88 648.78 239.16 655.5 230.88 655.5 c
222.6 655.5 215.88 648.78 215.88 640.5 c
215.88 632.22 222.6 625.5 230.88 625.5 c
1 1 1  setrgbcolor
eofill
n
230.88 625.5 m
239.16 625.5 245.88 632.22 245.88 640.5 c
245.88 648.78 239.16 655.5 230.88 655.5 c
222.6 655.5 215.88 648.78 215.88 640.5 c
215.88 632.22 222.6 625.5 230.88 625.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
238.5 643.89 m
/N22 -15.99 Tf
(v) show
231.39 647.88 m
/N59 -11.01 Tf
(19)
[-5.52045 -5.52045 ] pdfxs
n
291 288.75 m
299.28 288.75 306 295.47 306 303.75 c
306 312.03 299.28 318.75 291 318.75 c
282.72 318.75 276 312.03 276 303.75 c
276 295.47 282.72 288.75 291 288.75 c
1 1 1  setrgbcolor
eofill
n
291 288.75 m
299.28 288.75 306 295.47 306 303.75 c
306 312.03 299.28 318.75 291 318.75 c
282.72 318.75 276 312.03 276 303.75 c
276 295.47 282.72 288.75 291 288.75 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
295.89 307.14 m
/N22 -15.99 Tf
(v) show
288.78 311.13 m
/N59 -11.01 Tf
(7) show
n
351 373.5 m
359.28 373.5 366 380.22 366 388.5 c
366 396.78 359.28 403.5 351 403.5 c
342.72 403.5 336 396.78 336 388.5 c
336 380.22 342.72 373.5 351 373.5 c
1 1 1  setrgbcolor
eofill
n
351 373.5 m
359.28 373.5 366 380.22 366 388.5 c
366 396.78 359.28 403.5 351 403.5 c
342.72 403.5 336 396.78 336 388.5 c
336 380.22 342.72 373.5 351 373.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
355.89 391.89 m
/N22 -15.99 Tf
(v) show
348.78 395.88 m
/N59 -11.01 Tf
(9) show
n
411 289.5 m
419.28 289.5 426 296.22 426 304.5 c
426 312.78 419.28 319.5 411 319.5 c
402.72 319.5 396 312.78 396 304.5 c
396 296.22 402.72 289.5 411 289.5 c
1 1 1  setrgbcolor
eofill
n
411 289.5 m
419.28 289.5 426 296.22 426 304.5 c
426 312.78 419.28 319.5 411 319.5 c
402.72 319.5 396 312.78 396 304.5 c
396 296.22 402.72 289.5 411 289.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
415.89 307.89 m
/N22 -15.99 Tf
(v) show
408.78 311.88 m
/N59 -11.01 Tf
(5) show
n
291 331.5 m
299.28 331.5 306 338.22 306 346.5 c
306 354.78 299.28 361.5 291 361.5 c
282.72 361.5 276 354.78 276 346.5 c
276 338.22 282.72 331.5 291 331.5 c
1 1 1  setrgbcolor
eofill
n
291 331.5 m
299.28 331.5 306 338.22 306 346.5 c
306 354.78 299.28 361.5 291 361.5 c
282.72 361.5 276 354.78 276 346.5 c
276 338.22 282.72 331.5 291 331.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
295.89 349.89 m
/N22 -15.99 Tf
(v) show
288.78 353.88 m
/N59 -11.01 Tf
(8) show
n
350.88 415.5 m
359.16 415.5 365.88 422.22 365.88 430.5 c
365.88 438.78 359.16 445.5 350.88 445.5 c
342.6 445.5 335.88 438.78 335.88 430.5 c
335.88 422.22 342.6 415.5 350.88 415.5 c
1 1 1  setrgbcolor
eofill
n
350.88 415.5 m
359.16 415.5 365.88 422.22 365.88 430.5 c
365.88 438.78 359.16 445.5 350.88 445.5 c
342.6 445.5 335.88 438.78 335.88 430.5 c
335.88 422.22 342.6 415.5 350.88 415.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
358.5 433.89 m
/N22 -15.99 Tf
(v) show
351.39 437.88 m
/N59 -11.01 Tf
(10)
[-5.52045 -5.52045 ] pdfxs
n
410.88 457.5 m
419.16 457.5 425.88 464.22 425.88 472.5 c
425.88 480.78 419.16 487.5 410.88 487.5 c
402.6 487.5 395.88 480.78 395.88 472.5 c
395.88 464.22 402.6 457.5 410.88 457.5 c
1 1 1  setrgbcolor
eofill
n
410.88 457.5 m
419.16 457.5 425.88 464.22 425.88 472.5 c
425.88 480.78 419.16 487.5 410.88 487.5 c
402.6 487.5 395.88 480.78 395.88 472.5 c
395.88 464.22 402.6 457.5 410.88 457.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
418.5 475.89 m
/N22 -15.99 Tf
(v) show
411.39 479.88 m
/N59 -11.01 Tf
(11)
[-5.52045 -5.52045 ] pdfxs
n
410.88 499.5 m
419.16 499.5 425.88 506.22 425.88 514.5 c
425.88 522.78 419.16 529.5 410.88 529.5 c
402.6 529.5 395.88 522.78 395.88 514.5 c
395.88 506.22 402.6 499.5 410.88 499.5 c
1 1 1  setrgbcolor
eofill
n
410.88 499.5 m
419.16 499.5 425.88 506.22 425.88 514.5 c
425.88 522.78 419.16 529.5 410.88 529.5 c
402.6 529.5 395.88 522.78 395.88 514.5 c
395.88 506.22 402.6 499.5 410.88 499.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
418.5 517.89 m
/N22 -15.99 Tf
(v) show
411.39 521.88 m
/N59 -11.01 Tf
(12)
[-5.52045 -5.52045 ] pdfxs
n
410.88 541.5 m
419.16 541.5 425.88 548.22 425.88 556.5 c
425.88 564.78 419.16 571.5 410.88 571.5 c
402.6 571.5 395.88 564.78 395.88 556.5 c
395.88 548.22 402.6 541.5 410.88 541.5 c
1 1 1  setrgbcolor
eofill
n
410.88 541.5 m
419.16 541.5 425.88 548.22 425.88 556.5 c
425.88 564.78 419.16 571.5 410.88 571.5 c
402.6 571.5 395.88 564.78 395.88 556.5 c
395.88 548.22 402.6 541.5 410.88 541.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
418.62 559.89 m
/N22 -15.99 Tf
(v) show
411.51 563.88 m
/N59 -11.01 Tf
(13)
[-5.52045 -5.52045 ] pdfxs
n
170.76 331.5 m
179.04 331.5 185.76 338.22 185.76 346.5 c
185.76 354.78 179.04 361.5 170.76 361.5 c
162.45 361.5 155.76 354.78 155.76 346.5 c
155.76 338.22 162.45 331.5 170.76 331.5 c
1 1 1  setrgbcolor
eofill
n
170.76 331.5 m
179.04 331.5 185.76 338.22 185.76 346.5 c
185.76 354.78 179.04 361.5 170.76 361.5 c
162.45 361.5 155.76 354.78 155.76 346.5 c
155.76 338.22 162.45 331.5 170.76 331.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
178.38 349.89 m
/N22 -15.99 Tf
(v) show
171.27 353.88 m
/N59 -11.01 Tf
(18)
[-5.52045 -5.52045 ] pdfxs
n
230.88 667.5 m
239.16 667.5 245.88 674.22 245.88 682.5 c
245.88 690.78 239.16 697.5 230.88 697.5 c
222.6 697.5 215.88 690.78 215.88 682.5 c
215.88 674.22 222.6 667.5 230.88 667.5 c
1 1 1  setrgbcolor
eofill
n
230.88 667.5 m
239.16 667.5 245.88 674.22 245.88 682.5 c
245.88 690.78 239.16 697.5 230.88 697.5 c
222.6 697.5 215.88 690.78 215.88 682.5 c
215.88 674.22 222.6 667.5 230.88 667.5 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
238.5 685.89 m
/N22 -15.99 Tf
(v) show
231.39 689.88 m
/N59 -11.01 Tf
(20)
[-5.52045 -5.52045 ] pdfxs
n
230.01 158.49 1.98 -6.99001 re
228 157.5 m
231 163.5 l
234 157.5 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
245.55 179.46 m
335.19 209.25 l
335.82 207.36 l
246.18 177.54 l
h
333.6 210.84 m
340.26 209.88 l
335.49 205.14 l
f
n
361.44 231.45 m
395.79 249.84 l
395.97 249.93 396.21 249.87 396.3 249.69 c
396.39 249.51 396.33 249.27 396.15 249.18 c
361.8 230.79 l
361.62 230.7 361.38 230.76 361.29 230.94 c
361.2 231.12 361.26 231.36 361.44 231.45 c
h
393.66 251.7 m
400.38 251.88 l
396.51 246.39 l
f
n
350.01 242.49 1.97998 -6.99001 re
348 241.5 m
351 247.5 l
354 241.5 l
f
n
410.61 277.5 m
410.61 284.49 l
410.61 284.7 410.79 284.88 411 284.88 c
411.21 284.88 411.36 284.7 411.36 284.49 c
411.36 277.5 l
411.36 277.29 411.21 277.11 411 277.11 c
410.79 277.11 410.61 277.29 410.61 277.5 c
h
408 283.5 m
411 289.5 l
414 283.5 l
f
n
339.93 272.25 m
305.61 289.95 l
306.54 291.72 l
340.83 274.02 l
h
305.58 287.7 m
301.62 293.13 l
308.34 293.04 l
f
n
290.01 326.49 1.97998 -7.73999 re
288 325.5 m
291 331.5 l
294 325.5 l
f
n
409.86 494.49 2.01001 -6.98999 re
407.88 493.5 m
410.88 499.5 l
413.88 493.5 l
f
n
409.86 536.49 2.01001 -6.98999 re
407.88 535.5 m
410.88 541.5 l
413.88 535.5 l
f
n
399.78 566.25 m
365.43 584.64 l
366.39 586.41 l
400.71 568.02 l
h
365.37 582.39 m
361.5 587.88 l
368.19 587.7 l
f
n
335.43 597.54 m
245.79 627.36 l
246.42 629.25 l
336.06 599.46 l
h
246.12 625.14 m
241.38 629.88 l
248.01 630.84 l
f
n
230.49 235.5 m
230.49 243.24 l
230.49 243.45 230.67 243.63 230.88 243.63 c
231.09 243.63 231.24 243.45 231.24 243.24 c
231.24 235.5 l
231.24 235.29 231.09 235.11 230.88 235.11 c
230.67 235.11 230.49 235.29 230.49 235.5 c
h
227.88 242.25 m
230.88 248.25 l
233.88 242.25 l
f
n
220.08 273.54 m
185.73 291.93 l
185.55 292.02 185.49 292.26 185.58 292.44 c
185.67 292.62 185.91 292.68 186.09 292.59 c
220.44 274.2 l
220.62 274.11 220.68 273.87 220.59 273.69 c
220.47 273.51 220.26 273.45 220.08 273.54 c
h
185.37 289.14 m
181.5 294.63 l
188.19 294.45 l
f
n
170.37 320.25 m
170.31 326.49 l
170.31 326.7 170.46 326.88 170.67 326.88 c
170.88 326.88 171.06 326.7 171.06 326.49 c
171.12 320.25 l
171.12 320.04 170.97 319.89 170.76 319.86 c
170.55 319.86 170.37 320.04 170.37 320.25 c
h
167.7 325.47 m
170.61 331.5 l
173.7 325.53 l
f
n
170.25 361.56 m
214.68 677.61 l
214.71 677.82 214.89 677.94 215.1 677.91 c
215.31 677.88 215.46 677.7 215.43 677.49 c
171 361.44 l
170.97 361.23 170.79 361.11 170.58 361.14 c
170.37 361.17 170.22 361.35 170.25 361.56 c
h
211.95 676.98 m
215.76 682.5 l
217.89 676.14 l
f
n
229.86 662.49 2.00999 -6.98999 re
227.88 661.5 m
230.88 667.5 l
233.88 661.5 l
f
n
301.14 358.02 m
335.49 376.41 l
336.45 374.64 l
302.1 356.25 l
h
333.66 377.7 m
340.38 377.88 l
336.51 372.39 l
f
n
400.05 314.94 m
363.93 373.41 l
363.81 373.59 363.87 373.83 364.05 373.95 c
364.23 374.04 364.47 373.98 364.56 373.83 c
400.68 315.33 l
400.8 315.15 400.74 314.91 400.56 314.82 c
400.38 314.7 400.17 314.76 400.05 314.94 c
h
362.22 371.19 m
361.62 377.88 l
367.32 374.34 l
f
n
350.61 277.5 m
350.61 368.49 l
350.61 368.7 350.79 368.88 351 368.88 c
351.21 368.88 351.36 368.7 351.36 368.49 c
351.36 277.5 l
351.36 277.29 351.21 277.11 351 277.11 c
350.79 277.11 350.61 277.29 350.61 277.5 c
h
348 367.5 m
351 373.5 l
354 367.5 l
f
n
349.86 403.5 m
349.8 410.49 l
351.81 410.52 l
351.87 403.5 l
h
347.82 409.47 m
350.76 415.5 l
353.82 409.53 l
f
n
361.02 442.02 m
395.37 460.41 l
396.3 458.64 l
361.98 440.25 l
h
393.54 461.7 m
400.26 461.88 l
396.39 456.39 l
f
[2.25 3 ] 0 d
n
102 139.5 m
102 126.24 147.21 115.5 202.98 115.5 c
409.02 115.5 l
464.79 115.5 510 126.24 510 139.5 c
102 179.25 m
102 165.99 147.21 155.25 202.98 155.25 c
409.02 155.25 l
464.79 155.25 510 165.99 510 179.25 c
102 222 m
102 208.74 147.21 198 202.98 198 c
409.02 198 l
464.79 198 510 208.74 510 222 c
S
0 0 0  setrgbcolor
488.1 111.12 m
/N22 -18 Tf
(G) show
475.11 116.13 m
/N59 -12 Tf
(0) show
488.25 150.39 m
/N22 -18 Tf
(G) show
475.26 155.4 m
/N59 -12 Tf
(1) show
488.22 192.75 m
/N22 -18 Tf
(G) show
475.23 197.76 m
/N59 -12 Tf
(2) show
479.73 225.75 m
/N59 [0 24 -24 0 0 0] Tf
(\205) show
n
230.49 193.5 m
230.43 200.49 l
230.43 200.7 230.58 200.88 230.79 200.88 c
231 200.88 231.18 200.7 231.18 200.49 c
231.24 193.5 l
231.24 193.29 231.09 193.14 230.88 193.11 c
230.67 193.11 230.49 193.29 230.49 193.5 c
h
227.82 199.47 m
230.76 205.5 l
233.82 199.53 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
350.49 445.5 m
350.49 578.49 l
350.49 578.7 350.67 578.88 350.88 578.88 c
351.09 578.88 351.24 578.7 351.24 578.49 c
351.24 445.5 l
351.24 445.29 351.09 445.11 350.88 445.11 c
350.67 445.11 350.49 445.29 350.49 445.5 c
h
347.88 577.5 m
350.88 583.5 l
353.88 577.5 l
f
n
230.49 278.25 m
230.49 620.49 l
230.49 620.7 230.67 620.88 230.88 620.88 c
231.09 620.88 231.24 620.7 231.24 620.49 c
231.24 278.25 l
231.24 278.04 231.09 277.86 230.88 277.86 c
230.67 277.86 230.49 278.04 230.49 278.25 c
h
227.88 619.5 m
230.88 625.5 l
233.88 619.5 l
f
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 44280 a Fn(Figure)586 b(3-2:)747 b
Fm(The)509 b(dag)g(corresp)34 b(onding)509 b(to)g(the)g(computation)i
(in)e(Figure)f(3-1,)535 b(with)509 b(the)g(critical)2000
45785 y(path)392 b(sho)-34 b(wn)393 b(in)e(b)34 b(old.)534
b(The)391 b(progression)g Ff(h)p Fl(G)23313 45967 y Ft(0)23840
45785 y Fl(;)202 b(G)25332 45967 y Ft(1)25857 45785 y
Fl(;)g(:)g(:)g(:)f(;)h(G)29504 45973 y Fr(T)30238 45785
y Ff(i)391 b Fm(sho)-34 b(ws)392 b(the)f(subgraph)i(remaining)e(after)
2000 47290 y(eac)-34 b(h)404 b(incomplete)g(step)h(of)f(a)g(greedy)g
(sc)-34 b(hedule.)2000 52561 y Fy(that)433 b(an)h(adaptiv)-36
b(e)434 b(greedy)f(sc)-36 b(hedule)433 b(yields)h(the)g(follo)-36
b(wing)435 b(execution)f(time:)14500 56065 y Fu(T)1288
b Fs(\267)18823 55166 y Fu(T)19585 55365 y Ft(1)p 18823
55760 1289 54 v 18958 56025 1020 54 v 18958 57092 a Fu(P)20540
56065 y Fy(+)294 b Fu(T)22608 56264 y Fq(1)16550 59461
y Fs(\267)1108 b Fy(max)21333 57588 y Fk(\265)22443 58563
y Fu(T)23205 58762 y Ft(1)p 22443 59156 1289 54 v 22578
59421 1020 54 v 22578 60488 a Fu(P)23864 59461 y(;)221
b(T)25208 59660 y Fq(1)26206 57588 y Fk(\266)27479 59461
y Fy(+)294 b(max)31427 57588 y Fk(\265)32538 58563 y
Fu(T)33300 58762 y Ft(1)p 32538 59156 1289 54 v 32673
59421 1020 54 v 32673 60488 a Fu(P)33959 59461 y(;)221
b(T)35303 59660 y Fq(1)36300 57588 y Fk(\266)16550 63092
y Fs(\267)1108 b Fy(2)221 b(max)22204 61219 y Fk(\265)23315
62193 y Fu(T)24077 62392 y Ft(1)p 23315 62787 1289 54
v 23450 63052 1020 54 v 23450 64119 a Fu(P)24736 63092
y(;)g(T)26080 63291 y Fq(1)27077 61219 y Fk(\266)47326
63092 y Fy(\(3.3\))3951 66776 y(Th)-36 b(us,)433 b(an)h(adaptiv)-36
b(e)434 b(greedy)g(sc)-36 b(hedule)432 b(is)i(alw)-36
b(a)g(ys)435 b(within)f(a)g(factor)g(of)g(2)g(of)h(optimal.)p
49044 65864 957 45 v 49044 66732 45 868 v 49956 66732
V 49044 66776 957 45 v 2000 70395 a Fv(Corollary)500
b(5)650 b Fg(If)p 11355 69328 1020 54 v 420 w Fu(P)602
b Fg(is)421 b(much)g(less)g(than)g(the)f(aver)-66 b(age)420
b(p)-66 b(ar)g(al)66 b(lelism)421 b Fu(T)36894 70594
y Ft(1)37420 70395 y Fu(=T)38832 70594 y Fq(1)39829 70395
y Fg(,)429 b(then)420 b(an)h(adaptive)2000 72000 y(gr)-66
b(e)g(e)g(dy)463 b(sche)-66 b(dule)465 b(achieves)f(almost)h(p)-66
b(erfe)g(ct)463 b(line)-66 b(ar)464 b(sp)-66 b(e)g(e)g(dup.)25350
75321 y Fy(24)p eop end
%%Page: 25 25
TeXDict begin 25 24 bop 2000 1328 a Fg(Pr)-66 b(o)g(of.)2366
b Fy(If)p 9252 261 1020 54 v 597 w Fu(P)827 b Fs(\277)646
b Fu(T)13653 1527 y Ft(1)14179 1328 y Fu(=T)15591 1527
y Fq(1)16588 1328 y Fy(,)638 b(then)595 b(it)i(follo)-36
b(ws)598 b(that)e Fu(T)30352 1527 y Fq(1)31994 1328 y
Fs(\277)647 b Fu(T)34731 1527 y Ft(1)35257 1328 y Fu(=)p
35907 261 V(P)181 b Fy(.)1067 b(Th)-36 b(us,)637 b(the)596
b(execution)2000 2933 y(time)482 b(of)h(an)e(adaptiv)-36
b(e)482 b(greedy)h(sc)-36 b(hedule)481 b(from)h(Theorem)g(3)g(reduces)f
(to)h Fu(T)632 b Fs(\267)452 b Fu(T)42894 3132 y Ft(1)43420
2933 y Fu(=)p 44070 1866 V(P)509 b Fy(+)328 b Fu(T)47519
3132 y Fq(1)48967 2933 y Fs(\273)2000 4539 y Fu(T)2762
4738 y Ft(1)3288 4539 y Fu(=)p 3938 3471 V(P)181 b Fy(.)623
b(Since)448 b(the)g(constan)-36 b(t)448 b(in)g(fron)-36
b(t)448 b(of)h Fu(T)23852 4738 y Ft(1)24378 4539 y Fu(=)p
25028 3471 V(P)630 b Fy(is)448 b(close)h(to)g(1,)j(the)c(resulting)g
(execution)h(time)2000 6144 y(demonstrates)433 b(almost)h(p)36
b(erfect)434 b(linear)g(sp)36 b(eedup.)p 49044 5232 957
45 v 49044 6099 45 868 v 49956 6099 V 49044 6143 957
45 v 3951 8081 a(The)467 b(argumen)-36 b(t)467 b(that)f(main)-36
b(tains)467 b(Theorem)h(3)f(and)g(Corollaries)i(4)e(and)g(5)h(when)e(m)
-36 b(ultiple)2000 9686 y(adaptiv)g(ely)556 b(parallel)g(jobs)g(are)f
(running)f(in)h(the)g(system)g(is)h(iden)-36 b(tical)555
b(to)h(the)e(argumen)-36 b(t)555 b(w)-36 b(e)2000 11291
y(pro)g(vide)416 b(in)f(Section)g(3.1.)574 b(In)415 b(particular,)420
b(since)415 b(w)-36 b(e)416 b(treat)f(OS)g(as)h(an)g(adv)-36
b(ersary)416 b(and)f(place)h(no)2000 12896 y(constrain)-36
b(ts)395 b(on)h(the)f(pro)36 b(cessor)396 b(allo)36 b(cation)398
b(p)36 b(olicy)397 b(it)f(uses,)403 b(eac)-36 b(h)396
b(JS)f(can)h(op)36 b(erate)396 b(obliviously)2000 14501
y(to)437 b(the)f(other)h(JS's)g(b)-36 b(y)437 b(simply)g(regarding)g
(them)f(as)h(part)g(of)h(OS.)e(In)h(other)f(w)-36 b(ords,)438
b(a)f(JS)g(do)36 b(es)2000 16106 y(not)494 b(need)g(to)g(kno)-36
b(w)495 b(ho)-36 b(w)494 b(the)g(allo)36 b(cations)496
b(of)f(its)f(job)h(are)f(determined|including)f(whether)2000
17711 y(or)434 b(not)f(they)g(are)h(a\256ected)f(b)-36
b(y)434 b(the)f(presence)g(of)h(other)f(jobs|for)i(Theorem)e(3)h(to)g
(hold.)25350 75321 y(25)p eop end
%%Page: 26 26
TeXDict begin 26 25 bop 25350 75321 a Fy(26)p eop end
%%Page: 27 27
TeXDict begin 27 26 bop 2000 10261 a Fw(Chapter)1033
b(4)2000 15872 y(A)g(Randomized)g(W)-258 b(ork-Stealing)2000
19193 y(Algorithm)1033 b(for)2000 22514 y(Adaptiv)-86
b(ely)1033 b(P)-86 b(arallel)1032 b(Jobs)2000 28624 y
Fy(In)526 b(Chapter)g(3,)549 b(w)-36 b(e)527 b(dev)-36
b(elop)36 b(ed)526 b(an)g(adv)-36 b(ersarial)527 b(mo)36
b(del)527 b(for)f(analyzing)i(the)d(p)36 b(erformance)526
b(of)2000 30229 y(t)-36 b(w)g(o-lev)g(el)339 b(sc)-36
b(hedulers)338 b(for)h(adaptiv)-36 b(ely)339 b(parallel)h(jobs,)358
b(where)338 b(the)g(op)36 b(erating)339 b(system)f(\(OS\))f(and)2000
31834 y(job)402 b(sc)-36 b(heduler)401 b(\(JS\))g(pla)-36
b(y)403 b(the)e(roles)i(of)f(the)g(\257rst)f(and)g(second-lev)-36
b(el)402 b(sc)-36 b(hedulers,)408 b(resp)36 b(ectiv)-36
b(ely)-108 b(.)2000 33439 y(W)g(e)441 b(sho)-36 b(w)g(ed)441
b(that)g(if)h(JS)f(uses)h(a)f(greedy)h(algorithm)g(to)f(sc)-36
b(hedule)441 b(a)h(job's)g(computation,)h(then)2000 35044
y(the)e(execution)i(time)f(of)h(the)e(job)h(is)h(within)f(a)g(constan)
-36 b(t)441 b(factor)i(of)g(optimal.)604 b(In)442 b(this)g(c)-36
b(hapter,)2000 36649 y(w)g(e)381 b(presen)-36 b(t)380
b(another)h(algorithm)g(for)h(JS,)f(called)g(algorithm)h(WSAP)-108
b(,)381 b(whic)-36 b(h)381 b(uses)f(randomized)2000 38254
y(w)-36 b(ork)526 b(stealing)g(to)f(sc)-36 b(hedule)525
b(the)f(computation)h(of)h(an)f(adaptiv)-36 b(ely)526
b(parallel)g(job.)854 b(WSAP)525 b(is)2000 39860 y(an)410
b(extension)g(of)g(algorithm)h(WS)f(from)g([7])g(that)g(w)-36
b(orks)410 b(with)g(dynamic)g(pro)36 b(cessor-allo)g(cation)2000
41465 y(p)g(olicies.)775 b(W)-108 b(e)499 b(b)36 b(egin)498
b(with)h(a)g(description)f(of)i(WSAP)e(in)h(the)f(adv)-36
b(ersarial)500 b(mo)36 b(del,)516 b(and)498 b(then)2000
43070 y(discuss)613 b(the)g(p)36 b(olicy)615 b(issues)f(surrounding)e
(its)i(use)f(in)g(practice.)1119 b(W)-108 b(e)614 b(forego)h(a)e
(theoretical)2000 44675 y(analysis)528 b(of)f(WSAP)f(in)h(fa)-36
b(v)g(or)527 b(of)g(in)-36 b(v)g(estigating)528 b(its)f(p)36
b(erformance)526 b(practically)i(through)e(the)2000 46280
y(Cilk-AP)435 b(system)e(\(Chapters)g(6)h(and)f(7\).)2000
51191 y FC(4.1)2152 b(Algorithm)716 b(WSAP)h(in)f(the)h(Adv)-60
b(ersarial)716 b(Mo)60 b(del)2000 54267 y Fy(In)544 b(this)g(section,)
572 b(w)-36 b(e)545 b(outline)f(algorithm)h(WSAP)-108
b(,)544 b(whic)-36 b(h)544 b(extends)g(algorithm)h(WS)f(to)g(han-)2000
55872 y(dle)567 b(the)g(case)h(where)f(a)h(job's)g(pro)36
b(cessor)568 b(allo)36 b(cation)569 b(c)-36 b(hanges)567
b(during)g(its)g(execution.)981 b(Lik)-36 b(e)2000 57477
y(WS,)605 b(WSAP)f(is)h(an)f(online,)648 b(randomized)604
b(w)-36 b(ork-stealing)606 b(algorithm)f(for)g(sc)-36
b(heduling)604 b(fully)2000 59082 y(strict)466 b(m)-36
b(ultithreaded)464 b(computations;)482 b(unlik)-36 b(e)466
b(WS,)g(WSAP)g(generates)g(an)g(adaptiv)-36 b(e)466 b(execu-)2000
60688 y(tion)429 b(sc)-36 b(hedule)428 b(that)g(conforms)h(to)g(c)-36
b(hanging)429 b(pro)36 b(cessor)429 b(allo)36 b(cations)431
b(pro)-36 b(vided)428 b(b)-36 b(y)429 b(OS.)f(Since)2000
62293 y(WSAP)596 b(is)g(an)h(extension)f(of)h(WS,)f(w)-36
b(e)597 b(b)36 b(egin)596 b(with)g(a)h(reprise)f(of)h(algorithm)f(WS)g
(from)h([7])2000 63898 y(and)433 b([3])i(and)e(then)f(pro)36
b(ceed)433 b(to)h(extend)f(it.)3951 65580 y(In)610 b(algorithm)h(WS)g
(\(for)f(\\w)-36 b(ork)612 b(stealing"\),)656 b(the)610
b(threads)g(of)h(a)g(computation)f(are)h(dis-)2000 67185
y(tributed)483 b(across)h(a)h(\257xed)f(set)g(of)h(pro)36
b(cessors,)497 b(eac)-36 b(h)484 b(of)h(whic)-36 b(h)484
b(attempts)g(to)g(steal)h(w)-36 b(ork)485 b(from)2000
68790 y(another)515 b(pro)36 b(cessor)515 b(whenev)-36
b(er)515 b(it)g(runs)f(out)h(of)h(w)-36 b(ork)516 b(to)f(do.)823
b(Eac)-36 b(h)515 b(pro)36 b(cessor)516 b(main)-36 b(tains)515
b(a)2000 70395 y(doubly-ended)467 b(queue,)477 b(called)469
b(the)f Fo(r)-78 b(e)g(ady)588 b(de)-78 b(que)113 b Fy(,)477
b(of)470 b(threads)d(that)h(are)g(ready)h(to)g(execute;)2000
72000 y(a)541 b(thread)f(is)h(\\ready")g(if)h(the)e(\257rst)f
(unexecuted)h(task)h(in)g(its)f(sequen)-36 b(tial)541
b(order)g(is)g(ready)-108 b(.)899 b(A)25350 75321 y(27)p
eop end
%%Page: 28 28
TeXDict begin 28 27 bop 2000 1328 a Fy(pro)36 b(cessors)452
b(treats)g(its)g(o)-36 b(wn)452 b(ready)h(deque)e(as)i(a)f(stac)-36
b(k,)457 b(pushing)451 b(and)h(p)36 b(opping)451 b(threads)h(from)2000
2933 y(the)529 b(b)36 b(ottom,)553 b(but)528 b(treats)h(the)g(ready)h
(deque)f(of)h(another)e(pro)36 b(cessor)530 b(as)g(a)f(queue,)553
b(remo)-36 b(ving)2000 4539 y(threads)574 b(only)i(from)g(the)e(top.)
1003 b(In)575 b(general,)612 b(a)575 b(pro)36 b(cessor)576
b(obtains)f(w)-36 b(ork)576 b(b)-36 b(y)575 b(remo)-36
b(ving)576 b(the)2000 6144 y(b)36 b(ottommost)389 b(thread)f(of)h(its)g
(ready)h(deque,)397 b(whic)-36 b(h)389 b(w)-36 b(e)389
b(call)h(thread)e Fu(A)p Fy(,)398 b(and)388 b(executing)i(it)f(un)-36
b(til)2000 7749 y(one)434 b(of)g(three)f(situations)g(o)36
b(ccur:)3590 9997 y(1.)651 b Fg(Thr)-66 b(e)g(ad)496
b Fu(A)h Fg(sp)-66 b(awns)497 b(another)g(thr)-66 b(e)g(ad)496
b Fu(B)67 b Fg(.)681 b Fy(In)469 b(this)f(case,)477 b(the)468
b(pro)36 b(cessor)469 b(pushes)e Fu(A)h Fy(on)-36 b(to)5252
11603 y(the)433 b(b)36 b(ottom)433 b(of)h(the)f(deque)h(and)f(starts)g
(executing)h Fu(B)67 b Fy(.)3590 13435 y(2.)651 b Fg(Thr)-66
b(e)g(ad)556 b Fu(A)h Fg(terminates.)877 b Fy(The)533
b(pro)36 b(cessor)534 b(c)-36 b(hec)g(ks)534 b(the)g(ready)g(deque:)778
b(if)535 b(the)e(deque)h(is)5252 15040 y(nonempt)-36
b(y)-108 b(,)337 b(then)313 b(the)g(pro)36 b(cessor)314
b(p)36 b(ops)314 b(the)f(b)36 b(ottommost)314 b(thread)f(and)h(b)36
b(egins)314 b(executing)5252 16646 y(it;)431 b(if)f(the)g(deque)f(is)h
(empt)-36 b(y)-108 b(,)430 b(then)f(the)g(pro)36 b(cessor)430
b(tries)g(to)g(execute)g Fu(A)p Fy('s)g(paren)-36 b(t)428
b(thread;)5252 18251 y(if)521 b(the)e(deque)h(is)h(empt)-36
b(y)520 b(and)f Fu(A)p Fy('s)i(paren)-36 b(t)519 b(is)i(busy)-108
b(,)541 b(then)519 b(the)h(pro)36 b(cessor)520 b(attempts)g(to)5252
19856 y(w)-36 b(ork)434 b(steal,)g(as)g(describ)36 b(ed)433
b(b)36 b(elo)-36 b(w.)3590 21689 y(3.)651 b Fg(Thr)-66
b(e)g(ad)406 b Fu(A)i Fg(r)-66 b(e)g(aches)406 b(a)h(synchr)-66
b(onization)406 b(p)-66 b(oint)406 b(and)h(stal)66 b(ls.)558
b Fy(The)371 b(deque)g(m)-36 b(ust)370 b(b)36 b(e)370
b(empt)-36 b(y)5252 23294 y(in)561 b(this)g(case)i(\(if)f(the)f
(computation)g(is)h(fully)h(strict\),)593 b(so)562 b(the)f(pro)36
b(cessor)562 b(attempts)f(to)5252 24899 y(w)-36 b(ork)434
b(steal.)3951 27147 y(The)330 b(w)-36 b(ork-stealing)332
b(strategy)e(op)36 b(erates)331 b(as)f(follo)-36 b(ws:)529
b(the)330 b(pro)36 b(cessor)330 b(that)g(is)g(attempting)g(to)2000
28753 y(w)-36 b(ork-steal,)482 b(called)473 b(the)e Fo(thief)290
b Fy(,)481 b(c)-36 b(ho)36 b(oses)473 b(another)e(pro)36
b(cessor)471 b(uniformly)i(at)e(random,)481 b(called)2000
30358 y(the)450 b Fo(victim)125 b Fy(,)455 b(and)450
b(tries)h(to)f(steal)h(w)-36 b(ork)451 b(from)g(it.)629
b(If)451 b(the)f(victim's)h(deque)g(is)f(nonempt)-36
b(y)-108 b(,)454 b(then)2000 31963 y(the)321 b(thief)h(remo)-36
b(v)g(es)323 b(the)e(topmost)h(thread)f(and)g(starts)h(executing)g(it)g
(\(the)f(steal)i(is)f(successful\);)359 b(if)2000 33568
y(the)388 b(deque)h(is)g(empt)-36 b(y)-108 b(,)397 b(the)388
b(thief)h(restarts)f(the)h(pro)36 b(cess,)398 b(c)-36
b(ho)36 b(osing)389 b(another)f(victim)i(at)e(random)2000
35173 y(to)502 b(steal)h(from)g(\(the)f(steal)h(is)f(unsuccessful\).)
784 b(Eac)-36 b(h)502 b(steal)h(attempt)f(tak)-36 b(es)503
b(one)f(unit)g(of)h(time)2000 36778 y(on)403 b(a)h(pro)36
b(cessor.)568 b(A)-36 b(t)403 b(the)g(b)36 b(eginning)403
b(of)h(the)e(computation,)410 b(all)404 b(the)e(ready)i(deques)f(are)g
(empt)-36 b(y)2000 38383 y(except)395 b(for)h(one)g(\(the)e(one)i(that)
f(con)-36 b(tains)395 b(the)g(ro)36 b(ot)396 b(thread\),)402
b(so)396 b(all)g(but)e(one)i(pro)36 b(cessor)395 b(starts)2000
39988 y(out)433 b(w)-36 b(ork)435 b(stealing.)3951 41593
y(Unlik)-36 b(e)409 b(algorithm)g(WS,)g(algorithm)g(WSAP)g(\(for)g(\\w)
-36 b(ork)410 b(stealing,)k(adaptiv)-36 b(ely)410 b(parallel"\))2000
43198 y(sc)-36 b(hedules)427 b(a)h(m)-36 b(ultithreaded)426
b(computation)h(on)h(a)g(dynamically)h(c)-36 b(hanging)428
b(set)f(of)h(pro)36 b(cessors.)2000 44804 y(In)425 b(the)h(con)-36
b(text)425 b(of)i(our)e(adv)-36 b(ersarial)427 b(mo)36
b(del,)428 b(algorithm)e(WSAP)g(is)g(implemen)-36 b(ted)424
b(b)-36 b(y)426 b(JS)f(and)2000 46409 y(resp)36 b(onds)364
b(to)g(c)-36 b(hanging)365 b(pro)36 b(cessor)365 b(allo)36
b(cations)366 b(giv)-36 b(en)365 b(b)-36 b(y)364 b(OS.)g(Sp)36
b(eci\257cally)-108 b(,)379 b(during)364 b(eac)-36 b(h)364
b(step)2000 48014 y Fu(t)359 b Fy(of)g(a)g(job's)h(execution,)374
b(JS)359 b(receiv)-36 b(es)359 b(an)g(allo)36 b(cation)361
b Fu(P)29274 48213 y Fr(t)30028 48014 y Fy(from)e(OS)f(that)h(is)g
(either)f(greater)h(than,)2000 49619 y(less)301 b(than,)326
b(or)300 b(equal)h(to)f Fu(P)14604 49818 y Fr(t)p Fq(\241)p
Ft(1)16202 49619 y Fy(,)327 b(the)300 b(job's)h(allo)36
b(cation)302 b(during)d(the)h(previous)g(step.)534 b(Consequen)-36
b(tly)-108 b(,)2000 51224 y(JS)370 b(needs)g(a)g(mec)-36
b(hanism)370 b(to)g(increase)h(or)f(decrease)g(the)g(n)-36
b(um)g(b)36 b(er)369 b(of)i(pro)36 b(cessors)370 b(b)36
b(eing)371 b(used)e(b)-36 b(y)2000 52829 y(the)295 b(job,)324
b(or)296 b(the)f(job's)i Fo(usage)113 b Fy(,)323 b(to)296
b(matc)-36 b(h)296 b(the)f(new)g(allo)36 b(cation)298
b Fu(P)34071 53028 y Fr(t)34466 52829 y Fy(.)533 b(In)295
b(algorithm)i(WSAP)-108 b(,)295 b(these)2000 54434 y(adjustmen)-36
b(ts)435 b(are)i(made)f(b)-36 b(y)437 b(sending)f(signals)h(to)g(the)f
(relev)-72 b(an)-36 b(t)436 b(pro)36 b(cessors)437 b(at)f(the)g(b)36
b(eginning)2000 56039 y(of)552 b(step)e Fu(t)p Fy(.)930
b(In)551 b(particular,)580 b(a)552 b Fo(sle)-78 b(ep)677
b(signal)696 b Fy(is)551 b(sen)-36 b(t)550 b(to)h(a)h(pro)36
b(cessor)551 b(to)g(reduce)f(the)g(job's)2000 57644 y(pro)36
b(cessor)543 b(usage)h(b)-36 b(y)543 b(one,)571 b(and)543
b(a)g Fo(wake)670 b(signal)688 b Fy(is)544 b(sen)-36
b(t)542 b(to)i(a)f(pro)36 b(cessor)544 b(to)f(increase)h(the)2000
59249 y(job's)393 b(usage)g(b)-36 b(y)392 b(one.)565
b(Th)-36 b(us,)400 b(at)393 b(the)f(b)36 b(eginning)392
b(of)h(eac)-36 b(h)393 b(step)e Fu(t)p Fy(,)401 b(JS)392
b(tak)-36 b(es)393 b(one)g(of)g(t)-36 b(w)g(o)393 b(actions)2000
60854 y(after)434 b(receiving)h(the)e(allo)36 b(cation)435
b Fu(P)19566 61053 y Fr(t)19961 60854 y Fy(:)3590 63103
y(1.)651 b(If)389 b Fu(P)7345 63302 y Fr(t)8110 63103
y Fu(<)368 b(P)10328 63302 y Fr(t)p Fq(\241)p Ft(1)11926
63103 y Fy(,)398 b(JS)389 b(sends)g(a)g(sleep)g(signal)h(to)f(an)-36
b(y)389 b Fu(P)30528 63302 y Fr(t)p Fq(\241)p Ft(1)32330
63103 y Fs(\241)204 b Fu(P)34405 63302 y Fr(t)35190 63103
y Fy(pro)36 b(cessors)390 b(that)e(are)i(a)-36 b(w)g(ak)g(e.)3590
64936 y(2.)651 b(If)532 b Fu(P)7488 65135 y Fr(t)8419
64936 y Fu(>)k(P)10805 65135 y Fr(t)p Fq(\241)p Ft(1)12403
64936 y Fy(,)556 b(JS)531 b(sends)g(a)h(w)-36 b(ak)g(e)533
b(signal)g(to)e Fu(P)29635 65135 y Fr(t)30393 64936 y
Fs(\241)362 b Fu(P)32626 65135 y Fr(t)p Fq(\241)p Ft(1)34755
64936 y Fy(pro)36 b(cessors)532 b(that)f(are)h(asleep,)5252
66541 y(w)-36 b(aking)649 b(all)g(pro)36 b(cessors)648
b(with)g(nonempt)-36 b(y)647 b(deques)h(\257rst)f(b)36
b(efore)649 b(w)-36 b(aking)649 b(those)f(with)5252 68146
y(empt)-36 b(y)433 b(deques.)3951 70395 y(F)-108 b(or)480
b(ease)i(of)f(discussion,)493 b(w)-36 b(e)481 b(assume)g(that)g(a)g
(job)g(has)g(an)g(in\257nite)f(n)-36 b(um)g(b)36 b(er)479
b(of)j(\\virtual")2000 72000 y(pro)36 b(cessors)543 b(at)g(its)f(disp)
36 b(osal,)571 b(most)543 b(of)g(whic)-36 b(h)543 b(are)g(asleep;)598
b(during)541 b(an)-36 b(y)543 b(step)f Fu(t)h Fy(of)g(the)f(job's)25350
75321 y(28)p eop end
%%Page: 29 29
TeXDict begin 29 28 bop 2000 1328 a Fy(execution,)639
b(algorithm)599 b(WSAP)f(guaran)-36 b(tees)597 b(that)h(only)g
Fu(P)32467 1527 y Fr(t)33460 1328 y Fy(of)h(the)e(virtual)i(pro)36
b(cessors)598 b(are)2000 2933 y(a)-36 b(w)g(ak)g(e.)541
b(The)316 b(role)h(of)g(OS)f(th)-36 b(us)315 b(reduces)h(to)h(pro)-36
b(viding)316 b(a)h(n)-36 b(um)g(b)36 b(er)315 b Fu(P)35496
3132 y Fr(t)36208 2933 y Fy(to)i(JS,)f(instead)h(of)g(actually)2000
4539 y(allo)36 b(cating)446 b(the)d(ph)-36 b(ysical)444
b(pro)36 b(cessors.)609 b(This)444 b(abstraction)g(do)36
b(es)444 b(not)g(violate)h(the)e(rules)h(of)g(our)2000
6144 y(adv)-36 b(ersarial)526 b(mo)36 b(del,)547 b(since)524
b(w)-36 b(e)525 b(guaran)-36 b(tee)524 b(that)g(JS)g(only)h(uses)f(as)g
(man)-36 b(y)525 b(pro)36 b(cessors)524 b(as)h(are)2000
7749 y(allo)36 b(cated,)601 b(but)566 b(mak)-36 b(es)567
b(it)g(easier)g(for)g(us)g(to)f(deal)h(with)g(pro)36
b(cessors)567 b(that)f(are)h(put)e(to)i(sleep)2000 9354
y(in)546 b(the)f(middle)g(of)i(w)-36 b(orking,)575 b(since)546
b(these)f(pro)36 b(cessors)546 b(cannot)g(b)36 b(e)545
b(returned)g(to)g(the)h(system)2000 10959 y(without)405
b(some)h(proto)36 b(col)406 b(for)g(handling)f(their)g(\(nonempt)-36
b(y\))405 b(deques.)569 b(W)-108 b(e)405 b(o)-36 b(v)g(erload)406
b(the)f(terms)2000 12564 y(\\virtual)434 b(pro)36 b(cessor")435
b(and)e(\\pro)36 b(cessor")434 b(in)g(the)f(remainder)g(of)h(this)f(c)
-36 b(hapter.)3951 14169 y(The)626 b(pro)36 b(cessors)626
b(in)g(algorithm)h(WSAP)e(follo)-36 b(w)628 b(the)d(same)i(rules)e(of)i
(op)36 b(eration)626 b(as)h(the)2000 15774 y(pro)36 b(cessors)423
b(in)h(algorithm)f(WS,)h(except)f(no)-36 b(w)424 b(they)f(need)f(to)i
(resp)36 b(ond)422 b(appropriately)i(to)f(sleep)2000
17379 y(and)565 b(w)-36 b(ak)g(e)566 b(signals.)974 b(In)565
b(particular,)598 b(w)-36 b(e)566 b(add)f(a)g(fourth)g(situation)g(to)h
(the)e(three)h(situations)2000 18984 y(listed)434 b(ab)36
b(o)-36 b(v)g(e)434 b(that)f(can)h(in)-36 b(terrupt)431
b(a)j(pro)36 b(cessor's)434 b(execution:)3590 21231 y(4.)651
b Fg(The)465 b(pr)-66 b(o)g(c)g(essor)464 b(r)-66 b(e)g(c)g(eives)463
b(a)i(sle)-66 b(ep)465 b(signal)g(fr)-66 b(om)464 b(JS)g(at)i(the)e(b)
-66 b(e)g(ginning)462 b(of)i(step)i Fu(t)p Fg(.)578 b
Fy(In)433 b(this)5252 22836 y(case,)626 b(the)587 b(pro)36
b(cessor)588 b(immediately)g(puts)e(itself)j(to)e(sleep,)626
b(regardless)588 b(of)g(whether)f(it)5252 24441 y(is)528
b(executing)h(a)g(task)g(or)f(attempting)g(to)g(steal)h(w)-36
b(ork)530 b(during)d(step)h Fu(t)p Fy(.)862 b(The)529
b(pro)36 b(cessor)5252 26046 y(remains)497 b(asleep)g(un)-36
b(til)497 b(it)g(receiv)-36 b(es)498 b(a)f(w)-36 b(ak)g(e)498
b(signal)g(from)g(JS)f(or)g(another)g(pro)36 b(cessor)497
b(at)5252 27651 y(the)437 b(b)36 b(eginning)438 b(of)h(step)f
Fu(t)18176 27169 y Fq(0)18863 27651 y Fu(>)377 b(t)p
Fy(,)439 b(at)f(whic)-36 b(h)438 b(p)36 b(oin)-36 b(t)438
b(it)g(con)-36 b(tin)g(ues)438 b(executing)g(where)g(it)g(left)5252
29256 y(o\256.)5366 56557 y @beginspecial 123 @llx 75
@lly 742 @urx 452 @ury 3714 @rwi @setspecial
%%BeginDocument: wsap-proc-states.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Thesis Figures.ppt)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910130614-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 123 75 742 452
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
123 75 moveto 742 75 lineto 742 452 lineto 123 452 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
123 75 618 377 rectclip
[ 0 -1 1 0 47.91986 575.20192 ] concat
/N53 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font ACDLCF+TimesNewRoman
11 dict begin
/FontName /ACDLCF+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/space 
<10bf317079c757bf91> ND 
/parenleft 
<10bf317046e70250e8bd40d114dd6e816b58f4d3349c0c7727832e7501d9
0d48751e5ed01a4a989a3de6f3df4e8150bcde04496d7ebf18ade860af48
8df404b0480a8fe53e55e37acb5a554f9e5cbbe042244d6fc0aa0fdafde4
acb4c52d35fe39221cd926f89c> ND 
/parenright 
<10bf3170537b448b82841392ad69a78470fcf6ad5b9860e31496592c5fd2
8c2a948b7ef1391379bc9dc9754e13aa1a0d8be5cfd2e3bc1b6a246b4628
a43a8883776071abf86a7883d030defeed590f0bf1949e72bae27054def5
466be78152f4af0ef71e17f1> ND 
/slash 
<10bf31707ecffa29aa99596df40b96812e390790337673cf79e85a6235> ND 
/zero 
<10bf31705d64a97b17e82784743dd8afd77cc124ffedf62073386a4af3bd
86fd28c9c7a756e9ef18e3ca007b94f0e02e9eb268494f71c4e6ce33e23a
daf3d98e6e397ae6d95a99deac335d9d72bffd478071defcda00cb768906
0b44c557ecf61de22b31359bb158f6fec05d2caffa2d64aa1e2dc65d6175
e933567afd84f788ad9d2ecdc1d1277289609d3478a2f9ff64e3fec0e6b8
8edb35e90668db5b556d9651c4b7ff49d0e2> ND 
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
/four 
<10bf317069b1fd7146b17c113b617a69456a1f46fa86f93a1743e1bde519
49e5c8665d9cf49ab4179aecaf779fa834a317855eb2ce61cdee1d727f> ND 
/five 
<10bf317049845615ceab2cb35844ace30baf3e54b0e1773fc25e2037b21b
b58b95d34cefc92bea69dc9b438084ed7eb5c6702a368454ebc82a5856ce
9936aede12d64deba22dd59cd070d9cd700c552563a2157176094ad577ca
7175d4c555582970bb6ced51f021b279f79ea313c4e45258856c7401f914
3fd613f871ff33cdce06d0175d18b29427c1e70009e3e10e63caa0676029
8c0b976669b8d245> ND 
/six 
<10bf3170448bf7f9a4e5f8472a5a2d45b7594de91351c6ec052ffd8b762a
bed41ed16809fa2365105c6627f46205709a8a1309c7141139fd941188bd
c8d9b0b55c47d641558ff36ded37dddb1b216d36df7ff3e4cecb5e93a247
22d0b6b5e65a4a2dcc56b02d7259d8fd5b7ec0999a61dac27e80da2f8676
34759b4e247227f13713c39238726a89a708bbed3b752173bdebcebaeea7
71ee266a3e95119dcfb78b31c6beeef7041756c5788d9d3d80a0bb3f669d
9ba6d8b1667d5d5aa89f4142cfd220ffe9eb070e> ND 
/seven 
<10bf3170422f935763586cd8dbf7f37293dfe15df8bc3e09eef989653acc
203875a79f5d3c366f49e5ce0c7723933c8d3b9a4fd39991> ND 
/eight 
<10bf31703a9bd69293aaf1980d4004db29512cfbcdf83050f262f22394b0
ef479114fcd1ed3780f8e8379ec274149787838cb972946ff925f327dc43
fe0a268771c55ebbfb2b11062f0229b6b8245dcdaee1f4d128ae888b5b31
2979a0a0311f4e185869859bc2f66d09f1f0a58e4c124d00e52b1afc6fde
a6cc391f21431f05bfb725982450ba002876f8730b821ec63f425acc7fbc
dbd469c4bbc842a4c448a96aef6e173e7ebf5f5a7a17953e1579490627e0
98ff8ddd57718c580a5c4db5f0f85a39de87a2ee8507278f64c74b506e5f
c484dc38505671de2149f16a16f5b3bd2bd178fe57f2540526157d2501cd
a1ec9d05b086c77bbf39961b> ND 
/nine 
<10bf317041f0a9496f308eef332a89569c6f19bf3d9e8151f98106b7f3b4
863943549b6788f898c785f107f2fd33dafee552c5021ce35f862500ffe7
90b89ba5e8ca74771847acf24a3921944b9ff12aa20c31cc240b97d0bfbf
3bfa98131e7f0af00c2c1318418f0b901e30e5ac56e17f3033ea0f27da78
6ba05aa35f7d1182c74c8b5d63906ddf3add8563ed2127e6e60e74dcaeec
cd2fc89d6ac5e14d494f0e9d12d3f290592c4f786ec533bdf4b038336f9c
5e802b11> ND 
/A 
<10bf3170612fa8ae288a2f767c6f2d22480749f87ffaef88db9508f355b3
d621b9e09a8d1290afe57d05190debf7b19b92f6309b70e08d2409abdf50
3b6a0e5daa0043a6e298cadec0a7dbd5588f8ba0646e339db53e322e33db
33e9ac93d421016e880386d59c5f84e2c9dcb201c618c0d88390bc39b5b5
dcf9b13cb5b08470f0d83c168f6d7ea2244d1b> ND 
/B 
<10bf31706ea8189a0122a2c3dc80451ea987f9cc6dc7afa0c8f0365e6d8e
59a275ca593c5d46c9efa9ebe4192f8e472ac6f0efdf90f5d264a8b47fa4
3bcd031546c0586a98250a46abdef7d038322a132dd14df107aae195c311
99c6fa7558e3ee2379999d05cf38ad7f22726f37f2f0654cf65c11005a88
2feb945df6452201e1abb666d0244ac9dc622994ec7112e71f49ba0b5306
4d49384d5d74864da9fc7636c8b9964886a4103e2320a1f33cb3f7f7bcc7
104eb429cfd6cfab753b2e30fdbce693ce1dcc5a7fe31d75680753c52fe9
350712be59c0ee4a2780b638de9e8e44870622e76d3c23cdfd281b0b8177
c0aff3531220d18c12c91634c02401e01a11> ND 
/C 
<10bf31705d65c09013f5e74d02fbfce579927dc4371245d5279a0be7ec2d
bd3b1448f6fd9c53426e6238d321f77957395a071b4b8eae65710650ca99
5020550eaa4528d828ef4c47ac3d29b589dd7f1c7cfe44b10e3e8fa63e50
7c3e4eb74e257f81314f58ef9126142bc9d3a940c619a0d5450ffb6600e9
bb7f776713c2df8dd431070f31717d2477542aecd1539231d249a65da0e1
ee77958319b99e72488e0e9fa74f4d170e269189eb39aa1a> ND 
/D 
<10bf31706ea8518093a448f0413d9dd2503cf14562d62f8e03c59ef262c0
e81d3c5037d7a8fbf15657e5bea1080fe305ab71bf0048720c010cf41197
6f2c354776e6ac045fcbc3395f65891cbe4c7f0093e58d10b57eae23372e
4cc99d7f2f11c1f1c023288641813a3b8b65e70e4b5173920a628da83be4
7b524c38228036fccc15a820529e8626ae48a60adbbae5fd> ND 
/E 
<10bf31705245888107d641c65df0d045384b4474a865698169ff2c4c5759
f26e2217c59fcbe377198e20e38aaa44f075831908ff3584c8503712a3f9
da462024eae3426d516a8864b3756edb7e42923b77324ddcf4879e1b61b4
02502bf9f5c08a938a8b9111b299fb506f1aa6115b23bb6038633ef2c172
1c1c4fba6b5b7baae1d192358092d890074dc21b1d5f65994b78807f042e
8945e17dc9fd4baebebbadfc790575a38910eab682188d9cdb44060faa47
1dcf91df296595839280be99912fd6d9ac4594d1b8a3> ND 
/F 
<10bf317069b1b5630e42cd6c8ff2cb4d3f7bc188fb90c1fdbffc389a7b7c
590172825fc5f7c1632f0e00f7f24a69c85e73a086926561cd7597f366b9
c557c28ba97bd9e48588932b584d925e90f75351236f8dee991d8b2912e0
edc0500223be1a5bd4cd44c3c3de75aa12b7e63ed3a399ba00214a66fe95
b5d95b0096ce0321bb87083de3bbc29cfe8ef473870f448ffcd9f71c6888
fa2bf4ba82669c30c14d2655a8b69d82e43f233aafad0cc27d2d> ND 
/I 
<10bf31705600a7ed90307a9003ca62013c6a672423969cbfb09d38b977c3
3bb76a0a443b03ca15feffb7f47ead3efae89c4da09011014b3ef74dfcc4
49aa62038fec2b8087c3eb93eadcca82adeba753d37fb428848495514418
28d8a0f3ad99e43ca7d439d4d98a470d6617f8dd1388> ND 
/J 
<10bf31705245662c028a7d41142a9172cb3f39702bb2297ba0998cbe201f
77e89fe57d5ed956b84574b1620f88a55c2a51aa279e3fc9cf923c80361d
86a3551f2534c353d520d3bc14bc4d344677b575ead159bbdfc8aaeec820
ded505d06fe178d1ea8a0d44df29931f663cf743408db506a44468a17c12
4775c79567328c125a4e927e096a92c7da53c382783cd0826b0553dedd74
> ND 
/P 
<10bf31706ea9c5bc0db16a9d0fb9334b7aae45fa9562423ca0efcafbe577
696190382686f72544b1109cd9a28e6e2fb8c3e703e277558d9de53e9bd4
331eb7411fa27fc9fbf9488ff1a8e626acd2f355101bb86e40f636dd5a74
50c4f3ac4c3fce01d454db469da536ea46528530bc3e44fdc91176a1e591
1b2932205e6c0eac6f4d330f0230a163b5b30ecdc649a4ff6b024a9513ec
d5f934e2e3b5d7f24bd0170221950b8bb0ffa0c50e77c36e34adf2e847c9
adbff54bf77ef65d9afdb3878865> ND 
/S 
<10bf3170383eecc69ba25cd9f9f1a3f877f72d54ca249226fb09a99225d4
fa4a892ae0bf757b41a46aaf766816bb2e9c6c4e867aeb02a76d05e762b6
353837bdf52bbc0c70c14510f08ced31ac95e2c8b5dfdbf8f1dffd4709a0
760737961b7464d75e4dbf7323db187fa23f8213fd84f092b3c292e45093
4a017d49f1fa4f8d834c3fd0c5126c0c5c896c1a48c0653753c6f56c23b6
627010a4379bd3d96b26db0b3531098cdc23704e1f8e25a61651df0d8d02
8f68c8b7a7de4652566ef5c50305a3ec674a5be2d1bf9f76580a00788d85
ad3f4dc24f5adec7880bc3a7db38c71260e951f8778b0aff0ff2e97effe6
f0b2b33485e5f0401138cd3f9e066ed25ff05e7594ebdb0029f3d5> ND 
/T 
<10bf31705b0718f462bb36d02a655e51f04593b972dbe0892a4279b53c95
62dbd237266bc0cb4e5967f6d053e97e3cc8fe6477448edcd2c2ed40f6e6
056ef32aac1986bf84927c9fb1e2806a71f53c8604421852f835782fd7d8
0fdb45127c08fbe24f16e5af9ede981de72f75b4f62ef25f8b6075081fcf
> ND 
/W 
<10bf31706ae2d6d9dcbe8344511f08de4b9db5ac28c5c661efe6fa9e7439
4bc84ffd6c26e5c964d324deb8a2be71c781983509fc7315f13f2f452574
0c432ccfa783a50be1522758812e78dd12223bf37e37be9a2b9de70daa25
87e5ce0c31b1dc8fd1e7856f2a379806580606a20898e7fccb07255b76ec
aa9ee467ae0d074d61c529177c4e36ba95b4a421f36bad34035a2ac2c04f
12a2abb782248776bfa1511003ff806b7b426cc8c17627c2470813ba31ae
1a22b8e70c403eb278204ab3b8eb7faa1ccbb1cca5799cb23970fbbc0204
4ae4346b70147e2d44e9f3315b6168df8cda1ca5> ND 
/a 
<10bf31705d647142d5ee6b7c4c12c41164f05a89990635873917bf00c5a2
b1b299b84b64fad030fdefe54a736fd84981f1bdecf34c327a4087285dd7
ff9a128a9fff4f1e5e34e2c477e4543546f0e505eb84b8e6141c12199331
8a7bef58caa55697aff5d8bf4fe61eb63478ae931b5c51fe7be8aa76cee5
cf639a1d462398300117c6a9c09614a29dfc50b3c7ddbacc1c6e2f7accb0
35d51bb776dfa4f2180b5bfa695d4ee30d466764f5192b628fd7c4971313
cd38d55ff99cfe805727052d975c4756402eb9230dd87b777a603efe9c10
65e950375d54aa41ed1c701bfac764ae78b65834b8918a99ed1f017d5313
eb0950b1f45353f40dc633104ecc941e4bbbf8359d5ae9042ef0f4edfdb8
> ND 
/b 
<10bf31707b35db816a4355a1c9cd0401bf6033c55938246c8b69de26e575
c058903a4e9b57b68075848962a6cd3da069ec2730d8699e3ccf520befe1
1a090d11586ebd56effd705bd3a5ced6c4343ddaabfe70e422082141dc06
c695cc46ee2dde408c0760a4c361b784ab85994758cbad73179f314048f1
c5a0c06c0e0ad84ded3a7904f207403afdd3193bf093fb903dbdef2de225
7307e43f8ee047d711ed22adc155c93b72dbad1a68> ND 
/c 
<10bf31705fc10320935f517e088588bc677b6f6b1116d76a45fb5fc081aa
57ad08a2f19e4ebd5e7f2e40678b64d780ab49e945b6f1fcf8c1bf2edd40
201d9d025abf1aec5b1b3268a3f2a9365f1c6e4133cdb11264503de1434e
2553cdd7a1785e8aefca6abe49ef29279001bfee84321f1c29e0a5b47534
7f9b91833b42fbc209dedbbca6bb8dac3b6f01ececb32ee525fd2275d1f3
f94c46a2dc92d591> ND 
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
/g 
<10bf31705b0767a01e9193e4d997e718ba6351677893b73d138e3fe6ba14
fc659a3bcdee55e0cfe8324eeac72638d3bd305a7a0220257ff3808a1470
04dc5c3c9fcb344358fed8b5ae71f4f49bb62f7c38ae95fdb022e2f50d0f
f7edd042065f7148993d640d50d67f360ac97639f25c381784672dcecf1d
1627665bc46b98264545bb45b967dbd7f6dce2f63c1e6751d9e493efd546
e255705157ddc690cb167218c88d537fe6a759d15d23d8bf19975778954b
513e4f87de1d7e922f34c8ee289c3522056d92971a6692e2b85efc32e805
5f726b3e561153ede1bd48ac9ed5e0024936e813717a672f7da4b25e0f4c
fa800bfb48a1e7e6e175f9ef63c0a88c39518c20ae1f79f29fe16a404d8f
590228fa5880231b26e78848d12ee249c635fcfa1c6175dbe52bf4c85030
42acafcb20327b817e4efb88945955dd6d08889ea1fb3f310e8cb4172190
21cc423288f3c72f1f0ebcd75197d45530bfc75571856796dc6ba51fbdd3
ed9cec0c0d7ad50b11a85f88370b45b4a51e0293d38df958b8> ND 
/h 
<10bf3170638bba13892b6a5edf1363fbad8b95e15d8b1d61c9ff2e20460e
9fbee5ce56a3b804c731461fc79898dd9aa49a7578bd0636027b48157921
a917a207198baeee00a6aeca2924ff3a229448490e59b468fb8b3164c353
d9bc2653f19a1e5c4133f967037a72c7c8fbf885e7d2fe25db116b7c8e10
b3fd50a5bf16ce8ee83140eeca023c94dedee552fcf1a7935a31030ea899
3824e06eab9cf113ffc3161399601c0b8fff6a9768bb0205ffc7ac68a666
f3075641cdac00a867c63305b98c782f2fa25a94358084fd7f1a3e8a9aba
49e32a58f5abe91c09f7098b61c81b8653e474549ba40c7470f7bc> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/k 
<10bf3170612e883674d2675aac39fa142a2f9de407f255952adbf70a8f61
dcc97f11c5b525f88e1dd0499bf87fea87e955adf630d83711a3925899c0
03b9f91dc3443000903cbe22625747190de827d6aed57c3f807366bbd6c6
3854786e273f1b9d2f49315171b285fa450532e1a996be3dfd2aafc74743
b4a57fabf2eddb1c25e9905cc57139486ad514add7eb942d1d1b791b6056
19d6f363ea6b92b2c94caf9a33a7be72eed5a355a7d76c1048097efb20dd
2f6c3a18d26def6109f03e7d30d5356121f15317baa59d193def17f7d470
1728dc814db541582ec9d0f98c682c14> ND 
/l 
<10bf31705b0817c8e08e579d70bd731872938fa19da6249b22a36add018f
2d71afb39a24cba2d5b131292eaf2ea6440cd481b67673b68d5de7db4045
53f0515df79be16519f0349ec3761dc09575b85d12a0ca2ef3e3cac5171f
27c0bb5b6c16bd708dadf6acc7da72304e> ND 
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
/n 
<10bf3170638bba1389001ebc99bd428947467ee318fefc1fb124f3371d83
7e6e4fd04510bb88359fc2d65b2f295b6f18b7850f6ca41f0fd067e40bcc
1e6a5b41ca20f07f1559265c094e47681cd30c939ca836f577db4be36b05
95c3d60cd00f5b5495365e7e02e3400714839e79cc3816e739cdb0ba1b66
3f096ef3ea59642b52897d5ef4b5012d68776aa74244415b9e96a4f773a5
8085f9fe5bb74ace5b6860ca975ea43b7d0db4eefeddd777982336d72d05
c093ca194b7cd3478661a723994ed178a305b939140b4ac4b7ef4bb11e73
> ND 
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/q 
<10bf31705e925b80bb44afdd80449a9019004483157f7a206da365a5b3f7
8e817f7d85ccb98decc0413cb1aad3badad1cc03a563c391c8aa6068d7e3
0e7f25d81543c3055a792149dafa6b421b59bb9a7c586f00d982f84e34a8
6eb81a6d2e5d0469a0475534487ff8a1de86976d09002e57cf1b9a5b9651
783da658816ced2d26e352c444560625e85828b2e4e4558755e30d1a05aa
ed4f42608d7e2eeedb01e0259b91825941bd1b5a38ce6f06522b93ba8b0d
c3140f68c73955f4b4bd495b40f7a8977e75e8b1c2519046a0f0449793> ND 
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
/u 
<10bf31707ec0b061a3e31ce6a8e02f67c79fc6fb9433b583752df0b97381
ced785f0788651d9110f4d168d6f4fb870b9f8634f66a1fe17ef5bb051c8
5b17a112a0ece57f7e85709c1e46ba1a1de6ef26a274c75bdde36925dd09
efae6e5faacef2f29e68904c9555df5e0f6550945360d079ca305237daa8
7397519a4b0aef19668718de15c20ef2e07af7217dbd27700833b73e8190
1c7d2aacb619fbf2f1396d79a94fea4ca18c65bd942fda84> ND 
/v 
<10bf3170612e88360faf380e328fa052d16002b3a6eb4d26fc61a8261d88
5d55beefaa23f749e4680928d2ec50b44ff8d74a2a42a0e615124d351c37
a9b6b3979ac1eedcff65bc4e156ed5711cac4c00ba96902c9956d3adb8e9
345080689b72e5082717e79b08e915301d3c209a4fac7e8f857cfb983000
d031a94c1a8ab5b2b0900013f2ae> ND 
/w 
<10bf3170638a0228cdcc4cd6455c35265f3b472ea1e128291ab8c91c671e
7bd658e474e8a0535d503ea2a6704bc9226df8b7fd4286af923f66233992
4a9bd89766cd1ad48ee99eac3f679bc5f41535050fefd334434033683a0c
453c86e866b1ef55892a380c8fcdccf1c4eac1b6e4f71a2a006a7f483456
13b3a00d36c64291144c8cc1dac83b7c06950c85f226495588d8cb0539f8
dacf025ed3c1593eb5f55ae6c66c3ae3939545fa200eff0116> ND 
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
/ellipsis 
<10bf317005a3205c8c1ade8b08220239c090e4bcc9980e1cca609a2d4d10
d9ac81cf840ef58d470313f2aa080d2edd9fcba3916373473b3af2ee5c86
d03e77ac42465a929f227203e9947419868ef6872ae4cf8eebf4d8959f6c
7a0d73c65112c717159e6b1143a38d56f38c0bfb6641b059c420c669b174
283ad5674adb76e78a4c9174f94c3257ef08af279dc17b93c98677c3acdb
61453c7ad9365f3a5a793919a4c97a3726887fe01492b780bd16b89f5a85
0d94b0a447171065596e> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDLCF+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N55/ACDLCF+TimesNewRoman 1 TZ
q
n
36 756 540 -720 re
eoclip
n
false setSA
n
36 756 540 -720 re
1 1 1 setrgbcolor
f
Q
false setSA
n
340.5 258 m
340.5 231.48 361.98 210 388.5 210 c
415.02 210 436.5 231.48 436.5 258 c
436.5 284.52 415.02 306 388.5 306 c
361.98 306 340.5 284.52 340.5 258 c
0.867004 0.867004 0.867004 setrgbcolor
eofill
1 J
1 j
0.75 w
10 M
[] 0 d
n
340.5 258 m
340.5 231.48 361.98 210 388.5 210 c
415.02 210 436.5 231.48 436.5 258 c
436.5 284.52 415.02 306 388.5 306 c
361.98 306 340.5 284.52 340.5 258 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
394.32 229.5 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(Working)
[15.1371 8.02442 5.34896 8.02442 4.46798 8.02442 8.02442 ] pdfys
n
144 402 m
144 375.48 165.48 354 192 354 c
218.52 354 240 375.48 240 402 c
240 428.52 218.52 450 192 450 c
165.48 450 144 428.52 144 402 c
0.867004 0.867004 0.867004  setrgbcolor
eofill
n
144 402 m
144 375.48 165.48 354 192 354 c
218.52 354 240 375.48 240 402 c
240 428.52 218.52 450 192 450 c
165.48 450 144 428.52 144 402 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
197.82 375.6 m
(Stealing)
[8.91983 4.46627 7.12535 7.12535 4.46627 4.46627 8.02271 8.02271 ] pdfys
n
340.5 257.64 m
337.02 257.64 l
333.54 257.76 l
330.06 257.94 l
326.58 258.18 l
323.1 258.48 l
319.62 258.84 l
316.2 259.26 l
312.72 259.8 l
309.3 260.34 l
305.88 260.94 l
299.16 262.38 l
292.44 264 l
285.84 265.86 l
279.36 267.96 l
273 270.24 l
266.82 272.7 l
260.76 275.4 l
254.82 278.22 l
249.12 281.22 l
243.54 284.34 l
238.2 287.7 l
233.1 291.12 l
230.58 292.92 l
228.18 294.72 l
225.84 296.58 l
223.56 298.44 l
221.34 300.3 l
219.18 302.22 l
217.08 304.2 l
215.04 306.18 l
213.06 308.16 l
211.2 310.2 l
209.4 312.24 l
207.66 314.34 l
206.04 316.44 l
204.48 318.54 l
202.98 320.64 l
201.54 322.8 l
200.22 324.96 l
199.02 327.12 l
197.88 329.34 l
196.8 331.5 l
195.84 333.72 l
195 335.94 l
194.22 338.16 l
193.56 340.44 l
192.96 342.66 l
192.48 344.94 l
192.12 347.22 l
191.94 348.96 l
191.94 349.2 192.06 349.38 192.3 349.38 c
192.48 349.38 192.66 349.26 192.72 349.02 c
192.84 347.34 l
193.2 345.06 l
193.68 342.84 l
194.28 340.62 l
194.94 338.46 l
195.66 336.24 l
196.56 334.02 l
197.52 331.86 l
198.54 329.64 l
199.68 327.48 l
200.88 325.32 l
202.2 323.22 l
203.58 321.06 l
205.08 318.96 l
206.64 316.86 l
208.26 314.82 l
209.94 312.78 l
211.74 310.74 l
213.6 308.7 l
217.56 304.74 l
219.66 302.82 l
221.82 300.9 l
224.04 298.98 l
226.32 297.12 l
228.66 295.32 l
231.06 293.52 l
233.52 291.78 l
238.62 288.3 l
243.9 285 l
249.42 281.88 l
255.12 278.88 l
261.06 276.06 l
267.06 273.42 l
273.3 270.96 l
279.6 268.68 l
286.08 266.58 l
292.62 264.78 l
299.28 263.1 l
306.06 261.72 l
309.42 261.06 l
312.84 260.52 l
316.26 260.04 l
319.74 259.62 l
323.16 259.2 l
326.64 258.9 l
330.06 258.66 l
337.02 258.42 l
340.5 258.36 l
340.68 258.36 340.86 258.18 340.86 258 c
340.86 257.76 340.68 257.64 340.5 257.64 c
h
189.42 347.82 m
192 354 l
195.36 348.18 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
0 0 0  setrgbcolor
261.9 287.88 m
/N55 [0 12 -12 0 0 0] Tf
(dequeis)
[6.00604 5.33386 6.00604 6.00604 8.34226 3.34204 4.67395 ] pdfys
( ) show
(empty)
[5.40226 9.36244 6.00604 3.34204 6.00604 ] pdfys
( ) show
(and)
[5.33386 6.00604 6.00604 ] pdfys
( ) show
276.24 301.08 m
(parent)
[6.00952 5.33734 4.00543 5.33734 6.00952 3.34552 ] pdfys
( ) show
(is)
[3.34552 4.67743 ] pdfys
( ) show
(busy)
[6.00952 6.00952 4.67743 6.00952 ] pdfys
405.12 79.38 m
(dequeis)
[6.00604 5.33386 6.00604 6.00604 8.34226 3.34204 4.67395 ] pdfys
( ) show
(empty)
[5.40226 9.36244 6.00604 3.34204 6.00604 ] pdfys
( ) show
(and)
[5.33386 6.00604 6.00604 ] pdfys
( ) show
419.52 95.4001 m
(f)
[3.99353 ] pdfys
(ound pa) show
(re)
[4.07993 5.34224 ] pdfys
(nt) show
n
388.86 210 m
388.92 208.68 l
389.04 207.36 l
389.22 206.04 l
389.52 204.78 l
389.82 203.46 l
390.24 202.2 l
390.72 200.94 l
391.26 199.68 l
392.58 197.28 l
393.3 196.08 l
394.86 193.8 l
395.76 192.72 l
396.66 191.7 l
398.64 189.72 l
399.72 188.76 l
400.8 187.92 l
401.94 187.08 l
403.08 186.3 l
404.22 185.58 l
405.42 184.86 l
406.68 184.26 l
407.88 183.72 l
409.14 183.24 l
410.46 182.82 l
411.72 182.52 l
413.04 182.22 l
414.36 182.04 l
415.62 181.92 l
416.94 181.86 l
418.26 181.92 l
419.58 181.98 l
420.9 182.16 l
422.16 182.34 l
423.48 182.58 l
427.26 183.66 l
428.46 184.14 l
429.72 184.62 l
430.86 185.16 l
433.14 186.36 l
434.22 187.02 l
436.26 188.46 l
437.22 189.18 l
438.18 189.96 l
439.86 191.64 l
440.64 192.48 l
441.36 193.38 l
442.02 194.22 l
442.62 195.18 l
443.16 196.08 l
443.64 197.04 l
444.06 197.94 l
444.66 199.86 l
444.84 200.82 l
444.96 201.78 l
445.02 202.74 l
444.96 203.76 l
444.72 205.68 l
444.24 207.6 l
443.88 208.56 l
443.52 209.46 l
443.1 210.42 l
442.56 211.32 l
442.08 212.22 l
441.48 213.06 l
439.5 215.58 l
438.72 216.36 l
437.16 217.8 l
436.32 218.52 l
435.42 219.18 l
434.52 219.78 l
433.62 220.32 l
431.7 221.4 l
430.74 221.82 l
429.72 222.24 l
428.76 222.6 l
427.38 222.84 l
427.14 222.9 427.02 223.08 427.08 223.32 c
427.14 223.5 427.32 223.62 427.5 223.62 c
428.94 223.32 l
428.94 223.32 428.94 223.32 429 223.32 c
430.02 222.96 l
431.04 222.54 l
432.06 222.06 l
433.08 221.52 l
434.04 220.98 l
435 220.38 l
435.9 219.78 l
436.8 219.06 l
437.64 218.4 l
438.48 217.62 l
440.04 216.06 l
441.48 214.38 l
442.68 212.58 l
443.22 211.68 l
443.76 210.72 l
444.6 208.8 l
444.96 207.78 l
445.2 206.82 l
445.44 205.8 l
445.62 204.78 l
445.74 203.76 l
445.74 202.74 l
445.68 201.72 l
445.56 200.7 l
445.38 199.68 l
445.08 198.66 l
444.72 197.64 l
444.3 196.68 l
443.82 195.72 l
442.62 193.8 l
441.96 192.9 l
440.4 191.1 l
439.56 190.26 l
438.66 189.42 l
437.7 188.58 l
436.68 187.86 l
435.66 187.08 l
434.58 186.36 l
433.5 185.7 l
432.36 185.1 l
431.16 184.5 l
428.76 183.42 l
427.5 182.94 l
426.24 182.58 l
424.92 182.16 l
423.6 181.86 l
420.96 181.38 l
419.64 181.26 l
418.26 181.14 l
415.56 181.14 l
414.24 181.32 l
412.86 181.5 l
411.54 181.8 l
410.22 182.16 l
408.9 182.58 l
407.58 183.06 l
406.32 183.6 l
405.06 184.26 l
403.86 184.92 l
402.66 185.64 l
401.46 186.48 l
400.32 187.32 l
399.24 188.22 l
398.16 189.18 l
397.14 190.14 l
396.12 191.16 l
395.16 192.24 l
394.26 193.38 l
393.42 194.52 l
392.64 195.66 l
391.92 196.92 l
391.2 198.12 l
390.6 199.38 l
390.06 200.64 l
389.52 201.96 l
389.1 203.28 l
388.74 204.6 l
388.5 205.92 l
388.26 207.3 l
388.14 208.68 l
388.14 210 l
388.14 210.18 388.26 210.36 388.5 210.36 c
388.68 210.36 388.86 210.24 388.86 210 c
h
427.98 220.14 m
422.52 223.98 l
428.88 226.02 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
354.48 291.6 m
354.24 291.66 l
354.18 291.66 l
353.94 291.72 l
353.94 291.72 353.94 291.72 353.88 291.72 c
353.7 291.84 l
353.4 292.02 l
353.16 292.2 l
352.92 292.44 l
352.62 292.68 l
352.44 292.98 l
351.96 293.7 l
351.48 294.54 l
351.3 295.02 l
351.06 295.5 l
350.82 296.04 l
350.64 296.58 l
350.4 297.18 l
350.22 297.78 l
349.98 298.44 l
349.8 299.1 l
349.56 299.82 l
349.2 301.26 l
348.96 302.04 l
348.78 302.88 l
348.6 303.66 l
348.42 304.56 l
348.24 305.4 l
347.88 307.2 l
347.52 309.12 l
347.16 311.1 l
346.86 313.14 l
346.26 317.46 l
345.78 322.02 l
345.54 324.36 l
345.3 326.76 l
345.12 329.22 l
345 331.68 l
344.82 334.2 l
344.7 336.72 l
344.64 339.24 l
344.52 344.4 l
344.52 346.98 l
344.46 348.3 l
344.34 349.56 l
344.16 350.82 l
343.92 352.08 l
343.2 354.6 l
342.72 355.86 l
342.18 357.12 l
341.58 358.38 l
340.92 359.58 l
340.2 360.84 l
339.36 362.1 l
338.52 363.3 l
337.62 364.56 l
335.58 366.96 l
333.3 369.36 l
330.84 371.64 l
328.2 373.98 l
325.32 376.2 l
322.2 378.36 l
318.96 380.46 l
315.54 382.5 l
311.94 384.48 l
308.16 386.4 l
304.26 388.14 l
300.24 389.88 l
296.1 391.5 l
291.84 393 l
287.46 394.44 l
282.96 395.7 l
278.4 396.9 l
273.78 397.98 l
269.1 398.94 l
264.3 399.72 l
259.5 400.38 l
254.64 400.92 l
249.78 401.28 l
244.98 401.52 l
244.8 401.52 244.62 401.7 244.62 401.88 c
244.62 402.12 244.8 402.3 245.04 402.24 c
249.84 402.06 l
254.76 401.64 l
259.62 401.16 l
264.42 400.44 l
269.22 399.66 l
273.96 398.7 l
278.58 397.62 l
283.2 396.42 l
287.7 395.16 l
292.08 393.72 l
296.34 392.22 l
300.54 390.6 l
304.62 388.86 l
308.52 387.06 l
312.3 385.14 l
315.9 383.16 l
319.38 381.12 l
322.62 378.96 l
325.74 376.8 l
328.68 374.52 l
331.38 372.24 l
333.9 369.84 l
336.18 367.44 l
337.2 366.24 l
338.22 364.98 l
340.02 362.46 l
340.8 361.26 l
341.58 359.94 l
342.24 358.68 l
342.84 357.42 l
343.44 356.1 l
343.92 354.84 l
344.64 352.2 l
344.88 350.94 l
345.12 349.62 l
345.24 348.3 l
345.24 344.4 l
345.3 341.88 l
345.36 339.3 l
345.72 331.74 l
346.08 326.82 l
346.26 324.42 l
346.5 322.08 l
346.74 319.8 l
347.04 317.58 l
347.28 315.36 l
347.58 313.26 l
347.94 311.22 l
348.24 309.24 l
348.6 307.38 l
349.14 304.68 l
349.32 303.84 l
349.5 303.06 l
349.68 302.22 l
349.92 301.5 l
350.1 300.72 l
350.28 300 l
350.52 299.34 l
350.88 298.02 l
351.12 297.42 l
351.3 296.88 l
351.54 296.34 l
351.72 295.8 l
351.96 295.32 l
352.14 294.9 l
352.38 294.48 l
352.56 294.12 l
352.8 293.76 l
352.98 293.46 l
353.22 293.22 l
353.4 292.98 l
353.58 292.8 l
353.82 292.62 l
354 292.5 l
354.18 292.44 l
354.12 292.44 l
354.36 292.38 l
354.3 292.38 l
354.54 292.38 l
354.72 292.38 354.9 292.2 354.9 291.96 c
354.84 291.78 354.66 291.6 354.48 291.6 c
h
245.94 398.88 m
240 402 l
246.06 404.88 l
f
0 0 0  setrgbcolor
334.62 399.9 m
(stalled at )
[4.68347 3.35156 5.34338 3.35156 3.35156 5.34338 6.01556 3.05988 5.34338 3.35156 3.05988 
] pdfys
349.02 369.18 m
(synchronization)
[4.67633 6.00842 6.00842 5.33624 6.00842 4.00433 6.00842 6.00842 3.34442 5.33624 5.40104 
3.34442 3.34442 6.00842 6.00842 ] pdfys
( ) show
(point)
[6.00842 6.00842 3.34442 6.00842 3.34442 ] pdfys
n
388.14 306 m
388.14 499.02 l
388.14 499.2 388.32 499.38 388.5 499.38 c
388.68 499.38 388.86 499.2 388.86 499.02 c
388.86 306 l
388.86 305.82 388.68 305.64 388.5 305.64 c
388.32 305.64 388.14 305.82 388.14 306 c
h
385.5 498 m
388.5 504 l
391.5 498 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
0 0 0  setrgbcolor
407.52 357.84 m
(received)
[4.00671 5.33862 5.33862 5.40222 3.3468 6.0108 5.33862 6.0108 ] pdfys
( ) show
(sleep)
[4.67871 3.3468 5.40222 5.34222 6.0108 ] pdfys
( ) show
(signal)
[4.67871 3.3468 6.0108 6.0108 5.33862 3.3468 ] pdfys
n
191.64 450 m
191.7 452.4 l
191.82 454.8 l
192.12 457.2 l
192.48 459.6 l
192.96 462 l
193.56 464.4 l
194.22 466.74 l
195 469.14 l
195.84 471.48 l
196.8 473.88 l
197.88 476.16 l
199.02 478.5 l
200.22 480.84 l
201.54 483.12 l
204.42 487.68 l
207.66 492.12 l
209.4 494.34 l
211.2 496.5 l
213.06 498.66 l
215.04 500.76 l
219.12 504.96 l
221.28 507 l
223.56 509.04 l
225.84 511.02 l
228.18 512.94 l
230.58 514.86 l
233.04 516.78 l
238.2 520.44 l
243.54 523.92 l
249.06 527.28 l
254.82 530.52 l
260.7 533.52 l
266.76 536.34 l
273 538.98 l
279.36 541.38 l
285.84 543.6 l
292.44 545.58 l
295.8 546.48 l
299.16 547.32 l
302.52 548.1 l
305.88 548.82 l
309.3 549.48 l
312.72 550.08 l
316.2 550.62 l
319.62 551.04 l
323.1 551.46 l
326.58 551.76 l
330.06 552.06 l
333.54 552.24 l
335.46 552.3 l
335.7 552.3 335.88 552.12 335.88 551.94 c
335.88 551.7 335.7 551.52 335.52 551.52 c
333.54 551.46 l
330.12 551.28 l
326.64 551.04 l
323.16 550.74 l
319.74 550.32 l
316.26 549.84 l
312.84 549.36 l
309.48 548.76 l
306.06 548.1 l
302.7 547.38 l
299.34 546.6 l
295.98 545.76 l
292.68 544.86 l
286.08 542.88 l
279.66 540.66 l
273.3 538.26 l
267.12 535.62 l
261.06 532.86 l
255.18 529.86 l
249.48 526.68 l
243.96 523.32 l
238.62 519.84 l
233.52 516.18 l
231.06 514.26 l
228.66 512.4 l
226.32 510.42 l
224.04 508.44 l
221.82 506.46 l
219.66 504.42 l
217.62 502.38 l
215.58 500.28 l
213.66 498.18 l
211.8 496.02 l
210 493.86 l
208.26 491.64 l
206.64 489.48 l
205.08 487.26 l
203.58 484.98 l
202.2 482.76 l
200.88 480.48 l
199.68 478.2 l
198.54 475.86 l
197.52 473.58 l
196.56 471.24 l
195.66 468.9 l
194.94 466.56 l
194.28 464.22 l
193.68 461.88 l
193.2 459.48 l
192.84 457.14 l
192.6 454.74 l
192.42 452.4 l
192.36 450 l
192.36 449.76 192.18 449.64 192 449.64 c
191.76 449.64 191.64 449.82 191.64 450 c
h
334.44 554.88 m
340.5 552 l
334.56 548.88 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
0 0 0  setrgbcolor
261.12 448.68 m
(received)
[4.01514 5.34705 5.34705 5.34705 3.35522 6.01923 5.34705 6.01923 ] pdfys
( ) show
(sleep)
[4.68713 3.35522 5.34705 5.34705 6.01923 ] pdfys
( ) show
275.52 468.6 m
(signal)
[4.67743 3.34552 6.00952 6.00952 5.33734 3.34552 ] pdfys
n
340.5 552 m
340.5 525.48 361.98 504 388.5 504 c
415.02 504 436.5 525.48 436.5 552 c
436.5 578.52 415.02 600 388.5 600 c
361.98 600 340.5 578.52 340.5 552 c
0.867004 0.867004 0.867004  setrgbcolor
eofill
n
340.5 552 m
340.5 525.48 361.98 504 388.5 504 c
415.02 504 436.5 525.48 436.5 552 c
436.5 578.52 415.02 600 388.5 600 c
361.98 600 340.5 578.52 340.5 552 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
394.32 523.86 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(Sleeping)
[8.91665 4.46309 7.12217 7.12217 8.01954 4.46309 8.01954 8.01954 ] pdfys
n
422.52 518.4 m
423.24 518.34 l
424.08 518.22 l
424.86 517.98 l
425.64 517.68 l
426.42 517.32 l
427.2 516.9 l
427.92 516.36 l
428.7 515.76 l
429.48 515.1 l
430.92 513.54 l
431.7 512.64 l
433.14 510.72 l
433.86 509.64 l
434.58 508.5 l
435.3 507.3 l
435.96 506.04 l
437.34 503.34 l
438.72 500.4 l
439.98 497.28 l
441.3 493.92 l
442.5 490.44 l
443.7 486.72 l
444.84 482.82 l
445.98 478.74 l
447 474.54 l
448.02 470.16 l
448.98 465.66 l
449.82 461.04 l
450.66 456.3 l
451.44 451.5 l
452.76 441.54 l
453.3 436.44 l
453.78 431.28 l
454.14 426.12 l
454.44 420.84 l
454.68 415.62 l
454.8 410.28 l
454.86 405 l
454.8 399.72 l
454.68 394.38 l
454.44 389.16 l
454.14 383.88 l
453.78 378.72 l
453.3 373.56 l
452.76 368.46 l
452.16 363.48 l
451.44 358.56 l
450.66 353.7 l
449.88 348.96 l
448.98 344.34 l
448.02 339.84 l
447.06 335.52 l
445.98 331.26 l
444.9 327.24 l
443.76 323.34 l
442.56 319.62 l
441.36 316.08 l
440.04 312.72 l
438.78 309.6 l
437.4 306.66 l
436.02 303.96 l
435.36 302.7 l
434.64 301.5 l
433.92 300.36 l
432.48 298.32 l
431.76 297.36 l
431.04 296.46 l
430.32 295.68 l
429.54 294.9 l
428.82 294.24 l
428.82 294.24 428.76 294.24 428.76 294.18 c
427.44 293.52 l
427.26 293.46 427.02 293.52 426.9 293.7 c
426.84 293.88 426.9 294.12 427.08 294.18 c
428.4 294.9 l
428.34 294.84 l
429.06 295.44 l
429.78 296.16 l
430.5 296.94 l
431.16 297.84 l
431.88 298.74 l
432.6 299.7 l
433.32 300.78 l
433.98 301.92 l
434.7 303.06 l
435.36 304.32 l
436.74 306.96 l
438.06 309.9 l
439.38 313.02 l
440.64 316.32 l
441.84 319.8 l
443.04 323.52 l
444.18 327.42 l
445.26 331.44 l
446.34 335.64 l
447.3 340.02 l
448.26 344.46 l
449.1 349.08 l
449.94 353.82 l
450.72 358.62 l
451.38 363.54 l
451.98 368.58 l
452.52 373.62 l
453 378.78 l
453.42 383.94 l
453.72 389.16 l
453.96 394.44 l
454.08 399.72 l
454.14 405 l
454.08 410.28 l
453.96 415.56 l
453.72 420.84 l
453.42 426.06 l
453 431.22 l
452.52 436.38 l
451.98 441.42 l
451.38 446.46 l
450.66 451.38 l
449.94 456.18 l
449.1 460.92 l
448.2 465.48 l
447.3 469.98 l
446.28 474.36 l
445.26 478.56 l
444.12 482.58 l
442.98 486.48 l
441.78 490.14 l
440.58 493.68 l
439.32 496.98 l
438 500.1 l
436.68 502.98 l
435.3 505.68 l
434.64 506.88 l
433.92 508.08 l
433.26 509.22 l
431.82 511.26 l
431.1 512.16 l
429.66 513.84 l
428.22 515.16 l
427.5 515.76 l
426.78 516.24 l
426.06 516.66 l
425.34 517.02 l
424.68 517.26 l
423.96 517.44 l
423.24 517.56 l
422.46 517.62 l
422.28 517.62 422.1 517.8 422.1 518.04 c
422.16 518.22 422.34 518.4 422.52 518.4 c
h
429.3 291.48 m
422.64 292.02 l
427.08 297 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
0 0 0  setrgbcolor
477.12 357.48 m
/N55 [0 12 -12 0 0 0] Tf
(received)
[4.01038 5.34229 5.34229 5.40229 3.35046 6.01447 5.34229 6.01447 ] pdfys
( ) show
(wake)
[8.67828 5.40229 6.01447 5.34229 ] pdfys
( ) show
(signal)
[4.68237 3.35046 6.01447 6.01447 5.34229 3.35046 ] pdfys
( ) show
491.52 360.6 m
(w)
[8.66254 ] pdfys
(/ non) show
(e)
[5.40094 ] pdfys
(mp) show
(t)
[3.42232 ] pdfys
(y deque) show
219.12 585.48 m
(received)
[4.01038 5.34229 5.34229 5.40109 3.35046 6.01447 5.34229 6.01447 ] pdfys
( ) show
(wake)
[8.67828 5.40229 6.01447 5.34229 ] pdfys
( ) show
(signal)
[4.68237 3.35046 6.01447 6.01447 5.34229 3.35046 ] pdfys
( ) show
233.52 597.54 m
(w/)
[8.6759 3.34808 ] pdfys
( ) show
(empty)
[5.4011 9.30248 6.01208 3.34808 6.01208 ] pdfys
( ) show
(deque)
[6.01208 5.4011 6.01208 6.01208 5.3399 ] pdfys
n
354.48 585.6 m
344.4 585.54 l
334.38 585.18 l
324.36 584.64 l
314.4 583.92 l
304.5 583.02 l
294.72 581.94 l
285.06 580.62 l
275.58 579.18 l
266.22 577.56 l
257.04 575.76 l
248.04 573.84 l
239.28 571.8 l
234.96 570.72 l
230.7 569.58 l
226.56 568.44 l
222.42 567.24 l
218.4 566.04 l
214.44 564.78 l
210.54 563.52 l
206.7 562.2 l
202.98 560.88 l
199.32 559.5 l
195.78 558.12 l
192.3 556.74 l
188.88 555.3 l
185.58 553.86 l
182.34 552.36 l
179.22 550.86 l
176.22 549.36 l
173.34 547.8 l
170.52 546.24 l
167.82 544.68 l
165.18 543.12 l
162.72 541.5 l
160.32 539.88 l
158.1 538.26 l
155.94 536.58 l
153.96 534.9 l
152.04 533.28 l
150.3 531.6 l
148.62 529.86 l
147.12 528.18 l
145.74 526.5 l
144.54 524.76 l
143.4 523.08 l
142.44 521.34 l
141.66 519.6 l
140.94 517.86 l
140.46 516.18 l
140.04 514.44 l
139.8 512.7 l
139.74 510.96 l
139.86 504 l
140.16 497.04 l
140.7 490.2 l
141.36 483.48 l
141.78 480.24 l
142.2 477.06 l
142.68 473.88 l
143.16 470.88 l
143.76 467.88 l
144.3 465 l
144.9 462.18 l
145.56 459.54 l
146.22 456.96 l
146.94 454.5 l
147.66 452.16 l
148.38 449.94 l
149.16 447.9 l
149.88 445.98 l
150.72 444.24 l
151.5 442.62 l
152.34 441.18 l
153.12 439.92 l
153.06 439.98 l
154.14 439.14 l
154.26 439.02 154.32 438.78 154.2 438.6 c
154.02 438.42 153.78 438.42 153.66 438.54 c
152.58 439.44 l
152.52 439.5 l
151.68 440.82 l
150.84 442.26 l
150 443.94 l
149.22 445.68 l
148.44 447.66 l
147.66 449.7 l
146.94 451.92 l
146.22 454.32 l
145.5 456.78 l
144.84 459.36 l
144.18 462.06 l
143.58 464.82 l
142.98 467.76 l
142.44 470.7 l
141.48 476.94 l
141 480.12 l
140.58 483.42 l
139.92 490.14 l
139.44 496.98 l
139.14 503.94 l
139.02 511.02 l
139.08 512.82 l
139.32 514.62 l
139.74 516.36 l
140.28 518.16 l
140.94 519.96 l
141.78 521.7 l
142.8 523.44 l
143.88 525.18 l
145.14 526.98 l
146.58 528.66 l
148.08 530.4 l
149.76 532.14 l
151.56 533.82 l
153.48 535.5 l
155.52 537.18 l
157.62 538.86 l
159.9 540.48 l
162.3 542.1 l
164.82 543.72 l
167.4 545.34 l
170.16 546.9 l
172.98 548.46 l
175.92 550.02 l
182.04 553.08 l
185.28 554.52 l
188.58 555.96 l
192 557.4 l
195.48 558.84 l
199.08 560.22 l
202.74 561.6 l
206.46 562.92 l
210.3 564.24 l
214.2 565.5 l
218.16 566.76 l
226.32 569.16 l
230.52 570.3 l
234.78 571.44 l
239.1 572.52 l
247.86 574.62 l
256.86 576.54 l
266.1 578.28 l
275.46 579.9 l
285 581.4 l
294.66 582.66 l
304.44 583.8 l
314.34 584.7 l
324.3 585.42 l
334.32 585.96 l
344.4 586.26 l
354.48 586.38 l
354.72 586.38 354.9 586.2 354.9 586.02 c
354.9 585.78 354.72 585.6 354.48 585.6 c
h
154.74 441.9 m
157.98 436.02 l
151.38 436.92 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
158.04 367.62 m
157.14 367.5 l
157.26 367.56 l
156.36 367.26 l
156.42 367.26 l
155.58 366.78 l
154.74 366.12 l
153.9 365.22 l
153.06 364.2 l
152.28 363 l
151.44 361.62 l
150.6 360.06 l
149.82 358.38 l
149.04 356.58 l
148.32 354.6 l
147.54 352.44 l
146.82 350.22 l
146.16 347.88 l
145.44 345.42 l
144.84 342.84 l
144.18 340.14 l
143.64 337.38 l
143.1 334.56 l
142.56 331.62 l
142.08 328.62 l
141.24 322.38 l
140.52 315.96 l
140.04 309.42 l
139.74 302.7 l
139.62 295.98 l
139.68 294.36 l
139.92 292.68 l
140.28 291 l
140.82 289.38 l
141.54 287.7 l
142.32 286.08 l
143.28 284.4 l
144.36 282.78 l
145.62 281.16 l
147 279.48 l
148.5 277.86 l
150.12 276.24 l
151.92 274.62 l
153.84 273.06 l
155.82 271.44 l
157.98 269.88 l
160.2 268.32 l
162.6 266.76 l
165.06 265.2 l
167.7 263.7 l
170.4 262.14 l
173.22 260.64 l
176.1 259.2 l
179.16 257.76 l
182.28 256.32 l
185.46 254.88 l
188.76 253.5 l
192.18 252.12 l
195.66 250.74 l
199.26 249.42 l
202.92 248.16 l
206.64 246.84 l
210.48 245.58 l
214.32 244.38 l
218.34 243.18 l
222.36 242.04 l
226.44 240.9 l
230.64 239.76 l
234.9 238.68 l
239.16 237.66 l
247.98 235.68 l
256.98 233.82 l
266.16 232.14 l
275.52 230.58 l
285.06 229.14 l
294.72 227.94 l
304.5 226.86 l
314.4 226.02 l
324.36 225.3 l
334.38 224.76 l
344.4 224.46 l
349.5 224.4 l
349.74 224.4 349.86 224.28 349.86 224.04 c
349.86 223.86 349.68 223.68 349.5 223.68 c
344.4 223.74 l
334.32 224.04 l
324.3 224.52 l
314.34 225.24 l
304.44 226.14 l
294.6 227.16 l
284.94 228.42 l
275.4 229.8 l
266.04 231.36 l
256.8 233.1 l
247.8 234.96 l
238.98 236.94 l
234.72 237.96 l
230.46 239.04 l
226.26 240.18 l
222.12 241.32 l
218.1 242.46 l
214.14 243.66 l
210.24 244.92 l
206.4 246.12 l
202.62 247.44 l
198.96 248.76 l
191.88 251.4 l
188.46 252.78 l
185.16 254.22 l
181.92 255.6 l
178.8 257.04 l
175.8 258.54 l
172.86 259.98 l
170.04 261.48 l
167.28 263.04 l
164.7 264.54 l
162.18 266.1 l
159.78 267.66 l
157.5 269.28 l
155.34 270.84 l
153.3 272.46 l
151.44 274.08 l
149.64 275.7 l
147.96 277.38 l
146.4 279 l
145.02 280.68 l
143.76 282.36 l
142.62 284.04 l
141.66 285.72 l
140.82 287.46 l
140.1 289.14 l
139.56 290.88 l
139.2 292.56 l
138.96 294.3 l
138.84 295.98 l
138.96 302.76 l
139.26 309.48 l
139.8 316.08 l
140.46 322.5 l
140.88 325.62 l
141.36 328.74 l
141.84 331.74 l
142.32 334.68 l
142.92 337.56 l
143.46 340.32 l
144.12 343.02 l
144.72 345.6 l
145.44 348.06 l
146.1 350.46 l
146.82 352.74 l
147.6 354.84 l
148.38 356.82 l
149.16 358.68 l
149.94 360.42 l
150.78 361.98 l
151.62 363.42 l
152.52 364.68 l
153.36 365.76 l
154.26 366.66 l
155.16 367.38 l
156.06 367.92 l
156.12 367.92 l
157.02 368.22 l
157.02 368.28 157.08 368.28 157.08 368.28 c
157.98 368.4 l
158.16 368.4 158.34 368.28 158.4 368.04 c
158.4 367.86 158.28 367.68 158.04 367.62 c
h
348.54 227.04 m
354.48 223.98 l
348.48 221.04 l
f
0 0 0  setrgbcolor
225.12 142.74 m
(steal)
[4.68475 3.35284 5.34467 5.34467 3.35284 ] pdfys
( ) show
(successful)
[4.68475 6.01685 5.34467 5.34467 5.34467 4.68475 4.61755 3.95996 6.01685 3.35284 ] pdfys
( ) show
239.52 148.14 m
(\(found ) show
(w)
[8.66254 ] pdfys
(ork\)) show
n
247.5 283.5 m
253.5 289.5 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 6080 59169 a Fn(Figure)465 b(4-1:)538 b
Fm(State)405 b(diagram)f(of)h(a)f(pro)34 b(cessor's)403
b(execution)h(in)g(algorithm)h(WSAP)-101 b(.)3951 63975
y Fy(Figure)483 b(4-1)h(summarizes)g(the)f(execution)g(of)i(a)f(pro)36
b(cessor)483 b(in)h(algorithm)g(WSAP)f(using)h(a)2000
65580 y(state)c(diagram;)503 b(the)479 b(three)g(p)36
b(ossible)480 b(states)f(a)h(pro)36 b(cessor)480 b(can)f(b)36
b(e)480 b(in)f(are)h(\\W)-108 b(orking")481 b(\(when)2000
67185 y(the)614 b(pro)36 b(cessor)615 b(is)g(executing)f(a)h(thread\),)
659 b(\\Stealing")616 b(\(when)e(the)g(pro)36 b(cessor)614
b(is)h(making)h(a)2000 68790 y(steal)379 b(attempt\),)390
b(and)378 b(\\Sleeping")h(\(when)g(the)f(pro)36 b(cessor)379
b(resp)36 b(onds)378 b(to)h(a)h(sleep)f(signal\).)560
b(Since)2000 70395 y(pro)36 b(cessors)565 b(can)f(receiv)-36
b(e)565 b(sleep)f(signals)h(at)g(the)e(b)36 b(eginning)565
b(of)g(an)-36 b(y)564 b(step,)597 b(it)564 b(is)h(p)36
b(ossible)564 b(for)2000 72000 y(some)447 b(of)g(them)f(to)g(go)h(to)g
(sleep)f(ev)-36 b(en)447 b(if)g(they)f(ha)-36 b(v)g(e)447
b(w)-36 b(ork)447 b(on)f(their)g(deques.)617 b(T)-108
b(o)447 b(prev)-36 b(en)g(t)445 b(this)25350 75321 y(29)p
eop end
%%Page: 30 30
TeXDict begin 30 29 bop 2000 1328 a Fy(w)-36 b(ork)366
b(from)h(going)f(unnoticed,)378 b(w)-36 b(e)366 b(mo)36
b(dify)367 b(the)e(w)-36 b(ork-stealing)367 b(strategy)f(as)g(follo)-36
b(ws:)547 b(the)365 b(thief)2000 2933 y(pro)36 b(cessor)361
b(c)-36 b(ho)36 b(oses)361 b(a)g(victim)h(from)f(the)f(set)g(of)i(pro)
36 b(cessors)361 b(that)f(are)h(either)f(a)-36 b(w)g(ak)g(e)362
b(or)f(sleeping)2000 4539 y(with)429 b(nonempt)-36 b(y)427
b(deques.)577 b(If)429 b(the)f(victim)h(pro)36 b(cessor)429
b(is)g(asleep,)h(then)e(the)g(thief)g(sends)g(a)h(w)-36
b(ak)g(e)2000 6144 y(signal)451 b(to)g(the)f(victim)i(and)e(puts)g
(itself)h(to)g(sleep)g(\(note)f(that)g(the)g(thief)h(has)f(an)h(empt)
-36 b(y)450 b(deque)2000 7749 y(since)515 b(it)h(is)f(w)-36
b(ork)517 b(stealing\);)557 b(the)515 b(victim)h(a)-36
b(w)g(ak)g(ens)516 b(and)f(con)-36 b(tin)g(ues)514 b(executing)i(where)
f(it)g(left)2000 9354 y(o\256.)578 b(If)433 b(the)f(victim)h(pro)36
b(cessor)432 b(is)h(a)-36 b(w)g(ak)g(e,)434 b(then)d(the)h(thief)g
(follo)-36 b(ws)435 b(the)c(original)j(w)-36 b(ork-stealing)2000
10959 y(proto)36 b(col:)812 b(if)551 b(the)f(victim's)h(deque)f(is)g
(nonempt)-36 b(y)-108 b(,)579 b(the)549 b(thief)i(remo)-36
b(v)g(es)550 b(the)g(topmost)g(thread)2000 12564 y(and)454
b(starts)h(executing)g(it,)461 b(and)454 b(if)i(the)e(deque)h(is)g
(empt)-36 b(y)-108 b(,)460 b(the)454 b(thief)i(restarts)e(the)g(pro)36
b(cess)455 b(and)2000 14169 y(c)-36 b(ho)36 b(oses)434
b(another)f(victim)i(at)e(random.)3951 15844 y(Using)442
b(algorithm)h(WS,)g(the)e(exp)36 b(ected)442 b(time)g(to)h(execute)f(a)
h(m)-36 b(ultithreaded)440 b(computation)2000 17449 y(on)476
b Fu(P)657 b Fy(pro)36 b(cessors)477 b(is)f Fu(O)36 b
Fy(\()p Fu(T)15235 17648 y Ft(1)15761 17449 y Fu(=P)506
b Fy(+)324 b Fu(T)19853 17648 y Fq(1)20850 17449 y Fy(\),)487
b(where)476 b Fu(T)26766 17648 y Ft(1)27768 17449 y Fy(is)h(the)e(w)-36
b(ork)477 b(and)f Fu(T)37957 17648 y Fq(1)39430 17449
y Fy(is)g(the)g(critical-path)2000 19054 y(length.)550
b(This)352 b(b)36 b(ound)349 b(has)i(b)36 b(een)350 b(sho)-36
b(wn)351 b(using)g(a)g(dela)-36 b(y-sequence)351 b(argumen)-36
b(t)350 b(b)-36 b(y)351 b(Blumofe)g(and)2000 20659 y(Leiserson)312
b([7],)338 b(as)312 b(w)-36 b(ell)313 b(as)f(using)g(a)h(p)36
b(oten)-36 b(tial-function)311 b(argumen)-36 b(t)312
b(b)-36 b(y)312 b(Arora)g(et.)538 b(al.)313 b([2].)539
b(Arora)2000 22264 y(et.)k(al.)i(also)330 b(pro)-36 b(v)g(e)329
b(an)g(execution)g(time)g(b)36 b(ound)328 b(for)i(a)f(non)-36
b(blo)36 b(c)-36 b(king)330 b(implemen)-36 b(tation)328
b(of)i(WS)f(in)2000 23870 y(a)388 b(t)-36 b(w)g(o-lev)g(el)388
b(sc)-36 b(heduling)387 b(en)-36 b(vironmen)g(t,)396
b(where)388 b(the)f(computation)g(executes)g(on)h(a)g(\257xed)f(set)g
(of)2000 25475 y Fu(P)510 b Fy(pro)36 b(cesses)328 b(that)h(are)f(sc)
-36 b(heduled)328 b(b)-36 b(y)328 b(the)h(op)36 b(erating)328
b(system)h(on)-36 b(to)329 b(a)g(time-v)-72 b(arying)329
b(allo)36 b(cation)2000 27080 y(of)292 b(ph)-36 b(ysical)293
b(pro)36 b(cessors.)531 b(In)292 b(the)f(case)h(of)g(algorithm)h(WSAP)
-108 b(,)291 b(the)g(mapping)h(b)36 b(et)-36 b(w)g(een)291
b(pro)36 b(cesses)2000 28685 y(to)453 b(ph)-36 b(ysical)454
b(pro)36 b(cessors)454 b(is)f(one-to-one;)463 b(that)453
b(is,)459 b(the)452 b(computation)h(executes)h(on)f(exactly)i(as)2000
30290 y(man)-36 b(y)557 b(virtual)h(pro)36 b(cessors)558
b(as)g(there)e(are)i(ph)-36 b(ysical)558 b(pro)36 b(cessors.)950
b(W)-108 b(e)557 b(exp)36 b(ect)558 b(that)f(one)g(can)2000
31895 y(use)394 b(an)h(approac)-36 b(h)394 b(similar)h(to)g(the)f(p)36
b(oten)-36 b(tial-function)394 b(argumen)-36 b(t)394
b(used)f(in)i([2])g(to)g(analyze)h(the)2000 33500 y(execution)434
b(time)f(of)i(algorithm)f(WSAP)-108 b(.)2000 38368 y
FC(4.2)2152 b(Algorithm)716 b(WSAP)h(in)f(Practice)2000
41431 y Fy(In)498 b(the)g(adv)-36 b(ersarial)500 b(mo)36
b(del,)515 b(the)498 b(decisions)g(made)g(b)-36 b(y)499
b(OS)e(are)i(completely)g(decoupled)f(from)2000 43036
y(those)380 b(made)g(b)-36 b(y)380 b(JS;)g(sp)36 b(eci\257cally)-108
b(,)392 b(OS)379 b(do)36 b(es)380 b(not)g(consult)g(with)g(JS)g(when)f
(determining)h(a)g(job's)2000 44641 y(allo)36 b(cation)394
b(for)e(a)g(giv)-36 b(en)392 b(time)g(step.)564 b(While)392
b(this)g(mo)36 b(del)392 b(is)g(suitable)g(for)g(analyzing)h(the)e(w)
-36 b(orst-)2000 46246 y(case)472 b(p)36 b(erformance)473
b(of)f(a)h(job)f(sc)-36 b(heduling)471 b(algorithm|since)i(it)f
(captures)f(the)g(notion)h(that)g(a)2000 47851 y(giv)-36
b(en)514 b(job)f(has)g(no)f(con)-36 b(trol)514 b(o)-36
b(v)g(er)513 b(the)f(n)-36 b(um)g(b)36 b(er)512 b(and)g(pro)36
b(cessor)513 b(requiremen)-36 b(ts)512 b(of)i(other)f(jobs)2000
49456 y(in)469 b(the)f(system|it)h(only)g(tells)g(half)h(the)e(story)h
(in)f(practice.)684 b(In)469 b(a)g(real)g(t)-36 b(w)g(o-lev)g(el)470
b(sc)-36 b(heduling)2000 51062 y(system)586 b(using)f(a)h(dynamic)g
(pro)36 b(cessor-allo)g(cation)588 b(p)36 b(olicy)-108
b(,)624 b(the)586 b(op)36 b(erating)586 b(system)f(and)h(job)2000
52667 y(sc)-36 b(heduler)437 b(comm)-36 b(unicate)437
b(with)h(eac)-36 b(h)437 b(other)h(to)f(determine)g(the)g(curren)-36
b(t)437 b(allo)36 b(cation)439 b(of)f(a)g(job.)2000 54272
y(In)464 b(particular,)471 b(the)463 b(op)36 b(erating)464
b(system)g(gathers)g(information)h(ab)36 b(out)463 b(the)g(curren)-36
b(t)463 b(pro)36 b(cessor)2000 55877 y(desire)373 b(of)g(eac)-36
b(h)373 b(job)h(in)e(the)h(system,)385 b(and)373 b(then)f(uses)g(this)h
(information)h(to)f(mak)-36 b(e)373 b(its)g(allo)36 b(cation)2000
57482 y(decisions.)987 b(While)570 b(there)f(exist)h(dynamic)g(pro)36
b(cessor-allo)g(cation)571 b(p)36 b(olicies)570 b(that)g(do)f(not)g
(use)2000 59087 y(a)542 b(job's)h(curren)-36 b(t)541
b(pro)36 b(cessor)542 b(desire)g(in)f(their)h(decisions,)570
b(these)541 b(p)36 b(olicies)543 b(do)f(not)g(resp)36
b(ond)541 b(to)2000 60692 y(c)-36 b(hanges)545 b(in)g(the)f
(parallelism)i(of)g(jobs)f(during)f(run)-36 b(time,)572
b(and)545 b(th)-36 b(us)543 b(cannot)i(run)f(adaptiv)-36
b(ely)2000 62297 y(parallel)435 b(jobs)f(e\261cien)-36
b(tly)434 b(\(see)f(Chapter)g(5\).)3951 63972 y(In)440
b(order)h(to)f(estimate)h(the)f(pro)36 b(cessor)441 b(desire)f(of)i(a)f
(job)g(during)e(run)-36 b(time,)442 b(there)e(are)h(three)2000
65577 y(p)36 b(olicy)435 b(questions)f(that)f(need)g(to)g(b)36
b(e)434 b(addressed:)3445 67975 y(1\))651 b(who)434 b(is)f(resp)36
b(onsible)434 b(for)g(estimating)g(a)g(job's)g(pro)36
b(cessor)434 b(desire,)3445 69988 y(2\))651 b(ho)-36
b(w)433 b(should)g(the)g(desire)h(b)36 b(e)433 b(estimated,)h(and)3445
72000 y(3\))651 b(ho)-36 b(w)433 b(often)h(should)f(the)g(desire)h(b)36
b(e)433 b(estimated.)25350 75321 y(30)p eop end
%%Page: 31 31
TeXDict begin 31 30 bop 3951 1328 a Fy(W)-108 b(e)509
b(discuss)g(the)g(p)36 b(olicies)510 b(used)e(in)h(algorithm)h(WSAP)f
(in)g(resp)36 b(onse)509 b(to)g(these)g(questions)2000
2933 y(in)562 b(the)g(remainder)g(of)i(this)e(section.)965
b(W)-108 b(e)563 b(b)36 b(egin)562 b(b)-36 b(y)563 b(illustrating)g(a)g
(fundamen)-36 b(tal)561 b(problem)2000 4539 y(with)481
b(strategies)h(that)e(measure)h(a)g(job's)h(instan)-36
b(taneous)480 b(parallelism)i(directly)-108 b(,)493 b(and)481
b(use)f(this)2000 6144 y(problem)466 b(to)g(guide)h(our)f(p)36
b(olicy)467 b(decisions)g(on)f(questions)h(1\))f(and)g(2\).)677
b(Then,)475 b(w)-36 b(e)466 b(explain)h(our)2000 7749
y(p)36 b(olicy)561 b(of)g(estimating)f(a)h(job's)f(desire)g(at)g
(regular)g(in)-36 b(terv)-72 b(als)561 b(instead)e(of)i(irregular)f
(ones,)592 b(in)2000 9354 y(resp)36 b(onse)433 b(to)h(question)g(3\).)
2000 13298 y Fx(Estimating)599 b(a)f(Job's)g(Pro)50 b(cessor)599
b(Desire)2000 15792 y Fy(In)466 b(order)g(to)h(pro)-36
b(vide)466 b(a)h(go)36 b(o)g(d)467 b(estimate)g(for)g(the)f(pro)36
b(cessor)466 b(desire)h(of)g(a)f(job,)476 b(w)-36 b(e)466
b(need)g(infor-)2000 17397 y(mation)455 b(ab)36 b(out)454
b(the)h(di\256eren)-36 b(t)453 b(run)-36 b(time)454 b(c)-36
b(haracteristics)455 b(of)g(the)f(job,)461 b(suc)-36
b(h)454 b(as)h(the)f(n)-36 b(um)g(b)36 b(er)453 b(of)2000
19002 y(threads)j(it)h(is)g(curren)-36 b(tly)457 b(using,)462
b(the)457 b(amoun)-36 b(t)456 b(of)i(w)-36 b(ork)457
b(b)36 b(eing)457 b(p)36 b(erformed)457 b(b)-36 b(y)457
b(those)f(threads,)2000 20607 y(or)489 b(an)-36 b(y)489
b(sync)-36 b(hronization)489 b(constrain)-36 b(ts)488
b(that)h(limit)g(pro)36 b(cessor)489 b(utilization.)745
b(Since)488 b(this)h(infor-)2000 22212 y(mation)348 b(is)h(directly)g
(and)e(readily)i(a)-36 b(v)-72 b(ailable)350 b(to)e(the)g(job)h(sc)-36
b(heduler,)364 b(w)-36 b(e)349 b(giv)-36 b(e)349 b(the)e(resp)36
b(onsibilit)-36 b(y)2000 23817 y(of)437 b(estimating)f(a)g(job's)h(pro)
36 b(cessor)436 b(desire)f(to)h(the)g(job)g(sc)-36 b(heduler)435
b(itself)i(\(i.e.)585 b(the)436 b(second-lev)-36 b(el)2000
25422 y(sc)g(heduler\).)784 b(While)504 b(it)e(is)h(true)f(that)g(the)h
(op)36 b(erating)502 b(system)h(can)g(obtain)g(di\256eren)-36
b(t)501 b(run)-36 b(time)2000 27027 y(statistics)553
b(of)g(a)g(job|suc)-36 b(h)552 b(as)g(the)g(utilization)h(of)h(the)d
(job's)j(pro)36 b(cessors)552 b(or)h(the)f(size)h(of)g(its)2000
28632 y(memory)c(fo)36 b(otprin)-36 b(t|this)547 b(information)i(is)f
(necessarily)h(coarse-grained)g(and)e(rev)-36 b(eals)549
b(noth-)2000 30237 y(ing)451 b(ab)36 b(out)451 b(the)g(in)-36
b(ternal)451 b(w)-36 b(orkings)452 b(or)g(dep)36 b(endencies)450
b(of)i(the)e(job.)632 b(F)-108 b(or)451 b(example,)457
b(consider)451 b(a)2000 31843 y(program)437 b(written)f(in)h(the)f
(Cilk)i(m)-36 b(ultithreaded)435 b(language)j([47],)h(and)d(recall)i
(that)e(Cilk)i(uses)f(a)2000 33448 y(w)-36 b(ork-stealing)472
b(sc)-36 b(heduler)471 b(whic)-36 b(h)471 b(implemen)-36
b(ts)470 b(algorithm)i(WS.)g(During)f(a)g(giv)-36 b(en)472
b(run)f(of)h(the)2000 35053 y(program,)549 b(the)524
b(op)36 b(erating)526 b(system)f(can)h(only)g(determine)e(the)h(n)-36
b(um)g(b)36 b(er)523 b(of)j(pro)36 b(cessors)526 b(b)36
b(eing)2000 36658 y(used)430 b(b)-36 b(y)431 b(the)g(job)g(and)g(has)g
(no)g(direct)f(kno)-36 b(wledge)432 b(ab)36 b(out)431
b(the)g(n)-36 b(um)g(b)36 b(er)429 b(of)j(threads)e(that)h(ha)-36
b(v)g(e)2000 38263 y(b)36 b(een)388 b(queued)g(on)g(the)g(ready)h
(deques)f(of)h(the)f(pro)36 b(cessors.)564 b(Since)388
b(eac)-36 b(h)388 b(of)h(these)f(threads)g(could)2000
39868 y(p)36 b(oten)-36 b(tially)572 b(execute)g(in)f(parallel,)608
b(it)571 b(is)h(imp)36 b(ortan)-36 b(t)571 b(that)g(the)g(en)-36
b(tit)g(y)571 b(resp)36 b(onsible)571 b(for)h(esti-)2000
41473 y(mating)456 b(the)g(job's)g(desire)g(b)36 b(e)456
b(a)-36 b(w)g(are)457 b(of)f(them.)645 b(The)456 b(only)h(en)-36
b(tit)g(y)456 b(with)g(direct)g(access)g(to)g(this)2000
43078 y(information)434 b(is)g(the)f(job)h(sc)-36 b(heduler.)3951
44698 y(Giv)g(en)519 b(that)g(the)g(job)h(sc)-36 b(heduler)518
b(is)i(in)g(c)-36 b(harge)519 b(of)h(estimating)g(a)g(job's)g(pro)36
b(cessor)520 b(desire,)2000 46303 y(the)c(question)g(still)h(remains)f
(as)h(to)f(ho)-36 b(w)516 b(this)g(estimate)h(is)f(made)g(and,)537
b(in)516 b(particular,)537 b(what)2000 47909 y(run)-36
b(time)431 b(information)i(ab)36 b(out)433 b(the)e(job)i(is)g(used.)577
b(As)432 b(w)-36 b(e)433 b(observ)-36 b(ed)432 b(in)h(Chapter)f(2,)h
(most)f(prior)2000 49514 y(w)-36 b(ork)538 b(on)g(dynamic)f(pro)36
b(cessor-allo)g(cation)539 b(p)36 b(olicies)539 b(assumes)e(that)g(the)
g(pro)36 b(cessor)538 b(desire)f(of)2000 51119 y(a)462
b(job)g(is)g(either)g(kno)-36 b(wn)462 b(b)-36 b(y)461
b(the)h(sc)-36 b(heduling)461 b(system)h(or)g(inferred)f(using)h(some)g
(measuremen)-36 b(t)2000 52724 y(of)498 b(the)e(job's)i(instan)-36
b(taneous)496 b(parallelism.)770 b(In)497 b(the)f(latter)h(case,)514
b(almost)498 b(all)f(studies)g(use)g(the)2000 54329 y(n)-36
b(um)g(b)36 b(er)364 b(of)j(op)36 b(erating)366 b(system)g(threads)f
(or)h(pro)36 b(cesses)366 b(b)36 b(eing)366 b(used)f(b)-36
b(y)366 b(the)f(job)h(to)g(measure)g(its)2000 55934 y(instan)-36
b(taneous)364 b(parallelism.)557 b(Ev)-36 b(en)365 b(if)h(this)f(metho)
36 b(d)364 b(w)-36 b(ere)365 b(accurate,)379 b(ho)-36
b(w)g(ev)g(er|whic)g(h,)379 b(as)366 b(w)-36 b(e)2000
57539 y(sho)g(w)g(ed)468 b(in)g(the)g(example)h(of)g(Cilk)g(ab)36
b(o)-36 b(v)g(e,)478 b(is)469 b(not)f(alw)-36 b(a)g(ys)470
b(the)d(case|w)-36 b(e)469 b(main)-36 b(tain)468 b(that)g
Fg(any)2000 59144 y(me)-66 b(asur)g(e)559 b(of)h(a)g(job's)g
(instantane)-66 b(ous)559 b(p)-66 b(ar)g(al)66 b(lelism)559
b(is)h(not)g(an)g(ac)-66 b(cur)g(ate)559 b(or)h(r)-66
b(eliable)559 b(me)-66 b(asur)g(e)2000 60749 y(of)572
b(its)f(pr)-66 b(o)g(c)g(essor)572 b(desir)-66 b(e)p
Fy(.)926 b(T)-108 b(o)551 b(see)f(wh)-36 b(y)550 b(this)g(is)g(true,)
579 b(w)-36 b(e)550 b(presen)-36 b(t)549 b(a)h(t)-36
b(ypical)551 b(example)g(of)g(a)2000 62354 y(m)-36 b(ultithreaded)583
b(computation)h(whose)g(instan)-36 b(taneous)584 b(parallelism)h(is)g
(alw)-36 b(a)g(ys)585 b(b)36 b(ounded)583 b(b)-36 b(y)2000
63959 y(the)380 b(n)-36 b(um)g(b)36 b(er)379 b(of)i(pro)36
b(cessors)380 b(it)h(is)g(allo)36 b(cated,)392 b(but)379
b(whose)i(a)-36 b(v)g(erage)382 b(parallelism)f(ma)-36
b(y)381 b(b)36 b(e)380 b(orders)2000 65565 y(of)576 b(magnitude)f
(higher.)1002 b(This)576 b(computation,)610 b(called)576
b(the)f(LOOPY)f(b)36 b(enc)-36 b(hmark,)610 b(is)575
b(sho)-36 b(wn)2000 67170 y(in)539 b(Figure)g(4-2.)895
b(W)-108 b(e)539 b(assume)g(that)g(LOOPY)f(is)h(sc)-36
b(heduled)538 b(using)h(a)h(depth-\257rst)c(algorithm)2000
68775 y(\(lik)-36 b(e)463 b(algorithm)f(WS\),)g(meaning)g(that)f
(execution)h(go)36 b(es)463 b(to)f(the)f(c)-36 b(hild)462
b(whenev)-36 b(er)461 b(a)i(thread)e(is)2000 70380 y(spa)-36
b(wned)433 b(or)h(created.)3951 72000 y(Supp)36 b(ose)365
b(that)h(LOOPY)f(starts)i(out)f(executing)g(on)h(one)f(pro)36
b(cessor.)556 b(The)367 b(pro)36 b(cessor)366 b(starts)25350
75321 y(31)p eop end
%%Page: 32 32
TeXDict begin 32 31 bop 10933 18934 a @beginspecial 159
@llx 173 @lly 611 @urx 457 @ury 2712 @rwi @setspecial
%%BeginDocument: loopy.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Thesis Figures.ppt)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910130614-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 159 173 611 457
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
159 173 moveto 611 173 lineto 611 457 lineto 159 457 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
159 173 452 284 rectclip
[ 0 -1 1 0 -13.68053 616.00208 ] concat
/N53 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font ACDMFF+TimesNewRoman,Italic
11 dict begin
/FontName /ACDMFF+TimesNewRoman,Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 940 dict dup begin
/.notdef 
<10bf317005b8302fd45b07fb1549d56700cd874f9785acaaa30edf166f7d
7fe0592f51d07c5aaaff66bb85fa> ND 
/G 
<10bf317022f0081597cff576c41b27466fe1e52d193034b36888cf3b2ca3
68a68d779fafce3b72c5293d6a3f887f14f5a58b0034aee71698546c4c0b
991181b84d52072635415222f7bd056e66888b79f595879cd3baf7efe159
063d43845ef9a025705d8ec9651b457099654394d2992e33c012343fc4f2
66bd7986fb9a6f6efaf2a6ba768f8b612ddae90ca0c801101a2b8812c0d1
878114ac488c2949f4102b5df4236669c09640ae29afbccb443338828b0c
4517115a6e5e3eaba334cf1dcb7ac13c67e72a57aac6dbd46b8372a5bd25
904367c6e60889f07aa8786d7c3e90b25aad92f3e9244c386428145e> ND 
/J 
<10bf31709b62baa6ed3ff432fee50dc00607d5d72252eb6bcb129243db2d
20da9a1bba6a2a66e7e0aa49e064b3cd91583d479cde6fdea9b68aa6c210
4c340f6d9eaee545ca5b3220798b86c6c501559929908fda3517e01edd65
a0870f99744c55f160054bcc26b2401397f00007e631a3ec8136de71a1ea
54cb887274c598e3d9a0cf2e81ae1712a04402d31806c05b33b9d0d9e621
a3c3431c175d72d405299a8e75c6a1cb1be61e602566dfa0681fdb581ce1
0fdbd4208d25dddacc> ND 
/N 
<10bf31709dce1b1ed41c47addeb7a391f41ed8083f4afeff1c947df10a4d
2de36425e89f6bd82e60d9023e2d78bc84830b34e62f8a4568be7bc208ea
4fc6e9ca969e8aec41dd80f80f4c4fe472639ba3366569cb87de5f9213ad
98120d1a71b4584b509f09b5200a62d6e7ca1119d61533e703d2441b08cc
bd9b3c336c42188f729bae655049971d2e4b7d6cd44a7b76666f37ef7463
60a28e6259dace068776b5c8cc33f800437ece6dccba77e4b0e7> ND 
/P 
<10bf3170815b61898ffe1eb7109b3eb3fe8179c947126cde0ca1f0f3a57b
4fde4a0e49d820192254c426f8d7a6d5299e28c0b3aaba378c26c6f147b4
8a5a4c0122cff4b969b15e30e1453b0937d2109da30e4ce446da9a7e9ab9
e76e27900c04c0add80988c0c7b9922b0ef4ac86d418261120e07369b2d9
b1acf0aff00cee423b3cd264a8c70a5a05e09d6c0a09605b3b34e7c29b8d
125ff0629d3b1843ba7d87672b5291e3ddb8d717dd2e32b1285a5857a4d9
e80141d3d7199fd282a27fa888d0b8> ND 
/v 
<10bf317052452fc5aad0396ffeda7b26078ecb2bae9160e8a2ff79b8413c
c7863fa52f084c124f376817021d111fd45356a585fa0f70e03eec5a8676
69a27d45857cbfc4b89a5c4acca120869d8cdd588b39c064d4789bf98644
9a3831f33b7c7bd3b9aba947b52369d2b2d9cafbc4e36825d1ad23fe62d1
3909f21c6e75f9844e2a64feab8b455daba318be09eef7ede45676853dea
cc5a8d23424c2053e51531cbf2f4df> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDMFF+TimesNewRoman,Italic findfont /Encoding get
dup 0 /.notdef put
dup 71 /G put
dup 74 /J put
dup 78 /N put
dup 80 /P put
dup 118 /v put
pop
%%EndResource
[/N22/ACDMFF+TimesNewRoman,Italic 1 TZ
%%BeginResource: font ACDLEF+TimesNewRoman,Bold
11 dict begin
/FontName /ACDLEF+TimesNewRoman,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/D 
<10bf31706ae1a2410dd640e3e63d847a829b887bc572c26d027aaf3e136c
2965f1293615651feb84663300d52dce5d4a1961bda9cad7337a8805c555
166a043880853e78ef403eb7fe435d03cab0551af60247e85130f09c90ee
3c94d2d750604e6844157c0d126af0ef65c2ffa230950278db25e9809ea7
9a8c1fa4413a025279b92ff5101f46204b53ff6a0cd3f132f97577e39b91
6b4a047cd64857ea8d45d29ad846499212ffe6976c40507ef6807317f99f
4b6e39b4058fe2a6f1ec74e6> ND 
/S 
<10bf31704d4d2f6115e62eb3cb4a9ddfe5db9cde1ae983f5728ba6db2f41
314d20066a19799bf57ae2dbe01a0b61f8c2a6e42b2f8d918c37811d5f70
25e5ac7e73fd1ec59e9775c0cede584da8df39f8d2add4534fa37460fbd9
dae4a220a5f6fbc49ab223ba031a8d18b19668d10e453118f3fe781a6ca4
9ea97b3a0d73b13b22e8ae77669dd6c88e1b9b68dd8f7b7fe964bf532900
c4d5709fca3afda461ac703c3e3e8b96f1a46b23454036057cd11c016ab5
9498270bb64ebc20243227d866d9101252cc6e707890e5fee274a276aa20
d2eb6b7cc56e4e5597254e2da0c7a35d81099f865acf33314c8d04d484f3
6e2da3527c7dcc93dc75cb24ec34139fcb9835a375> ND 
/a 
<10bf31704ab21818500193ceb7cb34e9df44d2f8ec9dd5c98d55ae22888d
9df2e6f213a10b28cefcaf95aa9640c835b3bd1ffcdc75a4a63fa25c6d04
6e0087c66cd64147f3ed96dff91cb0244813473d9381cce21ce83d903943
f4ac8f3242bc292da1de1531cc532a86e1f3cc7d1e021df739aea871418b
5de99006d4c5ab2682816c98649eed26a6b084e7f7ec911ec66ec74f0ad5
38dbeb4cb0b01a394cc508cff8b61d71209af50bf8f8ceff036e8a30b999
2cc25f8ecf6950be6e3e9dff42e54836dd89050eeb2b37dd3a0be262e8d0
35a9d19daa2c018f11edad2db0075ba942763369ef43d94cbf0bc2410fbc
2ce40e96872b5ba313aee01224b418272066554dc36af669eca48e0dfc1b
4fcee06d> ND 
/c 
<10bf3170435d9d6bdca5552f143ea8eb00c0f43aa73ae186a90dee90257c
64691c2333fd0a4a4dc6b26abc1900c24aba3f592c7bcbc889fe7b599700
778b0a93f96f5579a87f760b1dbd87bf8d1ff4e807fa73245f81d5812a13
e76b05bfefadfd217cb7b7b5fc9876179e2b2989aa002dde4d77d381e7f0
f6ace03d73f2b18f749bc10e6974c8b964b6425bd099adf48ae2e4868a46
74e70af2af4f77dd356ffc858f87> ND 
/i 
<10bf3170524a2d226105953d5eb24f8564e6b6f09006dcc5de63bfd94641
5431d498669f2a636dd1ce21202db89c173adcec99d9be4feb68a686a334
a4c32747de504ee5b288cf4791bb5cdd4a6f4abb420134e012ba9028a116
613f1accf2a80106e9041eb6299349713fdcc742227c93df73e17499d587
d463b9326464b14774fda5181e4133> ND 
/m 
<10bf3170422e98c5ed7ba2b7088d79e9e2818a90b5d814a1206a981fa47f
862545d86e5774c22cb75288f646fafd458bbc6d054d4d3cc74a2523e484
fe78e199ddcb1968c8b6caca0f25aad70888cf9affb9ce4bc81b508f7bc6
f3f4101e8765442e5856ef14e7a67b3953f86d293654380a72cc0ce0f93d
60af394ae7f77acf9b4841bf6367ee3f347d52adc3d20b75e623aebcc7e1
454939c521c56d240ca699f20d4a909d8615bb761de2ab6e367e19048e80
a0e981d6b5a2c1dec33f9c2a025f5e1d45fa3c1cde2284b6ebd1ceb33dc5
06c68f7f2e925b9679318e5c8e29e1c69aa269822e7f13aac7a0d100833d
688b3c0c7e400b85a20a96fbdff0737ab054bd03b86538f9e1a745606112
63b89a0a4210a8c322f6c572a07c4ce8a71ee425fa57fd69c1d5bf> ND 
/n 
<10bf31705fc1934666df69889b5e7716ef594193b6332fd6e87679d4002a
60b418d237a9a7fcd602eb906106efaf0b01b4528edbdaffd7aa13593d7f
0f21d9915346ad8e6da94702995c89ac1ca2bf2b32ba15e8cfbcb839038e
d3cfc8235729a16269b2f6c14c0345f60ae251ed8180347001c22289ef41
5cf4384a45d9a8e999484bc9b88c99f3dd7539b38fdb724af0e4ec8e215f
e0c6184ff35603d3cc911f6a426176dc15e6fe4e94358cddf593f4927f46
> ND 
/t 
<10bf31706c43702a3ba333d6396a27008c7d9ec0f97f7d821e81c4dfe978
3a6528b50abbe393ef5d601f52bf5d77ebc263fe98283b2ecc6b82e445f0
03e67be8c4d981c7a936b403802ec79ac9fadee0d8907b8e4791f6ac32b5
6afce28831bdbf6534dcb0234b10e060c060d99eb3> ND 
/y 
<10bf3170612e883674ba1652c0ab7cf860cb3fab7a30d213e7dee46c987f
7a59f1f2b004f2417db5ae17465d9ac2a69a0d6e1f1996eda9172f4c4d34
991863a26e69b6425108e74d4f5b0c42cc93e48cdc09ebea4885c41e6403
7e081eba1021614ff3ce259cd6b5ddb2b3d492f19700d136fc19e0eb5e55
7117ac8ad30edd6bf4443303a41df826163e43b5f55768466b5aafbcfff4
0e77aada54e22b600686d2278b06e2a9a3b609d2ceebd2837c5030035b7b
9989469c2d68bbbb5732930446e8bbf181a1acd10aaeb0> ND 
/ellipsis 
<10bf317012d812ee6c1cfe6912aee08488a1c06a42647d7aa06987fb2664
823ceda37d819cab6655b51193d1830ecaa857159cacd9f0559b37484c2e
582460e2a6f587c7ab3eae04195e36200e300b7ddfe8932caee1acf51b84
4b042c14412a4d25dfd51913641028be0838fa26f04a646d8306425e2f41
065beeb6f631d4f11f3e8a585e4ef70e7812a6a7c4145478e2cd16a10442
b8098d4acff55887e9f240c5f3ea81f99ef0a58f5ea06f12ba76a7e40af7
c052c6f1ea2a212f03cf3305> ND 
/multiply 
<10bf3170245e278dce0892d177e931474f6b8ffefdd0495eb420ae00e873
a102d81e1865cb7080157d5e584fb6587a42416c14fc03d252afce08dfa7
ed71dba87426> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDLEF+TimesNewRoman,Bold findfont /Encoding get
dup 0 /.notdef put
dup 68 /D put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 116 /t put
dup 121 /y put
dup 133 /ellipsis put
dup 215 /multiply put
pop
%%EndResource
[/N58/ACDLEF+TimesNewRoman,Bold 1 TZ
%%BeginResource: font ACDLCF+TimesNewRoman
11 dict begin
/FontName /ACDLCF+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/space 
<10bf317079c757bf91> ND 
/parenleft 
<10bf317046e70250e8bd40d114dd6e816b58f4d3349c0c7727832e7501d9
0d48751e5ed01a4a989a3de6f3df4e8150bcde04496d7ebf18ade860af48
8df404b0480a8fe53e55e37acb5a554f9e5cbbe042244d6fc0aa0fdafde4
acb4c52d35fe39221cd926f89c> ND 
/parenright 
<10bf3170537b448b82841392ad69a78470fcf6ad5b9860e31496592c5fd2
8c2a948b7ef1391379bc9dc9754e13aa1a0d8be5cfd2e3bc1b6a246b4628
a43a8883776071abf86a7883d030defeed590f0bf1949e72bae27054def5
466be78152f4af0ef71e17f1> ND 
/slash 
<10bf31707ecffa29aa99596df40b96812e390790337673cf79e85a6235> ND 
/zero 
<10bf31705d64a97b17e82784743dd8afd77cc124ffedf62073386a4af3bd
86fd28c9c7a756e9ef18e3ca007b94f0e02e9eb268494f71c4e6ce33e23a
daf3d98e6e397ae6d95a99deac335d9d72bffd478071defcda00cb768906
0b44c557ecf61de22b31359bb158f6fec05d2caffa2d64aa1e2dc65d6175
e933567afd84f788ad9d2ecdc1d1277289609d3478a2f9ff64e3fec0e6b8
8edb35e90668db5b556d9651c4b7ff49d0e2> ND 
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
/four 
<10bf317069b1fd7146b17c113b617a69456a1f46fa86f93a1743e1bde519
49e5c8665d9cf49ab4179aecaf779fa834a317855eb2ce61cdee1d727f> ND 
/five 
<10bf317049845615ceab2cb35844ace30baf3e54b0e1773fc25e2037b21b
b58b95d34cefc92bea69dc9b438084ed7eb5c6702a368454ebc82a5856ce
9936aede12d64deba22dd59cd070d9cd700c552563a2157176094ad577ca
7175d4c555582970bb6ced51f021b279f79ea313c4e45258856c7401f914
3fd613f871ff33cdce06d0175d18b29427c1e70009e3e10e63caa0676029
8c0b976669b8d245> ND 
/six 
<10bf3170448bf7f9a4e5f8472a5a2d45b7594de91351c6ec052ffd8b762a
bed41ed16809fa2365105c6627f46205709a8a1309c7141139fd941188bd
c8d9b0b55c47d641558ff36ded37dddb1b216d36df7ff3e4cecb5e93a247
22d0b6b5e65a4a2dcc56b02d7259d8fd5b7ec0999a61dac27e80da2f8676
34759b4e247227f13713c39238726a89a708bbed3b752173bdebcebaeea7
71ee266a3e95119dcfb78b31c6beeef7041756c5788d9d3d80a0bb3f669d
9ba6d8b1667d5d5aa89f4142cfd220ffe9eb070e> ND 
/seven 
<10bf3170422f935763586cd8dbf7f37293dfe15df8bc3e09eef989653acc
203875a79f5d3c366f49e5ce0c7723933c8d3b9a4fd39991> ND 
/eight 
<10bf31703a9bd69293aaf1980d4004db29512cfbcdf83050f262f22394b0
ef479114fcd1ed3780f8e8379ec274149787838cb972946ff925f327dc43
fe0a268771c55ebbfb2b11062f0229b6b8245dcdaee1f4d128ae888b5b31
2979a0a0311f4e185869859bc2f66d09f1f0a58e4c124d00e52b1afc6fde
a6cc391f21431f05bfb725982450ba002876f8730b821ec63f425acc7fbc
dbd469c4bbc842a4c448a96aef6e173e7ebf5f5a7a17953e1579490627e0
98ff8ddd57718c580a5c4db5f0f85a39de87a2ee8507278f64c74b506e5f
c484dc38505671de2149f16a16f5b3bd2bd178fe57f2540526157d2501cd
a1ec9d05b086c77bbf39961b> ND 
/nine 
<10bf317041f0a9496f308eef332a89569c6f19bf3d9e8151f98106b7f3b4
863943549b6788f898c785f107f2fd33dafee552c5021ce35f862500ffe7
90b89ba5e8ca74771847acf24a3921944b9ff12aa20c31cc240b97d0bfbf
3bfa98131e7f0af00c2c1318418f0b901e30e5ac56e17f3033ea0f27da78
6ba05aa35f7d1182c74c8b5d63906ddf3add8563ed2127e6e60e74dcaeec
cd2fc89d6ac5e14d494f0e9d12d3f290592c4f786ec533bdf4b038336f9c
5e802b11> ND 
/A 
<10bf3170612fa8ae288a2f767c6f2d22480749f87ffaef88db9508f355b3
d621b9e09a8d1290afe57d05190debf7b19b92f6309b70e08d2409abdf50
3b6a0e5daa0043a6e298cadec0a7dbd5588f8ba0646e339db53e322e33db
33e9ac93d421016e880386d59c5f84e2c9dcb201c618c0d88390bc39b5b5
dcf9b13cb5b08470f0d83c168f6d7ea2244d1b> ND 
/B 
<10bf31706ea8189a0122a2c3dc80451ea987f9cc6dc7afa0c8f0365e6d8e
59a275ca593c5d46c9efa9ebe4192f8e472ac6f0efdf90f5d264a8b47fa4
3bcd031546c0586a98250a46abdef7d038322a132dd14df107aae195c311
99c6fa7558e3ee2379999d05cf38ad7f22726f37f2f0654cf65c11005a88
2feb945df6452201e1abb666d0244ac9dc622994ec7112e71f49ba0b5306
4d49384d5d74864da9fc7636c8b9964886a4103e2320a1f33cb3f7f7bcc7
104eb429cfd6cfab753b2e30fdbce693ce1dcc5a7fe31d75680753c52fe9
350712be59c0ee4a2780b638de9e8e44870622e76d3c23cdfd281b0b8177
c0aff3531220d18c12c91634c02401e01a11> ND 
/C 
<10bf31705d65c09013f5e74d02fbfce579927dc4371245d5279a0be7ec2d
bd3b1448f6fd9c53426e6238d321f77957395a071b4b8eae65710650ca99
5020550eaa4528d828ef4c47ac3d29b589dd7f1c7cfe44b10e3e8fa63e50
7c3e4eb74e257f81314f58ef9126142bc9d3a940c619a0d5450ffb6600e9
bb7f776713c2df8dd431070f31717d2477542aecd1539231d249a65da0e1
ee77958319b99e72488e0e9fa74f4d170e269189eb39aa1a> ND 
/D 
<10bf31706ea8518093a448f0413d9dd2503cf14562d62f8e03c59ef262c0
e81d3c5037d7a8fbf15657e5bea1080fe305ab71bf0048720c010cf41197
6f2c354776e6ac045fcbc3395f65891cbe4c7f0093e58d10b57eae23372e
4cc99d7f2f11c1f1c023288641813a3b8b65e70e4b5173920a628da83be4
7b524c38228036fccc15a820529e8626ae48a60adbbae5fd> ND 
/E 
<10bf31705245888107d641c65df0d045384b4474a865698169ff2c4c5759
f26e2217c59fcbe377198e20e38aaa44f075831908ff3584c8503712a3f9
da462024eae3426d516a8864b3756edb7e42923b77324ddcf4879e1b61b4
02502bf9f5c08a938a8b9111b299fb506f1aa6115b23bb6038633ef2c172
1c1c4fba6b5b7baae1d192358092d890074dc21b1d5f65994b78807f042e
8945e17dc9fd4baebebbadfc790575a38910eab682188d9cdb44060faa47
1dcf91df296595839280be99912fd6d9ac4594d1b8a3> ND 
/F 
<10bf317069b1b5630e42cd6c8ff2cb4d3f7bc188fb90c1fdbffc389a7b7c
590172825fc5f7c1632f0e00f7f24a69c85e73a086926561cd7597f366b9
c557c28ba97bd9e48588932b584d925e90f75351236f8dee991d8b2912e0
edc0500223be1a5bd4cd44c3c3de75aa12b7e63ed3a399ba00214a66fe95
b5d95b0096ce0321bb87083de3bbc29cfe8ef473870f448ffcd9f71c6888
fa2bf4ba82669c30c14d2655a8b69d82e43f233aafad0cc27d2d> ND 
/I 
<10bf31705600a7ed90307a9003ca62013c6a672423969cbfb09d38b977c3
3bb76a0a443b03ca15feffb7f47ead3efae89c4da09011014b3ef74dfcc4
49aa62038fec2b8087c3eb93eadcca82adeba753d37fb428848495514418
28d8a0f3ad99e43ca7d439d4d98a470d6617f8dd1388> ND 
/J 
<10bf31705245662c028a7d41142a9172cb3f39702bb2297ba0998cbe201f
77e89fe57d5ed956b84574b1620f88a55c2a51aa279e3fc9cf923c80361d
86a3551f2534c353d520d3bc14bc4d344677b575ead159bbdfc8aaeec820
ded505d06fe178d1ea8a0d44df29931f663cf743408db506a44468a17c12
4775c79567328c125a4e927e096a92c7da53c382783cd0826b0553dedd74
> ND 
/P 
<10bf31706ea9c5bc0db16a9d0fb9334b7aae45fa9562423ca0efcafbe577
696190382686f72544b1109cd9a28e6e2fb8c3e703e277558d9de53e9bd4
331eb7411fa27fc9fbf9488ff1a8e626acd2f355101bb86e40f636dd5a74
50c4f3ac4c3fce01d454db469da536ea46528530bc3e44fdc91176a1e591
1b2932205e6c0eac6f4d330f0230a163b5b30ecdc649a4ff6b024a9513ec
d5f934e2e3b5d7f24bd0170221950b8bb0ffa0c50e77c36e34adf2e847c9
adbff54bf77ef65d9afdb3878865> ND 
/S 
<10bf3170383eecc69ba25cd9f9f1a3f877f72d54ca249226fb09a99225d4
fa4a892ae0bf757b41a46aaf766816bb2e9c6c4e867aeb02a76d05e762b6
353837bdf52bbc0c70c14510f08ced31ac95e2c8b5dfdbf8f1dffd4709a0
760737961b7464d75e4dbf7323db187fa23f8213fd84f092b3c292e45093
4a017d49f1fa4f8d834c3fd0c5126c0c5c896c1a48c0653753c6f56c23b6
627010a4379bd3d96b26db0b3531098cdc23704e1f8e25a61651df0d8d02
8f68c8b7a7de4652566ef5c50305a3ec674a5be2d1bf9f76580a00788d85
ad3f4dc24f5adec7880bc3a7db38c71260e951f8778b0aff0ff2e97effe6
f0b2b33485e5f0401138cd3f9e066ed25ff05e7594ebdb0029f3d5> ND 
/T 
<10bf31705b0718f462bb36d02a655e51f04593b972dbe0892a4279b53c95
62dbd237266bc0cb4e5967f6d053e97e3cc8fe6477448edcd2c2ed40f6e6
056ef32aac1986bf84927c9fb1e2806a71f53c8604421852f835782fd7d8
0fdb45127c08fbe24f16e5af9ede981de72f75b4f62ef25f8b6075081fcf
> ND 
/W 
<10bf31706ae2d6d9dcbe8344511f08de4b9db5ac28c5c661efe6fa9e7439
4bc84ffd6c26e5c964d324deb8a2be71c781983509fc7315f13f2f452574
0c432ccfa783a50be1522758812e78dd12223bf37e37be9a2b9de70daa25
87e5ce0c31b1dc8fd1e7856f2a379806580606a20898e7fccb07255b76ec
aa9ee467ae0d074d61c529177c4e36ba95b4a421f36bad34035a2ac2c04f
12a2abb782248776bfa1511003ff806b7b426cc8c17627c2470813ba31ae
1a22b8e70c403eb278204ab3b8eb7faa1ccbb1cca5799cb23970fbbc0204
4ae4346b70147e2d44e9f3315b6168df8cda1ca5> ND 
/a 
<10bf31705d647142d5ee6b7c4c12c41164f05a89990635873917bf00c5a2
b1b299b84b64fad030fdefe54a736fd84981f1bdecf34c327a4087285dd7
ff9a128a9fff4f1e5e34e2c477e4543546f0e505eb84b8e6141c12199331
8a7bef58caa55697aff5d8bf4fe61eb63478ae931b5c51fe7be8aa76cee5
cf639a1d462398300117c6a9c09614a29dfc50b3c7ddbacc1c6e2f7accb0
35d51bb776dfa4f2180b5bfa695d4ee30d466764f5192b628fd7c4971313
cd38d55ff99cfe805727052d975c4756402eb9230dd87b777a603efe9c10
65e950375d54aa41ed1c701bfac764ae78b65834b8918a99ed1f017d5313
eb0950b1f45353f40dc633104ecc941e4bbbf8359d5ae9042ef0f4edfdb8
> ND 
/b 
<10bf31707b35db816a4355a1c9cd0401bf6033c55938246c8b69de26e575
c058903a4e9b57b68075848962a6cd3da069ec2730d8699e3ccf520befe1
1a090d11586ebd56effd705bd3a5ced6c4343ddaabfe70e422082141dc06
c695cc46ee2dde408c0760a4c361b784ab85994758cbad73179f314048f1
c5a0c06c0e0ad84ded3a7904f207403afdd3193bf093fb903dbdef2de225
7307e43f8ee047d711ed22adc155c93b72dbad1a68> ND 
/c 
<10bf31705fc10320935f517e088588bc677b6f6b1116d76a45fb5fc081aa
57ad08a2f19e4ebd5e7f2e40678b64d780ab49e945b6f1fcf8c1bf2edd40
201d9d025abf1aec5b1b3268a3f2a9365f1c6e4133cdb11264503de1434e
2553cdd7a1785e8aefca6abe49ef29279001bfee84321f1c29e0a5b47534
7f9b91833b42fbc209dedbbca6bb8dac3b6f01ececb32ee525fd2275d1f3
f94c46a2dc92d591> ND 
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
/g 
<10bf31705b0767a01e9193e4d997e718ba6351677893b73d138e3fe6ba14
fc659a3bcdee55e0cfe8324eeac72638d3bd305a7a0220257ff3808a1470
04dc5c3c9fcb344358fed8b5ae71f4f49bb62f7c38ae95fdb022e2f50d0f
f7edd042065f7148993d640d50d67f360ac97639f25c381784672dcecf1d
1627665bc46b98264545bb45b967dbd7f6dce2f63c1e6751d9e493efd546
e255705157ddc690cb167218c88d537fe6a759d15d23d8bf19975778954b
513e4f87de1d7e922f34c8ee289c3522056d92971a6692e2b85efc32e805
5f726b3e561153ede1bd48ac9ed5e0024936e813717a672f7da4b25e0f4c
fa800bfb48a1e7e6e175f9ef63c0a88c39518c20ae1f79f29fe16a404d8f
590228fa5880231b26e78848d12ee249c635fcfa1c6175dbe52bf4c85030
42acafcb20327b817e4efb88945955dd6d08889ea1fb3f310e8cb4172190
21cc423288f3c72f1f0ebcd75197d45530bfc75571856796dc6ba51fbdd3
ed9cec0c0d7ad50b11a85f88370b45b4a51e0293d38df958b8> ND 
/h 
<10bf3170638bba13892b6a5edf1363fbad8b95e15d8b1d61c9ff2e20460e
9fbee5ce56a3b804c731461fc79898dd9aa49a7578bd0636027b48157921
a917a207198baeee00a6aeca2924ff3a229448490e59b468fb8b3164c353
d9bc2653f19a1e5c4133f967037a72c7c8fbf885e7d2fe25db116b7c8e10
b3fd50a5bf16ce8ee83140eeca023c94dedee552fcf1a7935a31030ea899
3824e06eab9cf113ffc3161399601c0b8fff6a9768bb0205ffc7ac68a666
f3075641cdac00a867c63305b98c782f2fa25a94358084fd7f1a3e8a9aba
49e32a58f5abe91c09f7098b61c81b8653e474549ba40c7470f7bc> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/k 
<10bf3170612e883674d2675aac39fa142a2f9de407f255952adbf70a8f61
dcc97f11c5b525f88e1dd0499bf87fea87e955adf630d83711a3925899c0
03b9f91dc3443000903cbe22625747190de827d6aed57c3f807366bbd6c6
3854786e273f1b9d2f49315171b285fa450532e1a996be3dfd2aafc74743
b4a57fabf2eddb1c25e9905cc57139486ad514add7eb942d1d1b791b6056
19d6f363ea6b92b2c94caf9a33a7be72eed5a355a7d76c1048097efb20dd
2f6c3a18d26def6109f03e7d30d5356121f15317baa59d193def17f7d470
1728dc814db541582ec9d0f98c682c14> ND 
/l 
<10bf31705b0817c8e08e579d70bd731872938fa19da6249b22a36add018f
2d71afb39a24cba2d5b131292eaf2ea6440cd481b67673b68d5de7db4045
53f0515df79be16519f0349ec3761dc09575b85d12a0ca2ef3e3cac5171f
27c0bb5b6c16bd708dadf6acc7da72304e> ND 
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
/n 
<10bf3170638bba1389001ebc99bd428947467ee318fefc1fb124f3371d83
7e6e4fd04510bb88359fc2d65b2f295b6f18b7850f6ca41f0fd067e40bcc
1e6a5b41ca20f07f1559265c094e47681cd30c939ca836f577db4be36b05
95c3d60cd00f5b5495365e7e02e3400714839e79cc3816e739cdb0ba1b66
3f096ef3ea59642b52897d5ef4b5012d68776aa74244415b9e96a4f773a5
8085f9fe5bb74ace5b6860ca975ea43b7d0db4eefeddd777982336d72d05
c093ca194b7cd3478661a723994ed178a305b939140b4ac4b7ef4bb11e73
> ND 
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/q 
<10bf31705e925b80bb44afdd80449a9019004483157f7a206da365a5b3f7
8e817f7d85ccb98decc0413cb1aad3badad1cc03a563c391c8aa6068d7e3
0e7f25d81543c3055a792149dafa6b421b59bb9a7c586f00d982f84e34a8
6eb81a6d2e5d0469a0475534487ff8a1de86976d09002e57cf1b9a5b9651
783da658816ced2d26e352c444560625e85828b2e4e4558755e30d1a05aa
ed4f42608d7e2eeedb01e0259b91825941bd1b5a38ce6f06522b93ba8b0d
c3140f68c73955f4b4bd495b40f7a8977e75e8b1c2519046a0f0449793> ND 
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
/u 
<10bf31707ec0b061a3e31ce6a8e02f67c79fc6fb9433b583752df0b97381
ced785f0788651d9110f4d168d6f4fb870b9f8634f66a1fe17ef5bb051c8
5b17a112a0ece57f7e85709c1e46ba1a1de6ef26a274c75bdde36925dd09
efae6e5faacef2f29e68904c9555df5e0f6550945360d079ca305237daa8
7397519a4b0aef19668718de15c20ef2e07af7217dbd27700833b73e8190
1c7d2aacb619fbf2f1396d79a94fea4ca18c65bd942fda84> ND 
/v 
<10bf3170612e88360faf380e328fa052d16002b3a6eb4d26fc61a8261d88
5d55beefaa23f749e4680928d2ec50b44ff8d74a2a42a0e615124d351c37
a9b6b3979ac1eedcff65bc4e156ed5711cac4c00ba96902c9956d3adb8e9
345080689b72e5082717e79b08e915301d3c209a4fac7e8f857cfb983000
d031a94c1a8ab5b2b0900013f2ae> ND 
/w 
<10bf3170638a0228cdcc4cd6455c35265f3b472ea1e128291ab8c91c671e
7bd658e474e8a0535d503ea2a6704bc9226df8b7fd4286af923f66233992
4a9bd89766cd1ad48ee99eac3f679bc5f41535050fefd334434033683a0c
453c86e866b1ef55892a380c8fcdccf1c4eac1b6e4f71a2a006a7f483456
13b3a00d36c64291144c8cc1dac83b7c06950c85f226495588d8cb0539f8
dacf025ed3c1593eb5f55ae6c66c3ae3939545fa200eff0116> ND 
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
/ellipsis 
<10bf317005a3205c8c1ade8b08220239c090e4bcc9980e1cca609a2d4d10
d9ac81cf840ef58d470313f2aa080d2edd9fcba3916373473b3af2ee5c86
d03e77ac42465a929f227203e9947419868ef6872ae4cf8eebf4d8959f6c
7a0d73c65112c717159e6b1143a38d56f38c0bfb6641b059c420c669b174
283ad5674adb76e78a4c9174f94c3257ef08af279dc17b93c98677c3acdb
61453c7ad9365f3a5a793919a4c97a3726887fe01492b780bd16b89f5a85
0d94b0a447171065596e> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDLCF+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N55/ACDLCF+TimesNewRoman 1 TZ
q
n
36 756 540 -720 re
eoclip
n
false setSA
n
36 756 540 -720 re
1 1 1 setrgbcolor
f
Q
false setSA
n
229.5 189 m
229.5 184.02 233.52 180 238.5 180 c
274.5 180 l
279.48 180 283.5 184.02 283.5 189 c
283.5 564 l
283.5 568.98 279.48 573 274.5 573 c
238.5 573 l
233.52 573 229.5 568.98 229.5 564 c
0.697998 0.697998 0.697998 setrgbcolor
eofill
n
235.5 318.72 m
235.5 307.14 244.92 297.72 256.5 297.72 c
268.08 297.72 277.5 307.14 277.5 318.72 c
277.5 330.36 268.08 339.72 256.5 339.72 c
244.92 339.72 235.5 330.36 235.5 318.72 c
1 1 1  setrgbcolor
eofill
1 J
1 j
0.75 w
10 M
[] 0 d
n
235.5 318.72 m
235.5 307.14 244.92 297.72 256.5 297.72 c
268.08 297.72 277.5 307.14 277.5 318.72 c
277.5 330.36 268.08 339.72 256.5 339.72 c
244.92 339.72 235.5 330.36 235.5 318.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
262.38 310.14 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
268.38 320.76 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(2) show
n
280.5 545.58 63.36 -8.58002 re
0.697998 0.697998 0.697998  setrgbcolor
f
n
279.72 324 63.36 -8.64001 re
f
n
337.5 316.02 m
337.5 311.04 341.52 307.02 346.5 307.02 c
382.5 307.02 l
387.48 307.02 391.5 311.04 391.5 316.02 c
391.5 384.24 l
391.5 389.22 387.48 393.24 382.5 393.24 c
346.5 393.24 l
341.52 393.24 337.5 389.22 337.5 384.24 c
eofill
n
256.14 231.72 m
256.14 293.22 l
256.14 293.46 256.32 293.64 256.5 293.64 c
256.68 293.64 256.86 293.46 256.86 293.22 c
256.86 231.72 l
256.86 231.54 256.68 231.36 256.5 231.36 c
256.32 231.36 256.14 231.54 256.14 231.72 c
h
253.5 292.26 m
256.5 298.26 l
259.5 292.26 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
280.5 215.58 63.36 -8.58 re
0.697998 0.697998 0.697998  setrgbcolor
f
n
337.5 207 m
337.5 202.02 341.52 198 346.5 198 c
382.5 198 l
387.48 198 391.5 202.02 391.5 207 c
391.5 275.22 l
391.5 280.2 387.48 284.22 382.5 284.22 c
346.5 284.22 l
341.52 284.22 337.5 280.2 337.5 275.22 c
eofill
n
277.5 211.14 m
354.24 211.14 l
354.48 211.14 354.6 210.96 354.6 210.72 c
354.6 210.54 354.48 210.36 354.24 210.36 c
277.5 210.36 l
277.32 210.36 277.14 210.54 277.14 210.72 c
277.14 210.96 277.32 211.14 277.5 211.14 c
h
353.22 213.72 m
359.22 210.72 l
353.22 207.72 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
359.22 210.72 m
359.22 207.42 361.92 204.72 365.22 204.72 c
368.58 204.72 371.22 207.42 371.22 210.72 c
371.22 214.08 368.58 216.72 365.22 216.72 c
361.92 216.72 359.22 214.08 359.22 210.72 c
1 1 1  setrgbcolor
eofill
n
359.22 210.72 m
359.22 207.42 361.92 204.72 365.22 204.72 c
368.58 204.72 371.22 207.42 371.22 210.72 c
371.22 214.08 368.58 216.72 365.22 216.72 c
361.92 216.72 359.22 214.08 359.22 210.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
359.22 228.72 m
359.22 225.42 361.92 222.72 365.22 222.72 c
368.58 222.72 371.22 225.42 371.22 228.72 c
371.22 232.08 368.58 234.72 365.22 234.72 c
361.92 234.72 359.22 232.08 359.22 228.72 c
1 1 1  setrgbcolor
eofill
n
359.22 228.72 m
359.22 225.42 361.92 222.72 365.22 222.72 c
368.58 222.72 371.22 225.42 371.22 228.72 c
371.22 232.08 368.58 234.72 365.22 234.72 c
361.92 234.72 359.22 232.08 359.22 228.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
364.86 216.72 m
364.86 219.72 l
364.86 219.96 365.04 220.14 365.22 220.14 c
365.46 220.14 365.64 219.96 365.64 219.72 c
365.64 216.72 l
365.64 216.54 365.46 216.36 365.22 216.36 c
365.04 216.36 364.86 216.54 364.86 216.72 c
h
363.24 218.76 m
365.22 222.72 l
367.26 218.76 l
f
n
277.5 319.62 m
354.24 320.1 l
354.48 320.1 354.6 319.92 354.6 319.74 c
354.6 319.5 354.48 319.32 354.24 319.32 c
277.5 318.9 l
277.32 318.9 277.14 319.02 277.14 319.26 c
277.14 319.44 277.26 319.62 277.5 319.62 c
h
353.22 322.74 m
359.22 319.74 l
353.28 316.74 l
f
0 0 0  setrgbcolor
366.12 244.62 m
/N58 [0 12 -12 0 0 0] Tf
(\205) show
n
364.86 234.78 m
364.92 237.78 l
364.92 237.96 365.1 238.14 365.34 238.14 c
365.52 238.14 365.7 237.96 365.7 237.72 c
365.64 234.72 l
365.64 234.54 365.46 234.36 365.22 234.36 c
365.04 234.36 364.86 234.54 364.86 234.78 c
h
363.3 236.82 m
365.4 240.72 l
367.26 236.7 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
256.14 340.26 m
256.26 402 l
256.26 402.18 256.38 402.36 256.62 402.36 c
256.8 402.36 256.98 402.18 256.98 402 c
256.86 340.26 l
256.86 340.02 256.68 339.9 256.5 339.9 c
256.32 339.9 256.14 340.02 256.14 340.26 c
h
253.62 400.98 m
256.62 406.98 l
259.62 400.98 l
f
0 0 0  setrgbcolor
258.54 418.26 m
/N55 [0 28.02 -28.02 0 0 0] Tf
(\205) show
n
359.22 270.72 m
359.22 267.42 361.92 264.72 365.22 264.72 c
368.58 264.72 371.22 267.42 371.22 270.72 c
371.22 274.08 368.58 276.72 365.22 276.72 c
361.92 276.72 359.22 274.08 359.22 270.72 c
1 1 1  setrgbcolor
eofill
n
359.22 270.72 m
359.22 267.42 361.92 264.72 365.22 264.72 c
368.58 264.72 371.22 267.42 371.22 270.72 c
371.22 274.08 368.58 276.72 365.22 276.72 c
361.92 276.72 359.22 274.08 359.22 270.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
364.86 258.72 m
364.86 261.72 l
364.86 261.96 365.04 262.14 365.22 262.14 c
365.46 262.14 365.64 261.96 365.64 261.72 c
365.64 258.72 l
365.64 258.54 365.46 258.36 365.22 258.36 c
365.04 258.36 364.86 258.54 364.86 258.72 c
h
363.24 260.76 m
365.22 264.72 l
367.26 260.76 l
f
n
256.14 453.72 m
256.14 514.74 l
256.14 514.98 256.32 515.1 256.5 515.1 c
256.68 515.1 256.86 514.98 256.86 514.74 c
256.86 453.72 l
256.86 453.54 256.68 453.36 256.5 453.36 c
256.32 453.36 256.14 453.54 256.14 453.72 c
h
253.5 513.72 m
256.5 519.72 l
259.5 513.72 l
f
n
359.22 319.74 m
359.22 316.44 361.92 313.74 365.22 313.74 c
368.58 313.74 371.22 316.44 371.22 319.74 c
371.22 323.04 368.58 325.74 365.22 325.74 c
361.92 325.74 359.22 323.04 359.22 319.74 c
1 1 1  setrgbcolor
eofill
n
359.22 319.74 m
359.22 316.44 361.92 313.74 365.22 313.74 c
368.58 313.74 371.22 316.44 371.22 319.74 c
371.22 323.04 368.58 325.74 365.22 325.74 c
361.92 325.74 359.22 323.04 359.22 319.74 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
359.22 337.74 m
359.22 334.44 361.92 331.74 365.22 331.74 c
368.58 331.74 371.22 334.44 371.22 337.74 c
371.22 341.04 368.58 343.74 365.22 343.74 c
361.92 343.74 359.22 341.04 359.22 337.74 c
1 1 1  setrgbcolor
eofill
n
359.22 337.74 m
359.22 334.44 361.92 331.74 365.22 331.74 c
368.58 331.74 371.22 334.44 371.22 337.74 c
371.22 341.04 368.58 343.74 365.22 343.74 c
361.92 343.74 359.22 341.04 359.22 337.74 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
364.86 325.74 m
364.86 328.74 l
364.86 328.98 365.04 329.1 365.22 329.1 c
365.46 329.1 365.64 328.98 365.64 328.74 c
365.64 325.74 l
365.64 325.56 365.46 325.38 365.22 325.38 c
365.04 325.38 364.86 325.56 364.86 325.74 c
h
363.24 327.72 m
365.22 331.74 l
367.26 327.72 l
f
0 0 0  setrgbcolor
366.12 353.64 m
/N58 [0 12 -12 0 0 0] Tf
(\205) show
n
364.86 343.74 m
364.92 346.74 l
364.92 346.98 365.1 347.1 365.34 347.1 c
365.52 347.1 365.7 346.92 365.7 346.74 c
365.64 343.74 l
365.64 343.56 365.46 343.38 365.22 343.38 c
365.04 343.38 364.86 343.56 364.86 343.74 c
h
363.3 345.78 m
365.4 349.74 l
367.26 345.72 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
359.22 379.74 m
359.22 376.44 361.92 373.74 365.22 373.74 c
368.58 373.74 371.22 376.44 371.22 379.74 c
371.22 383.04 368.58 385.74 365.22 385.74 c
361.92 385.74 359.22 383.04 359.22 379.74 c
1 1 1  setrgbcolor
eofill
n
359.22 379.74 m
359.22 376.44 361.92 373.74 365.22 373.74 c
368.58 373.74 371.22 376.44 371.22 379.74 c
371.22 383.04 368.58 385.74 365.22 385.74 c
361.92 385.74 359.22 383.04 359.22 379.74 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
364.86 367.74 m
364.86 370.74 l
364.86 370.98 365.04 371.1 365.22 371.1 c
365.46 371.1 365.64 370.98 365.64 370.74 c
365.64 367.74 l
365.64 367.56 365.46 367.38 365.22 367.38 c
365.04 367.38 364.86 367.56 364.86 367.74 c
h
363.24 369.72 m
365.22 373.74 l
367.26 369.72 l
f
n
337.5 537 m
337.5 532.02 341.52 528 346.5 528 c
382.5 528 l
387.48 528 391.5 532.02 391.5 537 c
391.5 605.22 l
391.5 610.2 387.48 614.22 382.5 614.22 c
346.5 614.22 l
341.52 614.22 337.5 610.2 337.5 605.22 c
0.697998 0.697998 0.697998  setrgbcolor
eofill
n
359.22 540.72 m
359.22 537.42 361.92 534.72 365.22 534.72 c
368.58 534.72 371.22 537.42 371.22 540.72 c
371.22 544.08 368.58 546.72 365.22 546.72 c
361.92 546.72 359.22 544.08 359.22 540.72 c
1 1 1  setrgbcolor
eofill
n
359.22 540.72 m
359.22 537.42 361.92 534.72 365.22 534.72 c
368.58 534.72 371.22 537.42 371.22 540.72 c
371.22 544.08 368.58 546.72 365.22 546.72 c
361.92 546.72 359.22 544.08 359.22 540.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
359.22 558.72 m
359.22 555.42 361.92 552.72 365.22 552.72 c
368.58 552.72 371.22 555.42 371.22 558.72 c
371.22 562.08 368.58 564.72 365.22 564.72 c
361.92 564.72 359.22 562.08 359.22 558.72 c
1 1 1  setrgbcolor
eofill
n
359.22 558.72 m
359.22 555.42 361.92 552.72 365.22 552.72 c
368.58 552.72 371.22 555.42 371.22 558.72 c
371.22 562.08 368.58 564.72 365.22 564.72 c
361.92 564.72 359.22 562.08 359.22 558.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
364.86 546.72 m
364.86 549.72 l
364.86 549.96 365.04 550.14 365.22 550.14 c
365.46 550.14 365.64 549.96 365.64 549.72 c
365.64 546.72 l
365.64 546.54 365.46 546.36 365.22 546.36 c
365.04 546.36 364.86 546.54 364.86 546.72 c
h
363.24 548.76 m
365.22 552.72 l
367.26 548.76 l
f
0 0 0  setrgbcolor
366.12 574.62 m
(\205) show
n
364.86 564.78 m
364.92 567.78 l
364.92 567.96 365.1 568.14 365.34 568.14 c
365.52 568.14 365.7 567.96 365.7 567.72 c
365.64 564.72 l
365.64 564.54 365.46 564.36 365.22 564.36 c
365.04 564.36 364.86 564.54 364.86 564.78 c
h
363.3 566.82 m
365.4 570.72 l
367.26 566.7 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
359.22 600.72 m
359.22 597.42 361.92 594.72 365.22 594.72 c
368.58 594.72 371.22 597.42 371.22 600.72 c
371.22 604.08 368.58 606.72 365.22 606.72 c
361.92 606.72 359.22 604.08 359.22 600.72 c
1 1 1  setrgbcolor
eofill
n
359.22 600.72 m
359.22 597.42 361.92 594.72 365.22 594.72 c
368.58 594.72 371.22 597.42 371.22 600.72 c
371.22 604.08 368.58 606.72 365.22 606.72 c
361.92 606.72 359.22 604.08 359.22 600.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
364.86 588.72 m
364.86 591.72 l
364.86 591.96 365.04 592.14 365.22 592.14 c
365.46 592.14 365.64 591.96 365.64 591.72 c
365.64 588.72 l
365.64 588.54 365.46 588.36 365.22 588.36 c
365.04 588.36 364.86 588.54 364.86 588.72 c
h
363.24 590.76 m
365.22 594.72 l
367.26 590.76 l
f
n
277.5 541.14 m
354.24 541.14 l
354.48 541.14 354.6 540.96 354.6 540.72 c
354.6 540.54 354.48 540.36 354.24 540.36 c
277.5 540.36 l
277.32 540.36 277.14 540.54 277.14 540.72 c
277.14 540.96 277.32 541.14 277.5 541.14 c
h
353.22 543.72 m
359.22 540.72 l
353.22 537.72 l
f
n
219 567.72 m
211.98 567.72 206.22 553.56 206.22 536.04 c
206.22 409.32 l
206.22 391.8 200.52 377.64 193.5 377.64 c
200.52 377.64 206.22 363.42 206.22 345.96 c
206.22 219.18 l
206.22 201.66 211.98 187.5 219 187.5 c
S
0 0 0  setrgbcolor
184.5 371.94 m
/N22 [0 24 -24 0 0 0] Tf
(N) show
434.76 232.32 m
(N) show
n
396.72 202.5 m
400.26 202.5 403.14 205.38 403.14 208.98 c
403.14 235.02 l
403.14 238.56 405.96 241.5 409.5 241.5 c
405.96 241.5 403.14 244.38 403.14 247.98 c
403.14 274.02 l
403.14 277.56 400.26 280.5 396.72 280.5 c
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
235.5 210.72 m
235.5 199.14 244.92 189.72 256.5 189.72 c
268.08 189.72 277.5 199.14 277.5 210.72 c
277.5 222.36 268.08 231.72 256.5 231.72 c
244.92 231.72 235.5 222.36 235.5 210.72 c
1 1 1  setrgbcolor
eofill
n
235.5 210.72 m
235.5 199.14 244.92 189.72 256.5 189.72 c
268.08 189.72 277.5 199.14 277.5 210.72 c
277.5 222.36 268.08 231.72 256.5 231.72 c
244.92 231.72 235.5 222.36 235.5 210.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
262.38 202.14 m
(v) show
268.38 212.76 m
/N55 [0 16.02 -16.02 0 0 0] Tf
(1) show
n
235.5 540.72 m
235.5 529.14 244.92 519.72 256.5 519.72 c
268.08 519.72 277.5 529.14 277.5 540.72 c
277.5 552.36 268.08 561.72 256.5 561.72 c
244.92 561.72 235.5 552.36 235.5 540.72 c
1 1 1  setrgbcolor
eofill
n
235.5 540.72 m
235.5 529.14 244.92 519.72 256.5 519.72 c
268.08 519.72 277.5 529.14 277.5 540.72 c
277.5 552.36 268.08 561.72 256.5 561.72 c
244.92 561.72 235.5 552.36 235.5 540.72 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
262.38 530.76 m
/N22 [0 24 -24 0 0 0] Tf
(v) show
268.38 541.38 m
/N22 [0 16.02 -16.02 0 0 0] Tf
(N) show
332.76 219.9 m
/N55 [0 24 -24 0 0 0] Tf
(AB)
[109.375 108.055 ] pdfys
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 21546 a Fn(Figure)686 b(4-2:)923 b
Fm(The)597 b(LOOPY)e(b)34 b(enc)-34 b(hmark:)923 b(a)597
b(m)-34 b(ultithreaded)597 b(computation)h(with)f(w)-34
b(ork)597 b Fl(T)47874 21728 y Ft(1)49057 21546 y Fm(=)2000
23051 y Fl(N)3106 22612 y Ft(2)3901 23051 y Fm(+)269
b Fl(N)536 b Fm(and)405 b(critical-path)f(length)h Fl(T)20264
23233 y Fq(1)21597 23051 y Fm(=)337 b(2)p Fl(N)132 b
Fm(.)2000 28943 y Fy(at)428 b(task)h Fu(v)6997 29142
y Ft(1)7950 28943 y Fy(of)g(the)e(ro)36 b(ot)428 b(thread)g(but)e(then)
h(immediately)i(spa)-36 b(wns)428 b(thread)f(A,)h(th)-36
b(us)427 b(b)36 b(eginning)2000 30548 y(w)-36 b(orking)358
b(on)f(A.)g(Assuming)g(that)f Fu(N)495 b Fy(is)357 b(v)-36
b(ery)358 b(large,)373 b(eac)-36 b(h)357 b(of)h(the)e(sub)36
b(computations)356 b(in)h(threads)2000 32153 y(A,)495
b(B,)h(etc.)763 b(ma)-36 b(y)495 b(tak)-36 b(e)496 b(a)f(long)h(time)f
(to)g(complete,)511 b(and)495 b(so)g(w)-36 b(e)496 b(assume)f(that)f
(the)h(pro)36 b(cessor)2000 33758 y(is)527 b(\\stuc)-36
b(k")527 b(on)f(thread)f Fu(A)i Fy(for)g(all)g(practical)g(purp)36
b(oses.)856 b(A)-36 b(t)526 b(this)g(p)36 b(oin)-36 b(t,)550
b(the)526 b(instan)-36 b(taneous)2000 35363 y(parallelism)433
b(of)g(the)f(job)g(is)h(2,)g(as)f(measured)f(b)-36 b(y)432
b(the)g(n)-36 b(um)g(b)36 b(er)430 b(of)j(threads)f(it)g(has)g(created)
g(\(the)2000 36968 y(ro)36 b(ot)514 b(thread)e(and)g(A\).)i(If)f
(another)g(pro)36 b(cessor)513 b(is)h(allo)36 b(cated)514
b(to)g(the)e(job,)534 b(this)513 b(pro)36 b(cessor)513
b(can)2000 38573 y(con)-36 b(tin)g(ue)506 b(executing)i(the)f(ro)36
b(ot)508 b(thread)e(while)i(the)f(\257rst)g(pro)36 b(cessor)508
b(executes)f(A,)h(but)e(it)i(gets)2000 40178 y(stuc)-36
b(k)399 b(w)-36 b(orking)400 b(on)e(thread)g(B)h(almost)h(immediately)
-108 b(.)567 b(The)399 b(instan)-36 b(taneous)398 b(parallelism)i(of)g
(the)2000 41784 y(job)475 b(is)h(no)-36 b(w)475 b(3)g(\(the)f(ro)36
b(ot)476 b(thread,)484 b(A,)476 b(and)e(B\).)h(The)g(pro)36
b(cess)475 b(con)-36 b(tin)g(ues)474 b(as)i(more)f(pro)36
b(cessors)2000 43389 y(are)354 b(allo)36 b(cated)355
b(to)f(the)f(job.)552 b(A)-36 b(t)353 b(an)-36 b(y)354
b(giv)-36 b(en)355 b(time,)370 b(the)353 b(instan)-36
b(taneous)353 b(parallelism)i(of)f(the)g(job)g(is)2000
44994 y(only)417 b(1)f(greater)h(than)e(its)i(allo)36
b(cation.)574 b(Since)416 b(all)h Fu(N)555 b Fy(sub)36
b(computations)415 b(spa)-36 b(wned)416 b(b)-36 b(y)416
b(the)g(ro)36 b(ot)2000 46599 y(thread)396 b(of)h(LOOPY)f(can)g
(theoretically)i(execute)f(in)f(parallel,)406 b(the)396
b(instan)-36 b(taneous)396 b(parallelism)2000 48204 y(is)349
b(a)g(gross)h(underestimate)e(of)h(the)g(a)-36 b(v)g(erage)350
b(parallelism)g(of)f(the)g(job.)550 b(Sp)36 b(eci\257cally)-108
b(,)367 b(the)348 b(a)-36 b(v)g(erage)2000 49809 y(parallelism)435
b(of)f(the)f(LOOPY)g(is)21366 52559 y Fu(T)22128 52758
y Ft(1)p 21131 53152 1759 54 v 21131 54369 a Fu(T)21893
54568 y Fq(1)24129 53458 y Fy(=)26381 52559 y Fu(N)27562
52077 y Ft(2)28382 52559 y Fy(+)295 b Fu(N)p 26381 53152
4489 54 v 27710 54369 a Fy(2)p Fu(N)24129 56817 y Fy(=)26381
55919 y Fu(N)433 b Fy(+)295 b(1)p 26381 56512 3433 54
v 27772 57728 a(2)30380 56817 y Fu(:)3951 60427 y Fy(If)490
b Fu(N)627 b Fy(is)489 b(large,)504 b(the)488 b(a)-36
b(v)g(erage)490 b(parallelism)g(could)f(b)36 b(e)489
b(orders)f(of)i(magnitude)f(greater)g(than)2000 62032
y(the)606 b(instan)-36 b(taneous)605 b(parallelism.)1098
b(Moreo)-36 b(v)g(er,)651 b(an)606 b(execution)g(of)i(LOOPY)d(ac)-36
b(hiev)g(es)607 b(linear)2000 63637 y(sp)36 b(eedup)423
b(as)i(long)g(as)g Fu(P)550 b Fs(\267)369 b Fy(\()p Fu(N)415
b Fy(+)277 b(1\))p Fu(=)p Fy(2.)576 b(F)-108 b(or)424
b Fu(N)508 b(>)368 b Fy(10)28991 63155 y Ft(5)29518 63637
y Fy(,)426 b(this)f(n)-36 b(um)g(b)36 b(er)423 b(is)i(larger)g(than)f
(most)g(\(if)2000 65242 y(not)433 b(all\))i(m)-36 b(ultipro)36
b(cessor)433 b(mac)-36 b(hines)433 b(in)h(existence)g(to)36
b(da)-36 b(y)-108 b(.)3951 67185 y(The)588 b(LOOPY)g(b)36
b(enc)-36 b(hmark)588 b(represen)-36 b(ts)587 b(a)i(common)f(class)h
(of)g(data-parallel)h(programs,)2000 68790 y(in)644 b(whic)-36
b(h)645 b(a)g(single)g(lo)36 b(op)645 b(in)f(the)g(main)h(thread)f(spa)
-36 b(wns)644 b(a)h(large)g(n)-36 b(um)g(b)36 b(er)643
b(of)j(equal-sized)2000 70395 y(sub)36 b(computations.)1020
b(The)581 b(follo)-36 b(wing)584 b(co)36 b(de)581 b(fragmen)-36
b(t,)618 b(for)582 b(example,)619 b(pro)36 b(duces)581
b(a)g(LOOPY)2000 72000 y(computation:)25350 75321 y(32)p
eop end
%%Page: 33 33
TeXDict begin 33 32 bop 2000 1328 a Fp(for)682 b(\(i)h(=)g(0;)g(i)g(<)g
(N;)f(i++\))g({)3367 2933 y(spawn)f(Work_N\(i\);)2000
4539 y(})2000 7592 y Fy(where)593 b Fp(Work)p 8735 7592
411 45 v 490 w(N)g Fy(is)g(a)g(sub)36 b(computation)592
b(with)h Fu(N)731 b Fy(units)593 b(of)g(w)-36 b(ork.)1058
b(Programs)593 b(of)h(this)f(form)2000 9197 y(pro)-36
b(vide)541 b(a)h(simple)f(and)g(e\256ectiv)-36 b(e)541
b(means)h(of)g(generating)f(large)h(amoun)-36 b(ts)541
b(of)h(parallelism)g(in)2000 10802 y(a)519 b(computation.)835
b(They)519 b(are)h(esp)36 b(ecially)520 b(common)f(in)g(parallelized)h
(v)-36 b(ersions)520 b(of)g(serial)f(co)36 b(de.)2000
12407 y(Their)426 b(widespread)g(use)g(reinforces)h(our)f(case)g
(against)h(p)36 b(olicies)428 b(that)d(use)h(instan)-36
b(taneous)426 b(par-)2000 14012 y(allelism)435 b(measures)e(to)h
(estimate)g(a)g(job's)g(pro)36 b(cessor)434 b(desire.)3951
15685 y(In)466 b(ligh)-36 b(t)465 b(of)i(this)e(example,)475
b(w)-36 b(e)466 b(seek)g(a)g(p)36 b(olicy)467 b(for)g(estimating)f(a)g
(job's)g(desire)g(that)f(more)2000 17290 y(accurately)562
b(gauges)f(its)g(a)-36 b(v)g(erage)562 b(parallelism,)594
b(but)560 b(also)i(resp)36 b(onds)560 b(to)h(p)36 b(erio)g(ds)561
b(of)g(high)g(\(or)2000 18896 y(lo)-36 b(w\))333 b(lev)-36
b(els)334 b(of)g(parallelism)g(that)e(ma)-36 b(y)334
b(o)36 b(ccur)333 b(at)g(arbitrary)g(times)g(during)f(the)g(job's)h
(execution.)2000 20501 y(Sp)36 b(eci\257cally)-108 b(,)363
b(since)345 b(w)-36 b(e)345 b(cannot)f(reliably)i(discern)e(the)g(p)36
b(oten)-36 b(tial)345 b(parallelism)h(of)f(a)g(job)g(through)2000
22106 y(instan)-36 b(taneous)290 b(measuremen)-36 b(ts,)319
b(w)-36 b(e)292 b(emplo)-36 b(y)291 b(a)h(p)36 b(olicy)292
b(that)f(proactiv)-36 b(ely)292 b(explores)g(its)f(\\future")2000
23711 y(parallelism)409 b(and)f(uses)g(run)-36 b(time)407
b(information)i(ab)36 b(out)408 b(the)f(job)i(to)f(tune)f(the)h
(estimated)g(desire.)2000 25316 y(The)649 b(basic)g(idea)g(is)g(to)g
(giv)-36 b(e)650 b(a)f(job)g(more)g(pro)36 b(cessors)649
b(than)f(it)h(apparen)-36 b(tly)648 b(needs)h(at)g(the)2000
26921 y(curren)-36 b(t)546 b(time,)575 b(and)547 b(then)e(remo)-36
b(v)g(e)548 b(pro)36 b(cessors)547 b(that)f(aren't)h(b)36
b(eing)547 b(used)f(e\261cien)-36 b(tly)-108 b(.)919
b(Using)2000 28526 y(this)513 b(strategy)-108 b(,)534
b(w)-36 b(e)514 b(can)g(\257nd)e(and)h(exploit)i(sources)e(of)h
(parallelism)h(that)e(ma)-36 b(y)514 b(b)36 b(e)514 b(hidden)e(in)2000
30131 y(the)484 b(curren)-36 b(t)483 b(state)i(of)h(the)e
(computational)h(dag,)498 b(but)484 b(whic)-36 b(h)484
b(rev)-36 b(eal)486 b(themselv)-36 b(es)485 b(as)g(the)f(dag)2000
31736 y(is)411 b(unfolded.)571 b(\(Recall)412 b(that)e(since)i(w)-36
b(e)411 b(are)g(studying)g(online)g(sc)-36 b(heduling)410
b(algorithms,)417 b(w)-36 b(e)411 b(only)2000 33341 y(disco)-36
b(v)g(er)434 b(the)f(structure)f(of)j(the)e(dag)g(as)h(it)g(unfolds.\))
3951 35015 y(In)560 b(algorithm)i(WSAP)-108 b(,)560 b(the)g(primary)h
(mec)-36 b(hanism)561 b(for)g(exploring)g(the)f(parallelism)i(of)g(a)
2000 36620 y(job)414 b(is)f(b)-36 b(y)413 b(w)-36 b(ork)414
b(stealing:)569 b(when)413 b(a)h(pro)36 b(cessor)413
b(steals)h(w)-36 b(ork)414 b(from)g(its)f(victim,)419
b(it)413 b(remo)-36 b(v)g(es)413 b(and)2000 38225 y(executes)358
b(the)f(topmost)g(thread)g(from)h(the)e(victim's)j(deque,)373
b(whic)-36 b(h)357 b(is)h(necessarily)h(an)e(ancestor)2000
39830 y(of)419 b(the)e(thread)h(curren)-36 b(tly)417
b(b)36 b(eing)418 b(executed)g(b)-36 b(y)418 b(the)g(victim)g(\(see)h
(Lemma)f(4)g(in)g([7]\).)574 b(Since)418 b(the)2000 41435
y(ancestor)447 b(thread)f(is)h(shallo)-36 b(w)g(er)448
b(\(in)e(terms)g(of)i(dag)f(depth\))e(than)h(the)g(thread)g(b)36
b(eing)447 b(executed)2000 43040 y(b)-36 b(y)442 b(the)f(victim,)k(the)
d(thief)g(is)g(able)g(to)g(exp)36 b(ose)443 b(parallelism)g(starting)f
(at)g(a)g(higher)g(lev)-36 b(el)443 b(in)f(the)2000 44645
y(computational)535 b(dag.)882 b(In)535 b(the)f(LOOPY)f(b)36
b(enc)-36 b(hmark,)560 b(for)535 b(example,)561 b(the)534
b(second)h(pro)36 b(cessor)2000 46250 y(allo)g(cated)627
b(to)f(the)g(job)g(steals)h(the)e(ro)36 b(ot)626 b(thread)g(from)g(the)
f(deque)h(of)h(the)e(\257rst)g(pro)36 b(cessor,)2000
47855 y(th)-36 b(us)466 b(con)-36 b(tin)g(uing)466 b(the)g(execution)h
(of)h(the)e(main-lev)-36 b(el)467 b(lo)36 b(op)468 b(and)e(exp)36
b(osing)468 b(more)f(of)g(the)f(job's)2000 49460 y(parallelism)491
b(through)e(thread)g(B.)i(Eviden)-36 b(tly)-108 b(,)504
b(it)490 b(mak)-36 b(es)491 b(sense)f(to)g(use)f(run)-36
b(time)489 b(information)2000 51066 y(ab)36 b(out)365
b(steal)h(attempts)f(to)h(estimate)g(a)g(job's)g(pro)36
b(cessor)366 b(desire.)555 b(In)366 b(particular,)379
b(if)367 b(the)e(n)-36 b(um)g(b)36 b(er)2000 52671 y(of)512
b(steal)g(attempts)f(is)g(to)36 b(o)512 b(lo)-36 b(w,)532
b(then)510 b(w)-36 b(e)512 b(increase)g(the)e(estimated)i(desire)f(of)h
(the)f(job,)531 b(ev)-36 b(en)2000 54276 y(if)529 b(the)f(amoun)-36
b(t)528 b(of)h(w)-36 b(ork)529 b(a)-36 b(v)-72 b(ailable)530
b(on)f(the)e(ready)i(deques)f(do)36 b(esn't)529 b(seem)f(to)h(w)-36
b(arran)g(t)528 b(suc)-36 b(h)2000 55881 y(an)561 b(increase;)625
b(if)562 b(the)e(n)-36 b(um)g(b)36 b(er)560 b(of)i(steal)f(attempts)f
(is)i(to)36 b(o)561 b(high,)593 b(then)560 b(w)-36 b(e)562
b(reduce)e(the)g(job's)2000 57486 y(desire.)554 b(The)359
b(underlying)g(in)-36 b(tuition)359 b(is)h(that,)374
b(if)360 b(there)f(are)g(man)-36 b(y)360 b(unsuccessful)f(steal)h
(attempts)2000 59091 y(o)36 b(ccurring,)621 b(then)582
b(there)h(are)g(to)36 b(o)584 b(man)-36 b(y)584 b(pro)36
b(cessors)583 b(b)36 b(eing)583 b(used)g(ine\261cien)-36
b(tly)583 b(b)-36 b(y)584 b(the)e(job,)2000 60696 y(whereas)390
b(if)g(the)f(n)-36 b(um)g(b)36 b(er)387 b(of)k(unsuccessful)d(steal)i
(attempts)f(is)h(lo)-36 b(w,)399 b(then)389 b(most)g(pro)36
b(cessors)390 b(are)2000 62301 y(b)36 b(eing)320 b(used)g(e\261cien)-36
b(tly)-108 b(,)343 b(so)321 b(w)-36 b(e)321 b(can)f(a\256ord)g(to)h
(increase)f(the)g(allo)36 b(cation)322 b(in)e(searc)-36
b(h)320 b(of)i(additional)2000 63906 y(parallelism.)574
b(W)-108 b(e)416 b(formalize)h(the)f(notions)g(of)g(e\261ciency)h(and)e
(ine\261ciency|as)i(they)e(relate)i(to)2000 65511 y(a)478
b(job's)g(usage)f(of)h(pro)36 b(cessors|in)477 b(Section)h(6.1.)710
b(The)477 b(in)-36 b(tuition)477 b(presen)-36 b(ted)476
b(here)h(is)h(justi\257ed)2000 67117 y(theoretically)611
b(in)e(previous)h(\(unpublished\))d(w)-36 b(ork)610 b(b)-36
b(y)609 b(the)g(Sup)36 b(ercomputing)608 b(T)-108 b(ec)-36
b(hnologies)2000 68722 y(Group)432 b(at)i(MIT.)g(W)-108
b(e)434 b(discuss)f(this)g(w)-36 b(ork)435 b(in)e(Chapter)g(8.)3951
70395 y(When)400 b(using)h(the)f(n)-36 b(um)g(b)36 b(er)399
b(of)i(unsuccessful)f(steal)h(attempts)f(to)h(measure)f(an)h(allo)36
b(cation's)2000 72000 y(ine\261ciency)-108 b(,)347 b(w)-36
b(e)324 b(fo)36 b(cus)325 b(on)g(those)f(attempts)g(that)g(are)g
Fo(pur)-78 b(ely)433 b(unsuc)-78 b(c)g(essful)144 b Fy(,)348
b(meaning)324 b(that)25350 75321 y(33)p eop end
%%Page: 34 34
TeXDict begin 34 33 bop 2000 1328 a Fy(the)468 b(victim)i(pro)36
b(cessor)469 b(is)h(in)e(the)h(middle)f(of)i(w)-36 b(ork)470
b(stealing)g(itself,)479 b(as)469 b(opp)36 b(osed)469
b(to)g(attempts)2000 2933 y(that)440 b(are)g Fo(p)-78
b(artly)559 b(unsuc)-78 b(c)g(essful)144 b Fy(,)443 b(where)d(the)f
(victim)i(pro)36 b(cessor)440 b(has)g(an)g(empt)-36 b(y)440
b(deque)g(but)2000 4539 y(is)559 b(busy)f(w)-36 b(orking)560
b(on)e(some)h(thread.)953 b(Purely)559 b(unsuccessful)f(steal)h
(attempts)f(giv)-36 b(e)560 b(a)f(b)36 b(etter)2000 6144
y(indication)577 b(of)h(the)e(n)-36 b(um)g(b)36 b(er)575
b(of)j(ine\261cien)-36 b(tly)577 b(used)f(pro)36 b(cessors)577
b(in)g(a)g(job,)614 b(since)576 b(b)36 b(oth)577 b(thief)2000
7749 y(and)503 b(victim)i(pro)36 b(cessors)504 b(are)f(lo)36
b(oking)506 b(for)e(w)-36 b(ork.)790 b(In)503 b(a)h(partly)g
(unsuccessful)f(steal)h(attempt,)2000 9354 y(ho)-36 b(w)g(ev)g(er,)468
b(the)461 b(victim)g(pro)36 b(cessor)461 b(is)h(actually)g(doing)f(w)
-36 b(ork,)468 b(so)462 b(it)f(is)g(misleading)g(to)g(use)g(suc)-36
b(h)2000 10959 y(attempts)487 b(to)g(directly)h(measure)g(the)e
(ine\261ciencies)i(of)h(a)e(job's)h(allo)36 b(cation.)742
b(F)-108 b(or)487 b(example,)502 b(if)2000 12564 y(the)451
b(LOOPY)g(b)36 b(enc)-36 b(hmark)451 b(is)h(sc)-36 b(heduled)450
b(using)i(algorithm)g(WSAP)-108 b(,)451 b(then)g(the)g(total)i(n)-36
b(um)g(b)36 b(er)2000 14169 y(of)500 b(unsuccessful)e(steal)h(attempts)
g(is)g(alw)-36 b(a)g(ys)500 b(v)-36 b(ery)500 b(large,)516
b(b)36 b(ecause)499 b(only)g(one)g(thread)f(can)h(b)36
b(e)2000 15774 y(stolen)420 b(at)h(an)-36 b(y)420 b(giv)-36
b(en)421 b(time;)k(the)420 b(fraction)h(of)g(these)f(attempts)g(that)g
(are)g(purely)g(unsuccessful,)2000 17379 y(ho)-36 b(w)g(ev)g(er,)392
b(is)380 b(v)-36 b(ery)382 b(lo)-36 b(w,)392 b(b)36 b(ecause)380
b(most)h(pro)36 b(cessors)380 b(are)h(busy)f(w)-36 b(orking)382
b(on)e(a)h(sub)36 b(computation)2000 18984 y(when)383
b(their)g(deques)g(are)h(empt)-36 b(y)-108 b(.)561 b(As)383
b(a)h(result,)393 b(an)-36 b(y)384 b(decisions)f(based)g(on)h(the)f
(total)g(n)-36 b(um)g(b)36 b(er)382 b(of)2000 20589 y(unsuccessful)495
b(steal)i(attempts|or)e(the)h(n)-36 b(um)g(b)36 b(er)494
b(of)j(partly)f(unsuccessful)f(steal)i(attempts|)2000
22195 y(w)-36 b(ould)470 b(lean)g(to)-36 b(w)g(ards)470
b(reducing)g(the)f(job's)i(allo)36 b(cation,)481 b(ev)-36
b(en)470 b(if)h(all)f(the)g(pro)36 b(cessors)470 b(are)g(busy)2000
23800 y(doing)587 b(w)-36 b(ork)587 b(\(and)f(hence)g(b)36
b(eing)586 b(used)g(e\261cien)-36 b(tly\).)1037 b(Decisions)588
b(based)e(on)g(the)g(n)-36 b(um)g(b)36 b(er)585 b(of)2000
25405 y(purely)400 b(unsuccessful)f(steal)i(attempts,)406
b(on)400 b(the)g(other)f(hand,)406 b(w)-36 b(ould)400
b(lean)h(to)-36 b(w)g(ards)400 b(increasing)2000 27010
y(the)419 b(job's)i(allo)36 b(cation,)425 b(th)-36 b(us)419
b(exploiting)i(the)f(high)f(a)-36 b(v)g(erage)422 b(parallelism)f(of)g
(the)e(computation.)3951 28629 y(The)377 b(details)g(of)h(what)f
(thresholds)f(to)h(use)f(when)g(comparing)i(the)e(n)-36
b(um)g(b)36 b(er)375 b(of)j(unsuccessful)2000 30234 y(steals)488
b(attempts,)500 b(and)487 b(ho)-36 b(w)487 b(m)-36 b(uc)g(h)487
b(to)g(increase)g(or)h(decrease)f(the)g(allo)36 b(cation)489
b(b)-36 b(y)-108 b(,)501 b(are)487 b(left)h(to)2000 31839
y(the)370 b(particular)h(implemen)-36 b(tation)371 b(of)g(algorithm)h
(WSAP)-108 b(.)370 b(W)-108 b(e)371 b(discuss)g(these)f(decisions)h
(for)h(the)2000 33444 y(Cilk-AP)435 b(system)e(in)h(Section)f(6.1.)2000
37380 y Fx(F)-149 b(requency)600 b(of)d(Desire)j(Estimations)2000
39871 y Fy(W)-108 b(e)376 b(ha)-36 b(v)g(e)375 b(established)h(that)f
(the)g(job)h(sc)-36 b(heduler)375 b(is)h(resp)36 b(onsible)375
b(for)i(estimating)f(the)f(pro)36 b(cessor)2000 41476
y(desire)617 b(of)h(a)g(job)g(and)f(that)g(it)g(do)36
b(es)618 b(so)g(using)f(run)-36 b(time)616 b(information)i(ab)36
b(out)618 b(unsuccessful)2000 43081 y(steal)552 b(attempts.)930
b(The)552 b(question)f(remains,)581 b(ho)-36 b(w)g(ev)g(er,)581
b(as)552 b(to)f(ho)-36 b(w)551 b(often)h(these)e(estimations)2000
44686 y(should)399 b(b)36 b(e)399 b(made.)567 b(W)-108
b(e)400 b(consider)f(t)-36 b(w)g(o)400 b(options.)567
b(Option)399 b(1)h(is)g(to)g(estimate)g(the)f(job's)h(desire)g(at)2000
46291 y(ev)-36 b(enly)483 b(spaced)e(in)-36 b(terv)-72
b(als,)495 b(where)482 b(the)f(size)i(of)g(the)e(in)-36
b(terv)-72 b(al)482 b(can)g(b)36 b(e)482 b(tuned)f(either)g(statically)
2000 47896 y(or)369 b(dynamically)-108 b(.)558 b(Option)369
b(2)g(is)h(to)f(estimate)g(the)g(job's)h(desire)f(at)g(irregular)g(in)
-36 b(terv)-72 b(als,)383 b(p)36 b(erhaps)2000 49501
y(corresp)g(onding)337 b(to)g(relev)-72 b(an)-36 b(t)338
b(ev)-36 b(en)g(ts)337 b(in)g(the)g(job's)h(execution)f(\(for)h
(example,)357 b(when)337 b(a)h(pro)36 b(cessor)2000 51106
y(successfully)405 b(steals)g(w)-36 b(ork,)411 b(or)404
b(con)-36 b(v)g(ersely)-108 b(,)411 b(when)404 b(a)g(pro)36
b(cessor)405 b(is)f(rep)36 b(eatedly)405 b(unable)e(to)h(steal)2000
52711 y(w)-36 b(ork\).)3951 54330 y(There)400 b(are)h(sev)-36
b(eral)402 b(disadv)-72 b(an)-36 b(tages)401 b(to)f(Option)g(2.)568
b(First,)407 b(p)36 b(erforming)401 b(desire)f(estimations)2000
55935 y(at)412 b(imp)36 b(ortan)-36 b(t)411 b(ev)-36
b(en)g(ts)412 b(in)f(the)g(job's)i(execution)f(ma)-36
b(y)412 b(add)g(an)f(unacceptable)g(amoun)-36 b(t)412
b(of)g(o)-36 b(v)g(er-)2000 57540 y(head.)764 b(In)496
b(the)f(case)h(of)h(Cilk)g(jobs,)511 b(for)497 b(instance,)511
b(the)495 b(w)-36 b(ork-\257rst)495 b(principle)h([19])h(states)e(that)
2000 59146 y(sc)-36 b(heduling)380 b(o)-36 b(v)g(erheads)381
b(b)36 b(orne)380 b(b)-36 b(y)381 b(the)f(w)-36 b(ork)382
b(of)f(a)g(computation)g(should)f(b)36 b(e)380 b(minimized,)392
b(since)2000 60751 y(they)571 b(con)-36 b(tribute)570
b(more)i(to)f(the)g(execution)g(time)h(of)g(a)f(job)h(than)e(o)-36
b(v)g(erheads)572 b(b)36 b(orne)570 b(b)-36 b(y)572 b(the)2000
62356 y(critical)430 b(path.)577 b(Th)-36 b(us,)430 b(if)g(pro)36
b(cessors)430 b(that)f(are)h(curren)-36 b(tly)429 b(w)-36
b(orking)430 b(are)g(exp)36 b(ected)429 b(to)h(p)36 b(erform)2000
63961 y(desire-estimation)438 b(calculations,)k(the)c(e\256ect)g(on)g
(the)g(job's)i(running)d(time)i(ma)-36 b(y)439 b(b)36
b(e)438 b(adv)-36 b(ersely)2000 65566 y(large.)851 b(Ev)-36
b(en)524 b(if)h(this)f(o)-36 b(v)g(erhead)525 b(is)f(reduced|for)g
(example,)547 b(b)-36 b(y)525 b(restricting)f(the)g(estimation)2000
67171 y(calculations)481 b(to)g(pro)36 b(cessors)481
b(that)f(are)g(in)g(the)g(middle)g(of)i(stealing)f(\(adding)f(to)g
(critical-path)2000 68776 y(o)-36 b(v)g(erhead)310 b(instead)f(of)i(w)
-36 b(ork)311 b(o)-36 b(v)g(erhead\)|the)308 b(irregularit)-36
b(y)311 b(of)g(the)e(estimation)h(in)-36 b(terv)-72 b(als)310
b(mak)-36 b(es)2000 70381 y(it)434 b(di\261cult)f(to)g(measure)h(or)g
(tune)e(the)h(incurred)g(o)-36 b(v)g(erhead,)433 b(let)h(alone)g
(reason)g(ab)36 b(out)433 b(it.)3951 72000 y(As)495 b(a)g(result,)510
b(w)-36 b(e)495 b(stic)-36 b(k)495 b(to)g(Option)e(1)i(in)g(algorithm)g
(WSAP)-108 b(,)495 b(p)36 b(erforming)495 b(the)f(desire)g(es-)25350
75321 y(34)p eop end
%%Page: 35 35
TeXDict begin 35 34 bop 2000 1328 a Fy(timation)469 b(at)f(regular)h
(in)-36 b(terv)-72 b(als.)683 b(By)469 b(tuning)e(the)h(size)h(of)g
(the)f(in)-36 b(terv)-72 b(al,)478 b(w)-36 b(e)469 b(can)f(balance)h
(the)2000 2933 y(trade-o\256)429 b(b)36 b(et)-36 b(w)g(een)429
b(the)h(o)-36 b(v)g(erhead)429 b(incurred)g(b)-36 b(y)430
b(estimating)g(a)g(job's)h(desire)e(and)h(the)f(resp)36
b(on-)2000 4539 y(siv)-36 b(eness)583 b(of)h(these)e(estimates)i(to)f
(c)-36 b(hanges)582 b(in)h(the)f(job's)i(parallelism.)1027
b(Sp)36 b(eci\257cally)-108 b(,)621 b(larger)2000 6144
y(in)-36 b(terv)-72 b(als)514 b(reduce)f(the)g(o)-36
b(v)g(erhead)514 b(incurred)e(b)-36 b(y)514 b(the)f(desire)h
(estimation,)534 b(while)514 b(reducing)g(the)2000 7749
y(resp)36 b(onsiv)-36 b(eness)446 b(of)h(the)f(estimates)g(to)h(c)-36
b(hanges)446 b(in)g(the)g(job's)h(parallelism.)617 b(Smaller)447
b(in)-36 b(terv)-72 b(als)2000 9354 y(ac)-36 b(hiev)g(e)466
b(the)f(opp)36 b(osite)466 b(e\256ect,)473 b(incurring)465
b(greater)h(o)-36 b(v)g(erhead)466 b(but)e(resp)36 b(onding)465
b(to)h(c)-36 b(hanges)465 b(in)2000 10959 y(parallelism)529
b(more)f(promptly)-108 b(.)861 b(W)-108 b(e)528 b(discuss)g(our)f
(approac)-36 b(h)528 b(to)g(tuning)f(this)h(in)-36 b(terv)-72
b(al)528 b(in)g(the)2000 12564 y(con)-36 b(text)434 b(of)g(the)f
(Cilk-AP)h(system)g(in)g(Section)f(6.1.)25350 75321 y(35)p
eop end
%%Page: 36 36
TeXDict begin 36 35 bop 25350 75321 a Fy(36)p eop end
%%Page: 37 37
TeXDict begin 37 36 bop 2000 10259 a Fw(Chapter)1033
b(5)2000 15868 y(A)g(Dynamic)g(Pro)86 b(cessor-Allo)g(cation)2000
19189 y(Algorithm)1033 b(for)2000 22510 y(Adaptiv)-86
b(ely)1033 b(P)-86 b(arallel)1032 b(Jobs)2000 28617 y
Fy(In)381 b(a)h(real)f(t)-36 b(w)g(o-lev)g(el)383 b(sc)-36
b(heduling)380 b(system)i(using)f(a)g(dynamic)h(pro)36
b(cessor-allo)g(cation)383 b(p)36 b(olicy)-108 b(,)393
b(the)2000 30222 y(op)36 b(erating)479 b(system)g(comm)-36
b(unicates)479 b(with)f(the)h(job)g(sc)-36 b(heduler)477
b(to)i(determine)f(the)g(curren)-36 b(t)478 b(al-)2000
31827 y(lo)36 b(cation)442 b(of)f(a)g(job.)599 b(In)440
b(Section)g(4.2,)k(w)-36 b(e)441 b(discussed)e(the)h(p)36
b(olicies)442 b(used)e(b)-36 b(y)440 b(algorithm)h(WSAP)2000
33432 y(in)c(the)f(second)g(lev)-36 b(el)438 b(of)g(sc)-36
b(heduling)436 b(to)h(estimate)g(the)f(pro)36 b(cessor)438
b(desire)e(of)i(a)f(job)g(and)f(rep)36 b(ort)2000 35038
y(it)457 b(to)g(the)g(\257rst)f(lev)-36 b(el.)650 b(In)457
b(this)g(c)-36 b(hapter,)462 b(w)-36 b(e)457 b(describ)36
b(e)457 b(a)h(w)-36 b(ell-kno)g(wn)457 b(dynamic)h(pro)36
b(cessor)457 b(al-)2000 36643 y(lo)36 b(cation)388 b(algorithm,)396
b(algorithm)387 b(DP)-108 b(,)387 b(whic)-36 b(h)386
b(allo)36 b(cates)388 b(pro)36 b(cessors)387 b(to)f(m)-36
b(ultiple,)396 b(concurren)-36 b(t,)2000 38248 y(adaptiv)g(ely)351
b(parallel)h(jobs)e(in)g(the)g(\257rst)g(lev)-36 b(el)351
b(of)g(sc)-36 b(heduling.)550 b(DP)350 b(uses)g(information)h(ab)36
b(out)351 b(the)2000 39853 y(pro)36 b(cessor)502 b(desires)f(of)h(eac)
-36 b(h)501 b(job)h(to)g(distribute)e(pro)36 b(cessors)502
b(in)f(a)h(w)-36 b(a)g(y)502 b(that)f(is)h(fair,)519
b(e\261cien)-36 b(t,)2000 41458 y(and)352 b(conserv)-72
b(ativ)-36 b(e.)552 b(W)-108 b(e)353 b(b)36 b(egin)352
b(b)-36 b(y)353 b(de\257ning)e(these)h(three)g(conditions,)369
b(and)352 b(then)f(w)-36 b(e)353 b(sho)-36 b(w)353 b(ho)-36
b(w)2000 43063 y(DP)486 b(satis\257es)g(them.)735 b(Algorithm)486
b(DP)g(is)g(used)f(in)h(the)g(\257rst-lev)-36 b(el)485
b(sc)-36 b(heduler)485 b(of)i(the)e(Cilk-AP)2000 44668
y(system)434 b(in)f(Chapter)g(6.)2000 49565 y FC(5.1)2152
b(Prop)60 b(erties)476 b(of)i(a)g(Go)60 b(o)g(d)478 b(Dynamic)g(Pro)60
b(cessor-Allo)g(cation)6902 52000 y(Algorithm)2000 55072
y Fy(In)532 b(this)h(section,)557 b(w)-36 b(e)533 b(de\257ne)f(three)g
(conditions)g(for)h(a)g(go)36 b(o)g(d)534 b(dynamic)e(pro)36
b(cessor)533 b(allo)36 b(cation)2000 56677 y(algorithm:)740
b(fairness,)535 b(e\261ciency)-108 b(,)534 b(and)514
b(conserv)-72 b(atism.)820 b(T)-108 b(ogether,)534 b(these)514
b(conditions)g(ensure)2000 58283 y(that)433 b(an)h(allo)36
b(cation)435 b(ac)-36 b(hiev)g(es)434 b(b)36 b(oth)433
b(lo)-36 b(w)435 b(job)f(resp)36 b(onse)433 b(times)g(and)h(high)f(job)
h(throughput.)3951 59962 y(W)-108 b(e)327 b(consider)f(a)h(parallel)h
(system)f(with)g Fu(P)507 b Fy(pro)36 b(cessors)327 b(and)f
Fu(J)450 b Fy(running)325 b(jobs,)349 b(where)327 b Fu(J)492
b Fs(\267)369 b Fu(P)181 b Fy(.)2000 61567 y(A)-36 b(t)438
b(an)-36 b(y)438 b(giv)-36 b(en)438 b(time,)i(eac)-36
b(h)438 b(job)g Fu(j)451 b Fy(=)376 b(1)p Fu(;)221 b
Fy(2)p Fu(;)g(:)g(:)g(:)k(J)561 b Fy(has)438 b(a)g(pro)36
b(cessor)439 b(desire)f Fu(d)39561 61766 y Fr(j)40047
61567 y Fy(,)i(represen)-36 b(ting)437 b(the)2000 63172
y(maxim)-36 b(um)462 b(n)-36 b(um)g(b)36 b(er)460 b(of)i(e\261cien)-36
b(tly)463 b(usable)e(pro)36 b(cessors,)470 b(and)461
b(an)g(allotmen)-36 b(t)462 b Fu(a)41775 63371 y Fr(j)42262
63172 y Fy(,)469 b(represen)-36 b(ting)2000 64777 y(the)396
b(n)-36 b(um)g(b)36 b(er)394 b(of)j(pro)36 b(cessors)396
b(allo)36 b(cated)398 b(to)e(it.)566 b(If)396 b Fu(a)27286
64976 y Fr(j)28142 64777 y Fu(<)369 b(d)30199 64976 y
Fr(j)30685 64777 y Fy(,)404 b(w)-36 b(e)397 b(sa)-36
b(y)396 b(that)g(the)g(job)g(is)g Fo(deprive)-78 b(d)144
b Fy(,)2000 66383 y(since)448 b(it)f(has)h(few)-36 b(er)448
b(pro)36 b(cessors)447 b(than)g(it)h(desires;)454 b(if)449
b Fu(a)29313 66582 y Fr(j)30192 66383 y Fy(=)392 b Fu(d)32272
66582 y Fr(j)32759 66383 y Fy(,)451 b(w)-36 b(e)448 b(sa)-36
b(y)448 b(that)f(the)g(job)h(is)g Fo(satis-)2000 67988
y(\257e)-78 b(d)144 b Fy(,)456 b(since)c(its)f(desire)g(has)h(b)36
b(een)450 b(met.)632 b(W)-108 b(e)451 b(de\257ne)f(the)h(notions)h(of)g
(fairness,)k(e\261ciency)-108 b(,)456 b(and)2000 69593
y(conserv)-72 b(atism)434 b(as)g(follo)-36 b(ws:)3590
72000 y(1.)651 b(An)458 b(allo)36 b(cation)460 b(is)f
Fo(fair)608 b Fy(if)459 b(the)f(pro)36 b(cessors)459
b(are)g(distributed)e(equally)j(among)f(the)f(jobs.)25350
75321 y(37)p eop end
%%Page: 38 38
TeXDict begin 38 37 bop 5252 1328 a Fy(Mathematically)-108
b(,)671 b(if)624 b(there)e(exists)i(a)f(job)g Fu(j)698
b Fy(suc)-36 b(h)622 b(that)h Fu(a)35454 1527 y Fr(j)36632
1328 y Fu(<)691 b(d)39011 1527 y Fr(j)39497 1328 y Fy(,)671
b(then)622 b(for)h(all)h Fu(i)691 b Fy(=)5252 2933 y(1)p
Fu(;)221 b Fy(2)p Fu(;)g(:)g(:)g(:)k(;)c(J)123 b Fy(,)446
b Fu(m)12835 3132 y Fr(i)13596 2933 y Fs(\267)385 b Fu(a)15697
3132 y Fr(j)16486 2933 y Fy(+)301 b(1;)449 b(whenev)-36
b(er)443 b(a)g(job)h(is)f(depriv)-36 b(ed,)446 b(then)c(no)h(other)g
(job)g(receiv)-36 b(es)5252 4539 y(more)642 b(than)f(1)h(more)g(pro)36
b(cessor)643 b(than)e(this)g(job)i(receiv)-36 b(es.)1204
b(\(The)642 b(allo)-36 b(w)g(ance)643 b(of)g(one)5252
6144 y(pro)36 b(cessor)433 b(is)h(due)f(to)h(in)-36 b(teger)433
b(roundo\256.\))3590 7952 y(2.)651 b(An)391 b(allo)36
b(cation)393 b(is)f Fo(e\261cient)520 b Fy(if)392 b(it)g(uses)f(as)h
(man)-36 b(y)391 b(pro)36 b(cessors)392 b(as)g(p)36 b(ossible.)565
b(Mathemat-)5252 9557 y(ically)-108 b(,)524 b(if)506
b(there)e(exists)i(a)f(job)h Fu(j)580 b Fy(suc)-36 b(h)504
b(that)g Fu(a)28474 9756 y Fr(j)29452 9557 y Fu(<)490
b(d)31630 9756 y Fr(j)32117 9557 y Fy(,)523 b(then)36035
8560 y Fk(P)37437 8911 y Fr(J)37437 9944 y(j)51 b Ft(=0)39348
9557 y Fu(a)40031 9756 y Fr(j)41008 9557 y Fy(=)490 b
Fu(P)181 b Fy(;)541 b(if)506 b(a)f(job)h(is)5252 11162
y(depriv)-36 b(ed,)433 b(then)f(there)h(m)-36 b(ust)433
b(b)36 b(e)434 b(no)f(free)h(pro)36 b(cessors)434 b(in)f(the)g(system.)
3590 12970 y(3.)651 b(An)326 b(allo)36 b(cation)328 b(is)f
Fo(c)-78 b(onservative)441 b Fy(if)327 b(no)f(job)h(receiv)-36
b(es)327 b(more)g(pro)36 b(cessors)326 b(than)g(it)h(desires.)5252
14575 y(Mathematically)-108 b(,)684 b(for)634 b(all)g
Fu(j)784 b Fy(=)709 b(1)p Fu(;)221 b Fy(2)p Fu(;)g(:)g(:)g(:)k(J)123
b Fy(,)683 b Fu(a)29094 14774 y Fr(j)30290 14575 y Fs(\267)709
b Fu(d)32708 14774 y Fr(j)33195 14575 y Fy(;)733 b(a)634
b(job)g(is)f(either)g(depriv)-36 b(ed)633 b(or)5252 16180
y(satis\257ed.)3951 18379 y(The)595 b(fairness)g(condition)f(allo)-36
b(ws)597 b(all)e(jobs)g(to)g(run)e(sim)-36 b(ultaneously)-108
b(,)636 b(instead)594 b(of)i(ha)-36 b(ving)2000 19984
y(some)369 b(of)h(them)e(w)-36 b(ait)370 b(in)f(a)g(queue.)557
b(The)369 b(conserv)-72 b(atism)369 b(condition)g(ensures)f(that)g
(jobs)i(use)e(their)2000 21589 y(allo)36 b(cations)332
b(e\261cien)-36 b(tly)330 b(\(b)-36 b(y)329 b(not)h(giving)h(pro)36
b(cessors)330 b(to)g(jobs)g(that)f(do)h(not)f(use)h(them)f(w)-36
b(ell\),)351 b(and)2000 23194 y(the)460 b(e\261ciency)h(condition)g
(ensures)f(that)g(the)g(system)h(utilizes)h(all)f(pro)36
b(cessors)461 b(e\261cien)-36 b(tly)-108 b(.)660 b(As)2000
24799 y(long)465 b(as)f(the)g(e\261ciency)g(condition)g(is)h(met,)471
b(b)36 b(oth)464 b(fairness)h(and)e(conserv)-72 b(atism)465
b(con)-36 b(tribute)463 b(to)2000 26404 y(high)486 b(job)g(throughput.)
734 b(F)-108 b(urthermore,)498 b(since)486 b(jobs)h(do)f(not)f(sp)36
b(end)485 b(arbitrarily)i(long)g(p)36 b(erio)g(ds)2000
28010 y(of)601 b(time)e(in)h(queues,)641 b(the)600 b(resp)36
b(onse)599 b(times)h(of)g(jobs)h(more)e(directly)i(re\260ect)e(the)g
(amoun)-36 b(t)599 b(of)2000 29615 y(computation)433
b(they)h(ha)-36 b(v)g(e)433 b(to)h(p)36 b(erform.)3700
56038 y @beginspecial 116 @llx 62 @lly 785 @urx 433 @ury
4014 @rwi @setspecial
%%BeginDocument: fec-allocs.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Thesis Figures.ppt)
%%Version: 1 4
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910170614Z)
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 116 62 785 433
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
116 62 moveto 785 62 lineto 785 433 lineto 116 433 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
116 62 669 370 rectclip
[ 0 -1 1 0 53.5199 548.80182 ] concat
/N53 [/DeviceRGB] /ColorSpace defineRes pop

 Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%!PS-Adobe-3.0 Resource-CIDFont
%%DocumentNeededResources: procset CIDInit
%%IncludeResource: procset CIDInit
%%BeginResource: CIDFont ACEENF+Wingdings-Regular
%%Title: (ACEENF+Wingdings-Regular Adobe Identity 0)
%%Version: 1
/CIDInit /ProcSet findresource begin
20 dict begin
/CIDFontName /ACEENF+Wingdings-Regular def
/CIDFontVersion 1 def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
  /Registry (Adobe) def
  /Ordering (Identity) def
  /Supplement 0 def
end def
/CIDMapOffset 0 def
/FDBytes 0 def
/GDBytes 3 def
/FontBBox [0 -211 1359 899] def
/FontInfo 2 dict dup begin
/FSType 4 def
/OrigFontType /TrueType def
end readonly def
/CIDCount 65535 def
/FDArray 1 array
dup 0
  %ADOBeginFontDict
  10 dict begin
  /FontType 1 def
  /PaintType 0 def
  /FontName /ACEENF+Wingdings-Regular def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
  %ADOBeginPrivateDict
  /Private 8 dict dup begin
  /BlueValues [-15 0 600 650] def
  /MinFeature {16 16} def
  /LanguageGroup 1 def
  /password 5839 def
  /lenIV 4 def
  end def
  %ADOEndPrivateDict
currentdict end
%ADOEndFontDict
put def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin GlyphDirectory +
0 <10bf3170383ea4b0c021eb144136b633fdce75fa04f128bf1edbba288aa0
97269e790f6918f958ba887e6b> |
!
end
%%BeginData: 21 Binary Bytes
(Binary) 0 StartData
%%EndData
%%EndResource
 ct_restoreCIDInit /ACEENF+Wingdings-Regular-Identity-H /Identity-H 0 [/ACEENF+Wingdings-Regular] ct_ComposeFont pop end end 
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N24 (ACEENF+Wingdings-Regular-Identity-H)
/N24 (ACEENF+Wingdings-Regular-Identity-H) /Identity-H [ (ACEENF+Wingdings-Regular) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
%%BeginResource: font ACECGH+Arial
11 dict begin
/FontName /ACECGH+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/slash 
<10bf317079c7734b2b2d10870fa08bf22c5d2d2b831224fa01d492> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/equal 
<10bf317031d9337efec57cde6d0e2594940fb2f7d43f8231e7e886eb65b9
941cfa14b36a37f61b> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153ca9a91165
96e2ea405597ca7f292098a14c92b8766b957d29536d6a74922bce6efa67
d7fa67d47a8ae997e897ea42f1e923c09a3ad5b1aa2186622859ef03a213
f7c26727c45c24d289e1bf8fa6a719352242839e565e8af9cb5c48758232
20530e01b09cb28b590a86024fb341940ed5d19a7e036981d38ceef64334
a577636f4f149330a371e1> ND 
/E 
<10bf317028198094ce8cd275e305c79a7a258ddd928bd9dc896c51a549b4
869242612fc9caa06c2483d03d9996ef> ND 
/G 
<10bf317032094fc341dd3fe1e9917e7219e2faf83af778bdd7ec0c55098b
e0e9b7739ea63012a93f617db4a54ea175a87f3963b18d82408a4b4aca07
c62fb2e9535e5b6e8c7ae61eda2a1953530b7a1c20e1c613736eaa239c10
515a07f3aa0b6d64123373a1e5a99a624259a238e115671adf7333dd41a7
8ab39a78f4284786c4df0d20429167addc89fc078c7c417063dcfe0d52c4
81387bcf48cb4c7455f1384c6dd065c8e657f42b246b3a7cb37a89589130
dac20b879178be4ff3a9d7cba8> ND 
/H 
<10bf317029572e11ba08a126ba806446a0c9c3ab3c813945ebc6acc68365
3aed03753c654018a3b91d9f74de> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/J 
<10bf317054a23a350bd8657c97523c2449830f2addfaa5717667b59bcb2d
036471fab8ce4c5ebc99101e60b80084d709068021fa27df51efcf4e0c39
2f415e56722e844c86f08af512f65c2828294800fceec78aa058d6f73bf5
497ea1a0> ND 
/K 
<10bf317026ba62062704f9ba87c1ab1fc7730cdfdacc88df1e45004269f1
b43137c9251fe2841c5423281c9858682237f26a47da9c17460f> ND 
/L 
<10bf317026bbdb3a0b5fa193bb84a78137b0c1eca959bcd3e291fc955f> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/O 
<10bf317049853377ebc41c579b14b81e62dc18fcb981afe077cd458d5644
5d162ad01eefba418dc940d1d3586db0f88db59e5528595c3075286d478f
ea78855f3395d4738c829bc906481255e6921ecaae5330664e2d60658bdb
995713c78bf5f3c9aa2888eb787edfd0a898f063dfe41961d0136090fc22
3d36c7c34c3efd0ca3ba6ab8d9dee45f39f5c1354854a0db2f2d67ebe6d0
37578a0ff716ab77d6c101> ND 
/P 
<10bf31702a85d5ccd794b0f82fad1df586d5fbd89610cffce961ef0c01e8
0dd41794780f980f6fae77f9030913b26e9faf7c4997be350b070860e734
b58d1af4e1f6fdede1ce393d1a10ecb0df5eb5d5689fc4b0c8ea8e8ea551
86c9a594f8c2368e99f819874a733380254b54725709f6d7ae5e> ND 
/R 
<10bf31702819c97bfff21764697e50774ba74072e0daf25a84b5ab81ce67
f36424a8f4f31afdf4de9e5912f7a5ba0ce90948b990647285d2500d6d57
ef6e940fb321e739e33f71f0994fb0b96bf3e18815066ca201f1578cce2a
71a0a57bc87021521bfe1b691fde6e9063a575e47bf725cfd1c0afa40b0c
a839a6c28bfd0b7f0f7469b4cf16ee3c7a54706ea2da49ba1db858f3c370
3042b60d2181c6c1afb0bef5eb> ND 
/S 
<10bf31704ab370a8a6c235279ed6c2ccfc716fa1295d141c34dd24f95c73
82e11c724a74e86021432ff58ab0f9585559c2cc7a3fe0720eadda5eee3e
cb055c76e8d7f22cfddbcfbe4ee1a562282b307d86efef90d9a8c71c96ab
9543712fa6240508ea1f38536804c47dfcc21f777c873fc11b7e20f7a228
b35e8d75f100a7da6082feb065d087853344b8bf00df7291cc74173d8c17
2964ca635a4e981f1604dc10d454f452e70073d386bcbe3ed4c09e72aa02
e7eb1e382ccb2fe70e1e9e3084e7824b4261723bffe42f4fc72d36ddcdd9
e884d10e18a55004b6149a9b0c7ead4b42afa8906a80deea322a930f4d91
ac35a6e6186e5d082f09> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/V 
<10bf31707d937b42ca5aa917fb8735867898e23266ce63f299decbd88902
a58f50d327fa84a3893c0fe3af9d5b8d8ece1349c10cbf> ND 
/W 
<10bf317065f5a4c4e3c80d2d3c9a1fcad659c2e6c6d2c6d3837d757d8ce5
bc1499c5c524e9e63c31a8d844fdbf4be5dd703a7370e5d253c1c2978b20
65c127b3368a3f09d4a091f1db80d20fc735898bba004f1ee64395ffadec
3ecc114449263c21476fc24c8796d2> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0466fa484e27564
2ef62da05fc0e561425aa7c0cf759f2df2fed9f5cab4e563d9d485ca6e49
6a23023cc7d5336a38ed163f6d25eac0416c891913363ad8aab5312feed7
de0b0bbcc0db8b66958d96174480f5040af2cfb1590a9410022fc6398cb1
d4435f6325a11aad4c77347983eb4748b4ada02263a3> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19b91e9f126
e6f5aabcb4381bf8bfee294b80bae1d888f1314da01fbe02> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/ellipsis 
<10bf317005ae4251cd21abe49da2ed2a9dd884bb56dbc7458ad71cf5a1d6
2dfe225499a0bcd86f7ad5ac4a6a41> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACECGH+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 61 /equal put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N23/ACECGH+Arial 1 TZ
%%BeginResource: font ACDLEF+TimesNewRoman,Bold
11 dict begin
/FontName /ACDLEF+TimesNewRoman,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/D 
<10bf31706ae1a2410dd640e3e63d847a829b887bc572c26d027aaf3e136c
2965f1293615651feb84663300d52dce5d4a1961bda9cad7337a8805c555
166a043880853e78ef403eb7fe435d03cab0551af60247e85130f09c90ee
3c94d2d750604e6844157c0d126af0ef65c2ffa230950278db25e9809ea7
9a8c1fa4413a025279b92ff5101f46204b53ff6a0cd3f132f97577e39b91
6b4a047cd64857ea8d45d29ad846499212ffe6976c40507ef6807317f99f
4b6e39b4058fe2a6f1ec74e6> ND 
/S 
<10bf31704d4d2f6115e62eb3cb4a9ddfe5db9cde1ae983f5728ba6db2f41
314d20066a19799bf57ae2dbe01a0b61f8c2a6e42b2f8d918c37811d5f70
25e5ac7e73fd1ec59e9775c0cede584da8df39f8d2add4534fa37460fbd9
dae4a220a5f6fbc49ab223ba031a8d18b19668d10e453118f3fe781a6ca4
9ea97b3a0d73b13b22e8ae77669dd6c88e1b9b68dd8f7b7fe964bf532900
c4d5709fca3afda461ac703c3e3e8b96f1a46b23454036057cd11c016ab5
9498270bb64ebc20243227d866d9101252cc6e707890e5fee274a276aa20
d2eb6b7cc56e4e5597254e2da0c7a35d81099f865acf33314c8d04d484f3
6e2da3527c7dcc93dc75cb24ec34139fcb9835a375> ND 
/a 
<10bf31704ab21818500193ceb7cb34e9df44d2f8ec9dd5c98d55ae22888d
9df2e6f213a10b28cefcaf95aa9640c835b3bd1ffcdc75a4a63fa25c6d04
6e0087c66cd64147f3ed96dff91cb0244813473d9381cce21ce83d903943
f4ac8f3242bc292da1de1531cc532a86e1f3cc7d1e021df739aea871418b
5de99006d4c5ab2682816c98649eed26a6b084e7f7ec911ec66ec74f0ad5
38dbeb4cb0b01a394cc508cff8b61d71209af50bf8f8ceff036e8a30b999
2cc25f8ecf6950be6e3e9dff42e54836dd89050eeb2b37dd3a0be262e8d0
35a9d19daa2c018f11edad2db0075ba942763369ef43d94cbf0bc2410fbc
2ce40e96872b5ba313aee01224b418272066554dc36af669eca48e0dfc1b
4fcee06d> ND 
/c 
<10bf3170435d9d6bdca5552f143ea8eb00c0f43aa73ae186a90dee90257c
64691c2333fd0a4a4dc6b26abc1900c24aba3f592c7bcbc889fe7b599700
778b0a93f96f5579a87f760b1dbd87bf8d1ff4e807fa73245f81d5812a13
e76b05bfefadfd217cb7b7b5fc9876179e2b2989aa002dde4d77d381e7f0
f6ace03d73f2b18f749bc10e6974c8b964b6425bd099adf48ae2e4868a46
74e70af2af4f77dd356ffc858f87> ND 
/i 
<10bf3170524a2d226105953d5eb24f8564e6b6f09006dcc5de63bfd94641
5431d498669f2a636dd1ce21202db89c173adcec99d9be4feb68a686a334
a4c32747de504ee5b288cf4791bb5cdd4a6f4abb420134e012ba9028a116
613f1accf2a80106e9041eb6299349713fdcc742227c93df73e17499d587
d463b9326464b14774fda5181e4133> ND 
/m 
<10bf3170422e98c5ed7ba2b7088d79e9e2818a90b5d814a1206a981fa47f
862545d86e5774c22cb75288f646fafd458bbc6d054d4d3cc74a2523e484
fe78e199ddcb1968c8b6caca0f25aad70888cf9affb9ce4bc81b508f7bc6
f3f4101e8765442e5856ef14e7a67b3953f86d293654380a72cc0ce0f93d
60af394ae7f77acf9b4841bf6367ee3f347d52adc3d20b75e623aebcc7e1
454939c521c56d240ca699f20d4a909d8615bb761de2ab6e367e19048e80
a0e981d6b5a2c1dec33f9c2a025f5e1d45fa3c1cde2284b6ebd1ceb33dc5
06c68f7f2e925b9679318e5c8e29e1c69aa269822e7f13aac7a0d100833d
688b3c0c7e400b85a20a96fbdff0737ab054bd03b86538f9e1a745606112
63b89a0a4210a8c322f6c572a07c4ce8a71ee425fa57fd69c1d5bf> ND 
/n 
<10bf31705fc1934666df69889b5e7716ef594193b6332fd6e87679d4002a
60b418d237a9a7fcd602eb906106efaf0b01b4528edbdaffd7aa13593d7f
0f21d9915346ad8e6da94702995c89ac1ca2bf2b32ba15e8cfbcb839038e
d3cfc8235729a16269b2f6c14c0345f60ae251ed8180347001c22289ef41
5cf4384a45d9a8e999484bc9b88c99f3dd7539b38fdb724af0e4ec8e215f
e0c6184ff35603d3cc911f6a426176dc15e6fe4e94358cddf593f4927f46
> ND 
/t 
<10bf31706c43702a3ba333d6396a27008c7d9ec0f97f7d821e81c4dfe978
3a6528b50abbe393ef5d601f52bf5d77ebc263fe98283b2ecc6b82e445f0
03e67be8c4d981c7a936b403802ec79ac9fadee0d8907b8e4791f6ac32b5
6afce28831bdbf6534dcb0234b10e060c060d99eb3> ND 
/y 
<10bf3170612e883674ba1652c0ab7cf860cb3fab7a30d213e7dee46c987f
7a59f1f2b004f2417db5ae17465d9ac2a69a0d6e1f1996eda9172f4c4d34
991863a26e69b6425108e74d4f5b0c42cc93e48cdc09ebea4885c41e6403
7e081eba1021614ff3ce259cd6b5ddb2b3d492f19700d136fc19e0eb5e55
7117ac8ad30edd6bf4443303a41df826163e43b5f55768466b5aafbcfff4
0e77aada54e22b600686d2278b06e2a9a3b609d2ceebd2837c5030035b7b
9989469c2d68bbbb5732930446e8bbf181a1acd10aaeb0> ND 
/ellipsis 
<10bf317012d812ee6c1cfe6912aee08488a1c06a42647d7aa06987fb2664
823ceda37d819cab6655b51193d1830ecaa857159cacd9f0559b37484c2e
582460e2a6f587c7ab3eae04195e36200e300b7ddfe8932caee1acf51b84
4b042c14412a4d25dfd51913641028be0838fa26f04a646d8306425e2f41
065beeb6f631d4f11f3e8a585e4ef70e7812a6a7c4145478e2cd16a10442
b8098d4acff55887e9f240c5f3ea81f99ef0a58f5ea06f12ba76a7e40af7
c052c6f1ea2a212f03cf3305> ND 
/multiply 
<10bf3170245e278dce0892d177e931474f6b8ffefdd0495eb420ae00e873
a102d81e1865cb7080157d5e584fb6587a42416c14fc03d252afce08dfa7
ed71dba87426> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDLEF+TimesNewRoman,Bold findfont /Encoding get
dup 0 /.notdef put
dup 68 /D put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 116 /t put
dup 121 /y put
dup 133 /ellipsis put
dup 215 /multiply put
pop
%%EndResource
[/N58/ACDLEF+TimesNewRoman,Bold 1 TZ
%%BeginResource: font ACDLCF+TimesNewRoman
11 dict begin
/FontName /ACDLCF+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/space 
<10bf317079c757bf91> ND 
/parenleft 
<10bf317046e70250e8bd40d114dd6e816b58f4d3349c0c7727832e7501d9
0d48751e5ed01a4a989a3de6f3df4e8150bcde04496d7ebf18ade860af48
8df404b0480a8fe53e55e37acb5a554f9e5cbbe042244d6fc0aa0fdafde4
acb4c52d35fe39221cd926f89c> ND 
/parenright 
<10bf3170537b448b82841392ad69a78470fcf6ad5b9860e31496592c5fd2
8c2a948b7ef1391379bc9dc9754e13aa1a0d8be5cfd2e3bc1b6a246b4628
a43a8883776071abf86a7883d030defeed590f0bf1949e72bae27054def5
466be78152f4af0ef71e17f1> ND 
/slash 
<10bf31707ecffa29aa99596df40b96812e390790337673cf79e85a6235> ND 
/zero 
<10bf31705d64a97b17e82784743dd8afd77cc124ffedf62073386a4af3bd
86fd28c9c7a756e9ef18e3ca007b94f0e02e9eb268494f71c4e6ce33e23a
daf3d98e6e397ae6d95a99deac335d9d72bffd478071defcda00cb768906
0b44c557ecf61de22b31359bb158f6fec05d2caffa2d64aa1e2dc65d6175
e933567afd84f788ad9d2ecdc1d1277289609d3478a2f9ff64e3fec0e6b8
8edb35e90668db5b556d9651c4b7ff49d0e2> ND 
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
/four 
<10bf317069b1fd7146b17c113b617a69456a1f46fa86f93a1743e1bde519
49e5c8665d9cf49ab4179aecaf779fa834a317855eb2ce61cdee1d727f> ND 
/five 
<10bf317049845615ceab2cb35844ace30baf3e54b0e1773fc25e2037b21b
b58b95d34cefc92bea69dc9b438084ed7eb5c6702a368454ebc82a5856ce
9936aede12d64deba22dd59cd070d9cd700c552563a2157176094ad577ca
7175d4c555582970bb6ced51f021b279f79ea313c4e45258856c7401f914
3fd613f871ff33cdce06d0175d18b29427c1e70009e3e10e63caa0676029
8c0b976669b8d245> ND 
/six 
<10bf3170448bf7f9a4e5f8472a5a2d45b7594de91351c6ec052ffd8b762a
bed41ed16809fa2365105c6627f46205709a8a1309c7141139fd941188bd
c8d9b0b55c47d641558ff36ded37dddb1b216d36df7ff3e4cecb5e93a247
22d0b6b5e65a4a2dcc56b02d7259d8fd5b7ec0999a61dac27e80da2f8676
34759b4e247227f13713c39238726a89a708bbed3b752173bdebcebaeea7
71ee266a3e95119dcfb78b31c6beeef7041756c5788d9d3d80a0bb3f669d
9ba6d8b1667d5d5aa89f4142cfd220ffe9eb070e> ND 
/seven 
<10bf3170422f935763586cd8dbf7f37293dfe15df8bc3e09eef989653acc
203875a79f5d3c366f49e5ce0c7723933c8d3b9a4fd39991> ND 
/eight 
<10bf31703a9bd69293aaf1980d4004db29512cfbcdf83050f262f22394b0
ef479114fcd1ed3780f8e8379ec274149787838cb972946ff925f327dc43
fe0a268771c55ebbfb2b11062f0229b6b8245dcdaee1f4d128ae888b5b31
2979a0a0311f4e185869859bc2f66d09f1f0a58e4c124d00e52b1afc6fde
a6cc391f21431f05bfb725982450ba002876f8730b821ec63f425acc7fbc
dbd469c4bbc842a4c448a96aef6e173e7ebf5f5a7a17953e1579490627e0
98ff8ddd57718c580a5c4db5f0f85a39de87a2ee8507278f64c74b506e5f
c484dc38505671de2149f16a16f5b3bd2bd178fe57f2540526157d2501cd
a1ec9d05b086c77bbf39961b> ND 
/nine 
<10bf317041f0a9496f308eef332a89569c6f19bf3d9e8151f98106b7f3b4
863943549b6788f898c785f107f2fd33dafee552c5021ce35f862500ffe7
90b89ba5e8ca74771847acf24a3921944b9ff12aa20c31cc240b97d0bfbf
3bfa98131e7f0af00c2c1318418f0b901e30e5ac56e17f3033ea0f27da78
6ba05aa35f7d1182c74c8b5d63906ddf3add8563ed2127e6e60e74dcaeec
cd2fc89d6ac5e14d494f0e9d12d3f290592c4f786ec533bdf4b038336f9c
5e802b11> ND 
/A 
<10bf3170612fa8ae288a2f767c6f2d22480749f87ffaef88db9508f355b3
d621b9e09a8d1290afe57d05190debf7b19b92f6309b70e08d2409abdf50
3b6a0e5daa0043a6e298cadec0a7dbd5588f8ba0646e339db53e322e33db
33e9ac93d421016e880386d59c5f84e2c9dcb201c618c0d88390bc39b5b5
dcf9b13cb5b08470f0d83c168f6d7ea2244d1b> ND 
/B 
<10bf31706ea8189a0122a2c3dc80451ea987f9cc6dc7afa0c8f0365e6d8e
59a275ca593c5d46c9efa9ebe4192f8e472ac6f0efdf90f5d264a8b47fa4
3bcd031546c0586a98250a46abdef7d038322a132dd14df107aae195c311
99c6fa7558e3ee2379999d05cf38ad7f22726f37f2f0654cf65c11005a88
2feb945df6452201e1abb666d0244ac9dc622994ec7112e71f49ba0b5306
4d49384d5d74864da9fc7636c8b9964886a4103e2320a1f33cb3f7f7bcc7
104eb429cfd6cfab753b2e30fdbce693ce1dcc5a7fe31d75680753c52fe9
350712be59c0ee4a2780b638de9e8e44870622e76d3c23cdfd281b0b8177
c0aff3531220d18c12c91634c02401e01a11> ND 
/C 
<10bf31705d65c09013f5e74d02fbfce579927dc4371245d5279a0be7ec2d
bd3b1448f6fd9c53426e6238d321f77957395a071b4b8eae65710650ca99
5020550eaa4528d828ef4c47ac3d29b589dd7f1c7cfe44b10e3e8fa63e50
7c3e4eb74e257f81314f58ef9126142bc9d3a940c619a0d5450ffb6600e9
bb7f776713c2df8dd431070f31717d2477542aecd1539231d249a65da0e1
ee77958319b99e72488e0e9fa74f4d170e269189eb39aa1a> ND 
/D 
<10bf31706ea8518093a448f0413d9dd2503cf14562d62f8e03c59ef262c0
e81d3c5037d7a8fbf15657e5bea1080fe305ab71bf0048720c010cf41197
6f2c354776e6ac045fcbc3395f65891cbe4c7f0093e58d10b57eae23372e
4cc99d7f2f11c1f1c023288641813a3b8b65e70e4b5173920a628da83be4
7b524c38228036fccc15a820529e8626ae48a60adbbae5fd> ND 
/E 
<10bf31705245888107d641c65df0d045384b4474a865698169ff2c4c5759
f26e2217c59fcbe377198e20e38aaa44f075831908ff3584c8503712a3f9
da462024eae3426d516a8864b3756edb7e42923b77324ddcf4879e1b61b4
02502bf9f5c08a938a8b9111b299fb506f1aa6115b23bb6038633ef2c172
1c1c4fba6b5b7baae1d192358092d890074dc21b1d5f65994b78807f042e
8945e17dc9fd4baebebbadfc790575a38910eab682188d9cdb44060faa47
1dcf91df296595839280be99912fd6d9ac4594d1b8a3> ND 
/F 
<10bf317069b1b5630e42cd6c8ff2cb4d3f7bc188fb90c1fdbffc389a7b7c
590172825fc5f7c1632f0e00f7f24a69c85e73a086926561cd7597f366b9
c557c28ba97bd9e48588932b584d925e90f75351236f8dee991d8b2912e0
edc0500223be1a5bd4cd44c3c3de75aa12b7e63ed3a399ba00214a66fe95
b5d95b0096ce0321bb87083de3bbc29cfe8ef473870f448ffcd9f71c6888
fa2bf4ba82669c30c14d2655a8b69d82e43f233aafad0cc27d2d> ND 
/I 
<10bf31705600a7ed90307a9003ca62013c6a672423969cbfb09d38b977c3
3bb76a0a443b03ca15feffb7f47ead3efae89c4da09011014b3ef74dfcc4
49aa62038fec2b8087c3eb93eadcca82adeba753d37fb428848495514418
28d8a0f3ad99e43ca7d439d4d98a470d6617f8dd1388> ND 
/J 
<10bf31705245662c028a7d41142a9172cb3f39702bb2297ba0998cbe201f
77e89fe57d5ed956b84574b1620f88a55c2a51aa279e3fc9cf923c80361d
86a3551f2534c353d520d3bc14bc4d344677b575ead159bbdfc8aaeec820
ded505d06fe178d1ea8a0d44df29931f663cf743408db506a44468a17c12
4775c79567328c125a4e927e096a92c7da53c382783cd0826b0553dedd74
> ND 
/P 
<10bf31706ea9c5bc0db16a9d0fb9334b7aae45fa9562423ca0efcafbe577
696190382686f72544b1109cd9a28e6e2fb8c3e703e277558d9de53e9bd4
331eb7411fa27fc9fbf9488ff1a8e626acd2f355101bb86e40f636dd5a74
50c4f3ac4c3fce01d454db469da536ea46528530bc3e44fdc91176a1e591
1b2932205e6c0eac6f4d330f0230a163b5b30ecdc649a4ff6b024a9513ec
d5f934e2e3b5d7f24bd0170221950b8bb0ffa0c50e77c36e34adf2e847c9
adbff54bf77ef65d9afdb3878865> ND 
/S 
<10bf3170383eecc69ba25cd9f9f1a3f877f72d54ca249226fb09a99225d4
fa4a892ae0bf757b41a46aaf766816bb2e9c6c4e867aeb02a76d05e762b6
353837bdf52bbc0c70c14510f08ced31ac95e2c8b5dfdbf8f1dffd4709a0
760737961b7464d75e4dbf7323db187fa23f8213fd84f092b3c292e45093
4a017d49f1fa4f8d834c3fd0c5126c0c5c896c1a48c0653753c6f56c23b6
627010a4379bd3d96b26db0b3531098cdc23704e1f8e25a61651df0d8d02
8f68c8b7a7de4652566ef5c50305a3ec674a5be2d1bf9f76580a00788d85
ad3f4dc24f5adec7880bc3a7db38c71260e951f8778b0aff0ff2e97effe6
f0b2b33485e5f0401138cd3f9e066ed25ff05e7594ebdb0029f3d5> ND 
/T 
<10bf31705b0718f462bb36d02a655e51f04593b972dbe0892a4279b53c95
62dbd237266bc0cb4e5967f6d053e97e3cc8fe6477448edcd2c2ed40f6e6
056ef32aac1986bf84927c9fb1e2806a71f53c8604421852f835782fd7d8
0fdb45127c08fbe24f16e5af9ede981de72f75b4f62ef25f8b6075081fcf
> ND 
/W 
<10bf31706ae2d6d9dcbe8344511f08de4b9db5ac28c5c661efe6fa9e7439
4bc84ffd6c26e5c964d324deb8a2be71c781983509fc7315f13f2f452574
0c432ccfa783a50be1522758812e78dd12223bf37e37be9a2b9de70daa25
87e5ce0c31b1dc8fd1e7856f2a379806580606a20898e7fccb07255b76ec
aa9ee467ae0d074d61c529177c4e36ba95b4a421f36bad34035a2ac2c04f
12a2abb782248776bfa1511003ff806b7b426cc8c17627c2470813ba31ae
1a22b8e70c403eb278204ab3b8eb7faa1ccbb1cca5799cb23970fbbc0204
4ae4346b70147e2d44e9f3315b6168df8cda1ca5> ND 
/a 
<10bf31705d647142d5ee6b7c4c12c41164f05a89990635873917bf00c5a2
b1b299b84b64fad030fdefe54a736fd84981f1bdecf34c327a4087285dd7
ff9a128a9fff4f1e5e34e2c477e4543546f0e505eb84b8e6141c12199331
8a7bef58caa55697aff5d8bf4fe61eb63478ae931b5c51fe7be8aa76cee5
cf639a1d462398300117c6a9c09614a29dfc50b3c7ddbacc1c6e2f7accb0
35d51bb776dfa4f2180b5bfa695d4ee30d466764f5192b628fd7c4971313
cd38d55ff99cfe805727052d975c4756402eb9230dd87b777a603efe9c10
65e950375d54aa41ed1c701bfac764ae78b65834b8918a99ed1f017d5313
eb0950b1f45353f40dc633104ecc941e4bbbf8359d5ae9042ef0f4edfdb8
> ND 
/b 
<10bf31707b35db816a4355a1c9cd0401bf6033c55938246c8b69de26e575
c058903a4e9b57b68075848962a6cd3da069ec2730d8699e3ccf520befe1
1a090d11586ebd56effd705bd3a5ced6c4343ddaabfe70e422082141dc06
c695cc46ee2dde408c0760a4c361b784ab85994758cbad73179f314048f1
c5a0c06c0e0ad84ded3a7904f207403afdd3193bf093fb903dbdef2de225
7307e43f8ee047d711ed22adc155c93b72dbad1a68> ND 
/c 
<10bf31705fc10320935f517e088588bc677b6f6b1116d76a45fb5fc081aa
57ad08a2f19e4ebd5e7f2e40678b64d780ab49e945b6f1fcf8c1bf2edd40
201d9d025abf1aec5b1b3268a3f2a9365f1c6e4133cdb11264503de1434e
2553cdd7a1785e8aefca6abe49ef29279001bfee84321f1c29e0a5b47534
7f9b91833b42fbc209dedbbca6bb8dac3b6f01ececb32ee525fd2275d1f3
f94c46a2dc92d591> ND 
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
/g 
<10bf31705b0767a01e9193e4d997e718ba6351677893b73d138e3fe6ba14
fc659a3bcdee55e0cfe8324eeac72638d3bd305a7a0220257ff3808a1470
04dc5c3c9fcb344358fed8b5ae71f4f49bb62f7c38ae95fdb022e2f50d0f
f7edd042065f7148993d640d50d67f360ac97639f25c381784672dcecf1d
1627665bc46b98264545bb45b967dbd7f6dce2f63c1e6751d9e493efd546
e255705157ddc690cb167218c88d537fe6a759d15d23d8bf19975778954b
513e4f87de1d7e922f34c8ee289c3522056d92971a6692e2b85efc32e805
5f726b3e561153ede1bd48ac9ed5e0024936e813717a672f7da4b25e0f4c
fa800bfb48a1e7e6e175f9ef63c0a88c39518c20ae1f79f29fe16a404d8f
590228fa5880231b26e78848d12ee249c635fcfa1c6175dbe52bf4c85030
42acafcb20327b817e4efb88945955dd6d08889ea1fb3f310e8cb4172190
21cc423288f3c72f1f0ebcd75197d45530bfc75571856796dc6ba51fbdd3
ed9cec0c0d7ad50b11a85f88370b45b4a51e0293d38df958b8> ND 
/h 
<10bf3170638bba13892b6a5edf1363fbad8b95e15d8b1d61c9ff2e20460e
9fbee5ce56a3b804c731461fc79898dd9aa49a7578bd0636027b48157921
a917a207198baeee00a6aeca2924ff3a229448490e59b468fb8b3164c353
d9bc2653f19a1e5c4133f967037a72c7c8fbf885e7d2fe25db116b7c8e10
b3fd50a5bf16ce8ee83140eeca023c94dedee552fcf1a7935a31030ea899
3824e06eab9cf113ffc3161399601c0b8fff6a9768bb0205ffc7ac68a666
f3075641cdac00a867c63305b98c782f2fa25a94358084fd7f1a3e8a9aba
49e32a58f5abe91c09f7098b61c81b8653e474549ba40c7470f7bc> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/k 
<10bf3170612e883674d2675aac39fa142a2f9de407f255952adbf70a8f61
dcc97f11c5b525f88e1dd0499bf87fea87e955adf630d83711a3925899c0
03b9f91dc3443000903cbe22625747190de827d6aed57c3f807366bbd6c6
3854786e273f1b9d2f49315171b285fa450532e1a996be3dfd2aafc74743
b4a57fabf2eddb1c25e9905cc57139486ad514add7eb942d1d1b791b6056
19d6f363ea6b92b2c94caf9a33a7be72eed5a355a7d76c1048097efb20dd
2f6c3a18d26def6109f03e7d30d5356121f15317baa59d193def17f7d470
1728dc814db541582ec9d0f98c682c14> ND 
/l 
<10bf31705b0817c8e08e579d70bd731872938fa19da6249b22a36add018f
2d71afb39a24cba2d5b131292eaf2ea6440cd481b67673b68d5de7db4045
53f0515df79be16519f0349ec3761dc09575b85d12a0ca2ef3e3cac5171f
27c0bb5b6c16bd708dadf6acc7da72304e> ND 
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
/n 
<10bf3170638bba1389001ebc99bd428947467ee318fefc1fb124f3371d83
7e6e4fd04510bb88359fc2d65b2f295b6f18b7850f6ca41f0fd067e40bcc
1e6a5b41ca20f07f1559265c094e47681cd30c939ca836f577db4be36b05
95c3d60cd00f5b5495365e7e02e3400714839e79cc3816e739cdb0ba1b66
3f096ef3ea59642b52897d5ef4b5012d68776aa74244415b9e96a4f773a5
8085f9fe5bb74ace5b6860ca975ea43b7d0db4eefeddd777982336d72d05
c093ca194b7cd3478661a723994ed178a305b939140b4ac4b7ef4bb11e73
> ND 
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/q 
<10bf31705e925b80bb44afdd80449a9019004483157f7a206da365a5b3f7
8e817f7d85ccb98decc0413cb1aad3badad1cc03a563c391c8aa6068d7e3
0e7f25d81543c3055a792149dafa6b421b59bb9a7c586f00d982f84e34a8
6eb81a6d2e5d0469a0475534487ff8a1de86976d09002e57cf1b9a5b9651
783da658816ced2d26e352c444560625e85828b2e4e4558755e30d1a05aa
ed4f42608d7e2eeedb01e0259b91825941bd1b5a38ce6f06522b93ba8b0d
c3140f68c73955f4b4bd495b40f7a8977e75e8b1c2519046a0f0449793> ND 
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
/u 
<10bf31707ec0b061a3e31ce6a8e02f67c79fc6fb9433b583752df0b97381
ced785f0788651d9110f4d168d6f4fb870b9f8634f66a1fe17ef5bb051c8
5b17a112a0ece57f7e85709c1e46ba1a1de6ef26a274c75bdde36925dd09
efae6e5faacef2f29e68904c9555df5e0f6550945360d079ca305237daa8
7397519a4b0aef19668718de15c20ef2e07af7217dbd27700833b73e8190
1c7d2aacb619fbf2f1396d79a94fea4ca18c65bd942fda84> ND 
/v 
<10bf3170612e88360faf380e328fa052d16002b3a6eb4d26fc61a8261d88
5d55beefaa23f749e4680928d2ec50b44ff8d74a2a42a0e615124d351c37
a9b6b3979ac1eedcff65bc4e156ed5711cac4c00ba96902c9956d3adb8e9
345080689b72e5082717e79b08e915301d3c209a4fac7e8f857cfb983000
d031a94c1a8ab5b2b0900013f2ae> ND 
/w 
<10bf3170638a0228cdcc4cd6455c35265f3b472ea1e128291ab8c91c671e
7bd658e474e8a0535d503ea2a6704bc9226df8b7fd4286af923f66233992
4a9bd89766cd1ad48ee99eac3f679bc5f41535050fefd334434033683a0c
453c86e866b1ef55892a380c8fcdccf1c4eac1b6e4f71a2a006a7f483456
13b3a00d36c64291144c8cc1dac83b7c06950c85f226495588d8cb0539f8
dacf025ed3c1593eb5f55ae6c66c3ae3939545fa200eff0116> ND 
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
/ellipsis 
<10bf317005a3205c8c1ade8b08220239c090e4bcc9980e1cca609a2d4d10
d9ac81cf840ef58d470313f2aa080d2edd9fcba3916373473b3af2ee5c86
d03e77ac42465a929f227203e9947419868ef6872ae4cf8eebf4d8959f6c
7a0d73c65112c717159e6b1143a38d56f38c0bfb6641b059c420c669b174
283ad5674adb76e78a4c9174f94c3257ef08af279dc17b93c98677c3acdb
61453c7ad9365f3a5a793919a4c97a3726887fe01492b780bd16b89f5a85
0d94b0a447171065596e> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDLCF+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N55/ACDLCF+TimesNewRoman 1 TZ
q
n
36 756 540 -720 re
eoclip
n
false setSA
n
36 756 540 -720 re
1 1 1 setrgbcolor
f
Q
false setSA
0 0 0 setrgbcolor
147 483.48 m
/N55 [0 18 -18 0 0 0] Tf
(F) show
(airE)
[7.99365 5.00592 29.0394 10.9998 ] pdfys
(ff) show
(icie)
[5.00592 7.99365 5.00592 7.99365 ] pdfys
(n) show
(t) show
147 231.961 m
(Allocatio) show
(nC)
[316.561 12.0005 ] pdfys
(onservative) show
2 J
1 j
2.25 w
10 M
[] 0 d
n
126 72 m
126 720 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 J
1 w
n
170.1 72 m
170.1 720 l
246 72 m
246 720 l
322.5 72 m
322.5 720 l
S
2 J
2.25 w
n
475.74 72 m
475.74 720 l
126 72 m
475.74 72 l
126 720 m
475.74 720 l
S
0 J
1 w
n
399.12 72 m
399.12 720 l
S
2.25 w
n
126 468 m
475.74 468 l
126 606 m
475.74 606 l
126 528 m
475.74 528 l
S
n
208.62 97.8 m
208.62 95.64 210.42 93.9 212.64 93.9 c
214.86 93.9 216.6 95.64 216.6 97.8 c
216.6 99.96 214.86 101.76 212.64 101.76 c
210.42 101.76 208.62 99.96 208.62 97.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
1 J
0.75 w
n
208.62 97.8 m
208.62 95.64 210.42 93.9 212.64 93.9 c
214.86 93.9 216.6 95.64 216.6 97.8 c
216.6 99.96 214.86 101.76 212.64 101.76 c
210.42 101.76 208.62 99.96 208.62 97.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
208.62 111 m
208.62 108.84 210.42 107.1 212.64 107.1 c
214.86 107.1 216.6 108.84 216.6 111 c
216.6 113.16 214.86 114.9 212.64 114.9 c
210.42 114.9 208.62 113.16 208.62 111 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 111 m
208.62 108.84 210.42 107.1 212.64 107.1 c
214.86 107.1 216.6 108.84 216.6 111 c
216.6 113.16 214.86 114.9 212.64 114.9 c
210.42 114.9 208.62 113.16 208.62 111 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
208.62 124.26 m
208.62 122.04 210.42 120.24 212.64 120.24 c
214.86 120.24 216.6 122.04 216.6 124.26 c
216.6 126.48 214.86 128.22 212.64 128.22 c
210.42 128.22 208.62 126.48 208.62 124.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 124.26 m
208.62 122.04 210.42 120.24 212.64 120.24 c
214.86 120.24 216.6 122.04 216.6 124.26 c
216.6 126.48 214.86 128.22 212.64 128.22 c
210.42 128.22 208.62 126.48 208.62 124.26 c
h
177 111 m
177 92.76 190.62 78 207.36 78 c
224.16 78 237.72 92.76 237.72 111 c
237.72 129.24 224.16 144 207.36 144 c
190.62 144 177 129.24 177 111 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
219.24 97.8 m
219.24 95.64 221.04 93.9 223.26 93.9 c
225.48 93.9 227.22 95.64 227.22 97.8 c
227.22 99.96 225.48 101.76 223.26 101.76 c
221.04 101.76 219.24 99.96 219.24 97.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
219.24 97.8 m
219.24 95.64 221.04 93.9 223.26 93.9 c
225.48 93.9 227.22 95.64 227.22 97.8 c
227.22 99.96 225.48 101.76 223.26 101.76 c
221.04 101.76 219.24 99.96 219.24 97.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
219.24 111 m
219.24 108.84 221.04 107.1 223.26 107.1 c
225.48 107.1 227.22 108.84 227.22 111 c
227.22 113.16 225.48 114.9 223.26 114.9 c
221.04 114.9 219.24 113.16 219.24 111 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
219.24 111 m
219.24 108.84 221.04 107.1 223.26 107.1 c
225.48 107.1 227.22 108.84 227.22 111 c
227.22 113.16 225.48 114.9 223.26 114.9 c
221.04 114.9 219.24 113.16 219.24 111 c
h
219.24 124.26 m
219.24 122.04 221.04 120.24 223.26 120.24 c
225.48 120.24 227.22 122.04 227.22 124.26 c
227.22 126.48 225.48 128.22 223.26 128.22 c
221.04 128.22 219.24 126.48 219.24 124.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
197.46 98.64 m
/N23 [0 10.98 -10.98 0 0 0] Tf
(Job 1)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
208.62 175.8 m
208.62 173.64 210.42 171.9 212.64 171.9 c
214.86 171.9 216.6 173.64 216.6 175.8 c
216.6 177.96 214.86 179.76 212.64 179.76 c
210.42 179.76 208.62 177.96 208.62 175.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 175.8 m
208.62 173.64 210.42 171.9 212.64 171.9 c
214.86 171.9 216.6 173.64 216.6 175.8 c
216.6 177.96 214.86 179.76 212.64 179.76 c
210.42 179.76 208.62 177.96 208.62 175.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
208.62 189 m
208.62 186.84 210.42 185.1 212.64 185.1 c
214.86 185.1 216.6 186.84 216.6 189 c
216.6 191.16 214.86 192.9 212.64 192.9 c
210.42 192.9 208.62 191.16 208.62 189 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 189 m
208.62 186.84 210.42 185.1 212.64 185.1 c
214.86 185.1 216.6 186.84 216.6 189 c
216.6 191.16 214.86 192.9 212.64 192.9 c
210.42 192.9 208.62 191.16 208.62 189 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
208.62 202.26 m
208.62 200.04 210.42 198.24 212.64 198.24 c
214.86 198.24 216.6 200.04 216.6 202.26 c
216.6 204.48 214.86 206.22 212.64 206.22 c
210.42 206.22 208.62 204.48 208.62 202.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 202.26 m
208.62 200.04 210.42 198.24 212.64 198.24 c
214.86 198.24 216.6 200.04 216.6 202.26 c
216.6 204.48 214.86 206.22 212.64 206.22 c
210.42 206.22 208.62 204.48 208.62 202.26 c
h
177 189 m
177 170.76 190.62 156 207.36 156 c
224.16 156 237.72 170.76 237.72 189 c
237.72 207.24 224.16 222 207.36 222 c
190.62 222 177 207.24 177 189 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
219.24 175.8 m
219.24 173.64 221.04 171.9 223.26 171.9 c
225.48 171.9 227.22 173.64 227.22 175.8 c
227.22 177.96 225.48 179.76 223.26 179.76 c
221.04 179.76 219.24 177.96 219.24 175.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
219.24 175.8 m
219.24 173.64 221.04 171.9 223.26 171.9 c
225.48 171.9 227.22 173.64 227.22 175.8 c
227.22 177.96 225.48 179.76 223.26 179.76 c
221.04 179.76 219.24 177.96 219.24 175.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
219.24 189 m
219.24 186.84 221.04 185.1 223.26 185.1 c
225.48 185.1 227.22 186.84 227.22 189 c
227.22 191.16 225.48 192.9 223.26 192.9 c
221.04 192.9 219.24 191.16 219.24 189 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
219.24 189 m
219.24 186.84 221.04 185.1 223.26 185.1 c
225.48 185.1 227.22 186.84 227.22 189 c
227.22 191.16 225.48 192.9 223.26 192.9 c
221.04 192.9 219.24 191.16 219.24 189 c
h
219.24 202.26 m
219.24 200.04 221.04 198.24 223.26 198.24 c
225.48 198.24 227.22 200.04 227.22 202.26 c
227.22 204.48 225.48 206.22 223.26 206.22 c
221.04 206.22 219.24 204.48 219.24 202.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
197.46 176.64 m
(Job 2)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
213.6 253.8 m
213.6 251.64 215.4 249.9 217.62 249.9 c
219.84 249.9 221.64 251.64 221.64 253.8 c
221.64 255.96 219.84 257.76 217.62 257.76 c
215.4 257.76 213.6 255.96 213.6 253.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
213.6 253.8 m
213.6 251.64 215.4 249.9 217.62 249.9 c
219.84 249.9 221.64 251.64 221.64 253.8 c
221.64 255.96 219.84 257.76 217.62 257.76 c
215.4 257.76 213.6 255.96 213.6 253.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
213.6 267 m
213.6 264.84 215.4 263.1 217.62 263.1 c
219.84 263.1 221.64 264.84 221.64 267 c
221.64 269.16 219.84 270.9 217.62 270.9 c
215.4 270.9 213.6 269.16 213.6 267 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
213.6 267 m
213.6 264.84 215.4 263.1 217.62 263.1 c
219.84 263.1 221.64 264.84 221.64 267 c
221.64 269.16 219.84 270.9 217.62 270.9 c
215.4 270.9 213.6 269.16 213.6 267 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
213.6 280.26 m
213.6 278.04 215.4 276.24 217.62 276.24 c
219.84 276.24 221.64 278.04 221.64 280.26 c
221.64 282.48 219.84 284.22 217.62 284.22 c
215.4 284.22 213.6 282.48 213.6 280.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
213.6 280.26 m
213.6 278.04 215.4 276.24 217.62 276.24 c
219.84 276.24 221.64 278.04 221.64 280.26 c
221.64 282.48 219.84 284.22 217.62 284.22 c
215.4 284.22 213.6 282.48 213.6 280.26 c
h
177 267 m
177 248.76 190.62 234 207.36 234 c
224.16 234 237.72 248.76 237.72 267 c
237.72 285.24 224.16 300 207.36 300 c
190.62 300 177 285.24 177 267 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
197.46 254.64 m
(Job 3)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
208.62 342.96 m
208.62 340.74 210.42 339 212.64 339 c
214.86 339 216.6 340.74 216.6 342.96 c
216.6 345.12 214.86 346.86 212.64 346.86 c
210.42 346.86 208.62 345.12 208.62 342.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 342.96 m
208.62 340.74 210.42 339 212.64 339 c
214.86 339 216.6 340.74 216.6 342.96 c
216.6 345.12 214.86 346.86 212.64 346.86 c
210.42 346.86 208.62 345.12 208.62 342.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
208.62 356.1 m
208.62 354 210.42 352.26 212.64 352.26 c
214.86 352.26 216.6 354 216.6 356.1 c
216.6 358.26 214.86 360 212.64 360 c
210.42 360 208.62 358.26 208.62 356.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 356.1 m
208.62 354 210.42 352.26 212.64 352.26 c
214.86 352.26 216.6 354 216.6 356.1 c
216.6 358.26 214.86 360 212.64 360 c
210.42 360 208.62 358.26 208.62 356.1 c
h
177 348 m
177 329.76 190.62 315 207.36 315 c
224.16 315 237.72 329.76 237.72 348 c
237.72 366.24 224.16 381 207.36 381 c
190.62 381 177 366.24 177 348 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
219.24 342.96 m
219.24 340.74 221.04 339 223.26 339 c
225.48 339 227.22 340.74 227.22 342.96 c
227.22 345.12 225.48 346.86 223.26 346.86 c
221.04 346.86 219.24 345.12 219.24 342.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
219.24 342.96 m
219.24 340.74 221.04 339 223.26 339 c
225.48 339 227.22 340.74 227.22 342.96 c
227.22 345.12 225.48 346.86 223.26 346.86 c
221.04 346.86 219.24 345.12 219.24 342.96 c
h
219.24 356.1 m
219.24 354 221.04 352.26 223.26 352.26 c
225.48 352.26 227.22 354 227.22 356.1 c
227.22 358.26 225.48 360 223.26 360 c
221.04 360 219.24 358.26 219.24 356.1 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
197.46 335.64 m
(Job 4)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
208.62 417.96 m
208.62 415.74 210.42 414 212.64 414 c
214.86 414 216.6 415.74 216.6 417.96 c
216.6 420.12 214.86 421.86 212.64 421.86 c
210.42 421.86 208.62 420.12 208.62 417.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 417.96 m
208.62 415.74 210.42 414 212.64 414 c
214.86 414 216.6 415.74 216.6 417.96 c
216.6 420.12 214.86 421.86 212.64 421.86 c
210.42 421.86 208.62 420.12 208.62 417.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
208.62 431.1 m
208.62 429 210.42 427.26 212.64 427.26 c
214.86 427.26 216.6 429 216.6 431.1 c
216.6 433.26 214.86 435 212.64 435 c
210.42 435 208.62 433.26 208.62 431.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.62 431.1 m
208.62 429 210.42 427.26 212.64 427.26 c
214.86 427.26 216.6 429 216.6 431.1 c
216.6 433.26 214.86 435 212.64 435 c
210.42 435 208.62 433.26 208.62 431.1 c
h
177 429 m
177 410.76 190.62 396 207.36 396 c
224.16 396 237.72 410.76 237.72 429 c
237.72 447.24 224.16 462 207.36 462 c
190.62 462 177 447.24 177 429 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
219.24 417.96 m
219.24 415.74 221.04 414 223.26 414 c
225.48 414 227.22 415.74 227.22 417.96 c
227.22 420.12 225.48 421.86 223.26 421.86 c
221.04 421.86 219.24 420.12 219.24 417.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
219.24 417.96 m
219.24 415.74 221.04 414 223.26 414 c
225.48 414 227.22 415.74 227.22 417.96 c
227.22 420.12 225.48 421.86 223.26 421.86 c
221.04 421.86 219.24 420.12 219.24 417.96 c
h
219.24 431.1 m
219.24 429 221.04 427.26 223.26 427.26 c
225.48 427.26 227.22 429 227.22 431.1 c
227.22 433.26 225.48 435 223.26 435 c
221.04 435 219.24 433.26 219.24 431.1 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
197.46 416.64 m
(Job 5)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
208.5 443.88 m
208.5 441.72 210.3 439.98 212.52 439.98 c
214.68 439.98 216.48 441.72 216.48 443.88 c
216.48 446.04 214.68 447.72 212.52 447.72 c
210.3 447.72 208.5 446.04 208.5 443.88 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
208.5 443.88 m
208.5 441.72 210.3 439.98 212.52 439.98 c
214.68 439.98 216.48 441.72 216.48 443.88 c
216.48 446.04 214.68 447.72 212.52 447.72 c
210.3 447.72 208.5 446.04 208.5 443.88 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
285.12 97.8 m
285.12 95.64 286.92 93.9 289.14 93.9 c
291.36 93.9 293.1 95.64 293.1 97.8 c
293.1 99.96 291.36 101.76 289.14 101.76 c
286.92 101.76 285.12 99.96 285.12 97.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 97.8 m
285.12 95.64 286.92 93.9 289.14 93.9 c
291.36 93.9 293.1 95.64 293.1 97.8 c
293.1 99.96 291.36 101.76 289.14 101.76 c
286.92 101.76 285.12 99.96 285.12 97.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
285.12 111 m
285.12 108.84 286.92 107.1 289.14 107.1 c
291.36 107.1 293.1 108.84 293.1 111 c
293.1 113.16 291.36 114.9 289.14 114.9 c
286.92 114.9 285.12 113.16 285.12 111 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 111 m
285.12 108.84 286.92 107.1 289.14 107.1 c
291.36 107.1 293.1 108.84 293.1 111 c
293.1 113.16 291.36 114.9 289.14 114.9 c
286.92 114.9 285.12 113.16 285.12 111 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
285.12 124.26 m
285.12 122.04 286.92 120.24 289.14 120.24 c
291.36 120.24 293.1 122.04 293.1 124.26 c
293.1 126.48 291.36 128.22 289.14 128.22 c
286.92 128.22 285.12 126.48 285.12 124.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 124.26 m
285.12 122.04 286.92 120.24 289.14 120.24 c
291.36 120.24 293.1 122.04 293.1 124.26 c
293.1 126.48 291.36 128.22 289.14 128.22 c
286.92 128.22 285.12 126.48 285.12 124.26 c
h
253.5 111 m
253.5 92.76 267.12 78 283.86 78 c
300.66 78 314.22 92.76 314.22 111 c
314.22 129.24 300.66 144 283.86 144 c
267.12 144 253.5 129.24 253.5 111 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
295.74 97.8 m
295.74 95.64 297.54 93.9 299.76 93.9 c
301.98 93.9 303.72 95.64 303.72 97.8 c
303.72 99.96 301.98 101.76 299.76 101.76 c
297.54 101.76 295.74 99.96 295.74 97.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
295.74 97.8 m
295.74 95.64 297.54 93.9 299.76 93.9 c
301.98 93.9 303.72 95.64 303.72 97.8 c
303.72 99.96 301.98 101.76 299.76 101.76 c
297.54 101.76 295.74 99.96 295.74 97.8 c
h
295.74 111 m
295.74 108.84 297.54 107.1 299.76 107.1 c
301.98 107.1 303.72 108.84 303.72 111 c
303.72 113.16 301.98 114.9 299.76 114.9 c
297.54 114.9 295.74 113.16 295.74 111 c
h
295.74 124.26 m
295.74 122.04 297.54 120.24 299.76 120.24 c
301.98 120.24 303.72 122.04 303.72 124.26 c
303.72 126.48 301.98 128.22 299.76 128.22 c
297.54 128.22 295.74 126.48 295.74 124.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
273.96 98.64 m
(Job 1)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
285.12 175.8 m
285.12 173.64 286.92 171.9 289.14 171.9 c
291.36 171.9 293.1 173.64 293.1 175.8 c
293.1 177.96 291.36 179.76 289.14 179.76 c
286.92 179.76 285.12 177.96 285.12 175.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 175.8 m
285.12 173.64 286.92 171.9 289.14 171.9 c
291.36 171.9 293.1 173.64 293.1 175.8 c
293.1 177.96 291.36 179.76 289.14 179.76 c
286.92 179.76 285.12 177.96 285.12 175.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
285.12 189 m
285.12 186.84 286.92 185.1 289.14 185.1 c
291.36 185.1 293.1 186.84 293.1 189 c
293.1 191.16 291.36 192.9 289.14 192.9 c
286.92 192.9 285.12 191.16 285.12 189 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 189 m
285.12 186.84 286.92 185.1 289.14 185.1 c
291.36 185.1 293.1 186.84 293.1 189 c
293.1 191.16 291.36 192.9 289.14 192.9 c
286.92 192.9 285.12 191.16 285.12 189 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
285.12 202.26 m
285.12 200.04 286.92 198.24 289.14 198.24 c
291.36 198.24 293.1 200.04 293.1 202.26 c
293.1 204.48 291.36 206.22 289.14 206.22 c
286.92 206.22 285.12 204.48 285.12 202.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 202.26 m
285.12 200.04 286.92 198.24 289.14 198.24 c
291.36 198.24 293.1 200.04 293.1 202.26 c
293.1 204.48 291.36 206.22 289.14 206.22 c
286.92 206.22 285.12 204.48 285.12 202.26 c
h
253.5 189 m
253.5 170.76 267.12 156 283.86 156 c
300.66 156 314.22 170.76 314.22 189 c
314.22 207.24 300.66 222 283.86 222 c
267.12 222 253.5 207.24 253.5 189 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
295.74 175.8 m
295.74 173.64 297.54 171.9 299.76 171.9 c
301.98 171.9 303.72 173.64 303.72 175.8 c
303.72 177.96 301.98 179.76 299.76 179.76 c
297.54 179.76 295.74 177.96 295.74 175.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
295.74 175.8 m
295.74 173.64 297.54 171.9 299.76 171.9 c
301.98 171.9 303.72 173.64 303.72 175.8 c
303.72 177.96 301.98 179.76 299.76 179.76 c
297.54 179.76 295.74 177.96 295.74 175.8 c
h
295.74 189 m
295.74 186.84 297.54 185.1 299.76 185.1 c
301.98 185.1 303.72 186.84 303.72 189 c
303.72 191.16 301.98 192.9 299.76 192.9 c
297.54 192.9 295.74 191.16 295.74 189 c
h
295.74 202.26 m
295.74 200.04 297.54 198.24 299.76 198.24 c
301.98 198.24 303.72 200.04 303.72 202.26 c
303.72 204.48 301.98 206.22 299.76 206.22 c
297.54 206.22 295.74 204.48 295.74 202.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
273.96 176.64 m
(Job 2)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
290.1 253.8 m
290.1 251.64 291.9 249.9 294.12 249.9 c
296.34 249.9 298.14 251.64 298.14 253.8 c
298.14 255.96 296.34 257.76 294.12 257.76 c
291.9 257.76 290.1 255.96 290.1 253.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
290.1 253.8 m
290.1 251.64 291.9 249.9 294.12 249.9 c
296.34 249.9 298.14 251.64 298.14 253.8 c
298.14 255.96 296.34 257.76 294.12 257.76 c
291.9 257.76 290.1 255.96 290.1 253.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
290.1 267 m
290.1 264.84 291.9 263.1 294.12 263.1 c
296.34 263.1 298.14 264.84 298.14 267 c
298.14 269.16 296.34 270.9 294.12 270.9 c
291.9 270.9 290.1 269.16 290.1 267 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
290.1 267 m
290.1 264.84 291.9 263.1 294.12 263.1 c
296.34 263.1 298.14 264.84 298.14 267 c
298.14 269.16 296.34 270.9 294.12 270.9 c
291.9 270.9 290.1 269.16 290.1 267 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
290.1 280.26 m
290.1 278.04 291.9 276.24 294.12 276.24 c
296.34 276.24 298.14 278.04 298.14 280.26 c
298.14 282.48 296.34 284.22 294.12 284.22 c
291.9 284.22 290.1 282.48 290.1 280.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
290.1 280.26 m
290.1 278.04 291.9 276.24 294.12 276.24 c
296.34 276.24 298.14 278.04 298.14 280.26 c
298.14 282.48 296.34 284.22 294.12 284.22 c
291.9 284.22 290.1 282.48 290.1 280.26 c
h
253.5 267 m
253.5 248.76 267.12 234 283.86 234 c
300.66 234 314.22 248.76 314.22 267 c
314.22 285.24 300.66 300 283.86 300 c
267.12 300 253.5 285.24 253.5 267 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
273.96 254.64 m
(Job 3)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
285.12 342.96 m
285.12 340.74 286.92 339 289.14 339 c
291.36 339 293.1 340.74 293.1 342.96 c
293.1 345.12 291.36 346.86 289.14 346.86 c
286.92 346.86 285.12 345.12 285.12 342.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 342.96 m
285.12 340.74 286.92 339 289.14 339 c
291.36 339 293.1 340.74 293.1 342.96 c
293.1 345.12 291.36 346.86 289.14 346.86 c
286.92 346.86 285.12 345.12 285.12 342.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
285.12 356.1 m
285.12 354 286.92 352.26 289.14 352.26 c
291.36 352.26 293.1 354 293.1 356.1 c
293.1 358.26 291.36 360 289.14 360 c
286.92 360 285.12 358.26 285.12 356.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 356.1 m
285.12 354 286.92 352.26 289.14 352.26 c
291.36 352.26 293.1 354 293.1 356.1 c
293.1 358.26 291.36 360 289.14 360 c
286.92 360 285.12 358.26 285.12 356.1 c
h
253.5 348 m
253.5 329.76 267.12 315 283.86 315 c
300.66 315 314.22 329.76 314.22 348 c
314.22 366.24 300.66 381 283.86 381 c
267.12 381 253.5 366.24 253.5 348 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
295.74 342.96 m
295.74 340.74 297.54 339 299.76 339 c
301.98 339 303.72 340.74 303.72 342.96 c
303.72 345.12 301.98 346.86 299.76 346.86 c
297.54 346.86 295.74 345.12 295.74 342.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
295.74 342.96 m
295.74 340.74 297.54 339 299.76 339 c
301.98 339 303.72 340.74 303.72 342.96 c
303.72 345.12 301.98 346.86 299.76 346.86 c
297.54 346.86 295.74 345.12 295.74 342.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
295.74 356.1 m
295.74 354 297.54 352.26 299.76 352.26 c
301.98 352.26 303.72 354 303.72 356.1 c
303.72 358.26 301.98 360 299.76 360 c
297.54 360 295.74 358.26 295.74 356.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
295.74 356.1 m
295.74 354 297.54 352.26 299.76 352.26 c
301.98 352.26 303.72 354 303.72 356.1 c
303.72 358.26 301.98 360 299.76 360 c
297.54 360 295.74 358.26 295.74 356.1 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
273.96 335.64 m
(Job 4)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
285.12 417.96 m
285.12 415.74 286.92 414 289.14 414 c
291.36 414 293.1 415.74 293.1 417.96 c
293.1 420.12 291.36 421.86 289.14 421.86 c
286.92 421.86 285.12 420.12 285.12 417.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 417.96 m
285.12 415.74 286.92 414 289.14 414 c
291.36 414 293.1 415.74 293.1 417.96 c
293.1 420.12 291.36 421.86 289.14 421.86 c
286.92 421.86 285.12 420.12 285.12 417.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
285.12 431.1 m
285.12 429 286.92 427.26 289.14 427.26 c
291.36 427.26 293.1 429 293.1 431.1 c
293.1 433.26 291.36 435 289.14 435 c
286.92 435 285.12 433.26 285.12 431.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285.12 431.1 m
285.12 429 286.92 427.26 289.14 427.26 c
291.36 427.26 293.1 429 293.1 431.1 c
293.1 433.26 291.36 435 289.14 435 c
286.92 435 285.12 433.26 285.12 431.1 c
h
253.5 429 m
253.5 410.76 267.12 396 283.86 396 c
300.66 396 314.22 410.76 314.22 429 c
314.22 447.24 300.66 462 283.86 462 c
267.12 462 253.5 447.24 253.5 429 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
295.74 417.96 m
295.74 415.74 297.54 414 299.76 414 c
301.98 414 303.72 415.74 303.72 417.96 c
303.72 420.12 301.98 421.86 299.76 421.86 c
297.54 421.86 295.74 420.12 295.74 417.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
295.74 417.96 m
295.74 415.74 297.54 414 299.76 414 c
301.98 414 303.72 415.74 303.72 417.96 c
303.72 420.12 301.98 421.86 299.76 421.86 c
297.54 421.86 295.74 420.12 295.74 417.96 c
h
295.74 431.1 m
295.74 429 297.54 427.26 299.76 427.26 c
301.98 427.26 303.72 429 303.72 431.1 c
303.72 433.26 301.98 435 299.76 435 c
297.54 435 295.74 433.26 295.74 431.1 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
273.96 416.64 m
(Job 5)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
285 443.88 m
285 441.72 286.8 439.98 289.02 439.98 c
291.18 439.98 292.98 441.72 292.98 443.88 c
292.98 446.04 291.18 447.72 289.02 447.72 c
286.8 447.72 285 446.04 285 443.88 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
285 443.88 m
285 441.72 286.8 439.98 289.02 439.98 c
291.18 439.98 292.98 441.72 292.98 443.88 c
292.98 446.04 291.18 447.72 289.02 447.72 c
286.8 447.72 285 446.04 285 443.88 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
361.62 97.8 m
361.62 95.64 363.42 93.9 365.64 93.9 c
367.86 93.9 369.6 95.64 369.6 97.8 c
369.6 99.96 367.86 101.76 365.64 101.76 c
363.42 101.76 361.62 99.96 361.62 97.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 97.8 m
361.62 95.64 363.42 93.9 365.64 93.9 c
367.86 93.9 369.6 95.64 369.6 97.8 c
369.6 99.96 367.86 101.76 365.64 101.76 c
363.42 101.76 361.62 99.96 361.62 97.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
361.62 111 m
361.62 108.84 363.42 107.1 365.64 107.1 c
367.86 107.1 369.6 108.84 369.6 111 c
369.6 113.16 367.86 114.9 365.64 114.9 c
363.42 114.9 361.62 113.16 361.62 111 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 111 m
361.62 108.84 363.42 107.1 365.64 107.1 c
367.86 107.1 369.6 108.84 369.6 111 c
369.6 113.16 367.86 114.9 365.64 114.9 c
363.42 114.9 361.62 113.16 361.62 111 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
361.62 124.26 m
361.62 122.04 363.42 120.24 365.64 120.24 c
367.86 120.24 369.6 122.04 369.6 124.26 c
369.6 126.48 367.86 128.22 365.64 128.22 c
363.42 128.22 361.62 126.48 361.62 124.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 124.26 m
361.62 122.04 363.42 120.24 365.64 120.24 c
367.86 120.24 369.6 122.04 369.6 124.26 c
369.6 126.48 367.86 128.22 365.64 128.22 c
363.42 128.22 361.62 126.48 361.62 124.26 c
h
330 111 m
330 92.76 343.62 78 360.36 78 c
377.16 78 390.72 92.76 390.72 111 c
390.72 129.24 377.16 144 360.36 144 c
343.62 144 330 129.24 330 111 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
372.24 97.8 m
372.24 95.64 374.04 93.9 376.26 93.9 c
378.48 93.9 380.22 95.64 380.22 97.8 c
380.22 99.96 378.48 101.76 376.26 101.76 c
374.04 101.76 372.24 99.96 372.24 97.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
372.24 97.8 m
372.24 95.64 374.04 93.9 376.26 93.9 c
378.48 93.9 380.22 95.64 380.22 97.8 c
380.22 99.96 378.48 101.76 376.26 101.76 c
374.04 101.76 372.24 99.96 372.24 97.8 c
h
372.24 111 m
372.24 108.84 374.04 107.1 376.26 107.1 c
378.48 107.1 380.22 108.84 380.22 111 c
380.22 113.16 378.48 114.9 376.26 114.9 c
374.04 114.9 372.24 113.16 372.24 111 c
h
372.24 124.26 m
372.24 122.04 374.04 120.24 376.26 120.24 c
378.48 120.24 380.22 122.04 380.22 124.26 c
380.22 126.48 378.48 128.22 376.26 128.22 c
374.04 128.22 372.24 126.48 372.24 124.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
350.46 98.64 m
(Job 1)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
361.62 175.8 m
361.62 173.64 363.42 171.9 365.64 171.9 c
367.86 171.9 369.6 173.64 369.6 175.8 c
369.6 177.96 367.86 179.76 365.64 179.76 c
363.42 179.76 361.62 177.96 361.62 175.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 175.8 m
361.62 173.64 363.42 171.9 365.64 171.9 c
367.86 171.9 369.6 173.64 369.6 175.8 c
369.6 177.96 367.86 179.76 365.64 179.76 c
363.42 179.76 361.62 177.96 361.62 175.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
361.62 189 m
361.62 186.84 363.42 185.1 365.64 185.1 c
367.86 185.1 369.6 186.84 369.6 189 c
369.6 191.16 367.86 192.9 365.64 192.9 c
363.42 192.9 361.62 191.16 361.62 189 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 189 m
361.62 186.84 363.42 185.1 365.64 185.1 c
367.86 185.1 369.6 186.84 369.6 189 c
369.6 191.16 367.86 192.9 365.64 192.9 c
363.42 192.9 361.62 191.16 361.62 189 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
361.62 202.26 m
361.62 200.04 363.42 198.24 365.64 198.24 c
367.86 198.24 369.6 200.04 369.6 202.26 c
369.6 204.48 367.86 206.22 365.64 206.22 c
363.42 206.22 361.62 204.48 361.62 202.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 202.26 m
361.62 200.04 363.42 198.24 365.64 198.24 c
367.86 198.24 369.6 200.04 369.6 202.26 c
369.6 204.48 367.86 206.22 365.64 206.22 c
363.42 206.22 361.62 204.48 361.62 202.26 c
h
330 189 m
330 170.76 343.62 156 360.36 156 c
377.16 156 390.72 170.76 390.72 189 c
390.72 207.24 377.16 222 360.36 222 c
343.62 222 330 207.24 330 189 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
372.24 175.8 m
372.24 173.64 374.04 171.9 376.26 171.9 c
378.48 171.9 380.22 173.64 380.22 175.8 c
380.22 177.96 378.48 179.76 376.26 179.76 c
374.04 179.76 372.24 177.96 372.24 175.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
372.24 175.8 m
372.24 173.64 374.04 171.9 376.26 171.9 c
378.48 171.9 380.22 173.64 380.22 175.8 c
380.22 177.96 378.48 179.76 376.26 179.76 c
374.04 179.76 372.24 177.96 372.24 175.8 c
h
372.24 189 m
372.24 186.84 374.04 185.1 376.26 185.1 c
378.48 185.1 380.22 186.84 380.22 189 c
380.22 191.16 378.48 192.9 376.26 192.9 c
374.04 192.9 372.24 191.16 372.24 189 c
h
372.24 202.26 m
372.24 200.04 374.04 198.24 376.26 198.24 c
378.48 198.24 380.22 200.04 380.22 202.26 c
380.22 204.48 378.48 206.22 376.26 206.22 c
374.04 206.22 372.24 204.48 372.24 202.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
350.46 176.64 m
(Job 2)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
366.6 253.8 m
366.6 251.64 368.4 249.9 370.62 249.9 c
372.84 249.9 374.64 251.64 374.64 253.8 c
374.64 255.96 372.84 257.76 370.62 257.76 c
368.4 257.76 366.6 255.96 366.6 253.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
366.6 253.8 m
366.6 251.64 368.4 249.9 370.62 249.9 c
372.84 249.9 374.64 251.64 374.64 253.8 c
374.64 255.96 372.84 257.76 370.62 257.76 c
368.4 257.76 366.6 255.96 366.6 253.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
366.6 267 m
366.6 264.84 368.4 263.1 370.62 263.1 c
372.84 263.1 374.64 264.84 374.64 267 c
374.64 269.16 372.84 270.9 370.62 270.9 c
368.4 270.9 366.6 269.16 366.6 267 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
366.6 267 m
366.6 264.84 368.4 263.1 370.62 263.1 c
372.84 263.1 374.64 264.84 374.64 267 c
374.64 269.16 372.84 270.9 370.62 270.9 c
368.4 270.9 366.6 269.16 366.6 267 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
366.6 280.26 m
366.6 278.04 368.4 276.24 370.62 276.24 c
372.84 276.24 374.64 278.04 374.64 280.26 c
374.64 282.48 372.84 284.22 370.62 284.22 c
368.4 284.22 366.6 282.48 366.6 280.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
366.6 280.26 m
366.6 278.04 368.4 276.24 370.62 276.24 c
372.84 276.24 374.64 278.04 374.64 280.26 c
374.64 282.48 372.84 284.22 370.62 284.22 c
368.4 284.22 366.6 282.48 366.6 280.26 c
h
330 267 m
330 248.76 343.62 234 360.36 234 c
377.16 234 390.72 248.76 390.72 267 c
390.72 285.24 377.16 300 360.36 300 c
343.62 300 330 285.24 330 267 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
350.46 254.64 m
(Job 3)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
361.62 342.96 m
361.62 340.74 363.42 339 365.64 339 c
367.86 339 369.6 340.74 369.6 342.96 c
369.6 345.12 367.86 346.86 365.64 346.86 c
363.42 346.86 361.62 345.12 361.62 342.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 342.96 m
361.62 340.74 363.42 339 365.64 339 c
367.86 339 369.6 340.74 369.6 342.96 c
369.6 345.12 367.86 346.86 365.64 346.86 c
363.42 346.86 361.62 345.12 361.62 342.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
361.62 356.1 m
361.62 354 363.42 352.26 365.64 352.26 c
367.86 352.26 369.6 354 369.6 356.1 c
369.6 358.26 367.86 360 365.64 360 c
363.42 360 361.62 358.26 361.62 356.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 356.1 m
361.62 354 363.42 352.26 365.64 352.26 c
367.86 352.26 369.6 354 369.6 356.1 c
369.6 358.26 367.86 360 365.64 360 c
363.42 360 361.62 358.26 361.62 356.1 c
h
330 348 m
330 329.76 343.62 315 360.36 315 c
377.16 315 390.72 329.76 390.72 348 c
390.72 366.24 377.16 381 360.36 381 c
343.62 381 330 366.24 330 348 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
372.24 342.96 m
372.24 340.74 374.04 339 376.26 339 c
378.48 339 380.22 340.74 380.22 342.96 c
380.22 345.12 378.48 346.86 376.26 346.86 c
374.04 346.86 372.24 345.12 372.24 342.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
372.24 342.96 m
372.24 340.74 374.04 339 376.26 339 c
378.48 339 380.22 340.74 380.22 342.96 c
380.22 345.12 378.48 346.86 376.26 346.86 c
374.04 346.86 372.24 345.12 372.24 342.96 c
h
372.24 356.1 m
372.24 354 374.04 352.26 376.26 352.26 c
378.48 352.26 380.22 354 380.22 356.1 c
380.22 358.26 378.48 360 376.26 360 c
374.04 360 372.24 358.26 372.24 356.1 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
350.46 335.64 m
(Job 4)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
361.62 417.96 m
361.62 415.74 363.42 414 365.64 414 c
367.86 414 369.6 415.74 369.6 417.96 c
369.6 420.12 367.86 421.86 365.64 421.86 c
363.42 421.86 361.62 420.12 361.62 417.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 417.96 m
361.62 415.74 363.42 414 365.64 414 c
367.86 414 369.6 415.74 369.6 417.96 c
369.6 420.12 367.86 421.86 365.64 421.86 c
363.42 421.86 361.62 420.12 361.62 417.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
361.62 431.1 m
361.62 429 363.42 427.26 365.64 427.26 c
367.86 427.26 369.6 429 369.6 431.1 c
369.6 433.26 367.86 435 365.64 435 c
363.42 435 361.62 433.26 361.62 431.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.62 431.1 m
361.62 429 363.42 427.26 365.64 427.26 c
367.86 427.26 369.6 429 369.6 431.1 c
369.6 433.26 367.86 435 365.64 435 c
363.42 435 361.62 433.26 361.62 431.1 c
h
330 429 m
330 410.76 343.62 396 360.36 396 c
377.16 396 390.72 410.76 390.72 429 c
390.72 447.24 377.16 462 360.36 462 c
343.62 462 330 447.24 330 429 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
372.24 417.96 m
372.24 415.74 374.04 414 376.26 414 c
378.48 414 380.22 415.74 380.22 417.96 c
380.22 420.12 378.48 421.86 376.26 421.86 c
374.04 421.86 372.24 420.12 372.24 417.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
372.24 417.96 m
372.24 415.74 374.04 414 376.26 414 c
378.48 414 380.22 415.74 380.22 417.96 c
380.22 420.12 378.48 421.86 376.26 421.86 c
374.04 421.86 372.24 420.12 372.24 417.96 c
h
372.24 431.1 m
372.24 429 374.04 427.26 376.26 427.26 c
378.48 427.26 380.22 429 380.22 431.1 c
380.22 433.26 378.48 435 376.26 435 c
374.04 435 372.24 433.26 372.24 431.1 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
350.46 416.64 m
(Job 5)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
361.5 443.88 m
361.5 441.72 363.3 439.98 365.52 439.98 c
367.68 439.98 369.48 441.72 369.48 443.88 c
369.48 446.04 367.68 447.72 365.52 447.72 c
363.3 447.72 361.5 446.04 361.5 443.88 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
361.5 443.88 m
361.5 441.72 363.3 439.98 365.52 439.98 c
367.68 439.98 369.48 441.72 369.48 443.88 c
369.48 446.04 367.68 447.72 365.52 447.72 c
363.3 447.72 361.5 446.04 361.5 443.88 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
378 228.24 m
378 226.02 379.8 224.22 382.02 224.22 c
384.18 224.22 385.98 226.02 385.98 228.24 c
385.98 230.46 384.18 232.26 382.02 232.26 c
379.8 232.26 378 230.46 378 228.24 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
378 228.24 m
378 226.02 379.8 224.22 382.02 224.22 c
384.18 224.22 385.98 226.02 385.98 228.24 c
385.98 230.46 384.18 232.26 382.02 232.26 c
379.8 232.26 378 230.46 378 228.24 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
377.88 307.26 m
377.88 305.04 379.68 303.24 381.9 303.24 c
384.06 303.24 385.86 305.04 385.86 307.26 c
385.86 309.48 384.06 311.22 381.9 311.22 c
379.68 311.22 377.88 309.48 377.88 307.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
377.88 307.26 m
377.88 305.04 379.68 303.24 381.9 303.24 c
384.06 303.24 385.86 305.04 385.86 307.26 c
385.86 309.48 384.06 311.22 381.9 311.22 c
379.68 311.22 377.88 309.48 377.88 307.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
439.62 97.8 m
439.62 95.64 441.42 93.9 443.64 93.9 c
445.86 93.9 447.6 95.64 447.6 97.8 c
447.6 99.96 445.86 101.76 443.64 101.76 c
441.42 101.76 439.62 99.96 439.62 97.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 97.8 m
439.62 95.64 441.42 93.9 443.64 93.9 c
445.86 93.9 447.6 95.64 447.6 97.8 c
447.6 99.96 445.86 101.76 443.64 101.76 c
441.42 101.76 439.62 99.96 439.62 97.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
439.62 111 m
439.62 108.84 441.42 107.1 443.64 107.1 c
445.86 107.1 447.6 108.84 447.6 111 c
447.6 113.16 445.86 114.9 443.64 114.9 c
441.42 114.9 439.62 113.16 439.62 111 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 111 m
439.62 108.84 441.42 107.1 443.64 107.1 c
445.86 107.1 447.6 108.84 447.6 111 c
447.6 113.16 445.86 114.9 443.64 114.9 c
441.42 114.9 439.62 113.16 439.62 111 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
439.62 124.26 m
439.62 122.04 441.42 120.24 443.64 120.24 c
445.86 120.24 447.6 122.04 447.6 124.26 c
447.6 126.48 445.86 128.22 443.64 128.22 c
441.42 128.22 439.62 126.48 439.62 124.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 124.26 m
439.62 122.04 441.42 120.24 443.64 120.24 c
445.86 120.24 447.6 122.04 447.6 124.26 c
447.6 126.48 445.86 128.22 443.64 128.22 c
441.42 128.22 439.62 126.48 439.62 124.26 c
h
408 111 m
408 92.76 421.62 78 438.36 78 c
455.16 78 468.72 92.76 468.72 111 c
468.72 129.24 455.16 144 438.36 144 c
421.62 144 408 129.24 408 111 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
450.24 97.8 m
450.24 95.64 452.04 93.9 454.26 93.9 c
456.48 93.9 458.22 95.64 458.22 97.8 c
458.22 99.96 456.48 101.76 454.26 101.76 c
452.04 101.76 450.24 99.96 450.24 97.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
450.24 97.8 m
450.24 95.64 452.04 93.9 454.26 93.9 c
456.48 93.9 458.22 95.64 458.22 97.8 c
458.22 99.96 456.48 101.76 454.26 101.76 c
452.04 101.76 450.24 99.96 450.24 97.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
450.24 111 m
450.24 108.84 452.04 107.1 454.26 107.1 c
456.48 107.1 458.22 108.84 458.22 111 c
458.22 113.16 456.48 114.9 454.26 114.9 c
452.04 114.9 450.24 113.16 450.24 111 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
450.24 111 m
450.24 108.84 452.04 107.1 454.26 107.1 c
456.48 107.1 458.22 108.84 458.22 111 c
458.22 113.16 456.48 114.9 454.26 114.9 c
452.04 114.9 450.24 113.16 450.24 111 c
h
450.24 124.26 m
450.24 122.04 452.04 120.24 454.26 120.24 c
456.48 120.24 458.22 122.04 458.22 124.26 c
458.22 126.48 456.48 128.22 454.26 128.22 c
452.04 128.22 450.24 126.48 450.24 124.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.46 98.64 m
(Job 1)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
439.62 175.8 m
439.62 173.64 441.42 171.9 443.64 171.9 c
445.86 171.9 447.6 173.64 447.6 175.8 c
447.6 177.96 445.86 179.76 443.64 179.76 c
441.42 179.76 439.62 177.96 439.62 175.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 175.8 m
439.62 173.64 441.42 171.9 443.64 171.9 c
445.86 171.9 447.6 173.64 447.6 175.8 c
447.6 177.96 445.86 179.76 443.64 179.76 c
441.42 179.76 439.62 177.96 439.62 175.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
439.62 189 m
439.62 186.84 441.42 185.1 443.64 185.1 c
445.86 185.1 447.6 186.84 447.6 189 c
447.6 191.16 445.86 192.9 443.64 192.9 c
441.42 192.9 439.62 191.16 439.62 189 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 189 m
439.62 186.84 441.42 185.1 443.64 185.1 c
445.86 185.1 447.6 186.84 447.6 189 c
447.6 191.16 445.86 192.9 443.64 192.9 c
441.42 192.9 439.62 191.16 439.62 189 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
439.62 202.26 m
439.62 200.04 441.42 198.24 443.64 198.24 c
445.86 198.24 447.6 200.04 447.6 202.26 c
447.6 204.48 445.86 206.22 443.64 206.22 c
441.42 206.22 439.62 204.48 439.62 202.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 202.26 m
439.62 200.04 441.42 198.24 443.64 198.24 c
445.86 198.24 447.6 200.04 447.6 202.26 c
447.6 204.48 445.86 206.22 443.64 206.22 c
441.42 206.22 439.62 204.48 439.62 202.26 c
h
408 189 m
408 170.76 421.62 156 438.36 156 c
455.16 156 468.72 170.76 468.72 189 c
468.72 207.24 455.16 222 438.36 222 c
421.62 222 408 207.24 408 189 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
450.24 175.8 m
450.24 173.64 452.04 171.9 454.26 171.9 c
456.48 171.9 458.22 173.64 458.22 175.8 c
458.22 177.96 456.48 179.76 454.26 179.76 c
452.04 179.76 450.24 177.96 450.24 175.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
450.24 175.8 m
450.24 173.64 452.04 171.9 454.26 171.9 c
456.48 171.9 458.22 173.64 458.22 175.8 c
458.22 177.96 456.48 179.76 454.26 179.76 c
452.04 179.76 450.24 177.96 450.24 175.8 c
h
450.24 189 m
450.24 186.84 452.04 185.1 454.26 185.1 c
456.48 185.1 458.22 186.84 458.22 189 c
458.22 191.16 456.48 192.9 454.26 192.9 c
452.04 192.9 450.24 191.16 450.24 189 c
h
450.24 202.26 m
450.24 200.04 452.04 198.24 454.26 198.24 c
456.48 198.24 458.22 200.04 458.22 202.26 c
458.22 204.48 456.48 206.22 454.26 206.22 c
452.04 206.22 450.24 204.48 450.24 202.26 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.46 176.64 m
(Job 2)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
444.6 253.8 m
444.6 251.64 446.4 249.9 448.62 249.9 c
450.84 249.9 452.64 251.64 452.64 253.8 c
452.64 255.96 450.84 257.76 448.62 257.76 c
446.4 257.76 444.6 255.96 444.6 253.8 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
444.6 253.8 m
444.6 251.64 446.4 249.9 448.62 249.9 c
450.84 249.9 452.64 251.64 452.64 253.8 c
452.64 255.96 450.84 257.76 448.62 257.76 c
446.4 257.76 444.6 255.96 444.6 253.8 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
444.6 267 m
444.6 264.84 446.4 263.1 448.62 263.1 c
450.84 263.1 452.64 264.84 452.64 267 c
452.64 269.16 450.84 270.9 448.62 270.9 c
446.4 270.9 444.6 269.16 444.6 267 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
444.6 267 m
444.6 264.84 446.4 263.1 448.62 263.1 c
450.84 263.1 452.64 264.84 452.64 267 c
452.64 269.16 450.84 270.9 448.62 270.9 c
446.4 270.9 444.6 269.16 444.6 267 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
444.6 280.26 m
444.6 278.04 446.4 276.24 448.62 276.24 c
450.84 276.24 452.64 278.04 452.64 280.26 c
452.64 282.48 450.84 284.22 448.62 284.22 c
446.4 284.22 444.6 282.48 444.6 280.26 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
444.6 280.26 m
444.6 278.04 446.4 276.24 448.62 276.24 c
450.84 276.24 452.64 278.04 452.64 280.26 c
452.64 282.48 450.84 284.22 448.62 284.22 c
446.4 284.22 444.6 282.48 444.6 280.26 c
h
408 267 m
408 248.76 421.62 234 438.36 234 c
455.16 234 468.72 248.76 468.72 267 c
468.72 285.24 455.16 300 438.36 300 c
421.62 300 408 285.24 408 267 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.46 254.64 m
(Job 3)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
439.62 342.96 m
439.62 340.74 441.42 339 443.64 339 c
445.86 339 447.6 340.74 447.6 342.96 c
447.6 345.12 445.86 346.86 443.64 346.86 c
441.42 346.86 439.62 345.12 439.62 342.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 342.96 m
439.62 340.74 441.42 339 443.64 339 c
445.86 339 447.6 340.74 447.6 342.96 c
447.6 345.12 445.86 346.86 443.64 346.86 c
441.42 346.86 439.62 345.12 439.62 342.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
439.62 356.1 m
439.62 354 441.42 352.26 443.64 352.26 c
445.86 352.26 447.6 354 447.6 356.1 c
447.6 358.26 445.86 360 443.64 360 c
441.42 360 439.62 358.26 439.62 356.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 356.1 m
439.62 354 441.42 352.26 443.64 352.26 c
445.86 352.26 447.6 354 447.6 356.1 c
447.6 358.26 445.86 360 443.64 360 c
441.42 360 439.62 358.26 439.62 356.1 c
h
408 348 m
408 329.76 421.62 315 438.36 315 c
455.16 315 468.72 329.76 468.72 348 c
468.72 366.24 455.16 381 438.36 381 c
421.62 381 408 366.24 408 348 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
450.24 342.96 m
450.24 340.74 452.04 339 454.26 339 c
456.48 339 458.22 340.74 458.22 342.96 c
458.22 345.12 456.48 346.86 454.26 346.86 c
452.04 346.86 450.24 345.12 450.24 342.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
450.24 342.96 m
450.24 340.74 452.04 339 454.26 339 c
456.48 339 458.22 340.74 458.22 342.96 c
458.22 345.12 456.48 346.86 454.26 346.86 c
452.04 346.86 450.24 345.12 450.24 342.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
450.24 356.1 m
450.24 354 452.04 352.26 454.26 352.26 c
456.48 352.26 458.22 354 458.22 356.1 c
458.22 358.26 456.48 360 454.26 360 c
452.04 360 450.24 358.26 450.24 356.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
450.24 356.1 m
450.24 354 452.04 352.26 454.26 352.26 c
456.48 352.26 458.22 354 458.22 356.1 c
458.22 358.26 456.48 360 454.26 360 c
452.04 360 450.24 358.26 450.24 356.1 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.46 335.64 m
(Job 4)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
439.62 417.96 m
439.62 415.74 441.42 414 443.64 414 c
445.86 414 447.6 415.74 447.6 417.96 c
447.6 420.12 445.86 421.86 443.64 421.86 c
441.42 421.86 439.62 420.12 439.62 417.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 417.96 m
439.62 415.74 441.42 414 443.64 414 c
445.86 414 447.6 415.74 447.6 417.96 c
447.6 420.12 445.86 421.86 443.64 421.86 c
441.42 421.86 439.62 420.12 439.62 417.96 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
439.62 431.1 m
439.62 429 441.42 427.26 443.64 427.26 c
445.86 427.26 447.6 429 447.6 431.1 c
447.6 433.26 445.86 435 443.64 435 c
441.42 435 439.62 433.26 439.62 431.1 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.62 431.1 m
439.62 429 441.42 427.26 443.64 427.26 c
445.86 427.26 447.6 429 447.6 431.1 c
447.6 433.26 445.86 435 443.64 435 c
441.42 435 439.62 433.26 439.62 431.1 c
h
408 429 m
408 410.76 421.62 396 438.36 396 c
455.16 396 468.72 410.76 468.72 429 c
468.72 447.24 455.16 462 438.36 462 c
421.62 462 408 447.24 408 429 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
450.24 417.96 m
450.24 415.74 452.04 414 454.26 414 c
456.48 414 458.22 415.74 458.22 417.96 c
458.22 420.12 456.48 421.86 454.26 421.86 c
452.04 421.86 450.24 420.12 450.24 417.96 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
450.24 417.96 m
450.24 415.74 452.04 414 454.26 414 c
456.48 414 458.22 415.74 458.22 417.96 c
458.22 420.12 456.48 421.86 454.26 421.86 c
452.04 421.86 450.24 420.12 450.24 417.96 c
h
450.24 431.1 m
450.24 429 452.04 427.26 454.26 427.26 c
456.48 427.26 458.22 429 458.22 431.1 c
458.22 433.26 456.48 435 454.26 435 c
452.04 435 450.24 433.26 450.24 431.1 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
428.46 416.64 m
(Job 5)
[5.50759 6.12247 6.12247 3.06232 6.12247 ] pdfys
n
439.5 443.88 m
439.5 441.72 441.3 439.98 443.52 439.98 c
445.68 439.98 447.48 441.72 447.48 443.88 c
447.48 446.04 445.68 447.72 443.52 447.72 c
441.3 447.72 439.5 446.04 439.5 443.88 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
439.5 443.88 m
439.5 441.72 441.3 439.98 443.52 439.98 c
445.68 439.98 447.48 441.72 447.48 443.88 c
447.48 446.04 445.68 447.72 443.52 447.72 c
441.3 447.72 439.5 446.04 439.5 443.88 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
301.38 267.12 m
301.38 264.96 303.18 263.22 305.4 263.22 c
307.56 263.22 309.36 264.96 309.36 267.12 c
309.36 269.28 307.56 271.02 305.4 271.02 c
303.18 271.02 301.38 269.28 301.38 267.12 c
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
301.38 267.12 m
301.38 264.96 303.18 263.22 305.4 263.22 c
307.56 263.22 309.36 264.96 309.36 267.12 c
309.36 269.28 307.56 271.02 305.4 271.02 c
303.18 271.02 301.38 269.28 301.38 267.12 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
312.54 261.24 m
/N58 [0 22.02 -22.02 0 0 0] Tf
(\327) show
0 J
0 j
0.119995 w
227.1 645.66 m
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
/ACEENF+Wingdings-Regular 1
GetGlyphDirectory
57 <10bf317021c21aad8b4735b6a7e532d8320d63ecb501a001a4a003aaf0a8
9334a99ae2db5d9138ba6a09fddb54b9898eec553a8faf13378ad8068d75
935599f5fa230c0200d3a3da2ceae2651056dfc692c4b067ac6d35ac1157
f163b9ea1f0385b797> |
!
end end end
/N24 [0 43.98 -43.98 0 0 0] Tf
(\0009) show
n
227.1 645.66 m
(\0009) pdf_strokepath
227.1 549.66 m
(\0009) show
n
227.1 549.66 m
(\0009) pdf_strokepath
300.6 650.221 m
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
/ACEENF+Wingdings-Regular 1
GetGlyphDirectory
56 <10bf317021c2b3f2a8286e0341fa6dfc27de495676d5e069b205bf43be3f
f40947e748db022b37a1a265eeb4062afbff67fb816d19b12e044072f50c
8b1495e0f6fd15eb9c472365e4af80b42e7749a811923a744c03144be576
822598e58f5c8bb4b13e0df836536357e095ff7e3e0ca01a244d3efeed0f
5e90bb39fa1b3d407089fc57d9b8e412493922c1aae030b3> |
!
end end end
(\0008) show
n
300.6 650.221 m
(\0008) pdf_strokepath
302.878 549.66 m
(\0009) show
n
302.878 549.66 m
(\0009) pdf_strokepath
379.376 645.66 m
(\0009) show
n
379.376 645.66 m
(\0009) pdf_strokepath
378.598 555 m
(\0008) show
n
378.598 555 m
(\0008) pdf_strokepath
453.597 645.66 m
(\0009) show
n
453.597 645.66 m
(\0009) pdf_strokepath
453.597 549.66 m
(\0009) show
n
453.597 549.66 m
(\0009) pdf_strokepath
227.096 485.221 m
(\0008) show
n
227.096 485.221 m
(\0008) pdf_strokepath
302.878 483.66 m
(\0009) show
n
302.878 483.66 m
(\0009) pdf_strokepath
380.098 483.66 m
(\0009) show
n
380.098 483.66 m
(\0009) pdf_strokepath
454.376 483.66 m
(\0009) show
n
454.376 483.66 m
(\0009) pdf_strokepath
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 58650 a Fn(Figure)575 b(5-1:)729 b
Fm(Example)499 b(allo)34 b(cations)499 b(for)g(a)h(system)f(with)i
Fl(P)664 b Fm(=)495 b(20)k(pro)34 b(cessors)499 b(and)h
Fl(J)613 b Fm(=)495 b(5)k(jobs;)2000 60156 y(the)420
b(fairness,)j(e\261ciency)-101 b(,)422 b(and)e(conserv)-67
b(atism)419 b(conditions)h(are)f(ev)-67 b(aluated)419
b(on)h(the)g(righ)-34 b(t.)585 b(Eac)-34 b(h)420 b(large)2000
61661 y(circle)468 b(represen)-34 b(ts)471 b(a)f(job,)487
b(and)470 b(the)h(small)f(circles)e(within)j(the)f(job)h(represen)-34
b(t)470 b(its)h(pro)34 b(cessor)469 b(desire;)2000 63167
y(small)507 b(circles)e(that)j(are)e(gra)-34 b(y)g(ed)507
b(represen)-34 b(t)508 b(actual)f(pro)34 b(cessors.)846
b(The)507 b(gra)-34 b(y)507 b(circle)e(that)j(is)f(crossed)2000
64672 y(out)398 b(in)e(Job)h(3)g(of)g(the)g(second)g(allo)34
b(cation)397 b(represen)-34 b(ts)397 b(a)f(pro)34 b(cessor)396
b(allo)34 b(cated)397 b(to)g(the)g(job)g(b)34 b(ey)-34
b(ond)398 b(its)2000 66178 y(desire.)3951 70395 y Fy(Figure)460
b(5-1)g(sho)-36 b(ws)460 b(examples)h(of)f(di\256eren)-36
b(t)459 b(allo)36 b(cations)462 b(for)e(a)h(system)f(with)g
Fu(P)594 b Fy(=)414 b(20)460 b(and)2000 72000 y Fu(J)612
b Fy(=)489 b(5.)791 b(F)-108 b(or)504 b(eac)-36 b(h)504
b(allo)36 b(cation,)524 b(w)-36 b(e)504 b(determine)g(whether)f(or)i
(not)f(it)g(satis\257es)g(the)g(conditions)25350 75321
y(38)p eop end
%%Page: 39 39
TeXDict begin 39 38 bop 2000 1328 a Fy(of)443 b(fairness,)h
(e\261ciency)-108 b(,)445 b(and)c(conserv)-72 b(atism.)604
b(In)441 b(particular,)j(the)d(\257rst)h(allo)36 b(cation)443
b(is)f(not)g(fair,)2000 2933 y(b)36 b(ecause)363 b(Job)g(4)g(is)h
(depriv)-36 b(ed)362 b(and)g(receiv)-36 b(es)364 b(only)g(2)f(pro)36
b(cessors)364 b(while)f(other)g(jobs)g(receiv)-36 b(e)364
b(more)2000 4539 y(than)491 b(3.)752 b(The)492 b(second)f(allo)36
b(cation)493 b(is)f(not)f(conserv)-72 b(ativ)-36 b(e,)508
b(b)36 b(ecause)491 b(Job)h(3)f(is)h(giv)-36 b(en)492
b(one)g(more)2000 6144 y(pro)36 b(cessor)449 b(than)f(it)g(desires.)624
b(The)449 b(third)e(allo)36 b(cation)451 b(is)e(not)f(e\261cien)-36
b(t,)452 b(b)36 b(ecause)449 b(there)f(are)h(free)2000
7749 y(pro)36 b(cessors)406 b(in)g(the)f(system)h(that)f(are)h(not)g(b)
36 b(eing)406 b(used)f(to)h(satisfy)h(depriv)-36 b(ed)405
b(jobs.)570 b(The)405 b(fourth)2000 9354 y(allo)36 b(cation)435
b(satis\257es)f(all)h(three)e(conditions.)2000 14668
y FC(5.2)2152 b(Algorithm)716 b(DP)2000 17877 y Fy(In)433
b(this)h(section,)g(w)-36 b(e)433 b(presen)-36 b(t)433
b(algorithm)h(DP)g(\(for)f(\\dynamic)h(partitioning"\),)h(a)e(w)-36
b(ell-kno)g(wn)2000 19482 y(dynamic)515 b(pro)36 b(cessor-allo)g
(cation)516 b(algorithm)f(that)f(is)h(fair,)536 b(e\261cien)-36
b(t,)535 b(and)514 b(conserv)-72 b(ativ)-36 b(e.)822
b(DP)2000 21087 y(emplo)-36 b(ys)499 b(a)f(dynamic)g(v)-36
b(ersion)499 b(of)f(the)g(basic)g Fo(e)-78 b(quip)g(artition)626
b Fy(p)36 b(olicy)499 b([33,)208 b(48],)517 b(and)497
b(hence)h(is)2000 22692 y(sometimes)434 b(called)g(\\dynamic)g
(equipartitioning".)3951 24440 y(The)504 b(equipartition)h(p)36
b(olicy)506 b(striv)-36 b(es)504 b(to)h(main)-36 b(tain)504
b(an)g(equal)h(allotmen)-36 b(t)505 b(of)g(pro)36 b(cessors)505
b(to)2000 26045 y(all)i(jobs,)525 b(with)506 b(the)f(constrain)-36
b(t)505 b(that)h(a)g(job's)h(request)f(is)g(an)g(upp)36
b(er)505 b(b)36 b(ound)504 b(on)i(the)g(n)-36 b(um)g(b)36
b(er)2000 27650 y(of)418 b(pro)36 b(cessors)418 b(it)f(receiv)-36
b(es.)574 b(During)417 b(a)h(reallo)36 b(cation,)423
b(pro)36 b(cessors)417 b(are)h(distributed)e(among)i(the)2000
29255 y(jobs)463 b(as)f(follo)-36 b(ws:)638 b(eac)-36
b(h)463 b(job)f(starts)h(out)f(with)g(0)h(pro)36 b(cessors,)470
b(and)462 b(the)g(allotmen)-36 b(t)462 b(of)h(eac)-36
b(h)463 b(job)2000 30860 y(is)452 b(incremen)-36 b(ted)451
b(b)-36 b(y)452 b(1)g(in)g(turn,)j(where)d(jobs)h(that)e(are)h
(satis\257ed)g(drop)f(out)h(of)g(the)g(allo)36 b(cation.)2000
32465 y(The)556 b(pro)36 b(cess)556 b(con)-36 b(tin)g(ues)554
b(un)-36 b(til)555 b(either)h(all)g(jobs)h(ha)-36 b(v)g(e)555
b(dropp)36 b(ed)555 b(out)g(or)h Fu(P)737 b Fy(pro)36
b(cessors)556 b(ha)-36 b(v)g(e)2000 34070 y(b)36 b(een)581
b(allo)36 b(cated.)1022 b(W)-108 b(e)581 b(recognize)h(three)e(t)-36
b(yp)36 b(es)581 b(of)h(equipartitioning.)1022 b(In)581
b(static)g(equiparti-)2000 35675 y(tioning,)498 b(reallo)36
b(cations)487 b(are)e(not)g(allo)-36 b(w)g(ed)485 b(to)g(c)-36
b(hange)485 b(the)g(allotmen)-36 b(ts)485 b(of)g(existing)h(jobs,)498
b(and)2000 37280 y(so)462 b(im)-36 b(balances)462 b(in)g(the)f(allo)36
b(cation)464 b(and)d(queuing)h(ma)-36 b(y)462 b(o)36
b(ccur.)664 b(In)461 b(regular)h(equipartitioning,)2000
38885 y(reallo)36 b(cations)484 b(o)36 b(ccur)483 b(on)f(job)h(arriv)
-72 b(al)484 b(and)e(completion)g(only)-108 b(,)496 b(and)482
b(so)h(the)f(allo)36 b(cation)484 b(is)f(fair,)2000 40491
y(e\261cien)-36 b(t,)420 b(and)d(conserv)-72 b(ativ)-36
b(e)418 b(at)g(all)g(times)f(if)h(w)-36 b(e)418 b(assume)f(that)f(the)h
(pro)36 b(cessor)418 b(desires)f(of)h(jobs)2000 42096
y(remain)499 b(\257xed)g(during)f(their)g(execution.)775
b(In)499 b(dynamic)g(equipartitioning,)516 b(reallo)36
b(cations)501 b(can)2000 43701 y(o)36 b(ccur)329 b(at)g(an)-36
b(y)329 b(time|resp)36 b(onding)328 b(to)h(b)36 b(oth)329
b(job)g(arriv)-72 b(als)330 b(and)e(completions)i(as)f(w)-36
b(ell)330 b(as)f(c)-36 b(hanges)2000 45306 y(in)378 b(the)f(pro)36
b(cessor)378 b(desires)g(of)g(jobs)h(during)e(execution|and)g(so)h(the)
g(allo)36 b(cation)379 b(is)f(alw)-36 b(a)g(ys)380 b(fair,)2000
46911 y(e\261cien)-36 b(t,)434 b(and)f(conserv)-72 b(ativ)-36
b(e.)3951 48658 y(Although)602 b(dynamic)g(partitioning)h(can)f(b)36
b(e)602 b(implemen)-36 b(ted)602 b(using)g(the)f(equipartitioning)2000
50263 y(algorithm)361 b(describ)36 b(ed)359 b(ab)36 b(o)-36
b(v)g(e,)376 b(w)-36 b(e)360 b(presen)-36 b(t)359 b(a)h(more)g
(practical)h(v)-36 b(ersion)360 b(for)h(algorithm)f(DP)g(that)2000
51868 y(do)36 b(es)319 b(not)f(ha)-36 b(v)g(e)319 b(to)g(redistribute)e
(pro)36 b(cessors)319 b(ev)-36 b(ery)320 b(time)f(a)g(reallo)36
b(cation)320 b(o)36 b(ccurs.)540 b(Assume)318 b(that)2000
53473 y(there)483 b(are)h(no)g(jobs)g(in)g(the)f(system)h(initially)
-108 b(,)498 b(and)483 b(that)g(jobs)i(arriv)-36 b(e)484
b(one)g(at)g(a)g(time)g(\(i.e.)729 b(no)2000 55079 y(t)-36
b(w)g(o)465 b(jobs)h(arriv)-36 b(e)465 b(at)h(exactly)g(the)f(same)g
(time\).)673 b(W)-108 b(e)465 b(de\257ne)f(the)g Fo(fair)586
b(shar)-78 b(e)578 b Fy(of)466 b(a)g(job)f(to)g(b)36
b(e)2000 56684 y(the)433 b(quan)-36 b(tit)g(y:)16046
60979 y Fp(fair)p 18864 60979 411 45 v 490 w(share)367
b Fy(=)24572 58447 y Fu(P)476 b Fs(\241)29863 57185 y
Fk(X)27215 60064 y Fr(S)50 b Ft(=)p Fq(f)p Fr(j)h Fq(j)p
Fr(d)30216 60199 y Fi(j)30649 60064 y Fr(<)p Fq(b)p Fr(P)78
b(=J)83 b Fq(cg)34652 58447 y Fu(a)35335 58646 y Fr(j)p
24572 60673 11250 54 v 28157 61890 a Fu(J)418 b Fs(\241)295
b(j)p Fu(S)77 b Fs(j)47326 60979 y Fy(\(5.1\))2000 63975
y(where)400 b Fu(P)582 b Fy(is)401 b(the)f(total)h(n)-36
b(um)g(b)36 b(er)399 b(of)i(pro)36 b(cessors)401 b(and)f
Fu(J)523 b Fy(is)401 b(the)f(n)-36 b(um)g(b)36 b(er)399
b(of)i(jobs)g(in)f(the)g(system.)2000 65580 y(In)354
b(other)g(w)-36 b(ords,)371 b(a)354 b(job's)i(fair)f(share)f(is)h
(computed)e(b)-36 b(y)354 b(discoun)-36 b(ting)354 b(all)i(pro)36
b(cessors)354 b(b)36 b(eing)355 b(used)2000 67185 y(b)-36
b(y)518 b(jobs)g(that)f(desire)h(less)g(than)f(the)g(system)h
(equipartition)g Fs(b)p Fu(P)108 b(=J)123 b Fs(c)520
b Fy(and)d(then)g(distributing)2000 68790 y(the)550 b(remaining)h(pro)
36 b(cessors)551 b(equally)h(among)g(jobs)f(that)f(desire)h(more)g
(than)f Fs(b)p Fu(P)108 b(=J)123 b Fs(c)p Fy(.)931 b(Th)-36
b(us,)2000 70395 y(when)471 b(a)g(new)h(job)f Fu(j)546
b Fy(with)472 b(initial)g(desire)f Fu(d)23794 70594 y
Fr(j)24752 70395 y Fy(and)g(initial)h(allo)36 b(cation)473
b Fu(a)37796 70594 y Fr(j)38716 70395 y Fy(=)433 b(0)471
b(arriv)-36 b(es)472 b(in)-36 b(to)472 b(the)2000 72000
y(system,)434 b(algorithm)g(DP)g(op)36 b(erates)434 b(as)g(follo)-36
b(ws:)25350 75321 y(39)p eop end
%%Page: 40 40
TeXDict begin 40 39 bop 2363 44 47274 45 v 3027 1168
a Fy(Curren)-36 b(t)433 b(Allo)36 b(cation)435 b(State)p
17796 1649 45 1606 v 1328 w(Input)d(Ev)-36 b(en)g(t)p
34540 1649 V 9862 w(Ending)433 b(Allo)36 b(cation)435
b(State)p 2363 1694 47274 45 v 2363 1915 V 3027 3039
a Fs(fg)p 17796 3520 45 1606 v 14127 w Fy(Arriv)-72 b(al:)579
b(job)434 b(1)g(with)g Fu(d)30322 3238 y Ft(1)31216 3039
y Fy(=)369 b(4)p 34540 3520 V 1979 w Fs(f)p Fy(4)p Fs(g)3027
4644 y(f)p Fy(4)p Fs(g)p 17796 5125 V 13477 w Fy(Arriv)-72
b(al:)579 b(job)434 b(2)g(with)g Fu(d)30322 4843 y Ft(2)31216
4644 y Fy(=)369 b(16)p 34540 5125 V 1329 w Fs(f)p Fy(4)p
Fu(;)221 b Fy(12)p Fs(g)3027 6249 y(f)p Fy(4)p Fu(;)g
Fy(12)p Fs(g)p 17796 6730 V 11595 w Fy(Arriv)-72 b(al:)579
b(job)434 b(3)g(with)g Fu(d)30322 6448 y Ft(3)31216 6249
y Fy(=)369 b(2)p 34540 6730 V 1979 w Fs(f)p Fy(4)p Fu(;)221
b Fy(10)p Fu(;)g Fy(2)p Fs(g)3027 7854 y(f)p Fy(4)p Fu(;)g
Fy(10)p Fu(;)g Fy(2)p Fs(g)p 17796 8335 V 10363 w Fy(Change)434
b(in)f(desire:)579 b Fu(d)29571 8053 y Ft(3)30465 7854
y Fy(=)369 b(16)p 34540 8335 V 2080 w Fs(f)p Fy(4)p Fu(;)221
b Fy(6)p Fu(;)g Fy(6)p Fs(g)3027 9459 y(f)p Fy(4)p Fu(;)g
Fy(6)p Fu(;)g Fy(6)p Fs(g)p 17796 9940 V 11013 w Fy(Arriv)-72
b(al:)579 b(job)434 b(4)g(with)g Fu(d)30322 9658 y Ft(4)31216
9459 y Fy(=)369 b(8)p 34540 9940 V 1979 w Fs(f)p Fy(4)p
Fu(;)221 b Fy(4)p Fu(;)g Fy(4)p Fu(;)g Fy(4)p Fs(g)3027
11064 y(f)p Fy(4)p Fu(;)g Fy(4)p Fu(;)g Fy(4)p Fu(;)g
Fy(4)p Fs(g)p 17796 11546 V 9781 w Fy(Arriv)-72 b(al:)579
b(job)434 b(5)g(with)g Fu(d)30322 11263 y Ft(5)31216
11064 y Fy(=)369 b(8)p 34540 11546 V 1979 w Fs(f)p Fy(3)p
Fu(;)221 b Fy(3)p Fu(;)g Fy(3)p Fu(;)g Fy(3)p Fu(;)g
Fy(4)p Fs(g)3027 12669 y(f)p Fy(3)p Fu(;)g Fy(3)p Fu(;)g
Fy(3)p Fu(;)g Fy(3)p Fu(;)g Fy(4)p Fs(g)p 17796 13151
V 8549 w Fy(Arriv)-72 b(al:)579 b(job)434 b(6)g(with)g
Fu(d)30322 12868 y Ft(6)31216 12669 y Fy(=)369 b(8)p
34540 13151 V 1979 w Fs(f)p Fy(2)p Fu(;)221 b Fy(2)p
Fu(;)g Fy(3)p Fu(;)g Fy(3)p Fu(;)g Fy(3)p Fu(;)g Fy(3)p
Fs(g)3027 14274 y(f)p Fy(2)p Fu(;)g Fy(2)p Fu(;)g Fy(3)p
Fu(;)g Fy(3)p Fu(;)g Fy(3)p Fu(;)g Fy(3)p Fs(g)p 17796
14756 V 7317 w Fy(Completion:)579 b(job)434 b(2)p 34540
14756 V 6375 w Fs(f)p Fy(3)p Fu(;)221 b Fy(4)p Fu(;)g
Fy(3)p Fu(;)g Fy(3)p Fu(;)g Fy(3)p Fs(g)3027 15879 y(f)p
Fy(3)p Fu(;)g Fy(4)p Fu(;)g Fy(3)p Fu(;)g Fy(3)p Fu(;)g
Fy(3)p Fs(g)p 17796 16361 V 8549 w Fy(Completion:)579
b(job)434 b(3)p 34540 16361 V 6375 w Fs(f)p Fy(4)p Fu(;)221
b Fy(4)p Fu(;)g Fy(4)p Fu(;)g Fy(4)p Fs(g)3027 17484
y(f)p Fy(4)p Fu(;)g Fy(4)p Fu(;)g Fy(4)p Fu(;)g Fy(4)p
Fs(g)p 17796 17966 V 9781 w Fy(Completion:)579 b(job)434
b(6)p 34540 17966 V 6375 w Fs(f)p Fy(4)p Fu(;)221 b Fy(6)p
Fu(;)g Fy(6)p Fs(g)p 2363 18010 47274 45 v 3874 21509
a Fn(Figure)465 b(5-2:)539 b Fm(A)404 b(sample)g(allo)34
b(cation)404 b(trace)f(for)i(algorithm)f(DP)g(on)g(a)g(16-pro)34
b(cessor)404 b(system.)3590 25333 y Fy(1.)651 b(Let)333
b Fp(free)p 10300 25333 411 45 v 490 w(procs)e Fy(b)36
b(e)333 b(the)g(n)-36 b(um)g(b)36 b(er)332 b(of)i(free)f(pro)36
b(cessors)334 b(in)f(the)g(system)h(at)f(the)g(time)g(when)5252
26938 y Fu(j)458 b Fy(arriv)-36 b(es.)563 b(If)385 b
Fp(free)p 15005 26938 V 490 w(procs)367 b Fs(\270)i Fu(d)21278
27137 y Fr(j)21765 26938 y Fy(,)394 b(set)384 b Fu(a)25184
27137 y Fr(j)26039 26938 y Fy(=)369 b Fu(d)28096 27137
y Fr(j)28583 26938 y Fy(.)561 b(Otherwise,)394 b(set)384
b Fu(a)38640 27137 y Fr(j)39496 26938 y Fy(=)368 b Fp(free)p
43694 26938 V 491 w(procs)381 b Fy(and)5252 28543 y(go)434
b(to)g(step)f(2.)3590 30439 y(2.)651 b(Compute)385 b(the)f(v)-72
b(alue)386 b(of)479 b Fp(fair)p 20687 30439 V 490 w(share)383
b Fy(giv)-36 b(en)386 b(b)-36 b(y)385 b(Equation)h(\(5.1\))g(\(include)
f(job)g Fu(j)460 b Fy(in)386 b(the)5252 32044 y(calculation\).)550
b(If)348 b Fu(a)14707 32243 y Fr(j)15563 32044 y Fs(\267)369
b Fy(min\()p Fu(d)20315 32243 y Fr(j)20801 32044 y Fu(;)221
b Fp(fair)p 24201 32044 V 491 w(share)n Fy(\),)364 b(remo)-36
b(v)g(e)348 b(one)f(pro)36 b(cessor)348 b(from)f(a)h(job)f(that)5252
33649 y(has)433 b(the)g(highest)h(allo)36 b(cation)435
b(and)e(giv)-36 b(e)435 b(this)e(pro)36 b(cessor)434
b(to)f Fu(j)75 b Fy(.)3590 35544 y(3.)651 b(Rep)36 b(eat)289
b(step)f(2)i(un)-36 b(til)288 b(either)h Fu(a)20267 35743
y Fr(j)21123 35544 y Fy(=)368 b Fu(d)23179 35743 y Fr(j)23666
35544 y Fy(,)318 b(meaning)289 b(that)g Fu(j)364 b Fy(is)289
b(satis\257ed,)318 b(or)289 b Fu(a)41516 35743 y Fr(j)42372
35544 y Fy(=)369 b Fp(fair)p 46571 35544 V 490 w(share)n
Fy(,)5252 37149 y(meaning)433 b(that)g Fu(j)509 b Fy(no)-36
b(w)434 b(has)f(its)h(fair)g(share)g(of)g(pro)36 b(cessors.)3951
39477 y(The)395 b(same)h(steps)f(are)g(p)36 b(erformed)395
b(b)-36 b(y)395 b(DP)h(when)f(the)g(pro)36 b(cessor)395
b(desire)g(of)h(an)f(existing)i(job)2000 41082 y(increases;)405
b(the)390 b(only)h(di\256erence)e(is)i(that)f Fu(a)23270
41281 y Fr(j)24146 41082 y Fy(do)36 b(es)391 b(not)f(start)g(out)g(at)g
(0)g(in)g(this)g(case.)565 b(When)390 b(the)2000 42687
y(desire)433 b(of)i(a)f(job)g Fu(j)508 b Fy(decreases,)434
b(or)g(when)f Fu(j)508 b Fy(completes,)434 b(DP)g(op)36
b(erates)434 b(as)g(follo)-36 b(ws:)3590 44992 y(1.)651
b(Add)559 b(the)i(n)-36 b(um)g(b)36 b(er)559 b(of)i(freed)f(pro)36
b(cessors)561 b(to)g Fp(free)p 31272 44992 V 490 w(procs)p
Fy(.)958 b(Recompute)560 b Fp(fair)p 46174 44992 V 490
w(share)5252 46597 y Fy(using)433 b(Equation)h(\(5.1\))g(if)g
Fu(j)509 b Fy(has)433 b(completed.)3590 48492 y(2.)651
b(Add)432 b(a)i(pro)36 b(cessor)434 b(to)g(a)g(depriv)-36
b(ed)433 b(job)h(that)f(has)g(the)g(lo)-36 b(w)g(est)434
b(allo)36 b(cation.)3590 50388 y(3.)651 b(Rep)36 b(eat)433
b(step)h(2)f(un)-36 b(til)433 b(either)h Fp(free)p 23125
50388 V 490 w(procs)367 b Fy(=)h(0)434 b(or)g(there)f(are)h(no)f
(depriv)-36 b(ed)433 b(jobs.)3951 52716 y(Figure)418
b(5.2)h(sho)-36 b(ws)419 b(a)f(sample)h(allo)36 b(cation)420
b(trace)e(for)h(algorithm)g(DP)g(on)f(a)g(system)h(with)f(16)2000
54321 y(pro)36 b(cessors.)561 b(Eac)-36 b(h)379 b(ro)-36
b(w)379 b(of)h(the)f(table)g(sho)-36 b(ws)380 b(the)e(curren)-36
b(t)378 b(state)i(of)g(the)e(allo)36 b(cation)381 b(\(expressed)2000
55926 y(as)376 b(a)g(list)g(of)h(allotmen)-36 b(ts\),)388
b(an)375 b(input)g(ev)-36 b(en)g(t)375 b(\(either)h(a)g(job)g(arriv)-72
b(al,)388 b(job)376 b(completion,)388 b(or)376 b(c)-36
b(hange)2000 57531 y(in)433 b(a)h(job's)h(pro)36 b(cessor)433
b(desire\),)h(and)f(the)g(ending)g(state)h(of)g(the)f(allo)36
b(cation.)3951 59159 y(Sev)-36 b(eral)403 b(studies)f(ha)-36
b(v)g(e)402 b(sho)-36 b(wn)402 b(that)g(algorithm)h(DP)g(outp)36
b(erforms)402 b(all)h(other)f(space-slicing)2000 60764
y(p)36 b(olicies)490 b(when)e(the)h(reallo)36 b(cation)490
b(o)-36 b(v)g(erhead)489 b(is)g(lo)-36 b(w,)504 b(regardless)490
b(of)f(job)g(w)-36 b(orkload)491 b(or)e(o)-36 b(v)g(erall)2000
62369 y(system)480 b(load)g([22,)197 b(27,)g(33,)g(39,)g(46,)g(48,)g
(52].)724 b(Most)479 b(of)i(these)e(studies)g(fo)36 b(cus)481
b(on)f(uniform-access,)2000 63975 y(shared-memory)294
b(\(UMA\))h(mac)-36 b(hines,)322 b(where)295 b(the)g(allo)36
b(cation)296 b(of)g(pro)36 b(cessors)295 b(is)g(decoupled)g(from)2000
65580 y(the)531 b(allo)36 b(cation)533 b(of)f(memory)g(\(see)f(Chapter)
g(2\).)871 b(Some)531 b(studies)g(ha)-36 b(v)g(e)532
b(also)g(sho)-36 b(wn)531 b(that)g(DP)2000 67185 y(p)36
b(erforms)484 b(b)36 b(etter)483 b(than)h(static)g(allo)36
b(cation)486 b(p)36 b(olicies)485 b(under)d(realistic)j(reallo)36
b(cation)486 b(o)-36 b(v)g(erheads)2000 68790 y([15],)617
b(and)578 b(for)i(some)f(classes)h(of)f(w)-36 b(orkloads,)617
b(under)578 b(a)h(wide)g(range)g(of)h(o)-36 b(v)g(erheads)579
b([52].)1015 b(In)2000 70395 y(general,)519 b(the)501
b(adv)-72 b(an)-36 b(tage)502 b(of)g(using)f(algorithm)h(DP)f
(increases)h(with)f(larger)h(and)f(more)g(rapid)2000
72000 y(c)-36 b(hanges)567 b(in)h(the)f(parallelism)i(of)f(the)f(w)-36
b(orkload,)603 b(as)568 b(w)-36 b(ell)568 b(as)g(increasing)g(system)g
(load)g([52].)25350 75321 y(40)p eop end
%%Page: 41 41
TeXDict begin 41 40 bop 2000 1328 a Fy(The)473 b(p)36
b(erformance)472 b(of)i(DP)e(decreases,)483 b(ho)-36
b(w)g(ev)g(er,)483 b(when)472 b(the)g(n)-36 b(um)g(b)36
b(er)471 b(of)i(jobs)g(in)g(the)f(system)2000 2933 y(exceeds)362
b(the)f(n)-36 b(um)g(b)36 b(er)359 b(of)j(pro)36 b(cessors)362
b(\(i.e.)555 b(during)360 b(high)i(loads\),)376 b(since)361
b(some)h(of)g(the)f(jobs)h(m)-36 b(ust)2000 4539 y(b)36
b(e)487 b(queued)g([35,)201 b(52].)742 b(While)488 b(queuing)f(is)h
(not)f(exp)36 b(ected)487 b(to)g(b)36 b(e)487 b(a)h(problem)f(in)g
(large)h(parallel)2000 6144 y(mac)-36 b(hines)391 b([17],)402
b(v)-72 b(arious)392 b(strategies)g(can)g(b)36 b(e)391
b(used)g(to)g(reduce)g(its)h(e\256ect)f(on)h(the)f(resp)36
b(onse)391 b(time)2000 7749 y(of)398 b(jobs)g([16,)137
b(42,)g(43,)g(49].)569 b(A)397 b(mathematical)h(mo)36
b(del)398 b(for)g(algorithm)g(DP)-108 b(,)397 b(including)g(an)h
(analysis)2000 9354 y(of)488 b(its)f(p)36 b(erformance)487
b(across)h(a)f(wide)h(range)f(or)g(parallel)h(system)g(en)-36
b(vironmen)g(ts,)500 b(is)487 b(pro)-36 b(vided)2000
10959 y(in)433 b([46].)580 b(Examples)434 b(of)h(real)f(implemen)-36
b(tations)433 b(of)h(DP)g(can)g(b)36 b(e)433 b(found)g(in)h([12,)169
b(32].)3951 12564 y(In)528 b(practice,)551 b(there)527
b(are)h(a)h(few)f(p)36 b(olicy)529 b(decisions)f(that)g(need)f(to)h(b)
36 b(e)527 b(made)h(when)f(imple-)2000 14169 y(men)-36
b(ting)591 b(algorithm)h(DP)-108 b(,)592 b(most)f(of)h(whic)-36
b(h)591 b(relate)h(to)g(the)f(w)-36 b(a)g(y)592 b(reallo)36
b(cations)593 b(o)36 b(ccur.)1052 b(The)2000 15774 y(\257rst)637
b(decision)i(is)f(b)36 b(et)-36 b(w)g(een)637 b(unco)36
b(ordinated)638 b(reallo)36 b(cations,)691 b(where)638
b(the)f(op)36 b(erating)639 b(system)2000 17379 y(reallo)36
b(cates)582 b(pro)36 b(cessors)580 b(without)g(in)-36
b(teracting)581 b(with)f(the)g(job)g(sc)-36 b(heduler,)616
b(and)580 b(co)36 b(ordinated)2000 18984 y(reallo)g(cations,)426
b(where)421 b(pro)36 b(cessors)422 b(are)f(reallo)36
b(cated)423 b(in)e(concert)g(with)g(the)g(job)h(sc)-36
b(heduler.)573 b(W)-108 b(e)2000 20589 y(c)-36 b(ho)36
b(ose)602 b(the)f(p)36 b(olicy)603 b(of)f(co)36 b(ordinated)602
b(reallo)36 b(cations)603 b(for)f(reasons)g(discussed)f(in)g(Chapter)g
(2.)2000 22195 y(Giv)-36 b(en)364 b(that)g(reallo)36
b(cations)365 b(are)g(co)36 b(ordinated,)378 b(it)364
b(is)g(still)h(unclear)f(ho)-36 b(w)364 b(m)-36 b(uc)g(h)363
b(resp)36 b(onsibilit)-36 b(y)365 b(or)2000 23800 y(con)-36
b(trol)362 b(the)f(job)h(sc)-36 b(heduler)361 b(should)g(ha)-36
b(v)g(e)362 b(during)f(a)h(reallo)36 b(cation,)378 b(as)362
b(w)-36 b(ell)362 b(as)g(ho)-36 b(w)362 b(m)-36 b(uc)g(h)361
b(trust)2000 25405 y(this)419 b(resp)36 b(onsibilit)-36
b(y)420 b(requires)g(b)36 b(et)-36 b(w)g(een)419 b(the)g(op)36
b(erating)419 b(system)h(and)f(job)h(sc)-36 b(heduler.)573
b(W)-108 b(e)419 b(also)2000 27010 y(need)485 b(to)h(determine)f(when)g
(and)h(ho)-36 b(w)486 b(often)g(reallo)36 b(cations)487
b(o)36 b(ccur|whic)-36 b(h)486 b(ma)-36 b(y)486 b(or)g(ma)-36
b(y)486 b(not)2000 28615 y(dep)36 b(end)394 b(on)h(ho)-36
b(w)395 b(often)g(jobs)h(rep)36 b(ort)394 b(their)h(pro)36
b(cessor)395 b(desires)g(\(see)g(Section)g(4.2\)|so)h(that)f(w)-36
b(e)2000 30220 y(can)497 b(con)-36 b(trol)497 b(the)f(amoun)-36
b(t)496 b(of)h(o)-36 b(v)g(erhead)497 b(a)g(reallo)36
b(cation)499 b(incurs.)767 b(In)496 b(practice,)513 b(reallo)36
b(cations)2000 31825 y(nev)-36 b(er)374 b(o)36 b(ccur)373
b(instan)-36 b(taneously)374 b(\(this)f(is)h(true)f(of)h(b)36
b(oth)373 b(unco)36 b(ordinated)373 b(and)g(co)36 b(ordinated)374
b(p)36 b(oli-)2000 33430 y(cies\),)492 b(and)479 b(so)h(there)f(is)h
(necessarily)g(a)g(dela)-36 b(y)480 b(b)36 b(et)-36 b(w)g(een)479
b(when)h(a)f(job's)i(allotmen)-36 b(t)480 b(is)g(c)-36
b(hanged)2000 35035 y(b)g(y)411 b(the)f(op)36 b(erating)411
b(system)f(and)h(when)f(its)h(pro)36 b(cessor)410 b(usage)h(matc)-36
b(hes)411 b(the)f(new)g(allotmen)-36 b(t.)571 b(If)2000
36640 y Fu(p)2653 36839 y Fr(j)3646 36640 y Fy(represen)-36
b(ts)505 b(the)h(n)-36 b(um)g(b)36 b(er)504 b(of)j(pro)36
b(cessors)507 b(curren)-36 b(tly)505 b(b)36 b(eing)506
b(used)g(b)-36 b(y)506 b(job)g Fu(j)75 b Fy(,)525 b(then)505
b(there)h(is)2000 38245 y(a)462 b(p)36 b(erio)g(d)462
b(of)h(time)f(when)f Fu(p)15765 38444 y Fr(j)16669 38245
y Fu(>)417 b(a)18781 38444 y Fr(j)19730 38245 y Fy(after)462
b Fu(j)75 b Fy('s)462 b(allotmen)-36 b(t)462 b(is)h(decreased,)469
b(and)461 b(a)h(p)36 b(erio)g(d)462 b(of)h(time)2000
39851 y(when)506 b Fu(p)6122 40050 y Fr(j)7101 39851
y Fu(<)492 b(a)9288 40050 y Fr(j)10281 39851 y Fy(after)506
b Fu(j)75 b Fy('s)506 b(allotmen)-36 b(t)507 b(is)f(increased.)796
b(Also,)525 b(w)-36 b(e)507 b(need)e(to)h(decide)g(ho)-36
b(w)506 b(to)h(deal)2000 41456 y(with)525 b(situations)g(where)f
Fu(J)648 b(>)524 b(P)705 b Fy(\(e.g.)853 b(whether)524
b(to)h(m)-36 b(ultiplex)525 b(the)f(existing)i(pro)36
b(cessors)525 b(or)2000 43061 y(just)396 b(queue)g(the)g(excess)h
(jobs\),)404 b(k)-36 b(eeping)396 b(in)g(mind)g(that)f(queuing)i(can)f
(dramatically)h(a\256ect)g(the)2000 44666 y(p)36 b(erformance)452
b(of)g(algorithm)g(DP)g(relativ)-36 b(e)453 b(to)e(other)h(pro)36
b(cessor-allo)g(cation)453 b(p)36 b(olicies)452 b([52].)634
b(W)-108 b(e)2000 46271 y(discuss)417 b(all)h(of)g(these)f(p)36
b(olicy)418 b(decisions)g(and)f(issues)g(as)g(they)h(p)36
b(ertain)416 b(to)i(the)f(Cilk-AP)h(system)2000 47876
y(in)433 b(Chapter)h(6.)25350 75321 y(41)p eop end
%%Page: 42 42
TeXDict begin 42 41 bop 25350 75321 a Fy(42)p eop end
%%Page: 43 43
TeXDict begin 43 42 bop 2000 10350 a Fw(Chapter)1033
b(6)2000 16052 y(Cilk-AP:)e(A)h(Tw)-86 b(o-Lev)g(el)1032
b(Sc)-86 b(heduler)2000 19373 y(for)1033 b(Adaptiv)-86
b(ely)1033 b(P)-86 b(arallel)2000 22693 y(W)-258 b(ork-Stealing)1034
b(Jobs)2000 28893 y Fy(In)553 b(this)f(c)-36 b(hapter,)583
b(w)-36 b(e)553 b(presen)-36 b(t)552 b(the)g(design)h(and)g(implemen)
-36 b(tation)552 b(of)i(Cilk-AP)-108 b(,)554 b(a)f(t)-36
b(w)g(o-lev)g(el)2000 30498 y(sc)g(heduling)504 b(system)g(for)h
(adaptiv)-36 b(ely)505 b(parallel)g(w)-36 b(ork-stealing)506
b(jobs)e(running)f(on)h(a)h(m)-36 b(ultipro-)2000 32103
y(grammed)438 b(shared-memory)g(system.)592 b(In)438
b(the)g(\257rst)f(lev)-36 b(el)439 b(of)g(sc)-36 b(heduling,)439
b(Cilk-AP)g(uses)f(algo-)2000 33708 y(rithm)470 b(DP)g(from)h(Chapter)f
(5)h(to)f(allo)36 b(cate)472 b(pro)36 b(cessors)471 b(to)f(jobs)h(in)f
(a)h(fair,)480 b(e\261cien)-36 b(t,)480 b(and)469 b(con-)2000
35313 y(serv)-72 b(ativ)-36 b(e)474 b(manner.)698 b(In)473
b(the)g(second)g(lev)-36 b(el)474 b(of)g(sc)-36 b(heduling,)484
b(Cilk-AP)474 b(uses)f(algorithm)h(WSAP)2000 36918 y(from)454
b(Chapter)e(4)i(to)f(sc)-36 b(hedule)452 b(the)g(computation)h(of)h(a)f
(single)h(job)f(and)g(rep)36 b(ort)453 b(its)g(pro)36
b(cessor)2000 38523 y(desire)453 b(to)f(the)g(\257rst-lev)-36
b(el)453 b(sc)-36 b(heduler.)635 b(The)452 b(Cilk-AP)i(system)f(is)g
(implemen)-36 b(ted)452 b(b)-36 b(y)452 b(extending)2000
40128 y(the)390 b(run)-36 b(time)390 b(system)h(of)g(the)f(Cilk)i(m)-36
b(ultithreaded)390 b(language)h([5,)130 b(19,)g(47].)568
b(W)-108 b(e)391 b(\257rst)f(presen)-36 b(t)389 b(an)2000
41734 y(o)-36 b(v)g(erview)468 b(of)e(the)g(design)g(of)g(Cilk-AP)-108
b(,)467 b(addressing)f(some)g(of)h(the)f(p)36 b(olicy)467
b(questions)f(raised)g(in)2000 43339 y(Chapters)433 b(4)h(and)f(5.)579
b(Then,)433 b(w)-36 b(e)434 b(describ)36 b(e)433 b(its)h(implemen)-36
b(tation.)2000 48802 y FC(6.1)2152 b(Design)716 b(Ov)-60
b(erview)2000 52061 y Fy(Figure)381 b(6-1)g(pro)-36 b(vides)382
b(an)f(o)-36 b(v)g(erview)382 b(of)g(the)f(Cilk-AP)h(system.)561
b(Cilk-AP)382 b(uses)f(a)g(global)i(allo)36 b(ca-)2000
53666 y(tion)323 b(table)g(\(GA)-108 b(T\))322 b(to)i(main)-36
b(tain)323 b(a)g(fair,)346 b(e\261cien)-36 b(t,)345 b(and)323
b(conserv)-72 b(ativ)-36 b(e)324 b(allo)36 b(cation)325
b(of)f(pro)36 b(cessors)2000 55271 y(to)351 b(jobs)h(in)f(the)g
(\257rst)f(lev)-36 b(el)352 b(of)g(sc)-36 b(heduling.)551
b(The)351 b(allotmen)-36 b(ts)351 b(in)g(the)g(GA)-108
b(T)351 b(are)g(computed)f(using)2000 56876 y(algorithm)525
b(DP)-108 b(,)525 b(and)f(the)h(GA)-108 b(T)524 b(itself)h(is)g(stored)
g(in)f(shared)g(memory)-108 b(.)852 b(In)524 b(the)h(second)f(lev)-36
b(el)2000 58481 y(of)499 b(sc)-36 b(heduling,)513 b(Cilk-AP)499
b(uses)f(algorithm)g(WSAP)g(to)g(sc)-36 b(hedule)497
b(the)g(computation)h(of)g(a)h(job)2000 60086 y(and)511
b(estimate)g(its)h(pro)36 b(cessor)511 b(desire.)811
b(The)512 b(estimates)f(are)h(p)36 b(erformed)511 b(at)g(regular)h(in)
-36 b(terv)-72 b(als)2000 61692 y(and)537 b(en)-36 b(tered)536
b(directly)i(in)-36 b(to)537 b(the)g(GA)-108 b(T.)538
b(In)f(Cilk-AP)-108 b(,)538 b(b)36 b(oth)537 b(the)g(\257rst)g(and)g
(second)g(lev)-36 b(els)538 b(of)2000 63297 y(sc)-36
b(heduling)475 b(are)g(p)36 b(erformed)475 b(b)-36 b(y)476
b(the)f(job)g(sc)-36 b(hedulers)475 b(of)h(the)f(running)f(jobs.)704
b(In)475 b(this)g(section,)2000 64902 y(w)-36 b(e)434
b(describ)36 b(e)433 b(the)g(three)g(ma)72 b(jor)435
b(functions)e(p)36 b(erformed)433 b(b)-36 b(y)434 b(the)f(job)h(sc)-36
b(heduler:)3445 67493 y(1\))651 b(estimating)434 b(the)f(pro)36
b(cessor)434 b(desire)f(of)h(a)g(job,)3445 69746 y(2\))651
b(main)-36 b(taining)433 b(a)h(fair,)h(e\261cien)-36
b(t,)434 b(and)f(conserv)-72 b(ativ)-36 b(e)434 b(allo)36
b(cation,)436 b(and)3445 72000 y(3\))651 b(adjusting)433
b(the)g(pro)36 b(cessor)434 b(usage)g(of)g(a)g(job)g(to)g(matc)-36
b(h)433 b(its)h(allotmen)-36 b(t.)25350 75321 y(43)p
eop end
%%Page: 44 44
TeXDict begin 44 43 bop 4900 24334 a @beginspecial 118
@llx 82 @lly 751 @urx 447 @ury 3798 @rwi @setspecial
%%BeginDocument: cilk-ap-over.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Thesis Figures.ppt)
%%Version: 1 4
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910170614Z)
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 118 82 751 447
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
118 82 moveto 751 82 lineto 751 447 lineto 118 447 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
118 82 633 364 rectclip
[ 0 -1 1 0 35.67982 564.80188 ] concat
%%BeginResource: font AMNHDL+TimesNewRoman,Italic
11 dict begin
/FontName /AMNHDL+TimesNewRoman,Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 940 dict dup begin
/.notdef 
<10bf317005b8302fd45b07fb1549d56700cd874f9785acaaa30edf166f7d
7fe0592f51d07c5aaaff66bb85fa> ND 
/G 
<10bf317022f0081597cff576c41b27466fe1e52d193034b36888cf3b2ca3
68a68d779fafce3b72c5293d6a3f887f14f5a58b0034aee71698546c4c0b
991181b84d52072635415222f7bd056e66888b79f595879cd3baf7efe159
063d43845ef9a025705d8ec9651b457099654394d2992e33c012343fc4f2
66bd7986fb9a6f6efaf2a6ba768f8b612ddae90ca0c801101a2b8812c0d1
878114ac488c2949f4102b5df4236669c09640ae29afbccb443338828b0c
4517115a6e5e3eaba334cf1dcb7ac13c67e72a57aac6dbd46b8372a5bd25
904367c6e60889f07aa8786d7c3e90b25aad92f3e9244c386428145e> ND 
/J 
<10bf31709b62baa6ed3ff432fee50dc00607d5d72252eb6bcb129243db2d
20da9a1bba6a2a66e7e0aa49e064b3cd91583d479cde6fdea9b68aa6c210
4c340f6d9eaee545ca5b3220798b86c6c501559929908fda3517e01edd65
a0870f99744c55f160054bcc26b2401397f00007e631a3ec8136de71a1ea
54cb887274c598e3d9a0cf2e81ae1712a04402d31806c05b33b9d0d9e621
a3c3431c175d72d405299a8e75c6a1cb1be61e602566dfa0681fdb581ce1
0fdbd4208d25dddacc> ND 
/N 
<10bf31709dce1b1ed41c47addeb7a391f41ed8083f4afeff1c947df10a4d
2de36425e89f6bd82e60d9023e2d78bc84830b34e62f8a4568be7bc208ea
4fc6e9ca969e8aec41dd80f80f4c4fe472639ba3366569cb87de5f9213ad
98120d1a71b4584b509f09b5200a62d6e7ca1119d61533e703d2441b08cc
bd9b3c336c42188f729bae655049971d2e4b7d6cd44a7b76666f37ef7463
60a28e6259dace068776b5c8cc33f800437ece6dccba77e4b0e7> ND 
/P 
<10bf3170815b61898ffe1eb7109b3eb3fe8179c947126cde0ca1f0f3a57b
4fde4a0e49d820192254c426f8d7a6d5299e28c0b3aaba378c26c6f147b4
8a5a4c0122cff4b969b15e30e1453b0937d2109da30e4ce446da9a7e9ab9
e76e27900c04c0add80988c0c7b9922b0ef4ac86d418261120e07369b2d9
b1acf0aff00cee423b3cd264a8c70a5a05e09d6c0a09605b3b34e7c29b8d
125ff0629d3b1843ba7d87672b5291e3ddb8d717dd2e32b1285a5857a4d9
e80141d3d7199fd282a27fa888d0b8> ND 
/v 
<10bf317052452fc5aad0396ffeda7b26078ecb2bae9160e8a2ff79b8413c
c7863fa52f084c124f376817021d111fd45356a585fa0f70e03eec5a8676
69a27d45857cbfc4b89a5c4acca120869d8cdd588b39c064d4789bf98644
9a3831f33b7c7bd3b9aba947b52369d2b2d9cafbc4e36825d1ad23fe62d1
3909f21c6e75f9844e2a64feab8b455daba318be09eef7ede45676853dea
cc5a8d23424c2053e51531cbf2f4df> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AMNHDL+TimesNewRoman,Italic findfont /Encoding get
dup 0 /.notdef put
dup 71 /G put
dup 74 /J put
dup 78 /N put
dup 80 /P put
dup 118 /v put
pop
%%EndResource
[/N77/AMNHDL+TimesNewRoman,Italic 1 TZ
%%BeginResource: font AMNGBE+TimesNewRoman
11 dict begin
/FontName /AMNGBE+TimesNewRoman def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b8302fd45b0609d6bde5a48b0240d44d91aabd11b7ee50303a
812fda6ed97443c437b8d3bea589> ND 
/space 
<10bf317079c757bf91> ND 
/parenleft 
<10bf317046e70250e8bd40d114dd6e816b58f4d3349c0c7727832e7501d9
0d48751e5ed01a4a989a3de6f3df4e8150bcde04496d7ebf18ade860af48
8df404b0480a8fe53e55e37acb5a554f9e5cbbe042244d6fc0aa0fdafde4
acb4c52d35fe39221cd926f89c> ND 
/parenright 
<10bf3170537b448b82841392ad69a78470fcf6ad5b9860e31496592c5fd2
8c2a948b7ef1391379bc9dc9754e13aa1a0d8be5cfd2e3bc1b6a246b4628
a43a8883776071abf86a7883d030defeed590f0bf1949e72bae27054def5
466be78152f4af0ef71e17f1> ND 
/slash 
<10bf31707ecffa29aa99596df40b96812e390790337673cf79e85a6235> ND 
/zero 
<10bf31705d64a97b17e82784743dd8afd77cc124ffedf62073386a4af3bd
86fd28c9c7a756e9ef18e3ca007b94f0e02e9eb268494f71c4e6ce33e23a
daf3d98e6e397ae6d95a99deac335d9d72bffd478071defcda00cb768906
0b44c557ecf61de22b31359bb158f6fec05d2caffa2d64aa1e2dc65d6175
e933567afd84f788ad9d2ecdc1d1277289609d3478a2f9ff64e3fec0e6b8
8edb35e90668db5b556d9651c4b7ff49d0e2> ND 
/one 
<10bf317005ae401898a67a8f6de1f54e88dd29653934d8fb66d867e6b838
31e46aba7ec16ec2bf2610f48d513e9468def491a395c79c04ab97661388
486cef0a89ff7cb8841e12e5981f5cdc657a7ebfcdd8d206693275b7b903
ac4b583f7a5f7e19747edacf7fd79fb831> ND 
/two 
<10bf31705245f700165abe0e8d91cddb6feb7811d3603825e66832849610
d7492bb7bb1bbe9b38b9effb001f6d173bafa44049a55f486a16d864a63a
0b8656d896563e3acf945ca9d464a5da6a162804f115d383572fc15c981c
15b63475fe68ef2e72a5ed63c6d92b271dfd5ca6b8185c6f94514ec3f8b2
9754c26f2e52febc00e73850ee3614b9e5b4860482acf7ce> ND 
/three 
<10bf317046e83a12808b34aac7f1a2c51f931f10ca7f698d45f025e79cad
acddbcee06bad2c5cc1167c54f184f7ff6c5be54525dd336a18dac59abe3
51af65de3cb74e87680e210111fe3373cf78cdaaefde1102d8a669c7f56c
fd78df2fa64353b29ec63cee83be5507fab9efe5b0c0654ac5d0faf82f72
c7d0d0ece4b0777dfc4d4bfc7583f8632dc6c5fd99d182cc5583383cd380
38e183a0ee9157830157210c13c7cc41fe93378a95d46b9bf61021a1bc93
25b861a11afa297b545a525e2dd0f9091708f3c950db8d721b9ad5668e69
2c6e768a4c7c4da3341999d7214a> ND 
/four 
<10bf317069b1fd7146b17c113b617a69456a1f46fa86f93a1743e1bde519
49e5c8665d9cf49ab4179aecaf779fa834a317855eb2ce61cdee1d727f> ND 
/five 
<10bf317049845615ceab2cb35844ace30baf3e54b0e1773fc25e2037b21b
b58b95d34cefc92bea69dc9b438084ed7eb5c6702a368454ebc82a5856ce
9936aede12d64deba22dd59cd070d9cd700c552563a2157176094ad577ca
7175d4c555582970bb6ced51f021b279f79ea313c4e45258856c7401f914
3fd613f871ff33cdce06d0175d18b29427c1e70009e3e10e63caa0676029
8c0b976669b8d245> ND 
/six 
<10bf3170448bf7f9a4e5f8472a5a2d45b7594de91351c6ec052ffd8b762a
bed41ed16809fa2365105c6627f46205709a8a1309c7141139fd941188bd
c8d9b0b55c47d641558ff36ded37dddb1b216d36df7ff3e4cecb5e93a247
22d0b6b5e65a4a2dcc56b02d7259d8fd5b7ec0999a61dac27e80da2f8676
34759b4e247227f13713c39238726a89a708bbed3b752173bdebcebaeea7
71ee266a3e95119dcfb78b31c6beeef7041756c5788d9d3d80a0bb3f669d
9ba6d8b1667d5d5aa89f4142cfd220ffe9eb070e> ND 
/seven 
<10bf3170422f935763586cd8dbf7f37293dfe15df8bc3e09eef989653acc
203875a79f5d3c366f49e5ce0c7723933c8d3b9a4fd39991> ND 
/eight 
<10bf31703a9bd69293aaf1980d4004db29512cfbcdf83050f262f22394b0
ef479114fcd1ed3780f8e8379ec274149787838cb972946ff925f327dc43
fe0a268771c55ebbfb2b11062f0229b6b8245dcdaee1f4d128ae888b5b31
2979a0a0311f4e185869859bc2f66d09f1f0a58e4c124d00e52b1afc6fde
a6cc391f21431f05bfb725982450ba002876f8730b821ec63f425acc7fbc
dbd469c4bbc842a4c448a96aef6e173e7ebf5f5a7a17953e1579490627e0
98ff8ddd57718c580a5c4db5f0f85a39de87a2ee8507278f64c74b506e5f
c484dc38505671de2149f16a16f5b3bd2bd178fe57f2540526157d2501cd
a1ec9d05b086c77bbf39961b> ND 
/nine 
<10bf317041f0a9496f308eef332a89569c6f19bf3d9e8151f98106b7f3b4
863943549b6788f898c785f107f2fd33dafee552c5021ce35f862500ffe7
90b89ba5e8ca74771847acf24a3921944b9ff12aa20c31cc240b97d0bfbf
3bfa98131e7f0af00c2c1318418f0b901e30e5ac56e17f3033ea0f27da78
6ba05aa35f7d1182c74c8b5d63906ddf3add8563ed2127e6e60e74dcaeec
cd2fc89d6ac5e14d494f0e9d12d3f290592c4f786ec533bdf4b038336f9c
5e802b11> ND 
/A 
<10bf3170612fa8ae288a2f767c6f2d22480749f87ffaef88db9508f355b3
d621b9e09a8d1290afe57d05190debf7b19b92f6309b70e08d2409abdf50
3b6a0e5daa0043a6e298cadec0a7dbd5588f8ba0646e339db53e322e33db
33e9ac93d421016e880386d59c5f84e2c9dcb201c618c0d88390bc39b5b5
dcf9b13cb5b08470f0d83c168f6d7ea2244d1b> ND 
/B 
<10bf31706ea8189a0122a2c3dc80451ea987f9cc6dc7afa0c8f0365e6d8e
59a275ca593c5d46c9efa9ebe4192f8e472ac6f0efdf90f5d264a8b47fa4
3bcd031546c0586a98250a46abdef7d038322a132dd14df107aae195c311
99c6fa7558e3ee2379999d05cf38ad7f22726f37f2f0654cf65c11005a88
2feb945df6452201e1abb666d0244ac9dc622994ec7112e71f49ba0b5306
4d49384d5d74864da9fc7636c8b9964886a4103e2320a1f33cb3f7f7bcc7
104eb429cfd6cfab753b2e30fdbce693ce1dcc5a7fe31d75680753c52fe9
350712be59c0ee4a2780b638de9e8e44870622e76d3c23cdfd281b0b8177
c0aff3531220d18c12c91634c02401e01a11> ND 
/C 
<10bf31705d65c09013f5e74d02fbfce579927dc4371245d5279a0be7ec2d
bd3b1448f6fd9c53426e6238d321f77957395a071b4b8eae65710650ca99
5020550eaa4528d828ef4c47ac3d29b589dd7f1c7cfe44b10e3e8fa63e50
7c3e4eb74e257f81314f58ef9126142bc9d3a940c619a0d5450ffb6600e9
bb7f776713c2df8dd431070f31717d2477542aecd1539231d249a65da0e1
ee77958319b99e72488e0e9fa74f4d170e269189eb39aa1a> ND 
/D 
<10bf31706ea8518093a448f0413d9dd2503cf14562d62f8e03c59ef262c0
e81d3c5037d7a8fbf15657e5bea1080fe305ab71bf0048720c010cf41197
6f2c354776e6ac045fcbc3395f65891cbe4c7f0093e58d10b57eae23372e
4cc99d7f2f11c1f1c023288641813a3b8b65e70e4b5173920a628da83be4
7b524c38228036fccc15a820529e8626ae48a60adbbae5fd> ND 
/E 
<10bf31705245888107d641c65df0d045384b4474a865698169ff2c4c5759
f26e2217c59fcbe377198e20e38aaa44f075831908ff3584c8503712a3f9
da462024eae3426d516a8864b3756edb7e42923b77324ddcf4879e1b61b4
02502bf9f5c08a938a8b9111b299fb506f1aa6115b23bb6038633ef2c172
1c1c4fba6b5b7baae1d192358092d890074dc21b1d5f65994b78807f042e
8945e17dc9fd4baebebbadfc790575a38910eab682188d9cdb44060faa47
1dcf91df296595839280be99912fd6d9ac4594d1b8a3> ND 
/F 
<10bf317069b1b5630e42cd6c8ff2cb4d3f7bc188fb90c1fdbffc389a7b7c
590172825fc5f7c1632f0e00f7f24a69c85e73a086926561cd7597f366b9
c557c28ba97bd9e48588932b584d925e90f75351236f8dee991d8b2912e0
edc0500223be1a5bd4cd44c3c3de75aa12b7e63ed3a399ba00214a66fe95
b5d95b0096ce0321bb87083de3bbc29cfe8ef473870f448ffcd9f71c6888
fa2bf4ba82669c30c14d2655a8b69d82e43f233aafad0cc27d2d> ND 
/I 
<10bf31705600a7ed90307a9003ca62013c6a672423969cbfb09d38b977c3
3bb76a0a443b03ca15feffb7f47ead3efae89c4da09011014b3ef74dfcc4
49aa62038fec2b8087c3eb93eadcca82adeba753d37fb428848495514418
28d8a0f3ad99e43ca7d439d4d98a470d6617f8dd1388> ND 
/J 
<10bf31705245662c028a7d41142a9172cb3f39702bb2297ba0998cbe201f
77e89fe57d5ed956b84574b1620f88a55c2a51aa279e3fc9cf923c80361d
86a3551f2534c353d520d3bc14bc4d344677b575ead159bbdfc8aaeec820
ded505d06fe178d1ea8a0d44df29931f663cf743408db506a44468a17c12
4775c79567328c125a4e927e096a92c7da53c382783cd0826b0553dedd74
> ND 
/P 
<10bf31706ea9c5bc0db16a9d0fb9334b7aae45fa9562423ca0efcafbe577
696190382686f72544b1109cd9a28e6e2fb8c3e703e277558d9de53e9bd4
331eb7411fa27fc9fbf9488ff1a8e626acd2f355101bb86e40f636dd5a74
50c4f3ac4c3fce01d454db469da536ea46528530bc3e44fdc91176a1e591
1b2932205e6c0eac6f4d330f0230a163b5b30ecdc649a4ff6b024a9513ec
d5f934e2e3b5d7f24bd0170221950b8bb0ffa0c50e77c36e34adf2e847c9
adbff54bf77ef65d9afdb3878865> ND 
/S 
<10bf3170383eecc69ba25cd9f9f1a3f877f72d54ca249226fb09a99225d4
fa4a892ae0bf757b41a46aaf766816bb2e9c6c4e867aeb02a76d05e762b6
353837bdf52bbc0c70c14510f08ced31ac95e2c8b5dfdbf8f1dffd4709a0
760737961b7464d75e4dbf7323db187fa23f8213fd84f092b3c292e45093
4a017d49f1fa4f8d834c3fd0c5126c0c5c896c1a48c0653753c6f56c23b6
627010a4379bd3d96b26db0b3531098cdc23704e1f8e25a61651df0d8d02
8f68c8b7a7de4652566ef5c50305a3ec674a5be2d1bf9f76580a00788d85
ad3f4dc24f5adec7880bc3a7db38c71260e951f8778b0aff0ff2e97effe6
f0b2b33485e5f0401138cd3f9e066ed25ff05e7594ebdb0029f3d5> ND 
/T 
<10bf31705b0718f462bb36d02a655e51f04593b972dbe0892a4279b53c95
62dbd237266bc0cb4e5967f6d053e97e3cc8fe6477448edcd2c2ed40f6e6
056ef32aac1986bf84927c9fb1e2806a71f53c8604421852f835782fd7d8
0fdb45127c08fbe24f16e5af9ede981de72f75b4f62ef25f8b6075081fcf
> ND 
/W 
<10bf31706ae2d6d9dcbe8344511f08de4b9db5ac28c5c661efe6fa9e7439
4bc84ffd6c26e5c964d324deb8a2be71c781983509fc7315f13f2f452574
0c432ccfa783a50be1522758812e78dd12223bf37e37be9a2b9de70daa25
87e5ce0c31b1dc8fd1e7856f2a379806580606a20898e7fccb07255b76ec
aa9ee467ae0d074d61c529177c4e36ba95b4a421f36bad34035a2ac2c04f
12a2abb782248776bfa1511003ff806b7b426cc8c17627c2470813ba31ae
1a22b8e70c403eb278204ab3b8eb7faa1ccbb1cca5799cb23970fbbc0204
4ae4346b70147e2d44e9f3315b6168df8cda1ca5> ND 
/a 
<10bf31705d647142d5ee6b7c4c12c41164f05a89990635873917bf00c5a2
b1b299b84b64fad030fdefe54a736fd84981f1bdecf34c327a4087285dd7
ff9a128a9fff4f1e5e34e2c477e4543546f0e505eb84b8e6141c12199331
8a7bef58caa55697aff5d8bf4fe61eb63478ae931b5c51fe7be8aa76cee5
cf639a1d462398300117c6a9c09614a29dfc50b3c7ddbacc1c6e2f7accb0
35d51bb776dfa4f2180b5bfa695d4ee30d466764f5192b628fd7c4971313
cd38d55ff99cfe805727052d975c4756402eb9230dd87b777a603efe9c10
65e950375d54aa41ed1c701bfac764ae78b65834b8918a99ed1f017d5313
eb0950b1f45353f40dc633104ecc941e4bbbf8359d5ae9042ef0f4edfdb8
> ND 
/b 
<10bf31707b35db816a4355a1c9cd0401bf6033c55938246c8b69de26e575
c058903a4e9b57b68075848962a6cd3da069ec2730d8699e3ccf520befe1
1a090d11586ebd56effd705bd3a5ced6c4343ddaabfe70e422082141dc06
c695cc46ee2dde408c0760a4c361b784ab85994758cbad73179f314048f1
c5a0c06c0e0ad84ded3a7904f207403afdd3193bf093fb903dbdef2de225
7307e43f8ee047d711ed22adc155c93b72dbad1a68> ND 
/c 
<10bf31705fc10320935f517e088588bc677b6f6b1116d76a45fb5fc081aa
57ad08a2f19e4ebd5e7f2e40678b64d780ab49e945b6f1fcf8c1bf2edd40
201d9d025abf1aec5b1b3268a3f2a9365f1c6e4133cdb11264503de1434e
2553cdd7a1785e8aefca6abe49ef29279001bfee84321f1c29e0a5b47534
7f9b91833b42fbc209dedbbca6bb8dac3b6f01ececb32ee525fd2275d1f3
f94c46a2dc92d591> ND 
/d 
<10bf31705e925b80b46abd5c29fa2d468b9b5e4bad025ff66ae6421f2159
e410fae538e7f5a90755fc4aa0e1909acab87d2263fe2beb089d6b932597
f97955542fb23ee02ff075e0e2003bcd35a0dc8fcdeec3b05157e1f949f5
3c3859814e432358033eab4cbebb11cb313a2d4e01ccb1ec831eb024e2db
c3d579a8da35c14675626591ac2eca02995f016a332260c2ef3a214c5222
c09fc068d46227963e811f66f7af291aa81d7807ad4efe2098965b55e611
61084fbfd3c71fb1d7ddef324c18429080886cac73b35a7c57be7b> ND 
/e 
<10bf3170422f4b41885a9676842055648b7ac91c5a5b75b50afc4ad63a16
3403789c9c8ba615f8e38a9fce64aceadaad23d4e3dbfa43e075f8b5608d
92b54d863453827f92409bc9183300c8f2b193237fd39a67d028e7efccd3
224f7d467520735ecf6bf2ce731119ee6085c9e4a87b9d8af5aaaf671a24
b9d9d852fe88b0aa1a2fe53bd12da555ee08ba1ef1ee246f54193c816b> ND 
/f 
<10bf317040cdafcf4c85ea96770a161ac86c86b3da1de71c3c1d8d7b233d
d5c9149f810914ad38a97a185443c1c2440e78f30291f76f6d029b3ea2b6
66de02ac1bf19ed2dbfc70d08ae79c368cc19dd7ee6f7f891d2c83ea3a82
f4273ce61781b76966f5c7876c34e2b43a45523c4b42ee5dfa86ed1aad28
c225091d8e9e75f9abbae478bde45603b24282244c90d0bd1005e38693d2
05c915e9f7b21b731549211bb149d33709f6ba292435a821caec7d09122a
a85fb1> ND 
/g 
<10bf31705b0767a01e9193e4d997e718ba6351677893b73d138e3fe6ba14
fc659a3bcdee55e0cfe8324eeac72638d3bd305a7a0220257ff3808a1470
04dc5c3c9fcb344358fed8b5ae71f4f49bb62f7c38ae95fdb022e2f50d0f
f7edd042065f7148993d640d50d67f360ac97639f25c381784672dcecf1d
1627665bc46b98264545bb45b967dbd7f6dce2f63c1e6751d9e493efd546
e255705157ddc690cb167218c88d537fe6a759d15d23d8bf19975778954b
513e4f87de1d7e922f34c8ee289c3522056d92971a6692e2b85efc32e805
5f726b3e561153ede1bd48ac9ed5e0024936e813717a672f7da4b25e0f4c
fa800bfb48a1e7e6e175f9ef63c0a88c39518c20ae1f79f29fe16a404d8f
590228fa5880231b26e78848d12ee249c635fcfa1c6175dbe52bf4c85030
42acafcb20327b817e4efb88945955dd6d08889ea1fb3f310e8cb4172190
21cc423288f3c72f1f0ebcd75197d45530bfc75571856796dc6ba51fbdd3
ed9cec0c0d7ad50b11a85f88370b45b4a51e0293d38df958b8> ND 
/h 
<10bf3170638bba13892b6a5edf1363fbad8b95e15d8b1d61c9ff2e20460e
9fbee5ce56a3b804c731461fc79898dd9aa49a7578bd0636027b48157921
a917a207198baeee00a6aeca2924ff3a229448490e59b468fb8b3164c353
d9bc2653f19a1e5c4133f967037a72c7c8fbf885e7d2fe25db116b7c8e10
b3fd50a5bf16ce8ee83140eeca023c94dedee552fcf1a7935a31030ea899
3824e06eab9cf113ffc3161399601c0b8fff6a9768bb0205ffc7ac68a666
f3075641cdac00a867c63305b98c782f2fa25a94358084fd7f1a3e8a9aba
49e32a58f5abe91c09f7098b61c81b8653e474549ba40c7470f7bc> ND 
/i 
<10bf31705ac6fd959d25cdc7a9a3e9a496239b73578bd39bc85c0d669e22
6e691e09b0f32a97a0998434376a9ae157042bfa0f185e0e1869e77dcfcf
1555c1c8abd2efd30cc82f4c6c4ddf0f13b90a3c76a63f04f6deca3db44a
cc213f28bbe83758b298928dc74aa0666fbe3e63b2fac529d140e3b7039a
bc2bb148559fada7a9e275e919fc3f2cd6b953d39d41def61462d0b129f2
b21125b163636a99efd52186dc8496e41f> ND 
/k 
<10bf3170612e883674d2675aac39fa142a2f9de407f255952adbf70a8f61
dcc97f11c5b525f88e1dd0499bf87fea87e955adf630d83711a3925899c0
03b9f91dc3443000903cbe22625747190de827d6aed57c3f807366bbd6c6
3854786e273f1b9d2f49315171b285fa450532e1a996be3dfd2aafc74743
b4a57fabf2eddb1c25e9905cc57139486ad514add7eb942d1d1b791b6056
19d6f363ea6b92b2c94caf9a33a7be72eed5a355a7d76c1048097efb20dd
2f6c3a18d26def6109f03e7d30d5356121f15317baa59d193def17f7d470
1728dc814db541582ec9d0f98c682c14> ND 
/l 
<10bf31705b0817c8e08e579d70bd731872938fa19da6249b22a36add018f
2d71afb39a24cba2d5b131292eaf2ea6440cd481b67673b68d5de7db4045
53f0515df79be16519f0349ec3761dc09575b85d12a0ca2ef3e3cac5171f
27c0bb5b6c16bd708dadf6acc7da72304e> ND 
/m 
<10bf3170612f50a32a221f92c62df6f217e624d0a9df1e121860640913cc
49c4b2d35b710b10afd4f958933cf36f77fa2631f24cbc39b6fb55164082
193c40e902d50b4dd0e9f5ae2867995b45675b905195bdfcc9b26d09519c
1e89df3994ea78cedeba6852e8b9c507c215033124b55ca65aeabe76ef04
57fa09d46563663ca74b6f95faf692e9ff2805a952be9ce73108295db01a
1994fa03645166fdecc81234fb6ed970d2a939579f06453bc00a9eb193c6
89afa32196c9bbfd4f2e113a0f0a380ead1a15279b212e2d6f74df100cc7
60a6d17274c6477145b98511b0f38377fb67ec75a8941a93686e94c1719c
fcfef92ae4ed1bb42acc6930c9fd7d14d03f2c5cc57e8f007a194fcdc380
4777a58ea7912850daff4d6c2854942dfb30e0675160b33e854bf7fed66f
47144c25d4528d081f2387910709746bda8159065734924af6aea3b40f49
1ba747b6dede483a966ee00175b89acc0a77eed79d9fdb> ND 
/n 
<10bf3170638bba1389001ebc99bd428947467ee318fefc1fb124f3371d83
7e6e4fd04510bb88359fc2d65b2f295b6f18b7850f6ca41f0fd067e40bcc
1e6a5b41ca20f07f1559265c094e47681cd30c939ca836f577db4be36b05
95c3d60cd00f5b5495365e7e02e3400714839e79cc3816e739cdb0ba1b66
3f096ef3ea59642b52897d5ef4b5012d68776aa74244415b9e96a4f773a5
8085f9fe5bb74ace5b6860ca975ea43b7d0db4eefeddd777982336d72d05
c093ca194b7cd3478661a723994ed178a305b939140b4ac4b7ef4bb11e73
> ND 
/o 
<10bf31705fc1db5456c194eea6db4b28ba27bcfe06dfbaea808b4b94782b
858d11975b27223d0b6d7d91b178aa636f44bd6799b0a1e7bdfe3b2848e8
67d16652cf1e1d16eb11c8e931a8c3a5c20ce3e46e302745f5c6d7e5ce21
21e333fdaa150cd3191a1e4c670506e5c48803290df3192b44aa2b4f51a0
a9c983af94e8a18415a60616a6a395b3de67178db0d5045384581c136ad0
9005bf> ND 
/p 
<10bf31707a065bb2d4fcdbff26dc7fc389a2b8b370b59f91b1e9fc0bef0c
327c88198d7b546dfc608b13f7fcb8bc64cff7af2c18f699da39e53fbe37
ec097fa9ed32bc909b431f94a38ef46b90c907c345fc0194b5122ed9dbb4
520a43693133d37a01aa7d03cfea7c465d1f39c417c97cf35752895b647b
f6eeb9e1860d65028ce948e26109d628005c88929ab2810711af73457538
140a230647d1a4449996d6a087aeef7aa11197b1a7d6644dda8a28e570b9
025110e75308275897df1500b8ee5bed886eab146b5949fd3e0cb2a624f1
82a3907dabdc7d67145f1487b4fdd05c5af52274c2933d164387a1> ND 
/q 
<10bf31705e925b80bb44afdd80449a9019004483157f7a206da365a5b3f7
8e817f7d85ccb98decc0413cb1aad3badad1cc03a563c391c8aa6068d7e3
0e7f25d81543c3055a792149dafa6b421b59bb9a7c586f00d982f84e34a8
6eb81a6d2e5d0469a0475534487ff8a1de86976d09002e57cf1b9a5b9651
783da658816ced2d26e352c444560625e85828b2e4e4558755e30d1a05aa
ed4f42608d7e2eeedb01e0259b91825941bd1b5a38ce6f06522b93ba8b0d
c3140f68c73955f4b4bd495b40f7a8977e75e8b1c2519046a0f0449793> ND 
/r 
<10bf317063846c0d04467b4514eeaf5ad995f8d8d5368dfec5aee1c6b68a
3c0ec443b5151d573544f035f9c8d56a8c86eff8bc45b9cb7e9f7b4d2809
af6f18097fb347def46731e8a3ca8727e68580e7e5a82ffd67834895aa8a
7069ddf865d0109c1727ed7e1906ae399964f53305401f293656e81d3f7f
a520bb51b43e002474ba474471779fe9f889b94891c2fcd98f80aeea2c61
083a35a481b1750c54fd90563aed2fa403c1bb4ae1b4> ND 
/s 
<10bf31704e7c764f163406da7dbbaf9d43c65b8fb757ade7829da62aa468
ae4baad8607e81147b16ed99a46ab38e424e5512c18fc36490fe0e0e3c97
dcaa7fe80721b43eb7737e0a60636624d7c3bb6047489980efa6d2c4807d
50aa67e7cf84be79d7d15a6b706fddbf727c9c6d9b0a699629abe5e444e5
0457164832d1875637e41249b15e9b27dc3430ba6cf1c3ab4c74334bddfb
8eb29c16da6b1ed80d7e90ec9c4540b3b77731da9497fdb30cff9013413f
000a5d34ea717ad1e71f37aca4fc003a6dde001ac4d2b8ee38552cfaec10
a42d8a25> ND 
/t 
<10bf3170675b4d3401fff3ff5f765da1975e70428467ea281d5658a08302
13a3804f9a1319dd7c580c31580e87e258a447c36de3afa6295edab19ac4
8b72bc19bc7bbb33808d808ebf49d28b777c53d40fa69bc3ca85c2cf0fb2
3dcaafafc241c80c646145936a07b2aeeb3dbc48cf79b8029b13f4d41756
50d9e9> ND 
/u 
<10bf31707ec0b061a3e31ce6a8e02f67c79fc6fb9433b583752df0b97381
ced785f0788651d9110f4d168d6f4fb870b9f8634f66a1fe17ef5bb051c8
5b17a112a0ece57f7e85709c1e46ba1a1de6ef26a274c75bdde36925dd09
efae6e5faacef2f29e68904c9555df5e0f6550945360d079ca305237daa8
7397519a4b0aef19668718de15c20ef2e07af7217dbd27700833b73e8190
1c7d2aacb619fbf2f1396d79a94fea4ca18c65bd942fda84> ND 
/v 
<10bf3170612e88360faf380e328fa052d16002b3a6eb4d26fc61a8261d88
5d55beefaa23f749e4680928d2ec50b44ff8d74a2a42a0e615124d351c37
a9b6b3979ac1eedcff65bc4e156ed5711cac4c00ba96902c9956d3adb8e9
345080689b72e5082717e79b08e915301d3c209a4fac7e8f857cfb983000
d031a94c1a8ab5b2b0900013f2ae> ND 
/w 
<10bf3170638a0228cdcc4cd6455c35265f3b472ea1e128291ab8c91c671e
7bd658e474e8a0535d503ea2a6704bc9226df8b7fd4286af923f66233992
4a9bd89766cd1ad48ee99eac3f679bc5f41535050fefd334434033683a0c
453c86e866b1ef55892a380c8fcdccf1c4eac1b6e4f71a2a006a7f483456
13b3a00d36c64291144c8cc1dac83b7c06950c85f226495588d8cb0539f8
dacf025ed3c1593eb5f55ae6c66c3ae3939545fa200eff0116> ND 
/y 
<10bf3170638bba13f480e5fde8996045de127a9c4618a2d4aa7c3941a65b
655e0c9abd29436b155308878db9c977a5fa9d8aabf88f01b9ed200087ec
a512549272155995d5ba8a658d1b9bd6631ff76a4e668a0f712e1ffb6536
2645509bc9da53c94714c8c3d06e835b3de8a617493a3b48a5cf09eb51a1
f8e94701f8b707ec6cac19b3b46b6af22d6b57b2906df634fd967798ff79
41b6c0c1662b9e4850b0745567e166dc15afd8d264bb362629824a3196ac
305d1be65193e27d2fd4c922aa9edd149d8aaacac7819d1067e8f92d1467
837fe3> ND 
/z 
<10bf31706d7b034b88b69b8745d3549483d633ef0d22afe4edf1d8b16d7d
8fcfd4b207cd72a6b23080b93a267d6450021d8dda1b2a7d1048bb787cdd
e4b3370d59c6ba81363a10949ee62624babf5dce2b9ed804c69a546bc5cf
6ad525f5bb> ND 
/ellipsis 
<10bf317005a3205c8c1ade8b08220239c090e4bcc9980e1cca609a2d4d10
d9ac81cf840ef58d470313f2aa080d2edd9fcba3916373473b3af2ee5c86
d03e77ac42465a929f227203e9947419868ef6872ae4cf8eebf4d8959f6c
7a0d73c65112c717159e6b1143a38d56f38c0bfb6641b059c420c669b174
283ad5674adb76e78a4c9174f94c3257ef08af279dc17b93c98677c3acdb
61453c7ad9365f3a5a793919a4c97a3726887fe01492b780bd16b89f5a85
0d94b0a447171065596e> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AMNGBE+TimesNewRoman findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N80/AMNGBE+TimesNewRoman 1 TZ
%%BeginResource: font AMOAKN+Arial,Italic
11 dict begin
/FontName /AMOAKN+Arial,Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 956 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/J 
<10bf31705e925b80b480841c9c1eebf4e7cab3458ee2ccb086469af42f4b
bfc0e13d1c5eab3ff207e03a8aa1909053b661d38e81e1b6de8fe9830fd3
b14e97e26ef603346e16e7af41ceccdb833922d41f51e219ec1e04c8c98a
02d9cf1294f1a711899222a375a5> ND 
/P 
<10bf3170448a9e9b4f07b297744b05b6ed61cba8ea83e0513d8b44afd680
60d02b65b0432cce0e7e00989310e0fc4783855e8d2bc0969fdd92c17ad3
3426a50c47994ccc90096b37bceda47a84b3d9027039c98772c3745754ce
a902b09e76fed7509971d2707bdec4850507348f474d6dc2ca40415ad957
97472821948c0f086b6c43a389f126c30984bdaa6b088f> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AMOAKN+Arial,Italic findfont /Encoding get
dup 0 /.notdef put
dup 74 /J put
dup 80 /P put
pop
%%EndResource
[/N71/AMOAKN+Arial,Italic 1 TZ
%%BeginResource: font AMNNCP+Arial
11 dict begin
/FontName /AMNNCP+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/slash 
<10bf317079c7734b2b2d10870fa08bf22c5d2d2b831224fa01d492> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/equal 
<10bf317031d9337efec57cde6d0e2594940fb2f7d43f8231e7e886eb65b9
941cfa14b36a37f61b> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153ca9a91165
96e2ea405597ca7f292098a14c92b8766b957d29536d6a74922bce6efa67
d7fa67d47a8ae997e897ea42f1e923c09a3ad5b1aa2186622859ef03a213
f7c26727c45c24d289e1bf8fa6a719352242839e565e8af9cb5c48758232
20530e01b09cb28b590a86024fb341940ed5d19a7e036981d38ceef64334
a577636f4f149330a371e1> ND 
/E 
<10bf317028198094ce8cd275e305c79a7a258ddd928bd9dc896c51a549b4
869242612fc9caa06c2483d03d9996ef> ND 
/G 
<10bf317032094fc341dd3fe1e9917e7219e2faf83af778bdd7ec0c55098b
e0e9b7739ea63012a93f617db4a54ea175a87f3963b18d82408a4b4aca07
c62fb2e9535e5b6e8c7ae61eda2a1953530b7a1c20e1c613736eaa239c10
515a07f3aa0b6d64123373a1e5a99a624259a238e115671adf7333dd41a7
8ab39a78f4284786c4df0d20429167addc89fc078c7c417063dcfe0d52c4
81387bcf48cb4c7455f1384c6dd065c8e657f42b246b3a7cb37a89589130
dac20b879178be4ff3a9d7cba8> ND 
/H 
<10bf317029572e11ba08a126ba806446a0c9c3ab3c813945ebc6acc68365
3aed03753c654018a3b91d9f74de> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/J 
<10bf317054a23a350bd8657c97523c2449830f2addfaa5717667b59bcb2d
036471fab8ce4c5ebc99101e60b80084d709068021fa27df51efcf4e0c39
2f415e56722e844c86f08af512f65c2828294800fceec78aa058d6f73bf5
497ea1a0> ND 
/K 
<10bf317026ba62062704f9ba87c1ab1fc7730cdfdacc88df1e45004269f1
b43137c9251fe2841c5423281c9858682237f26a47da9c17460f> ND 
/L 
<10bf317026bbdb3a0b5fa193bb84a78137b0c1eca959bcd3e291fc955f> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/O 
<10bf317049853377ebc41c579b14b81e62dc18fcb981afe077cd458d5644
5d162ad01eefba418dc940d1d3586db0f88db59e5528595c3075286d478f
ea78855f3395d4738c829bc906481255e6921ecaae5330664e2d60658bdb
995713c78bf5f3c9aa2888eb787edfd0a898f063dfe41961d0136090fc22
3d36c7c34c3efd0ca3ba6ab8d9dee45f39f5c1354854a0db2f2d67ebe6d0
37578a0ff716ab77d6c101> ND 
/P 
<10bf31702a85d5ccd794b0f82fad1df586d5fbd89610cffce961ef0c01e8
0dd41794780f980f6fae77f9030913b26e9faf7c4997be350b070860e734
b58d1af4e1f6fdede1ce393d1a10ecb0df5eb5d5689fc4b0c8ea8e8ea551
86c9a594f8c2368e99f819874a733380254b54725709f6d7ae5e> ND 
/R 
<10bf31702819c97bfff21764697e50774ba74072e0daf25a84b5ab81ce67
f36424a8f4f31afdf4de9e5912f7a5ba0ce90948b990647285d2500d6d57
ef6e940fb321e739e33f71f0994fb0b96bf3e18815066ca201f1578cce2a
71a0a57bc87021521bfe1b691fde6e9063a575e47bf725cfd1c0afa40b0c
a839a6c28bfd0b7f0f7469b4cf16ee3c7a54706ea2da49ba1db858f3c370
3042b60d2181c6c1afb0bef5eb> ND 
/S 
<10bf31704ab370a8a6c235279ed6c2ccfc716fa1295d141c34dd24f95c73
82e11c724a74e86021432ff58ab0f9585559c2cc7a3fe0720eadda5eee3e
cb055c76e8d7f22cfddbcfbe4ee1a562282b307d86efef90d9a8c71c96ab
9543712fa6240508ea1f38536804c47dfcc21f777c873fc11b7e20f7a228
b35e8d75f100a7da6082feb065d087853344b8bf00df7291cc74173d8c17
2964ca635a4e981f1604dc10d454f452e70073d386bcbe3ed4c09e72aa02
e7eb1e382ccb2fe70e1e9e3084e7824b4261723bffe42f4fc72d36ddcdd9
e884d10e18a55004b6149a9b0c7ead4b42afa8906a80deea322a930f4d91
ac35a6e6186e5d082f09> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/V 
<10bf31707d937b42ca5aa917fb8735867898e23266ce63f299decbd88902
a58f50d327fa84a3893c0fe3af9d5b8d8ece1349c10cbf> ND 
/W 
<10bf317065f5a4c4e3c80d2d3c9a1fcad659c2e6c6d2c6d3837d757d8ce5
bc1499c5c524e9e63c31a8d844fdbf4be5dd703a7370e5d253c1c2978b20
65c127b3368a3f09d4a091f1db80d20fc735898bba004f1ee64395ffadec
3ecc114449263c21476fc24c8796d2> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0466fa484e27564
2ef62da05fc0e561425aa7c0cf759f2df2fed9f5cab4e563d9d485ca6e49
6a23023cc7d5336a38ed163f6d25eac0416c891913363ad8aab5312feed7
de0b0bbcc0db8b66958d96174480f5040af2cfb1590a9410022fc6398cb1
d4435f6325a11aad4c77347983eb4748b4ada02263a3> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19b91e9f126
e6f5aabcb4381bf8bfee294b80bae1d888f1314da01fbe02> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/ellipsis 
<10bf317005ae4251cd21abe49da2ed2a9dd884bb56dbc7458ad71cf5a1d6
2dfe225499a0bcd86f7ad5ac4a6a41> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/AMNNCP+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 61 /equal put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N74/AMNNCP+Arial 1 TZ
/N68 [/DeviceRGB] /ColorSpace defineRes pop

q
n
36 756 540 -720 re
eoclip
n
false setSA
n
36 756 540 -720 re
1 1 1 setrgbcolor
f
Q
0.75 w
10 M
1 j
1 J
[] 0 d
false setSA
n
373.38 148.08 m
373.38 119.28 394.86 96 421.32 96 c
447.78 96 469.26 119.28 469.26 148.08 c
469.26 176.82 447.78 200.1 421.32 200.1 c
394.86 200.1 373.38 176.82 373.38 148.08 c
h
0.0039978 0.0039978 0.0039978 setrgbcolor
S
0 0 0  setrgbcolor
401.28 129.96 m
/N74 [0 15 -15 0 0 0] Tf
(J) show
(ob 1)
[8.33702 8.33702 4.20296 8.33702 ] pdfys
n
373.38 271.2 m
373.38 242.46 394.86 219.12 421.32 219.12 c
447.78 219.12 469.26 242.46 469.26 271.2 c
469.26 299.94 447.78 323.22 421.32 323.22 c
394.86 323.22 373.38 299.94 373.38 271.2 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
401.28 253.02 m
(J) show
(ob 2)
[8.33702 8.33702 4.20296 8.33702 ] pdfys
n
373.38 649.92 m
373.38 621.18 394.86 597.9 421.32 597.9 c
447.78 597.9 469.26 621.18 469.26 649.92 c
469.26 678.72 447.78 702 421.32 702 c
394.86 702 373.38 678.72 373.38 649.92 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
401.28 632.28 m
(J) show
(ob)
[8.33702 8.33702 ] pdfys
401.28 660.6 m
/N71 [0 15 -15 0 0 0] Tf
(J) show
n
313.5 409.92 m
313.5 370.5 l
283.26 334.38 l
155.58 334.38 l
155.58 487.5 l
313.5 487.5 l
313.5 409.92 l
0.501999 0.501999 0.501999  setrgbcolor
eofill
n
283.26 334.38 m
283.26 370.5 l
313.5 370.5 l
283.26 334.38 l
eofill
n
307.5 403.92 m
307.5 364.5 l
277.26 328.38 l
149.58 328.38 l
149.58 481.5 l
307.5 481.5 l
307.5 403.92 l
0.847 0.921997 0.701996  setrgbcolor
eofill
n
277.26 328.38 m
277.26 364.5 l
307.5 364.5 l
277.26 328.38 l
eofill
n
307.5 403.92 m
307.5 364.5 l
277.26 328.38 l
149.58 328.38 l
149.58 481.5 l
307.5 481.5 l
307.5 403.92 l
h
277.26 328.38 m
277.26 364.5 l
307.5 364.5 l
277.26 328.38 l
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
427.14 346.5 m
/N74 [0 21 -21 0 0 0] Tf
(\205) show
426.659 554.219 m
(\205) show
226.38 442.5 m
/N80 [0 9 -9 0 0 0] Tf
(\205) show
226.38 394.5 m
(\205) show
226.38 352.5 m
(\205) show
245.88 444.72 m
(6) show
245.88 396.721 m
(8) show
245.88 354.961 m
/N77 [0 9 -9 0 0 0] Tf
(J) show
208.501 444.72 m
/N80 [0 9 -9 0 0 0] Tf
(4) show
208.501 396.721 m
(4) show
208.501 354.72 m
(2) show
189 444.72 m
(6) show
189 394.5 m
(10) show
189 354.72 m
(1) show
169.5 428.7 m
(Allotment)
[6.50871 2.51285 2.51285 4.51085 2.51285 6.95885 4.00671 4.51085 2.51285 ] pdfys
169.5 387.24 m
(D) show
(e)
[3.99765 ] pdfys
(s) show
(i)
[2.50378 ] pdfys
(r) show
(e) show
169.5 344.88 m
(Job ID)
[3.49818 4.49725 4.49725 2.27966 2.99419 6.49512 ] pdfys
2.25 w
2 J
n
157.26 336 m
157.26 474 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
1 w
0 J
n
176.76 336 m
176.76 474 l
196.26 336 m
196.26 474 l
214.14 336 m
214.14 474 l
S
2.25 w
2 J
n
253.14 336 m
253.14 474 l
157.26 336 m
253.14 336 l
S
1 w
0 J
n
157.26 378 m
253.14 378 l
157.26 420 m
253.14 420 l
S
2.25 w
2 J
n
157.26 474 m
253.14 474 l
S
1 w
0 J
n
233.64 336 m
233.64 474 l
S
n
414.48 166.5 27.24 -36 re
0.917999 0.917999 0.917999  setrgbcolor
f
0.75 w
8 M
0 j
1 J
n
414.48 130.5 27.24 36 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
434.16 139.14 m
/N74 [0 16.02 -16.02 0 0 0] Tf
(JS)
[7.97945 10.6547 ] pdfys
n
414.48 288 27.24 -36 re
0.917999 0.917999 0.917999  setrgbcolor
f
n
414.48 252 27.24 36 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
434.16 260.64 m
(JS)
[7.97945 10.6547 ] pdfys
n
414.48 667.5 27.24 -36 re
0.917999 0.917999 0.917999  setrgbcolor
f
n
414.48 631.5 27.24 36 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
434.16 640.14 m
(JS)
[7.97945 10.6547 ] pdfys
n
372.96 149.76 m
190.38 344.1 l
190.26 344.22 190.26 344.46 190.44 344.64 c
190.56 344.76 190.8 344.76 190.92 344.64 c
373.5 150.24 l
373.68 150.12 373.68 149.88 373.5 149.7 c
373.38 149.58 373.14 149.58 372.96 149.76 c
h
189.18 341.58 m
187.26 348 l
193.56 345.66 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
373.08 269.64 m
209.64 345.54 l
209.46 345.66 209.34 345.84 209.46 346.08 c
209.52 346.26 209.76 346.32 209.94 346.26 c
373.38 270.36 l
373.62 270.24 373.68 270 373.56 269.82 c
373.5 269.64 373.26 269.58 373.08 269.64 c
h
209.4 342.78 m
205.26 348 l
211.98 348.18 l
f
n
373.56 647.76 m
244.44 465.84 l
244.32 465.66 244.08 465.66 243.9 465.78 c
243.78 465.9 243.72 466.14 243.84 466.32 c
372.96 648.24 l
373.08 648.36 373.32 648.42 373.44 648.3 c
373.62 648.18 373.68 647.94 373.56 647.76 c
h
247.14 465.18 m
241.26 462 l
242.28 468.6 l
f
0 0 0  setrgbcolor
143.16 331.98 m
/N74 [0 13.98 -13.98 0 0 0] Tf
(G)
[10.8807 ] pdfys
(lobal) show
( A)
[3.87257 9.32881 ] pdfys
(llo) show
(c)
[6.99426 ] pdfys
(a) show
(ti)
[3.8907 3.05169 ] pdfys
(on) show
( Ta)
[3.87257 8.46206 7.7352 ] pdfys
(ble) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 26946 a Fn(Figure)539 b(6-1:)667 b
Fm(Ov)-34 b(erview)467 b(of)h(the)h(Cilk-AP)e(system.)731
b(Jobs)469 b(record)e(their)h(pro)34 b(cessor)468 b(desires)f(in)h(the)
2000 28451 y(GA)-101 b(T)405 b(and)g(recompute)f(the)g(allo)34
b(cation)404 b(for)g(the)h(en)-34 b(tire)404 b(system)g(if)g(necessary)
-101 b(.)3951 33601 y Fy(W)-108 b(e)515 b(end)g(b)-36
b(y)515 b(discussing)g(our)g(strategy)g(for)h(tuning)f(the)f
(parameters)h(used)g(in)g(the)f(ab)36 b(o)-36 b(v)g(e)2000
35206 y(functions.)1082 b(In)602 b(the)f(course)h(of)g(our)g
(discussion,)644 b(w)-36 b(e)601 b(presen)-36 b(t)601
b(the)g(p)36 b(olicy)603 b(decisions)f(of)h(the)2000
36811 y(Cilk-AP)401 b(system)f(in)f(resp)36 b(onse)400
b(to)f(the)g(questions)h(and)g(issues)f(raised)h(in)g(Sections)f(4.2)i
(and)e(5.2)2000 38417 y(\(regarding)434 b(the)f(use)g(of)h(algorithms)g
(WSAP)g(and)f(DP)h(in)f(practice,)h(resp)36 b(ectiv)-36
b(ely\).)2000 42250 y Fx(Estimating)599 b(a)f(Job's)g(Pro)50
b(cessor)599 b(Desire)2000 44713 y Fy(The)404 b(circles)i(in)e(Figure)g
(6-1)h(represen)-36 b(t)403 b(m)-36 b(ultiple,)410 b(concurren)-36
b(t,)410 b(adaptiv)-36 b(ely)405 b(parallel)h(jobs)e(run-)2000
46319 y(ning)413 b(in)g(the)f(Cilk-AP)i(system.)572 b(Eac)-36
b(h)413 b(job)g(has)g(an)g(asso)36 b(ciated)414 b(job)f(sc)-36
b(heduler)412 b(that)h(sc)-36 b(hedules)2000 47924 y(the)619
b(job's)g(computation)g(using)g(algorithm)h(WSAP)-108
b(.)619 b(In)g(accordance)g(with)g(the)g(p)36 b(olicies)620
b(of)2000 49529 y(WSAP)456 b(\(Section)g(4.2\),)463 b(the)456
b(job)g(sc)-36 b(heduler)455 b(is)i(also)g(resp)36 b(onsible)456
b(for)h(estimating)g(the)e(pro)36 b(ces-)2000 51134 y(sor)397
b(desire)g(of)g(the)f(job)i(and)e(rep)36 b(orting)396
b(this)h(desire)g(to)g(the)f(GA)-108 b(T;)396 b(in)h(other)g(w)-36
b(ords,)404 b(job)397 b(desires)2000 52739 y(are)379
b(estimated)f(in)g(the)g(second)h(lev)-36 b(el)379 b(of)g(sc)-36
b(heduling.)560 b(Let)378 b Fu(d)31883 52938 y Fr(j)32748
52739 y Fy(b)36 b(e)378 b(the)g(curren)-36 b(t)377 b(pro)36
b(cessor)379 b(desire)2000 54344 y(of)e(job)g Fu(j)451
b Fy(and)376 b(let)g Fu(p)11506 54543 y Fr(j)12369 54344
y Fy(b)36 b(e)377 b(the)e(n)-36 b(um)g(b)36 b(er)375
b(of)i(pro)36 b(cessors)377 b(curren)-36 b(tly)376 b(b)36
b(eing)376 b(used)g(b)-36 b(y)376 b Fu(j)451 b Fy(\(the)376
b(distinc-)2000 55949 y(tion)487 b(b)36 b(et)-36 b(w)g(een)486
b Fu(p)10455 56148 y Fr(j)11428 55949 y Fy(and)g Fu(a)14693
56148 y Fr(j)15180 55949 y Fy(,)500 b(the)486 b(job's)i(allotmen)-36
b(t,)500 b(is)487 b(explained)g(in)g(Section)f(5.2\).)738
b(W)-108 b(e)487 b(de\257ne)2000 57554 y(the)534 b Fo(e\261ciency)674
b Fy(of)536 b Fu(j)609 b Fy(to)534 b(b)36 b(e)535 b(the)f(ratio)h(of)g
(pro)36 b(cessors)535 b(that)f(are)g(busy)g(w)-36 b(orking)536
b(to)f Fu(p)46761 57753 y Fr(j)47247 57554 y Fy(;)586
b(the)2000 59159 y Fo(ine\261ciency)631 b Fy(of)491 b
Fu(j)75 b Fy(,)504 b(therefore,)h(is)490 b(the)g(ratio)h(of)f(pro)36
b(cessors)491 b(that)f(are)g(busy)g(stealing)h(to)f Fu(p)49152
59358 y Fr(j)49639 59159 y Fy(.)2000 60764 y(The)i(desire-estimation)g
(pro)36 b(cess)492 b(o)36 b(ccurs)492 b(as)g(follo)-36
b(ws:)697 b(at)492 b(an)-36 b(y)492 b(giv)-36 b(en)493
b(time)f(in)f Fu(j)75 b Fy('s)492 b(execution,)2000 62369
y(eac)-36 b(h)494 b(of)h(the)e Fu(p)9482 62568 y Fr(j)10463
62369 y Fy(pro)36 b(cessors)494 b(k)-36 b(eeps)494 b(trac)-36
b(k)494 b(of)h(the)f(n)-36 b(um)g(b)36 b(er)492 b(of)j(purely)e
(unsuccessful)h(steal)g(at-)2000 63975 y(tempts)346 b(and)h(the)g(n)-36
b(um)g(b)36 b(er)346 b(of)i(total)f(steal)h(attempts)f(that)g(tak)-36
b(e)347 b(place)h(on)f(the)g(pro)36 b(cessor)347 b(\(recall)2000
65580 y(from)474 b(Section)f(4.2)i(that)e(purely)g(unsuccessful)g
(steal)h(attempts)e(are)i(a)g(b)36 b(etter)473 b(measure)g(of)h(an)2000
67185 y(allo)36 b(cation's)531 b(ine\261ciency)e(than)g(partly)g
(unsuccessful)f(steal)h(attempts\).)864 b(Ev)-36 b(ery)547
b Fp(est)p 46173 67185 411 45 v 491 w(cycle)2000 68790
y Fy(seconds,)600 b(the)565 b(job)i(sc)-36 b(heduler)566
b(uses)g(the)f(steal-attempt)h(statistics)h(from)g(eac)-36
b(h)566 b(pro)36 b(cessor)567 b(to)2000 70395 y(appro)-36
b(ximate)514 b(the)e(o)-36 b(v)g(erall)515 b(ine\261ciency)e(of)h
Fu(j)75 b Fy(,)533 b(and)513 b(then)f(uses)h(this)g(appro)-36
b(ximated)513 b(v)-72 b(alue)514 b(to)2000 72000 y(estimate)541
b Fu(d)7993 72199 y Fr(j)8480 72000 y Fy(.)900 b(More)541
b(sp)36 b(eci\257cally)-108 b(,)569 b(the)540 b(job)h(sc)-36
b(heduler)540 b(p)36 b(erforms)541 b(the)g(follo)-36
b(wing)543 b(op)36 b(erations)25350 75321 y(44)p eop
end
%%Page: 45 45
TeXDict begin 45 44 bop 2000 1328 a Fy(ev)-36 b(ery)452
b Fp(est)p 7584 1328 411 45 v 491 w(cycle)431 b Fy(seconds:)3590
3512 y(1.)651 b(Calculate)382 b(the)f(ratio)h(of)h(purely)e
(unsuccessful)g(steal)h(attempts)f(to)g(total)i(steal)f(attempts)5252
5117 y(across)434 b(all)g Fu(p)11555 5316 y Fr(j)12476
5117 y Fy(pro)36 b(cessors,)434 b(using)5821 10679 y
Fp(PUS)p 7955 10679 V 491 w(ratio)366 b Fy(=)13664 8784
y Fk(P)15066 9058 y Fr(p)15540 9193 y Fi(j)15066 10120
y Fr(i)p Ft(=0)16865 9780 y Fy(no.)579 b(of)434 b(purely)f
(unsuccessful)g(steal)h(attempts)f(on)h(pro)36 b(cessor)434
b Fu(i)p 13664 10373 34840 54 v 17793 10639 a Fk(P)19195
10914 y Fr(p)19669 11049 y Fi(j)19195 11976 y Fr(i)p
Ft(=0)20995 11635 y Fy(no.)578 b(of)434 b(total)h(steal)f(attempts)f
(on)g(pro)36 b(cessor)434 b Fu(i)49070 10679 y(:)5252
14853 y Fy(Reset)452 b(the)f(steal-attempt)h(coun)-36
b(ters)451 b(on)h(all)h Fu(p)28636 15052 y Fr(j)29574
14853 y Fy(pro)36 b(cessors)452 b(to)h(start)e(the)h(next)g(in)-36
b(terv)-72 b(al)5252 16459 y(of)434 b(coun)-36 b(ting.)3590
18259 y(2.)651 b(If)352 b Fp(PUS)p 8604 18259 411 45
v 490 w(ratio)367 b Fs(\267)i Fy(1)127 b Fs(\241)g Fu(\264)48
b Fy(,)369 b(where)351 b(0)369 b Fu(<)g(\264)416 b Fs(\267)369
b Fy(1)352 b(is)g(the)f(target)g(e\261ciency)-108 b(,)368
b(set)352 b Fu(d)42638 18458 y Fr(j)43493 18259 y Fy(=)369
b(\(1)p Fu(=\264)48 b Fy(\))127 b Fs(\242)g Fu(p)49152
18458 y Fr(j)49639 18259 y Fy(;)5252 19864 y(otherwise,)434
b(set)f Fu(d)14107 20063 y Fr(j)14963 19864 y Fy(=)369
b Fs(d)p Fy(\(\(1)295 b Fs(\241)h Fp(PUS)p 22354 19864
V 490 w(ratio)n Fy(\))p Fu(=\264)48 b Fy(\))295 b Fs(\242)g
Fu(p)30144 20063 y Fr(j)30631 19864 y Fs(e)p Fy(.)3590
21664 y(3.)651 b(Replace)420 b(the)g(old)g(v)-72 b(alue)421
b(of)g Fu(d)19969 21863 y Fr(j)20876 21664 y Fy(stored)f(in)g(the)g(GA)
-108 b(T)419 b(with)h(the)g(new)g(v)-72 b(alue)421 b(computed)e(in)5252
23269 y(step)433 b(2.)3951 25452 y(Since)500 b(the)g(GA)-108
b(T)499 b(is)i(stored)f(in)g(shared)g(memory)-108 b(,)517
b(the)500 b(job)h(sc)-36 b(heduler)499 b(is)i(able)f(to)h(directly)2000
27057 y(up)36 b(date)555 b(the)g(ro)-36 b(w)556 b(corresp)36
b(onding)555 b(to)h Fu(j)630 b Fy(in)555 b(step)g(3;)618
b(other)555 b(job)h(sc)-36 b(hedulers)554 b(p)36 b(erform)556
b(similar)2000 28663 y(up)36 b(dates,)453 b(as)d(illustrated)g(b)-36
b(y)450 b(the)f(arro)-36 b(ws)450 b(in)g(Figure)f(6-1.)627
b(The)450 b(in)-36 b(terv)-72 b(al)450 b(at)g(whic)-36
b(h)449 b(the)g(ab)36 b(o)-36 b(v)g(e)2000 30268 y(op)36
b(erations)519 b(o)36 b(ccur,)539 b Fp(est)p 14520 30268
V 491 w(cycle)p Fy(,)f(is)518 b(a)h(tunable)f(parameter)g(that)g
(balances)g(the)g(o)-36 b(v)g(erhead)518 b(of)2000 31873
y(the)361 b(desire-estimation)h(pro)36 b(cess)362 b(with)g(its)g(resp)
36 b(onsiv)-36 b(eness)362 b(to)f(c)-36 b(hanges)362
b(in)g(a)g(job's)g(parallelism.)2000 33478 y(The)527
b(v)-72 b(alue)528 b(of)620 b Fp(est)p 12022 33478 V
491 w(cycle)525 b Fy(is)i(set)g(b)-36 b(y)527 b(the)g(job)g(sc)-36
b(heduler)526 b(and)h(ma)-36 b(y)527 b(v)-72 b(ary)528
b(from)g(job)f(to)g(job.)2000 35083 y(The)458 b(parameter)g
Fu(\264)506 b Fy(in)458 b(step)f(2,)465 b(0)411 b Fu(<)g(\264)458
b Fs(\267)411 b Fy(1,)465 b(is)458 b(another)g(tunable)g(parameter)g
(that)f(represen)-36 b(ts)2000 36688 y(the)442 b(target)g(e\261ciency)h
(of)g(job)g Fu(j)75 b Fy(.)605 b(The)442 b(v)-72 b(alue)443
b(of)g Fu(\264)490 b Fy(can)442 b(b)36 b(e)442 b(set)g(b)-36
b(y)443 b(either)f(the)f(user)h(or)h(the)f(job)2000 38293
y(sc)-36 b(heduler)388 b(and)h(can)g(also)h(v)-72 b(ary)390
b(from)f(job)h(to)f(job.)564 b(W)-108 b(e)389 b(discuss)g(the)f(tuning)
h(of)h(the)e(parameters)2000 39898 y Fp(est)p 4134 39898
V 491 w(cycle)431 b Fy(and)i Fu(\264)481 b Fy(at)434
b(the)f(end)g(of)h(Section)f(6.1.)3951 41503 y(Our)488
b(de\257nition)f(of)j(e\261ciency)f(for)g(adaptiv)-36
b(ely)490 b(parallel)f(w)-36 b(ork-stealing)490 b(jobs)f(is)g(based)f
(on)2000 43108 y(the)455 b(premise)f(that)h(w)-36 b(orking)456
b(pro)36 b(cessors)456 b(are)f(e\261cien)-36 b(t)455
b(b)36 b(ecause)455 b(they)g(mak)-36 b(e)455 b(progress)h(on)f(the)2000
44713 y(total)516 b(w)-36 b(ork)516 b(\()p Fu(T)9718
44912 y Ft(1)10244 44713 y Fy(\))f(of)h(a)g(job's)g(computation.)824
b(Stealing)515 b(pro)36 b(cessors,)537 b(on)515 b(the)g(other)g(hand,)
535 b(do)2000 46319 y(not)412 b(con)-36 b(tribute)410
b(to)i Fu(T)12849 46518 y Ft(1)13376 46319 y Fy(,)k(and)411
b(are)i(therefore)e(ine\261cien)-36 b(t.)571 b(By)413
b(setting)e(a)i(target)f(e\261ciency)g Fu(\264)459 b
Fy(for)2000 47924 y(job)480 b Fu(j)75 b Fy(,)491 b(w)-36
b(e)479 b(e\256ectiv)-36 b(ely)481 b(set)e(a)h(limit)g(on)f(the)g
(fraction)h(of)g(pro)36 b(cessors)479 b(that)g(can)h(b)36
b(e)479 b(stealing)h(at)2000 49529 y(an)-36 b(y)370 b(giv)-36
b(en)371 b(time,)383 b(or)370 b(the)g(ine\261ciency)g(of)h
Fu(j)75 b Fy(.)557 b(Since)370 b(1)165 b Fs(\241)g Fu(\264)419
b Fy(represen)-36 b(ts)368 b(the)i(target)g(v)-72 b(alue)371
b(for)f(this)2000 51134 y(fraction,)508 b(it)493 b(also)g(represen)-36
b(ts)492 b(the)g(probabilit)-36 b(y)492 b(that)g(a)h(victim)h(pro)36
b(cessor)492 b(c)-36 b(hosen)492 b(uniformly)2000 52739
y(at)h(random)f(during)f(a)i(steal)g(attempt)f(is)h(also)h(busy)e
(stealing.)756 b(Th)-36 b(us,)507 b(w)-36 b(e)493 b(can)f(use)g(the)g
(ratio)2000 54344 y(of)565 b(purely)g(unsuccessful)f(steal)h(attempts)f
(\(those)h(in)f(whic)-36 b(h)565 b(the)f(victim)h(pro)36
b(cessor)565 b(is)g(busy)2000 55949 y(stealing\))412
b(to)f(total)h(steal)g(attempts)e(in)h(a)h(giv)-36 b(en)412
b(in)-36 b(terv)-72 b(al)411 b(to)g(appro)-36 b(ximate)412
b(the)f(ine\261ciency)g(of)2000 57554 y Fu(j)k Fy(during)340
b(that)f(in)-36 b(terv)-72 b(al.)548 b(\(This)340 b(v)-72
b(alue)341 b(is)g(calculated)f(in)g(step)g(1)h(as)f Fp(PUS)p
37499 57554 V 491 w(ratio)p Fy(.\))545 b(If)433 b Fp(PUS)p
46173 57554 V 491 w(ratio)2000 59159 y Fy(is)407 b(less)f(than)g(the)g
(target)g(ine\261ciency)h(\(1)239 b Fs(\241)h Fu(\264)48
b Fy(\),)411 b(then)406 b(w)-36 b(e)406 b(treat)g(the)g(ratio)h(as)f
(e\256ectiv)-36 b(ely)408 b(0)e(and)2000 60764 y(set)582
b Fu(j)75 b Fy('s)582 b(desire)f(to)h(\(1)p Fu(=\264)630
b Fy(times)582 b(its)f(curren)-36 b(t)581 b(pro)36 b(cessor)582
b(usage,)619 b(or)582 b(the)f(usage)h(at)g(whic)-36 b(h)582
b Fu(j)75 b Fy('s)2000 62369 y(e\261ciency)421 b(drops)e(to)h
Fu(\264)468 b Fy(\(and)419 b(its)h(ine\261ciency)h(rises)f(to)g(1)268
b Fs(\241)g Fu(\264)48 b Fy(\))419 b(if)i Fu(j)495 b
Fy(is)420 b(100\045)h(e\261cien)-36 b(t)420 b(to)g(b)36
b(egin)2000 63975 y(with.)752 b(If)492 b(the)f(ine\261ciency)h(is)f
(greater)h(than)f(1)334 b Fs(\241)h Fu(\264)48 b Fy(,)506
b(then)490 b(w)-36 b(e)492 b(set)f Fu(j)75 b Fy('s)492
b(desire)f(to)g(the)g(fraction)2000 65580 y(of)409 b(the)e(curren)-36
b(t)406 b(usage)i(that)g(matc)-36 b(hes)407 b(the)g(target)h
(ine\261ciency)-108 b(,)414 b(whic)-36 b(h)407 b(w)-36
b(e)408 b(deriv)-36 b(e)408 b(in)g(the)f(next)2000 67185
y(paragraph.)3951 68790 y(The)527 b(reason)g(w)-36 b(e)527
b(o)-36 b(v)g(erestimate)527 b Fu(j)75 b Fy('s)527 b(desire)g(when)g
(its)g(curren)-36 b(t)525 b(ine\261ciency)i(drops)f(b)36
b(elo)-36 b(w)2000 70395 y(1)37 b Fs(\241)g Fu(\264)355
b Fy(is)308 b(to)f(allo)-36 b(w)309 b(us)e(to)g(proactiv)-36
b(ely)309 b(explore)f(the)f(future)f(parallelism)j(of)f
Fu(j)75 b Fy(,)332 b(in)307 b(accordance)h(with)2000
72000 y(our)429 b(p)36 b(olicies)431 b(from)e(Section)g(4.2.)578
b(By)430 b(appro)-36 b(ximating)430 b Fu(j)75 b Fy('s)430
b(ine\261ciency)f(to)h(0,)h(w)-36 b(e)429 b(temp)36 b(orarily)25350
75321 y(45)p eop end
%%Page: 46 46
TeXDict begin 46 45 bop 2000 1328 a Fy(o)-36 b(v)g(erstate)513
b(its)f(pro)36 b(cessor)513 b(desire)f(in)g(the)g(hop)36
b(es)512 b(of)h(\257nding)f(more)g(w)-36 b(ork)513 b(and)f(exploiting)i
(an)-36 b(y)2000 2933 y(a)g(v)-72 b(ailable)492 b(parallelism)f(so)36
b(oner.)749 b(While)490 b(this)g(b)36 b(o)g(ost)491 b(in)f(pro)36
b(cessors)490 b(temp)36 b(orarily)491 b(reduces)f Fu(j)75
b Fy('s)2000 4539 y(e\261ciency)501 b(b)36 b(elo)-36
b(w)502 b Fu(\264)48 b Fy(,)517 b(the)500 b(hop)36 b(e)500
b(is)h(that)f(a)h(su\261cien)-36 b(t)500 b(n)-36 b(um)g(b)36
b(er)499 b(of)j(the)e(added)g(pro)36 b(cessors)501 b(are)2000
6144 y(able)460 b(to)f(\257nd)f(w)-36 b(ork)461 b(b)36
b(efore)459 b(the)g(next)h(in)-36 b(terv)-72 b(al,)466
b(th)-36 b(us)458 b(increasing)i(the)f(o)-36 b(v)g(erall)461
b(e\261ciency)f(of)g Fu(j)75 b Fy(.)2000 7749 y(Also,)566
b(there)539 b(are)g(t)-36 b(w)g(o)539 b(additional)g(safeguards)h(that)
e(prev)-36 b(en)g(t)538 b Fu(j)75 b Fy('s)539 b(ine\261ciency)h(from)f
(greatly)2000 9354 y(exceeding)497 b(1)338 b Fs(\241)g
Fu(\264)544 b Fy(during)495 b(this)h(p)36 b(erio)g(d.)766
b(The)496 b(\257rst)g(safeguard)h(is)f(that)g(w)-36 b(e)496
b(only)h(increase)g Fu(j)75 b Fy('s)2000 10959 y(desire)479
b(b)-36 b(y)479 b(a)h(factor)g(of)g(\(1)p Fu(=\264)48
b Fy(\))479 b(o)-36 b(v)g(er)479 b(its)h(curren)-36 b(t)477
b(usage,)492 b(so)479 b(the)g(resulting)g(e\261ciency)h(is)f(lo)-36
b(w)g(er)2000 12564 y(b)36 b(ounded)397 b(\(at)h(least)h(initially\))g
(b)-36 b(y)398 b(\(1)p Fu(=\264)21885 12082 y Ft(2)22411
12564 y Fy(\);)410 b(if)399 b Fu(\264)416 b(>)369 b Fy(0)p
Fu(:)p Fy(5,)406 b(then)398 b(the)f(e\261ciency)i(drops)f(b)-36
b(y)398 b(at)g(most)2000 14169 y(a)g(factor)h(of)f(1)p
Fu(=)p Fy(2.)568 b(The)397 b(second)h(safeguard)g(is)g(that)g(w)-36
b(e)398 b(only)g(increase)g Fu(j)75 b Fy('s)398 b(pro)36
b(cessor)398 b(desire)g Fu(d)49152 14368 y Fr(j)49639
14169 y Fy(,)2000 15774 y(and)504 b(not)h(its)g(actual)h(allotmen)-36
b(t)505 b Fu(a)19414 15973 y Fr(j)19901 15774 y Fy(.)792
b(The)505 b(allotmen)-36 b(t)505 b(of)h Fu(j)580 b Fy(is)505
b(determined)f(b)-36 b(y)505 b(the)f(\257rst-lev)-36
b(el)2000 17379 y(sc)g(heduler)528 b(of)i(Cilk-AP)-108
b(,)530 b(and)f(is)g(guaran)-36 b(teed)528 b(nev)-36
b(er)529 b(to)h(exceed)f(the)g(fair)h(share)f(of)g Fu(j)75
b Fy(.)865 b(Th)-36 b(us,)2000 18984 y(there)440 b(is)g(no)g(risk)h
(that)f(a)g(large)h(desire)f(rep)36 b(orted)440 b(b)-36
b(y)440 b(the)f(job)i(sc)-36 b(heduler)439 b(can)h(monop)36
b(olize)442 b(the)2000 20589 y(a)-36 b(v)-72 b(ailable)435
b(pro)36 b(cessors)434 b(in)f(the)g(system)h(or)g(detract)f(from)h(the)
f(fair)i(shares)e(of)h(other)g(jobs.)3951 22233 y(If,)521
b(despite)503 b(these)g(t)-36 b(w)g(o)503 b(safeguards,)522
b(the)502 b(pro)36 b(cessors)504 b(of)g Fu(j)578 b Fy(are)503
b(unable)g(to)g(\257nd)f(su\261cien)-36 b(t)2000 23838
y(w)g(ork)371 b(to)e(increase)h Fu(j)75 b Fy('s)370 b(e\261ciency)h(to)
e Fu(\264)48 b Fy(,)383 b(then)368 b(the)i(desire)f(of)i
Fu(j)444 b Fy(is)370 b(reduced)f(in)g(step)h(2)g(during)f(the)2000
25443 y(next)475 b Fp(est)p 7102 25443 411 45 v 491 w(cycle)e
Fy(in)-36 b(terv)-72 b(al.)703 b(In)474 b(particular,)486
b(if)476 b Fu(j)75 b Fy('s)475 b(ine\261ciency)g(is)h(greater)f(than)g
(1)323 b Fs(\241)h Fu(\264)48 b Fy(,)485 b(then)2000
27048 y(w)-36 b(e)408 b(reduce)g(its)g(desire)g(to)g(a)-36
b(v)g(oid)409 b(w)-36 b(asting)409 b(pro)36 b(cessors)409
b(that)e(ma)-36 b(y)409 b(b)36 b(e)408 b(used)f(more)h(e\261cien)-36
b(tly)409 b(b)-36 b(y)2000 28653 y(other)464 b(jobs.)672
b(Unlik)-36 b(e)466 b(increases)f(to)f Fu(j)75 b Fy('s)465
b(desire,)473 b(ho)-36 b(w)g(ev)g(er,)473 b(w)-36 b(e)465
b(do)f(not)h(w)-36 b(an)g(t)464 b(to)h(o)-36 b(v)g(erstate)465
b(this)2000 30258 y(reduction,)567 b(since)541 b(an)f(underestimation)g
(of)h(the)g(desire)f(can)h(adv)-36 b(ersely)541 b(a\256ect)g(the)f
(resp)36 b(onse)2000 31863 y(time)385 b(of)h Fu(j)75
b Fy(.)562 b(Th)-36 b(us,)394 b(a)385 b(go)36 b(o)g(d)386
b(compromise)g(is)f(to)g(try)g(to)g(matc)-36 b(h)385
b(the)f(target)h(ine\261ciency)h(exactly)-108 b(,)2000
33468 y(b)-36 b(y)339 b(calculating)h(the)f(n)-36 b(um)g(b)36
b(er)337 b Fu(k)385 b Fy(of)339 b(stealing)h(pro)36 b(cessors)340
b(that)e(need)h(to)g(b)36 b(e)339 b(remo)-36 b(v)g(ed)339
b(in)g(order)g(to)2000 35073 y(lo)-36 b(w)g(er)359 b
Fu(j)75 b Fy('s)359 b(ine\261ciency)g(to)g(1)142 b Fs(\241)g
Fu(\264)48 b Fy(.)554 b(Since)358 b Fp(PUS)p 24318 35073
V 491 w(ratio)e Fy(is)j(the)f(appro)-36 b(ximation)359
b(of)h Fu(j)75 b Fy('s)359 b(ine\261ciency)2000 36678
y(during)429 b(the)h(most)g(recen)-36 b(t)429 b(in)-36
b(terv)-72 b(al,)431 b(and)f Fu(p)23631 36877 y Fr(j)24547
36678 y Fy(is)h(the)e(usage)h(of)h Fu(j)505 b Fy(during)429
b(that)g(in)-36 b(terv)-72 b(al,)432 b(w)-36 b(e)430
b(can)2000 38284 y(calculate)k Fu(k)479 b Fy(as)434 b(follo)-36
b(ws:)18109 40960 y Fp(PUS)p 20243 40960 V 491 w(ratio)293
b Fs(\243)i Fu(p)26346 41159 y Fr(j)27128 40960 y Fs(\241)h
Fu(k)p 18109 41553 11069 54 v 21901 42770 a(p)22554 42969
y Fr(j)23336 42770 y Fs(\241)g Fu(k)29680 41859 y Fy(=)368
b(1)296 b Fs(\241)f Fu(\264)13350 b Fy(\(6.1\))2000 45006
y(Multiplying)434 b(b)36 b(oth)433 b(sides)h(of)g(Equation)g(\(6.1\))g
(b)-36 b(y)433 b(\()p Fu(p)28445 45205 y Fr(j)29227 45006
y Fs(\241)295 b Fu(k)45 b Fy(\))434 b(and)f(solving)i(for)f
Fu(k)45 b Fy(,)434 b(w)-36 b(e)434 b(ha)-36 b(v)g(e:)16163
48711 y Fu(k)1152 b Fy(=)20242 47812 y Fu(p)20895 48011
y Fr(j)21382 47812 y Fy(\(1)295 b Fs(\241)h Fu(\264)48
b Fy(\))294 b Fs(\241)h Fp(PUS)p 29114 47812 411 45 v
491 w(ratio)e Fs(\243)j Fu(p)35218 48011 y Fr(j)p 20242
48406 15462 54 v 25355 49622 a Fy(1)f Fs(\241)h Fu(\264)342
b Fs(\241)296 b Fy(1)17991 52249 y(=)20110 50376 y Fk(\265)21220
51351 y Fp(PUS)p 23354 51351 411 45 v 491 w(ratio)d Fy(+)i
Fu(\264)342 b Fs(\241)296 b Fy(1)p 21220 51944 10526
54 v 26138 53161 a Fu(\264)31879 50376 y Fk(\266)33078
52249 y Fu(p)33731 52448 y Fr(j)34651 52249 y Fu(:)3951
55911 y Fy(Subtracting)543 b(this)h(v)-72 b(alue)545
b(of)g Fu(k)590 b Fy(from)545 b Fu(p)23954 56110 y Fr(j)24985
55911 y Fy(yields)g(the)f(new)g(desire)h(of)g Fu(j)619
b Fy(sho)-36 b(wn)544 b(in)g(step)g(2.)2000 57516 y(Figure)457
b(6.1)h(sho)-36 b(ws)457 b(a)g(sample)g(desire-estimation)g(trace)g
(for)g(job)h Fu(j)531 b Fy(with)457 b Fu(\264)f Fy(=)409
b(0)p Fu(:)p Fy(5)457 b(running)f(on)2000 59121 y(a)402
b(16-pro)36 b(cessor)401 b(system,)409 b(where)401 b(one)g(other)g(job)
h(runs)f(concurren)-36 b(tly)400 b(with)i Fu(j)476 b
Fy(for)402 b(the)f(duration)2000 60726 y(of)544 b(the)e(trace.)907
b(Eac)-36 b(h)543 b(ro)-36 b(w)543 b(of)h(the)f(table)g(sho)-36
b(ws)543 b(the)g(v)-72 b(alues)543 b(of)637 b Fp(PUS)p
37268 60726 411 45 v 490 w(ratio)p Fy(,)569 b Fu(p)42679
60925 y Fr(j)43166 60726 y Fy(,)h Fu(d)44773 60925 y
Fr(j)45260 60726 y Fy(,)h(and)542 b Fu(a)49513 60925
y Fr(j)2000 62331 y Fy(after)409 b(the)g(desire-estimation)g(pro)36
b(cess)409 b(has)g(o)36 b(ccurred)408 b(during)g(the)h(corresp)36
b(onding)426 b Fp(est)p 46173 62331 V 491 w(cycle)2000
63936 y Fy(in)-36 b(terv)-72 b(al.)605 b(The)443 b(v)-72
b(alue)443 b(of)g Fu(a)15454 64135 y Fr(j)16383 63936
y Fy(is)g(set)f(b)-36 b(y)442 b(the)g(\257rst-lev)-36
b(el)443 b(sc)-36 b(heduler)441 b(and)h(nev)-36 b(er)442
b(exceeds)h(the)f(fair)2000 65542 y(share)494 b(of)i
Fu(j)75 b Fy(,)510 b(as)494 b(computed)g(b)-36 b(y)494
b(Equation)h(\(5.1\).)762 b(\(W)-108 b(e)494 b(assume)h(that)f(the)g
(second)g(job)h(in)g(the)2000 67147 y(system)509 b(alw)-36
b(a)g(ys)510 b(desires)f(more)g(than)f(the)g(system)h(equipartition,)
529 b(or)509 b Fs(b)p Fu(P)108 b(=J)123 b Fs(c)498 b
Fy(=)f Fs(b)p Fy(16)p Fu(=)p Fy(2)p Fs(c)i Fy(=)e(8)2000
68752 y(pro)36 b(cessors.\))3951 70395 y(One)487 b(asp)36
b(ect)488 b(of)h(the)e(desire-estimation)h(pro)36 b(cess)488
b(that)g(merits)f(further)g(discussion)h(is)h(the)2000
72000 y(manner)517 b(in)h(whic)-36 b(h)518 b(w)-36 b(e)519
b(measure)e(a)i(job's)g(e\261ciency)f(in)g(step)g(1)g(b)-36
b(y)518 b(appro)-36 b(ximating)519 b(its)f(inef-)25350
75321 y(46)p eop end
%%Page: 47 47
TeXDict begin 47 46 bop 13828 44 24344 45 v 14492 1168
a Fy(In)-36 b(terv)-72 b(al)434 b(no.)p 21673 1649 45
1606 v 1329 w Fp(PUS)p 24494 1168 411 45 v 490 w(ratio)p
28962 1649 45 1606 v 1624 w Fu(p)30599 1367 y Fr(j)p
32025 1649 V 32997 1168 a Fu(d)33673 1367 y Fr(j)p 35087
1649 V 36056 1168 a Fu(a)36739 1367 y Fr(j)p 13828 1694
24344 45 v 13828 1915 V 17437 3039 a Fy(1)p 21673 3520
45 1606 v 6097 w(0.15)p 28962 3520 V 3695 w(4)p 32025
3520 V 2413 w(8)p 35087 3520 V 2413 w(8)17437 4644 y(2)p
21673 5125 V 6097 w(0.45)p 28962 5125 V 3695 w(8)p 32025
5125 V 2088 w(16)p 35087 5125 V 2088 w(8)17437 6249 y(3)p
21673 6730 V 6097 w(0.70)p 28962 6730 V 3695 w(8)p 32025
6730 V 2413 w(5)p 35087 6730 V 2413 w(5)17437 7854 y(4)p
21673 8335 V 6097 w(0.55)p 28962 8335 V 3695 w(5)p 32025
8335 V 2413 w(5)p 35087 8335 V 2413 w(5)17437 9459 y(5)p
21673 9940 V 6097 w(0.50)p 28962 9940 V 3695 w(5)p 32025
9940 V 2088 w(10)p 35087 9940 V 2088 w(8)17437 11064
y(6)p 21673 11546 V 6097 w(0.95)p 28962 11546 V 3695
w(8)p 32025 11546 V 2413 w(1)p 35087 11546 V 2413 w(1)16895
12669 y(.)217 b(.)g(.)p 21673 13151 V 6061 w(.)g(.)g(.)p
28962 13151 V 3658 w(.)g(.)g(.)p 32025 13151 V 1546 w(.)g(.)g(.)p
35087 13151 V 1546 w(.)g(.)g(.)p 13828 13195 24344 45
v 2000 16693 a Fn(Figure)448 b(6-2:)532 b Fm(A)389 b(sample)h
(desire-estimation)f(trace)g(for)h(job)g Fl(j)459 b Fm(with)391
b Fl(\264)380 b Fm(=)336 b(0)p Fl(:)p Fm(5.)534 b(There)389
b(are)g(16)h(pro)34 b(ces-)2000 18199 y(sors)306 b(in)g(the)h(system)f
(and)h(one)f(other)g(job)h(running)g(concurren)-34 b(tly)306
b(with)h Fl(j)375 b Fm(whose)307 b(desire)e(is)h(consisten)-34
b(tly)2000 19704 y(greater)403 b(than)j(8)e(pro)34 b(cessors.)2000
23726 y Fy(\257ciency)563 b(using)g(the)f(ratio)h(of)h(purely)e
(unsuccessful)h(steal)g(attempts)f(across)i(all)f(pro)36
b(cessors.)2000 25331 y(There)554 b(are)h(t)-36 b(w)g(o)554
b(main)g(reasons)h(wh)-36 b(y)554 b(w)-36 b(e)555 b(measure)f(the)f
(ine\261ciency)i(of)g(the)f(job)g(instead)g(of)2000 26936
y(directly)464 b(measuring)f(its)h(e\261ciency)g(\(for)g(example,)472
b(b)-36 b(y)463 b(coun)-36 b(ting)463 b(the)g(n)-36 b(um)g(b)36
b(er)462 b(of)i(partly)g(un-)2000 28541 y(successful)371
b(steal)g(attempts)e(or)i(successful)f(steal)h(attempts\):)546
b(relev)-72 b(ance)371 b(and)f(o)-36 b(v)g(erhead.)557
b(Since)2000 30146 y(steal)608 b(attempts)f(are)h(made)f(b)-36
b(y)607 b(stealing)h(pro)36 b(cessors,)652 b(they)607
b(are)h(only)g(accurate)g(indicators)2000 31751 y(of)536
b(p)36 b(erio)g(ds)535 b(of)h(ine\261ciency)g(in)f(the)g(job's)h
(execution.)884 b(In)535 b(other)g(w)-36 b(ords,)561
b(when)535 b(most)g(of)i(the)2000 33356 y(job's)505 b(pro)36
b(cessors)506 b(are)f(stealing|that)f(is,)524 b(when)504
b(the)g(job)h(is)g(b)36 b(eing)505 b(ine\261cien)-36
b(t|there)504 b(are)h(a)2000 34961 y(large)583 b(n)-36
b(um)g(b)36 b(er)580 b(of)i(steal)h(attempts,)618 b(and)581
b(so)i(an)-36 b(y)582 b(measuremen)-36 b(ts)580 b(based)i(on)g
(steal-attempt)2000 36566 y(statistics)422 b(are)g(accurate.)574
b(When)421 b(most)h(of)g(the)f(job's)i(pro)36 b(cessors)421
b(are)h(w)-36 b(orking,)425 b(there)c(are)h(few)2000
38171 y(steal)410 b(attempts,)k(so)c(an)-36 b(y)409 b(measuremen)-36
b(ts)409 b(w)-36 b(e)409 b(tak)-36 b(e)410 b(are)g(inheren)-36
b(tly)409 b(inaccurate.)570 b(Since)409 b(w)-36 b(e)410
b(are)2000 39777 y(trying)466 b(to)h(appro)-36 b(ximate)466
b(the)g(job's)g(ine\261ciency)-108 b(,)475 b(ho)-36 b(w)g(ev)g(er,)475
b(it)466 b(is)g(not)g(v)-36 b(ery)467 b(imp)36 b(ortan)-36
b(t)465 b(if)i(our)2000 41382 y(measuremen)-36 b(ts)406
b(are)h(inaccurate)f(when)g(most)h(of)h(the)e(job's)h(pro)36
b(cessors)407 b(are)g(w)-36 b(orking,)413 b(b)36 b(ecause)2000
42987 y(then)349 b(the)h(job)g(is)h(b)36 b(eing)350 b(e\261cien)-36
b(t)349 b(and)h(its)g(ine\261ciency)h(is)f(lo)-36 b(w.)552
b(Th)-36 b(us,)366 b(b)-36 b(y)350 b(c)-36 b(ho)36 b(osing)351
b(to)f(measure)2000 44592 y(the)493 b(ine\261ciency)i(of)g(the)e(job,)
510 b(the)493 b(accuracy)i(of)g(our)e(measuremen)-36
b(ts)493 b(matc)-36 b(h)494 b(their)f(degree)h(of)2000
46197 y(relev)-72 b(ance)484 b(to)f(the)g(curren)-36
b(t)481 b(situation.)728 b(If)483 b(w)-36 b(e)484 b(c)-36
b(ho)36 b(ose)484 b(to)f(measure)g(the)f(e\261ciency)i(of)g(the)f(job)
2000 47802 y(directly)-108 b(,)451 b(the)c(circumstances)g(w)-36
b(ould)447 b(b)36 b(e)447 b(rev)-36 b(ersed,)451 b(and)c(w)-36
b(e)447 b(w)-36 b(ould)448 b(not)f(ac)-36 b(hiev)g(e)448
b(the)f(desired)2000 49407 y(lev)-36 b(el)369 b(of)g(accuracy)g(in)f
(our)g(measuremen)-36 b(ts.)555 b(F)-108 b(urthermore,)380
b(when)368 b(measuring)g(the)g(ine\261ciency)2000 51012
y(of)377 b(the)f(job,)389 b(the)376 b(o)-36 b(v)g(erhead)376
b(of)h(main)-36 b(taining)377 b(the)f(steal-attempt)g(statistics)h
(also)g(matc)-36 b(hes)376 b(their)2000 52617 y(degree)355
b(of)g(imp)36 b(ortance:)539 b(when)354 b(the)g(job)h(is)h(b)36
b(eing)354 b(ine\261cien)-36 b(t,)371 b(w)-36 b(e)355
b(sp)36 b(end)353 b(more)i(time)g(collecting)2000 54222
y(steal-attempt)460 b(information)i(b)36 b(ecause)460
b(of)i(the)e(large)h(n)-36 b(um)g(b)36 b(er)459 b(of)j(steal)f
(attempts.)659 b(When)461 b(the)2000 55827 y(job)k(is)h(b)36
b(eing)465 b(e\261cien)-36 b(t,)472 b(ho)-36 b(w)g(ev)g(er,)474
b(w)-36 b(e)465 b(incur)f(little)i(o)-36 b(v)g(erhead,)473
b(b)36 b(ecause)465 b(the)f(n)-36 b(um)g(b)36 b(er)464
b(of)h(steal)2000 57433 y(attempts)532 b(is)h(v)-36 b(ery)533
b(lo)-36 b(w.)877 b(Again,)558 b(this)532 b(situation)h(w)-36
b(ould)533 b(b)36 b(e)532 b(rev)-36 b(ersed)533 b(if)g(w)-36
b(e)533 b(w)-36 b(ere)533 b(trying)g(to)2000 59038 y(measure)433
b(the)g(job's)i(e\261ciency)f(directly)-108 b(.)3951
60764 y(Another)379 b(alternativ)-36 b(e)381 b(to)f(our)f(metho)36
b(d)380 b(of)g(appro)-36 b(ximating)381 b(a)f(job's)g(ine\261ciency)h
(is)f(to)g(ha)-36 b(v)g(e)2000 62369 y(the)443 b(job)h(sc)-36
b(heduler)442 b(p)36 b(oll)444 b(all)g Fu(p)17197 62568
y Fr(j)18127 62369 y Fy(pro)36 b(cessors)444 b(at)g(regular)f(in)-36
b(terv)-72 b(als)444 b(and)f(c)-36 b(hec)g(k)443 b(whic)-36
b(h)443 b(ones)h(are)2000 63975 y(w)-36 b(orking)448
b(or)g(stealing.)621 b(W)-108 b(e)447 b(decided)g(against)h(this)f
(strategy)h(for)g(t)-36 b(w)g(o)448 b(reasons:)606 b(compatibilit)-36
b(y)2000 65580 y(with)564 b(the)f(existing)h(sc)-36 b(heduling)563
b(algorithm)h(and)f(o)-36 b(v)g(erhead.)968 b(Since)563
b(all)i(jobs)e(are)h(sc)-36 b(heduled)2000 67185 y(using)619
b(algorithm)g(WSAP)-108 b(,)619 b(our)f(strategy)i(of)g(main)-36
b(taining)619 b(a)g(few)h(steal-attempt)e(coun)-36 b(ters)2000
68790 y(while)601 b(w)-36 b(ork)601 b(stealing)g(is)f(a)h(simple)f(and)
g(unobtrusiv)-36 b(e)599 b(extension)h(to)h(the)e(algorithm.)1079
b(The)2000 70395 y(curren)-36 b(t)482 b(implemen)-36
b(tation)482 b(of)i(the)f(Cilk)h(system,)496 b(for)484
b(example,)496 b(already)484 b(has)f(this)g(capabilit)-36
b(y)2000 72000 y(built)393 b(in)-36 b(to)393 b(its)h(w)-36
b(ork-stealing)395 b(sc)-36 b(heduler.)564 b(F)-108 b(urthermore,)400
b(since)393 b(w)-36 b(e)394 b(only)g(tak)-36 b(e)394
b(measuremen)-36 b(ts)25350 75321 y(47)p eop end
%%Page: 48 48
TeXDict begin 48 47 bop 2000 1328 a Fy(while)553 b(w)-36
b(ork)554 b(stealing,)584 b(the)552 b(o)-36 b(v)g(erhead)553
b(incurred)f(b)-36 b(y)553 b(our)f(strategy)i(is)f(alw)-36
b(a)g(ys)554 b(b)36 b(orne)553 b(b)-36 b(y)553 b(the)2000
2933 y(critical)323 b(path)e(of)i(the)e(computation)h(\(satisfying)h
(the)f(w)-36 b(ork-\257rst)321 b(principle)h([19]\),)346
b(and)321 b(is)h(alw)-36 b(a)g(ys)2000 4539 y(prop)36
b(ortional)347 b(to)f(the)g(ine\261ciency)h(of)h(the)e(job.)549
b(In)347 b(a)g(regular)f(p)36 b(olling)348 b(strategy)-108
b(,)364 b(the)346 b(amoun)-36 b(t)346 b(of)2000 6144
y(o)-36 b(v)g(erhead)444 b(remains)h(\257xed)f(throughout)f(the)h
(job's)h(execution,)i(and)d(it)h(is)f(not)g(clear)h(where)g(the)2000
7749 y(o)-36 b(v)g(erhead)469 b(is)g(b)36 b(orne.)683
b(If)469 b(the)g(job)g(sp)36 b(ends)467 b(most)i(of)h(its)f(time)f
(using)h(its)g(pro)36 b(cessors)469 b(e\261cien)-36 b(tly)-108
b(,)2000 9354 y(regular)434 b(p)36 b(olling)434 b(incurs)f(more)h(o)-36
b(v)g(erhead)433 b(than)g(our)h(strategy)-108 b(.)2000
13745 y Fx(Main)-50 b(taining)599 b(a)e(F)-149 b(air,)598
b(E\261cien)-50 b(t,)600 b(and)e(Conserv)-100 b(ativ)-50
b(e)600 b(Allo)50 b(cation)2000 16386 y Fy(The)406 b(Cilk-AP)h(system)f
(uses)f(algorithm)i(DP)f(to)g(compute)f(a)h(fair,)412
b(e\261cien)-36 b(t,)412 b(and)405 b(conserv)-72 b(ativ)-36
b(e)2000 17991 y(allo)36 b(cation)618 b(in)f(the)f(\257rst)g(lev)-36
b(el)618 b(of)f(sc)-36 b(heduling.)1127 b(The)617 b(only)g(information)
h(required)e(for)h(this)2000 19596 y(calculation)603
b(is)f(the)f(pro)36 b(cessor)602 b(desire)g(of)g(eac)-36
b(h)602 b(job,)644 b(whic)-36 b(h)602 b(is)g(en)-36 b(tered)600
b(in)-36 b(to)602 b(the)f(GA)-108 b(T)601 b(b)-36 b(y)2000
21201 y(the)608 b(job)i(sc)-36 b(hedulers)607 b(during)h(the)h(desire)g
(estimation)g(pro)36 b(cess)609 b(ab)36 b(o)-36 b(v)g(e.)1105
b(Since)608 b(the)g(GA)-108 b(T)609 b(is)2000 22806 y(stored)478
b(in)g(shared)f(memory)i(\(in)e(user)h(space\),)489 b(it)479
b(is)f(not)g(a)g(requiremen)-36 b(t)478 b(that)f(the)h(op)36
b(erating)2000 24411 y(system)465 b(p)36 b(erform)465
b(the)f(\257rst)g(lev)-36 b(el)466 b(of)g(sc)-36 b(heduling.)671
b(In)465 b(Cilk-AP)-108 b(,)466 b(the)e(en)-36 b(tries)465
b(of)g(the)f(GA)-108 b(T)465 b(are)2000 26016 y(main)-36
b(tained)574 b(in)h(a)g(distributed)e(fashion)i(b)-36
b(y)575 b(the)f(job)h(sc)-36 b(hedulers)573 b(of)j(the)e(running)f
(jobs.)1002 b(In)2000 27621 y(particular,)380 b(eac)-36
b(h)366 b(job)h(sc)-36 b(heduler)365 b(recomputes)h(the)f(allo)36
b(cation)369 b(when)c(up)36 b(dating)366 b(the)g(pro)36
b(cessor)2000 29226 y(desire)460 b(of)h(its)f(o)-36 b(wn)461
b(job:)632 b(if)461 b(the)f(c)-36 b(hange)460 b(in)g(the)g(job's)g
(desire)h(do)36 b(es)460 b(not)g(a\256ect)g(the)g(allo)36
b(cation,)2000 30832 y(then)575 b(no)i(en)-36 b(tries)575
b(in)i(the)e(GA)-108 b(T)576 b(are)h(c)-36 b(hanged;)647
b(otherwise,)613 b(the)575 b(job)i(sc)-36 b(heduler)575
b(adjusts)i(the)2000 32437 y(allotmen)-36 b(ts)499 b(of)h(the)f(relev)
-72 b(an)-36 b(t)499 b(jobs)g(using)g(algorithm)h(DP)-108
b(.)499 b(W)-108 b(e)499 b(assume)h(that)e(the)h(n)-36
b(um)g(b)36 b(er)497 b(of)2000 34042 y(jobs)338 b(is)g(alw)-36
b(a)g(ys)339 b(less)f(than)f(or)g(equal)i(to)e(the)g(n)-36
b(um)g(b)36 b(er)336 b(of)j(pro)36 b(cessors)337 b(in)h(the)f(system,)
357 b(so)338 b(eac)-36 b(h)338 b(job)2000 35647 y(is)350
b(allotted)g(at)g(least)g(one)g(pro)36 b(cessor.)550
b(There)350 b(are)g(three)f(primary)h(reasons)f(for)i(main)-36
b(taining)350 b(the)2000 37252 y(allo)36 b(cation)359
b(in)d(this)h(w)-36 b(a)g(y)-108 b(,)372 b(related)357
b(to)g(the)f(ease)h(of)h(implemen)-36 b(tation,)372 b(timeliness,)h
(and)356 b(o)-36 b(v)g(erhead)2000 38857 y(of)434 b(our)g(strategy)-108
b(.)578 b(W)-108 b(e)434 b(explain)g(these)f(reasons)h(b)36
b(elo)-36 b(w.)3937 41290 y Fs(\262)651 b Fg(Ease)513
b(of)g(implementation)p Fy(.)734 b(Since)485 b(the)h(job)h(sc)-36
b(heduler)485 b(already)i(accesses)g(the)e(GA)-108 b(T)486
b(to)5252 42895 y(rep)36 b(ort)317 b(the)g(pro)36 b(cessor)318
b(desire)g(of)g(its)g(job,)342 b(it)317 b(do)36 b(es)318
b(not)g(tak)-36 b(e)318 b(m)-36 b(uc)g(h)317 b(more)h(e\256ort)f(to)h
(up)36 b(date)5252 44500 y(the)514 b(job)h(allotmen)-36
b(t)515 b(en)-36 b(tries)514 b(in)h(the)f(ev)-36 b(en)g(t)514
b(that)h(the)f(allo)36 b(cation)516 b(has)f(b)36 b(een)514
b(disturb)36 b(ed.)5252 46105 y(In)430 b(addition,)h(since)f(pro)36
b(cessors)431 b(are)g(mo)-36 b(v)g(ed)430 b(only)h(one)f(at)h(a)g(time)
f(b)-36 b(y)430 b(algorithm)h(DP)-108 b(,)431 b(it)5252
47711 y(is)405 b(p)36 b(ossible)405 b(for)h(m)-36 b(ultiple)405
b(job)g(sc)-36 b(hedulers)404 b(to)h(up)36 b(date)405
b(the)f(GA)-108 b(T)405 b(concurren)-36 b(tly)404 b(without)5252
49316 y(a)434 b(strict)f(lo)36 b(c)-36 b(king)435 b(proto)36
b(col;)434 b(w)-36 b(e)434 b(explain)h(this)e(in)g(more)h(detail)g(in)f
(Section)h(6.2.)3937 51372 y Fs(\262)651 b Fg(Timeliness)p
Fy(.)945 b(The)557 b(allo)36 b(cation)558 b(of)f(the)f(system)h(only)g
(c)-36 b(hanges)556 b(when)h(a)f(job)h(en)-36 b(ters)556
b(or)5252 52977 y(lea)-36 b(v)g(es)327 b(the)g(system,)348
b(or)327 b(when)g(the)f(curren)-36 b(t)325 b(pro)36 b(cessor)327
b(desire)g(of)g(a)g(running)f(job)h(c)-36 b(hanges.)5252
54582 y(Since)409 b(the)g(job)h(sc)-36 b(heduler)409
b(access)h(the)f(GA)-108 b(T)409 b(at)h(precisely)g(these)f(times,)415
b(it)410 b(mak)-36 b(es)410 b(sense)5252 56187 y(for)397
b(the)g(job)g(sc)-36 b(heduler)397 b(to)g(up)36 b(date)396
b(the)h(allo)36 b(cation)399 b(as)e(w)-36 b(ell.)567
b(This)398 b(w)-36 b(a)g(y)-108 b(,)405 b(w)-36 b(e)397
b(can)h(b)36 b(e)396 b(sure)5252 57792 y(that)433 b(c)-36
b(hanges)433 b(to)h(the)f(allo)36 b(cation)435 b(are)f(alw)-36
b(a)g(ys)435 b(timely)g(and)e(necessary)-108 b(.)3937
59849 y Fs(\262)651 b Fg(Overhe)-66 b(ad)p Fy(.)1200
b(By)642 b(up)36 b(dating)640 b(the)h(allo)36 b(cation)643
b(only)f(when)e(needed,)693 b(w)-36 b(e)641 b(minimize)h(the)5252
61454 y(o)-36 b(v)g(erhead)497 b(of)g(main)-36 b(taining)497
b(the)g(GA)-108 b(T)496 b(while)h(maximizing)i(the)d(resp)36
b(onsiv)-36 b(eness)497 b(of)h(the)5252 63059 y(allo)36
b(cation)435 b(to)f(c)-36 b(hanges)433 b(in)h(job)g(desires.)3951
65580 y(There)369 b(are)h(man)-36 b(y)370 b(alternativ)-36
b(es)370 b(to)g(the)f(ab)36 b(o)-36 b(v)g(e)370 b(strategy)g(for)g
(main)-36 b(taining)370 b(the)f(GA)-108 b(T,)369 b(most)2000
67185 y(of)483 b(whic)-36 b(h)482 b(fall)h(in)-36 b(to)482
b(one)h(of)f(t)-36 b(w)g(o)483 b(categories:)677 b(strategies)482
b(that)g(store)g(or)h(up)36 b(date)481 b(the)g(GA)-108
b(T)482 b(in)2000 68790 y(k)-36 b(ernel)510 b(space,)529
b(and)509 b(strategies)i(that)e(store)g(the)h(GA)-108
b(T)509 b(in)g(user)h(space)f(but)g(p)36 b(erform)510
b(up)36 b(dates)2000 70395 y(externally)436 b(to)f(all)h(jobs)g
(\(e.g.,)g(using)f(a)g(bac)-36 b(kground)435 b(pro)36
b(cessor\).)582 b(W)-108 b(e)436 b(summarize)e(the)h(di\256er-)2000
72000 y(ences)536 b(b)36 b(et)-36 b(w)g(een)536 b(our)f(strategy)-108
b(,)563 b(whic)-36 b(h)536 b(w)-36 b(e)536 b(call)h(USER-JS)e(\(for)i
(\\job)g(sc)-36 b(heduler"\),)561 b(and)536 b(the)25350
75321 y(48)p eop end
%%Page: 49 49
TeXDict begin 49 48 bop 4028 44 43945 45 v 4006 1649
45 1606 v 4692 1168 a Fy(Strategy)p 11113 1649 V 4675
w(Ease)434 b(of)p 21293 1649 V 6991 w(Ov)-36 b(erhead)p
34622 1649 V 8306 w(Securit)g(y)p 47950 1649 V 4006 3254
V 11113 3254 V 11800 2773 a(implemen)g(tation)p 21293
3254 V 34622 3254 V 47950 3254 V 4028 3299 43945 45 v
4028 3520 V 4006 6730 45 3211 v 4692 4644 a(USER-JS)p
11113 6730 V 1743 w(easy)p 21293 6730 V 7753 w(lo)g(w)758
b(but)f(GA)-108 b(T)757 b(could)21980 6249 y(b)36 b(ecome)433
b(a)h(hot)g(sp)36 b(ot)p 34622 6730 V 35308 4644 a(job)859
b(sc)-36 b(hedulers)858 b(trust)35308 6249 y(eac)-36
b(h)434 b(other)p 47950 6730 V 4028 6775 43945 45 v 4006
11590 45 4816 v 4692 7898 a(USER-BP)p 11113 11590 V 1328
w(easy)p 21293 11590 V 7753 w(lo)-36 b(w)p 34622 11590
V 11414 w(job)859 b(sc)-36 b(hedulers)858 b(trust)35308
9503 y(bac)-36 b(kground)1406 b(pro)36 b(ces-)35308 11108
y(sor)p 47950 11590 V 4028 11634 43945 45 v 4006 16449
45 4816 v 4692 12758 a(KERNEL)p 11113 16449 V 1582 w(di\261cult)p
21293 16449 V 5844 w(high)418 b(if)h(job)g(sc)-36 b(hedulers)21980
14363 y(comm)g(unicate)1992 b(with)21980 15968 y(k)-36
b(ernel)p 34622 16449 V 35308 12758 a(job)859 b(sc)-36
b(hedulers)858 b(trust)35308 14363 y(k)-36 b(ernel)p
47950 16449 V 4028 16494 43945 45 v 5798 19992 a Fn(Figure)465
b(6-3:)538 b Fm(Comparison)405 b(of)g(alternativ)-34
b(e)404 b(strategies)g(for)g(main)-34 b(taining)406 b(the)e(GA)-101
b(T.)2000 23893 y Fy(alternativ)-36 b(e)449 b(strategies,)k(whic)-36
b(h)449 b(w)-36 b(e)449 b(call)g(KERNEL)g(and)f(USER-BP)f(\(for)i
(\\bac)-36 b(kground)449 b(pro-)2000 25498 y(cessor"\))495
b(resp)36 b(ectiv)-36 b(ely)-108 b(,)511 b(in)494 b(Figure)h(6.1.)762
b(W)-108 b(e)495 b(use)f(three)g(main)h(criteria)g(for)g(our)f
(comparison:)2000 27103 y(ease)389 b(of)g(implemen)-36
b(tation,)398 b(o)-36 b(v)g(erhead,)397 b(and)388 b(securit)-36
b(y)-108 b(.)563 b(W)-108 b(e)388 b(assume)h(that)f(the)g(GA)-108
b(T)388 b(is)g(up)36 b(dated)2000 28708 y(in)524 b(a)h(timely)h(manner)
d(b)-36 b(y)525 b(all)g(three)f(strategies,)548 b(as)525
b(describ)36 b(ed)524 b(in)g(the)g(timeliness)h(condition)2000
30313 y(ab)36 b(o)-36 b(v)g(e.)678 b(\(Alternativ)-36
b(ely)-108 b(,)476 b(the)466 b(GA)-108 b(T)466 b(can)h(b)36
b(e)466 b(up)36 b(dated)466 b(at)h(regular)f(in)-36 b(terv)-72
b(als)467 b(without)g(co)36 b(ordi-)2000 31918 y(nating)336
b(with)g(the)g(job)g(sc)-36 b(hedulers,)355 b(reducing)335
b(o)-36 b(v)g(erhead)336 b(at)h(the)e(cost)h(of)h(lo)-36
b(w)g(er)337 b(resp)36 b(onsiv)-36 b(eness.\))2000 33523
y(F)-108 b(rom)487 b(Figure)g(6.1,)503 b(w)-36 b(e)488
b(see)f(that)h(the)f(primary)g(disadv)-72 b(an)-36 b(tages)488
b(of)h(USER-JS)d(are)i(its)g(lac)-36 b(k)488 b(of)2000
35129 y(scalabilit)-36 b(y)366 b(\(since)f(the)e(GA)-108
b(T)364 b(ma)-36 b(y)365 b(b)36 b(ecome)365 b(a)g(\\hot)f(sp)36
b(ot"\))365 b(and)f(the)g(lev)-36 b(el)365 b(of)h(trust)d(it)i
(requires)2000 36734 y(b)36 b(et)-36 b(w)g(een)560 b(the)h(job)g(sc)-36
b(hedulers.)960 b(W)-108 b(e)561 b(describ)36 b(e)560
b(metho)36 b(ds)561 b(to)g(cop)36 b(e)561 b(with)g(these)g(problems)f
(in)2000 38339 y(Section)433 b(6.2.)2000 42569 y Fx(Adjusting)599
b(a)f(Job's)g(Pro)50 b(cessor)599 b(Usage)2000 45157
y Fy(After)335 b(setting)f(a)h(job's)h(allotmen)-36 b(t)335
b(in)f(the)g(GA)-108 b(T,)335 b(the)f(task)h(still)h(remains)e(of)i
(adjusting)e(the)g(job's)2000 46762 y(pro)36 b(cessor)354
b(usage)h(to)f(matc)-36 b(h)354 b(the)f(computed)h(allotmen)-36
b(t;)381 b(the)353 b(discrepancy)h(b)36 b(et)-36 b(w)g(een)354
b(these)g(t)-36 b(w)g(o)2000 48367 y(quan)g(tities)446
b(is)g(the)f(di\256erence)h(b)36 b(et)-36 b(w)g(een)445
b(the)g(terms)h Fu(p)28991 48566 y Fr(j)29923 48367 y
Fy(and)f Fu(a)33147 48566 y Fr(j)33634 48367 y Fy(,)k(as)d(explained)g
(in)g(Section)g(5.2.)2000 49972 y(In)478 b(the)f(Cilk-AP)i(system,)489
b(adjustmen)-36 b(ts)477 b(to)h(a)h(job's)f(pro)36 b(cessor)478
b(usage)h(are)f(made)f(b)-36 b(y)478 b(the)g(job)2000
51577 y(sc)-36 b(heduler)422 b(using)g(sleep)h(and)g(w)-36
b(ak)g(e)423 b(signals,)k(as)c(sp)36 b(eci\257ed)422
b(b)-36 b(y)423 b(algorithm)g(WSAP)-108 b(.)423 b(F)-108
b(or)422 b(a)h(giv)-36 b(en)2000 53182 y(job)360 b Fu(j)75
b Fy(,)375 b(let)360 b Fp(signaled)p 12838 53182 411
45 v 489 w(to)p 14695 53182 V 491 w(sleep)e Fy(b)36 b(e)359
b(the)h(n)-36 b(um)g(b)36 b(er)358 b(of)j(w)-36 b(orking)361
b(pro)36 b(cessors)360 b(that)g(ha)-36 b(v)g(e)360 b(receiv)-36
b(ed)2000 54787 y(a)508 b(sleep)f(signal)h(from)g(the)f(job)h(sc)-36
b(heduler,)525 b(but)507 b(whic)-36 b(h)507 b(ha)-36
b(v)g(e)507 b(not)g(y)-36 b(et)508 b(gone)g(to)f(sleep.)800
b(Ev)-36 b(ery)2000 56392 y Fp(est)p 4134 56392 V 491
w(cycle)446 b Fy(seconds,)453 b(after)c(rep)36 b(orting)449
b Fu(j)75 b Fy('s)449 b(desire)g(to)g(the)f(GA)-108 b(T)448
b(and)h(making)g(an)-36 b(y)449 b(necessary)2000 57997
y(c)-36 b(hanges)461 b(to)h(the)f(allo)36 b(cation,)470
b(the)461 b(job)h(sc)-36 b(heduler)460 b(compares)i Fu(j)75
b Fy('s)461 b(allotmen)-36 b(t)462 b Fu(a)41510 58196
y Fr(j)42458 57997 y Fy(to)g(its)f(curren)-36 b(t)2000
59602 y(usage)434 b Fu(p)6201 59801 y Fr(j)7121 59602
y Fy(and)f(tak)-36 b(es)434 b(one)g(of)g(t)-36 b(w)g(o)434
b(actions:)3590 61983 y(1.)651 b(If)289 b Fu(a)7090 62182
y Fr(j)7946 61983 y Fu(<)369 b Fy(\()p Fu(p)10486 62182
y Fr(j)10972 61983 y Fs(\241)p Fp(signaled)p 17559 61983
V 489 w(to)p 19416 61983 V 491 w(sleep)n Fy(\),)318 b(send)288
b(a)i(sleep)f(signal)h(to)f(\()p Fu(p)37387 62182 y Fr(j)37873
61983 y Fs(\241)p Fp(signaled)p 44460 61983 V 489 w(to)p
46317 61983 V 491 w(sleep)n Fs(\241)5252 63589 y Fu(a)5935
63788 y Fr(j)6421 63589 y Fy(\))688 b(of)h(the)f(w)-36
b(orking)690 b(pro)36 b(cessors)688 b(that)g(ha)-36 b(v)g(e)688
b(not)g(b)36 b(een)688 b(signaled)h(to)f(sleep;)816 b(if)689
b(to)36 b(o)5252 65194 y(few)600 b(of)g(those)f(pro)36
b(cessors)600 b(exist,)641 b(send)599 b(a)h(sleep)f(signal)h(to)g(all)g
(of)g(them.)1075 b(Incremen)-36 b(t)5252 66799 y Fp(signaled)p
10806 66799 V 488 w(to)p 12662 66799 V 491 w(sleep)432
b Fy(for)i(eac)-36 b(h)433 b(sleep)h(signal)g(sen)-36
b(t.)3590 68790 y(2.)651 b(If)289 b Fu(a)7090 68989 y
Fr(j)7946 68790 y Fu(>)369 b Fy(\()p Fu(p)10486 68989
y Fr(j)10972 68790 y Fs(\241)p Fp(signaled)p 17559 68790
V 489 w(to)p 19416 68790 V 491 w(sleep)n Fy(\),)318 b(send)288
b(a)i(w)-36 b(ak)g(e)290 b(signal)g(to)f(\()p Fu(p)37416
68989 y Fr(j)37902 68790 y Fs(\241)p Fp(signaled)p 44489
68790 V 489 w(to)p 46346 68790 V 491 w(sleep)n Fs(\241)5252
70395 y Fu(a)5935 70594 y Fr(j)6421 70395 y Fy(\))408
b(pro)36 b(cessors)408 b(that)f(are)h(asleep,)414 b(w)-36
b(aking)409 b(all)g(pro)36 b(cessors)408 b(that)f(ha)-36
b(v)g(e)408 b(w)-36 b(ork)409 b(\257rst)e(b)36 b(efore)5252
72000 y(w)-36 b(aking)559 b(those)e(that)h(do)f(not)h(ha)-36
b(v)g(e)558 b(w)-36 b(ork.)952 b(A)557 b(pro)36 b(cessor)558
b(that)g(has)f(b)36 b(een)558 b(signaled)g(to)25350 75321
y(49)p eop end
%%Page: 50 50
TeXDict begin 50 49 bop 5252 1328 a Fy(sleep)466 b(\(but)f(whic)-36
b(h)467 b(hasn't)f(gone)h(to)f(sleep)h(y)-36 b(et\))466
b(can)h(b)36 b(e)466 b(\\w)-36 b(ok)g(en)467 b(up")f(b)-36
b(y)467 b(canceling)g(its)5252 2933 y(sleep)433 b(signal)i(and)e
(decremen)-36 b(ting)450 b Fp(signaled)p 28216 2933 411
45 v 489 w(to)p 30073 2933 V 491 w(sleep)p Fy(.)3951
5443 y(Up)36 b(on)511 b(receiving)i(a)f(sleep)f(signal,)533
b(a)511 b(pro)36 b(cessor)512 b(that)f(is)h(w)-36 b(orking)513
b(go)36 b(es)512 b(to)g(sleep)g(as)g(so)36 b(on)2000
7048 y(as)521 b(it)g(can,)543 b(decremen)-36 b(ting)539
b Fp(signaled)p 21572 7048 V 488 w(to)p 23428 7048 V
491 w(sleep)519 b Fy(immediately)j(prior)f(to)g(sleeping.)841
b(\(In)520 b(our)2000 8653 y(implemen)-36 b(tation,)425
b(w)-36 b(orking)424 b(pro)36 b(cessors)423 b(can)g(only)h(go)g(to)f
(sleep)g(at)g(the)g(thread)f(b)36 b(oundaries)422 b(of)2000
10258 y(a)513 b(computation,)532 b(as)513 b(explained)g(in)g(Section)f
(6.2.\))816 b(A)513 b(pro)36 b(cessor)513 b(that)f(is)h(stealing)g(c)
-36 b(hec)g(ks)513 b(to)2000 11863 y(see)476 b(if)g Fu(a)6062
12062 y Fr(j)6990 11863 y Fu(<)440 b(p)9095 12062 y Fr(j)10057
11863 y Fy(b)36 b(efore)476 b(eac)-36 b(h)476 b(steal)g(attempt;)496
b(if)477 b(it)f(is,)486 b(then)475 b(the)g(pro)36 b(cessor)476
b(go)36 b(es)477 b(to)f(sleep.)704 b(If)2000 13468 y(a)505
b(stealing)h(pro)36 b(cessor)505 b(c)-36 b(ho)36 b(oses)505
b(a)g(victim)h(that)f(is)g(sleeping)g(with)g(a)g(nonempt)-36
b(y)504 b(deque,)523 b(then)2000 15073 y(the)451 b(pro)36
b(cessor)452 b(w)-36 b(ak)g(es)452 b(the)f(victim)i(up)d(and)h(go)36
b(es)453 b(to)e(sleep)h(itself)g(\(as)g(sp)36 b(eci\257ed)451
b(b)-36 b(y)451 b(algorithm)2000 16679 y(WSAP\);)487
b(the)f(usage)i(of)f Fu(j)562 b Fy(do)36 b(es)487 b(not)g(c)-36
b(hange)486 b(in)h(this)g(case.)739 b(W)-108 b(e)487
b(assume)f(that)h Fu(j)562 b Fy(alw)-36 b(a)g(ys)488
b(has)2000 18284 y(access)434 b(to)g(its)g(allotted)g(n)-36
b(um)g(b)36 b(er)432 b(of)i(pro)36 b(cessors)434 b(when)f(increasing)h
(its)g(usage)g(in)f(Action)h(2.)3951 19973 y(The)340
b(strategy)i(describ)36 b(ed)339 b(ab)36 b(o)-36 b(v)g(e)342
b(is)e(iden)-36 b(tical)341 b(to)g(the)f(strategy)h(used)f(b)-36
b(y)340 b(algorithm)h(WSAP)2000 21578 y(in)468 b(the)g(adv)-36
b(ersarial)470 b(mo)36 b(del)469 b(\(Section)f(4.1\),)478
b(with)469 b(t)-36 b(w)g(o)469 b(imp)36 b(ortan)-36 b(t)468
b(distinctions.)683 b(First,)477 b(since)2000 23183 y(adjustmen)-36
b(ts)360 b(to)g(the)g(pro)36 b(cessor)361 b(usage)g(are)g(not)f(instan)
-36 b(taneous)360 b(in)h(practice,)375 b(w)-36 b(e)361
b(need)f(to)h(k)-36 b(eep)2000 24788 y(trac)g(k)556 b(of)g(the)e(n)-36
b(um)g(b)36 b(er)554 b(of)i(pro)36 b(cessors)555 b(that)g(ha)-36
b(v)g(e)556 b(b)36 b(een)554 b(signaled)i(to)f(sleep.)944
b(Second,)585 b(sleep)2000 26393 y(signals)398 b(are)g(only)g(sen)-36
b(t)396 b(to)i(pro)36 b(cessors)397 b(that)g(are)h(busy)f(w)-36
b(orking,)405 b(b)36 b(ecause)398 b(stealing)g(pro)36
b(cessors)2000 27998 y(go)427 b(to)f(sleep)h(on)f(their)f(o)-36
b(wn.)577 b(In)426 b(Cilk-AP)-108 b(,)427 b(the)e(in)-36
b(terv)-72 b(al)427 b(at)f(whic)-36 b(h)426 b(a)h(job's)g(pro)36
b(cessor)426 b(usage)h(is)2000 29603 y(adjusted)324 b(is)g(the)g(same)g
(as)h(the)e(desire-estimation)h(in)-36 b(terv)-72 b(al,)347
b(or)324 b Fp(est)p 35767 29603 V 491 w(cycle)e Fy(seconds.)541
b(By)325 b(using)2000 31208 y(the)380 b(same)h(in)-36
b(terv)-72 b(al,)392 b(w)-36 b(e)380 b(ensure)g(that)g(the)g(frequency)
h(at)g(whic)-36 b(h)380 b(the)g(job)h(sc)-36 b(heduler)380
b(a\256ects)h(the)2000 32813 y(system)460 b(allo)36 b(cation)462
b(is)e(the)g(same)g(as)g(the)g(frequency)g(at)g(whic)-36
b(h)460 b(it)g(adjusts)g(to)g(c)-36 b(hanges)460 b(in)g(the)2000
34418 y(allo)36 b(cation.)3951 36107 y(The)511 b(o)-36
b(v)g(erall)513 b(reallo)36 b(cation)512 b(pro)36 b(cess)512
b(in)f(Cilk-AP)h(follo)-36 b(ws)513 b(a)e(co)36 b(ordinated)511
b(p)36 b(olicy)513 b(\(Chap-)2000 37712 y(ter)451 b(2\),)456
b(b)36 b(ecause)452 b(pro)36 b(cessors)451 b(are)h(only)g(remo)-36
b(v)g(ed)452 b(from)f(a)h(job)g(at)g(their)f(earliest)h(con)-36
b(v)g(enience.)2000 39317 y(W)-108 b(e)476 b(discuss)f(ho)-36
b(w)476 b(this)g(p)36 b(olicy)477 b(a\256ects)f(our)g(implemen)-36
b(tation)475 b(in)h(Section)g(6.2.)706 b(Since)475 b(the)h(job)2000
40922 y(sc)-36 b(hedulers)379 b(are)h(resp)36 b(onsible)380
b(for)g(b)36 b(oth)379 b(the)g(\257rst)g(and)h(second)f(lev)-36
b(els)381 b(of)g(sc)-36 b(heduling,)390 b(the)379 b(prob-)2000
42528 y(lem)555 b(of)h(trust)e(b)36 b(et)-36 b(w)g(een)555
b(the)f(\257rst)h(and)f(second-lev)-36 b(el)555 b(sc)-36
b(hedulers)555 b(no)-36 b(w)555 b(b)36 b(ecomes)555 b(a)g(problem)2000
44133 y(of)598 b(trust)e(b)36 b(et)-36 b(w)g(een)597
b(the)f(job)i(sc)-36 b(hedulers)596 b(themselv)-36 b(es.)1069
b(W)-108 b(e)597 b(explain)h(our)e(approac)-36 b(h)597
b(to)g(this)2000 45738 y(problem,)433 b(again)i(in)e(Section)h(6.2.)
2000 50106 y Fx(Setting)599 b(the)g(T)-149 b(unable)598
b(P)-50 b(arameters)2000 52739 y Fy(The)382 b(job)f(sc)-36
b(heduler)381 b(uses)g(t)-36 b(w)g(o)382 b(tunable)f(parameters)g(to)h
(p)36 b(erform)381 b(its)h(second-lev)-36 b(el)382 b(sc)-36
b(heduling)2000 54344 y(functions:)658 b Fp(est)p 10327
54344 V 491 w(cycle)471 b Fy(and)i Fu(\264)48 b Fy(.)697
b(In)473 b(theory)-108 b(,)483 b(b)36 b(oth)473 b(of)h(these)f
(parameters)g(can)h(v)-72 b(ary)474 b(from)g(job)2000
55949 y(to)416 b(job,)421 b(but)415 b(in)h(Cilk-AP)h(w)-36
b(e)417 b(only)g(allo)-36 b(w)418 b Fu(\264)463 b Fy(to)417
b(v)-72 b(ary)-108 b(,)420 b(and)c(use)g(the)f(same)i(v)-72
b(alue)417 b(of)509 b Fp(est)p 46173 55949 V 491 w(cycle)2000
57554 y Fy(across)331 b(all)g(jobs.)545 b(The)330 b(motiv)-72
b(ation)332 b(for)f(this)f(decision)h(is)f(to)h(uphold)f(the)f
(fairness)j(and)d(e\261ciency)2000 59159 y(conditions)368
b(of)h(algorithm)f(DP:)h(since)f Fp(est)p 23294 59159
V 491 w(cycle)d Fy(is)j(the)g(in)-36 b(terv)-72 b(al)368
b(at)g(whic)-36 b(h)368 b(a)g(job's)h(pro)36 b(cessor)2000
60764 y(usage)506 b(is)g(adjusted,)523 b(it)505 b(also)i(represen)-36
b(ts)504 b(the)h(resp)36 b(onsiv)-36 b(eness)505 b(of)i(the)d(job)i(to)
g(c)-36 b(hanges)505 b(in)h(the)2000 62369 y(allo)36
b(cation,)505 b(whether)489 b(caused)g(b)-36 b(y)489
b(the)f(job)i(itself)g(or)f(some)h(other)f(job)g(in)g(the)g(system.)746
b(If)490 b(the)2000 63975 y(v)-72 b(alue)366 b(of)459
b Fp(est)p 8932 63975 V 491 w(cycle)363 b Fy(v)-72 b(aries)366
b(from)g(job)g(to)g(job,)379 b(then)365 b(some)h(jobs)g(resp)36
b(ond)364 b(faster)j(to)e(allo)36 b(cation)2000 65580
y(c)-36 b(hanges)368 b(than)f(others,)381 b(resulting)367
b(in)h(p)36 b(oten)-36 b(tially)369 b(long)f(p)36 b(erio)g(ds)368
b(of)h(ine\261ciency)f(or)g(unfairness.)2000 67185 y(F)-108
b(or)347 b(example,)366 b(if)349 b(job)f Fu(j)422 b Fy(has)348
b Fp(est)p 18184 67185 V 491 w(cycle)367 b Fy(=)h Fu(x)348
b Fy(and)f(job)h Fu(i)g Fy(has)f Fp(est)p 34567 67185
V 491 w(cycle)367 b Fy(=)i(4)p Fu(x)p Fy(,)c(then)347
b(a)h(c)-36 b(hange)2000 68790 y(in)387 b Fu(j)75 b Fy('s)387
b(desire)h(can)f(tak)-36 b(e)388 b(up)e(to)h(3)p Fu(x)h
Fy(seconds)f(to)g(b)36 b(e)387 b(noticed)g(b)-36 b(y)387
b Fu(i)p Fy(,)397 b(assuming)387 b(that)g(the)g(in)-36
b(terv)-72 b(als)2000 70395 y(of)582 b Fu(i)e Fy(and)g
Fu(j)656 b Fy(are)581 b(aligned)g(and)g(that)f(up)36
b(dates)580 b(to)h(the)f(GA)-108 b(T)581 b(are)g(instan)-36
b(taneous.)1019 b(\(If)581 b(these)2000 72000 y(assumptions)567
b(are)h(remo)-36 b(v)g(ed,)602 b(then)566 b(the)h(dela)-36
b(y)569 b(ma)-36 b(y)568 b(b)36 b(e)567 b(ev)-36 b(en)568
b(greater.\))981 b(If)568 b Fu(j)643 b Fy(is)568 b(increasing)25350
75321 y(50)p eop end
%%Page: 51 51
TeXDict begin 51 50 bop 2000 1328 a Fy(its)581 b(desire)g(to)g(demand)f
(more)h(of)h(its)f(fair)h(share)f(of)h(pro)36 b(cessors,)618
b(then)580 b(the)h(allo)36 b(cation)582 b(ma)-36 b(y)2000
2933 y(b)36 b(ecome)419 b(unfair)g(during)e(the)i(dela)-36
b(y)-108 b(,)422 b(since)d Fu(i)f Fy(ma)-36 b(y)419 b(b)36
b(e)419 b(using)f(some)h(of)h(the)e(pro)36 b(cessors)419
b Fu(j)493 b Fy(needs.)2000 4539 y(Con)-36 b(v)g(ersely)-108
b(,)491 b(if)480 b Fu(j)554 b Fy(is)479 b(decreasing)g(its)g(desire)g
(b)36 b(elo)-36 b(w)479 b(its)g(fair)h(share,)490 b(then)478
b(the)h(allo)36 b(cation)480 b(ma)-36 b(y)2000 6144 y(b)36
b(ecome)333 b(ine\261cien)-36 b(t)333 b(during)g(the)f(dela)-36
b(y)-108 b(,)354 b(since)333 b Fu(i)g Fy(ma)-36 b(y)334
b(b)36 b(e)333 b(able)g(to)h(use)f(some)g(of)h(the)f(pro)36
b(cessors)333 b Fu(j)2000 7749 y Fy(giv)-36 b(es)349
b(up.)550 b(In)348 b(practice,)366 b(w)-36 b(e)348 b(cannot)h(en)-36
b(tirely)348 b(a)-36 b(v)g(oid)349 b(this)g(t)-36 b(yp)36
b(e)348 b(of)h(dela)-36 b(y)-108 b(,)366 b(but)347 b(w)-36
b(e)349 b(can)g(minimize)2000 9354 y(it)434 b(b)-36 b(y)433
b(using)h(the)f(same)g(v)-72 b(alue)435 b(of)526 b Fp(est)p
21077 9354 411 45 v 491 w(cycle)432 b Fy(for)i(all)g(jobs.)3951
11658 y(Giv)-36 b(en)521 b(that)g(the)g(v)-72 b(alue)521
b(of)615 b Fp(est)p 20282 11658 V 491 w(cycle)519 b Fy(is)i(\257xed,)
544 b(w)-36 b(e)521 b(still)h(m)-36 b(ust)521 b(determine)f(what)i(v)
-72 b(alue)2000 13264 y(to)545 b(use.)914 b(Smaller)545
b(v)-72 b(alues)546 b(of)639 b Fp(est)p 19403 13264 V
491 w(cycle)543 b Fy(increase)i(the)g(job)h(sc)-36 b(heduler's)544
b(resp)36 b(onsiv)-36 b(eness)546 b(to)2000 14869 y(c)-36
b(hanges)451 b(in)f(b)36 b(oth)450 b(the)g(job's)i(parallelism)g(and)e
(the)g(o)-36 b(v)g(erall)452 b(allo)36 b(cation,)457
b(alb)36 b(eit)451 b(at)g(the)f(cost)h(of)2000 16474
y(greater)456 b(o)-36 b(v)g(erhead.)647 b(Larger)456
b(v)-72 b(alues)457 b(of)549 b Fp(est)p 24245 16474 V
491 w(cycle)454 b Fy(reduce)h(the)h(job)h(sc)-36 b(heduler's)455
b(resp)36 b(onsiv)-36 b(e-)2000 18079 y(ness)440 b(to)g(these)g(c)-36
b(hanges,)442 b(but)d(incur)h(less)h(o)-36 b(v)g(erhead.)598
b(F)-108 b(or)440 b(our)g(implemen)-36 b(tation,)442
b(w)-36 b(e)440 b(tune)g(the)2000 19684 y(v)-72 b(alue)434
b(of)527 b Fp(est)p 9068 19684 V 491 w(cycle)431 b Fy(exp)36
b(erimen)-36 b(tally)-108 b(,)435 b(as)f(describ)36 b(ed)432
b(in)i(Chapter)f(7.)3951 21989 y(Unlik)-36 b(e)566 b
Fp(est)p 10299 21989 V 491 w(cycle)p Fy(,)596 b(the)564
b(parameter)h Fu(\264)612 b Fy(need)565 b(not)g(b)36
b(e)564 b(consisten)-36 b(t)565 b(across)h(all)g(jobs,)598
b(and)2000 23594 y(can)553 b(ev)-36 b(en)553 b(b)36 b(e)552
b(set)h(b)-36 b(y)553 b(the)f(user,)583 b(b)36 b(ecause)552
b(its)h(e\256ect)g(on)g(the)f(allo)36 b(cation)555 b(is)e(safeguarded)g
(b)-36 b(y)2000 25199 y(algorithm)534 b(DP)-108 b(.)534
b(In)g(particular,)558 b Fu(\264)581 b Fy(is)534 b(only)h(used)e(to)g
(compute)g(the)g(desire)h(of)g(a)g(job,)559 b(not)534
b(its)2000 26804 y(allotmen)-36 b(t.)938 b(The)553 b(job's)h(allotmen)
-36 b(t)554 b(is)g(computed)e(in)h(the)g(\257rst)f(lev)-36
b(el)555 b(of)f(sc)-36 b(heduling,)583 b(and)553 b(is)2000
28409 y(guaran)-36 b(teed)520 b(b)-36 b(y)520 b(algorithm)h(DP)f(nev)
-36 b(er)520 b(to)h(exceed)f(the)g(job's)h(fair)g(share.)838
b(W)-108 b(e)520 b(should)g(note,)2000 30014 y(ho)-36
b(w)g(ev)g(er,)428 b(that)e(lo)-36 b(w)428 b(v)-72 b(alues)427
b(of)g Fu(\264)474 b Fy(bloat)426 b(the)g(job's)h(desire)g(b)-36
b(y)426 b(allo)-36 b(wing)428 b(it)f(to)f(main)-36 b(tain)426
b(a)h(high)2000 31619 y(ratio)450 b(of)h(stealing)g(pro)36
b(cessors.)627 b(In)450 b(con)-36 b(trast,)454 b(high)c(v)-72
b(alues)450 b(of)h Fu(\264)497 b Fy(result)449 b(in)h(more)g(conserv)
-72 b(ativ)-36 b(e)2000 33224 y(estimates,)516 b(but)497
b(ma)-36 b(y)499 b(prev)-36 b(en)g(t)498 b(the)g(job)h(from)g
(exploring)h(its)f(future)f(parallelism.)774 b(Setting)499
b Fu(\264)2000 34829 y Fy(to)481 b(0.5)h(\(50\045)g(e\261ciency\))f
(strik)-36 b(es)482 b(a)f(go)36 b(o)g(d)482 b(balance)f(b)36
b(et)-36 b(w)g(een)481 b(the)g(t)-36 b(w)g(o)481 b(extremes,)493
b(and)481 b(is)h(the)2000 36434 y(v)-72 b(alue)542 b(w)-36
b(e)541 b(used)g(in)g(most)g(of)h(our)f(exp)36 b(erimen)-36
b(ts)540 b(in)h(Chapter)g(7.)902 b(In)541 b(practice,)568
b(it)541 b(is)h(p)36 b(ossible)2000 38040 y(to)483 b(dynamically)h
(tune)d(the)h(v)-72 b(alue)483 b(of)h Fu(\264)529 b Fy(to)483
b(resp)36 b(ond)482 b(to)g(c)-36 b(hanges)483 b(in)f(the)g(system)h
(load)g(or)g(the)2000 39645 y(job)543 b(itself.)908 b(F)-108
b(or)543 b(example,)572 b(if)543 b(the)g(system)g(load)h(is)f(to)36
b(o)544 b(high,)571 b(then)542 b(the)g(job)i(sc)-36 b(heduler)542
b(can)2000 41250 y(increase)449 b Fu(\264)496 b Fy(to)448
b(reduce)g(the)g(n)-36 b(um)g(b)36 b(er)447 b(of)i(pro)36
b(cessors)448 b(used)g(for)h(stealing.)624 b(Alternativ)-36
b(ely)-108 b(,)453 b(if)d(the)2000 42855 y(system)435
b(load)g(is)g(lo)-36 b(w,)436 b(then)e(the)g(job)h(sc)-36
b(heduler)433 b(can)i(reduce)f Fu(\264)48 b Fy(,)434
b(b)36 b(ecause)435 b(w)-36 b(e)435 b(can)f(a\256ord)g(to)h(b)36
b(e)2000 44460 y(ine\261cien)-36 b(t.)542 b(The)325 b(v)-72
b(alue)325 b(of)h Fu(\264)372 b Fy(can)325 b(also)h(b)36
b(e)324 b(increased)h(when)f(the)h(job)g(en)-36 b(ters)324
b(a)h(serial)h(phase,)346 b(and)2000 46065 y(reduced)360
b(when)h(the)f(job)i(en)-36 b(ters)360 b(a)h(phase)g(of)h(high)f(\(or)g
(unkno)-36 b(wn\))360 b(parallelism.)556 b(F)-108 b(or)360
b(simplicit)-36 b(y)-108 b(,)2000 47670 y(w)-36 b(e)519
b(do)g(not)f(dynamically)j(tune)d(the)g(v)-72 b(alue)519
b(of)h Fu(\264)566 b Fy(in)519 b(our)f(curren)-36 b(t)518
b(implemen)-36 b(tation,)540 b(b)36 b(ecause)2000 49275
y(using)433 b(a)h(\257xed)g(v)-72 b(alue)434 b(made)f(it)h(easier)g(to)
g(analyze)g(our)g(exp)36 b(erimen)-36 b(ts)433 b(in)g(Chapter)g(7.)2000
58026 y FC(6.2)2152 b(Implemen)-60 b(tation)2000 62369
y Fy(W)-108 b(e)594 b(implemen)-36 b(ted)592 b(the)i(Cilk-AP)g(system)g
(b)-36 b(y)594 b(extending)f(the)g(run)-36 b(time)593
b(system)h(of)g(Cilk,)636 b(a)2000 63975 y(language)460
b(for)h(m)-36 b(ultithreaded)458 b(parallel)j(programming)e(based)h(on)
f(ANSI)h(C.)g(Sp)36 b(eci\257cally)-108 b(,)467 b(w)-36
b(e)2000 65580 y(extended)384 b(Cilk's)i(job)f(sc)-36
b(heduler)384 b(to)h(p)36 b(erform)384 b(the)h(three)f(functions)g
(describ)36 b(ed)384 b(in)g(Section)h(6.1:)2000 67185
y(estimating)438 b(a)f(job's)h(pro)36 b(cessor)437 b(desire,)i(main)-36
b(taining)437 b(the)g(allo)36 b(cation,)440 b(and)d(adjusting)g(a)g
(job's)2000 68790 y(usage)360 b(to)g(matc)-36 b(h)360
b(its)g(allotmen)-36 b(t.)554 b(The)360 b(resulting)f(sc)-36
b(heduler)359 b(is)h(called)h(the)e(Cilk-AP)i(sc)-36
b(heduler.)2000 70395 y(W)-108 b(e)370 b(b)36 b(egin)370
b(with)g(a)h(brief)f(o)-36 b(v)g(erview)372 b(of)f(the)e(existing)i
(Cilk)h(implemen)-36 b(tation)370 b(and)f(then)g(describ)36
b(e)2000 72000 y(the)433 b(implemen)-36 b(tation)433
b(of)i(Cilk-AP)-108 b(.)25350 75321 y(51)p eop end
%%Page: 52 52
TeXDict begin 52 51 bop 2000 1328 a Fx(The)598 b(Cilk)h(Sc)-50
b(heduler)2000 3941 y Fy(The)430 b(existing)g(Cilk)h(sc)-36
b(heduler)429 b(uses)g(algorithm)h(WS)g(to)f(sc)-36 b(hedule)429
b(the)g(computation)g(of)i(a)f(job)2000 5546 y(\(WS)481
b(is)h(describ)36 b(ed)481 b(in)g(Section)h(4.1\).)723
b(A)481 b(Cilk)i(job)f(is)g(a)g(program)g(execution)f(consisting)h(of)h
(a)2000 7151 y(collection)504 b(of)h(Cilk)f Fo(pr)-78
b(o)g(c)g(e)g(dur)g(es)108 b Fy(;)539 b(eac)-36 b(h)504
b(pro)36 b(cessor)503 b(in)g(Cilk)i(\(called)f(a)f Fo(worker)148
b Fy(\))504 b(main)-36 b(tains)2000 8756 y(a)550 b(deque)g(of)g(ready)g
(pro)36 b(cedure)549 b(instances.)927 b(Cilk)552 b(uses)d(the)h(THE)g
(proto)36 b(col)550 b(to)g(manage)h(the)2000 10361 y(ready)436
b(deque)f(of)i(eac)-36 b(h)436 b(w)-36 b(ork)g(er)436
b([19].)586 b(This)436 b(proto)36 b(col)436 b(allo)-36
b(ws)438 b(an)d(exception)h(to)g(b)36 b(e)436 b(signaled)g(to)2000
11967 y(a)445 b(w)-36 b(ork)g(er)446 b(without)e(in)-36
b(tro)36 b(ducing)444 b(an)-36 b(y)445 b(additional)h(w)-36
b(ork)445 b(o)-36 b(v)g(erhead.)613 b(A)444 b(w)-36 b(ork)g(er)446
b(c)-36 b(hec)g(ks)445 b(for)g(an)2000 13572 y(exception)434
b(ev)-36 b(ery)434 b(time)g(it)f(p)36 b(ops)434 b(a)g(frame)g(from)g
(its)f(deque.)3951 15250 y(When)407 b(compiling)g(a)g(Cilk)i(program,)j
(the)407 b(program)g(is)g(\257rst)f(prepro)36 b(cessed)406
b(to)h(C)h(using)f(the)2000 16855 y Fp(cilk2c)507 b Fy(translator)k
([34])g(and)f(then)f(compiled)h(and)g(link)-36 b(ed)510
b(with)g(the)g(Cilk)i(run)-36 b(time)509 b(system)2000
18461 y(for)481 b(a)h(target)f(platform.)721 b(The)481
b(run)-36 b(time)480 b(system)h(is)g(resp)36 b(onsible)481
b(for)g(sc)-36 b(heduling)481 b(the)f(compu-)2000 20066
y(tation)508 b(of)h(a)f(job)g(\(it)g(con)-36 b(tains)507
b(the)h(co)36 b(de)508 b(for)g(the)g(Cilk)h(sc)-36 b(heduler\))506
b(and)i(is)g(the)f(only)i(part)e(of)2000 21671 y(Cilk)576
b(that)f(w)-36 b(e)575 b(mo)36 b(di\257ed)575 b(to)g(implemen)-36
b(t)574 b(Cilk-AP)-108 b(.)576 b(The)f(curren)-36 b(t)574
b(implemen)-36 b(tation)575 b(of)h(Cilk)2000 23276 y(has)474
b(a)g(p)36 b(ortable)474 b(run)-36 b(time)472 b(system)i(that)g(is)g
(designed)f(to)h(run)f(e\261cien)-36 b(tly)474 b(on)g(shared-memory)
2000 24881 y(symmetric)536 b(m)-36 b(ultipro)36 b(cessors)536
b(\(SMP's\).)884 b(Cilk)537 b(runs)e(on)h(UNIX-lik)-36
b(e)537 b(systems)f(that)f(supp)36 b(ort)2000 26486 y(POSIX)394
b(threads)f(\(Pthreads\),)401 b(whic)-36 b(h)394 b(are)h(used)e(to)i
(implemen)-36 b(t)394 b(the)f(w)-36 b(ork)g(ers)395 b(of)g(a)g(job.)565
b(When)2000 28091 y(a)435 b(Cilk)h(program)e(is)h(started,)f(the)g
(user)g(sp)36 b(eci\257es)434 b(the)g(n)-36 b(um)g(b)36
b(er)433 b(of)i(w)-36 b(ork)g(ers)435 b(that)f(the)g(Cilk)i(job)2000
29696 y(can)473 b(use;)492 b(the)472 b(run)-36 b(time)471
b(system)i(then)f(creates)h(this)f(man)-36 b(y)473 b(Pthreads)e(and)h
(runs)g(a)h(w)-36 b(ork)g(er)473 b(on)2000 31301 y(eac)-36
b(h)546 b(thread.)914 b(Cilk)547 b(relies)f(on)g(the)f(op)36
b(erating)546 b(system)g(to)g(sc)-36 b(hedule)544 b(the)i(w)-36
b(ork)g(ers)546 b(on)-36 b(to)546 b(the)2000 32906 y(ph)-36
b(ysical)434 b(pro)36 b(cessors)434 b(of)g(the)f(mac)-36
b(hine.)2000 37212 y Fx(The)598 b(Cilk-AP)h(Sc)-50 b(heduler)2000
39825 y Fy(The)647 b(Cilk-AP)g(system)g(uses)f(a)h(tec)-36
b(hnique)646 b(called)i(\\pro)36 b(cess)647 b(con)-36
b(trol")647 b([48])h(to)f(co)36 b(ordinate)2000 41430
y(the)609 b(allo)36 b(cation)611 b(of)f(pro)36 b(cessors)610
b(b)36 b(et)-36 b(w)g(een)609 b(the)g(\257rst)g(and)g(second)g(lev)-36
b(els)611 b(of)f(sc)-36 b(heduling.)1105 b(In)2000 43035
y(the)625 b(pro)36 b(cess)625 b(con)-36 b(trol)625 b(tec)-36
b(hnique,)673 b(jobs)625 b(create)h(virtual)f(pro)36
b(cessors)626 b(indep)36 b(enden)-36 b(tly)624 b(of)i(the)2000
44640 y(\257rst-lev)-36 b(el)473 b(sc)-36 b(heduler.)696
b(When)472 b(the)h(allotmen)-36 b(t)473 b(of)h(a)g(job)f(c)-36
b(hanges,)483 b(the)473 b(job)g(is)g(noti\257ed)g(of)h(the)2000
46245 y(condition)311 b(and)g(is)g(exp)36 b(ected)311
b(to)g(adjust)g(its)g(curren)-36 b(t)310 b(usage)h(accordingly)-108
b(.)539 b(Ev)-36 b(en)g(tually)-108 b(,)336 b(the)310
b(total)2000 47850 y(n)-36 b(um)g(b)36 b(er)473 b(of)j(virtual)g(pro)36
b(cessors)475 b(b)36 b(ecomes)475 b(equal)h(to)f(the)f(n)-36
b(um)g(b)36 b(er)474 b Fu(P)656 b Fy(of)475 b(ph)-36
b(ysical)476 b(pro)36 b(cessors)2000 49455 y(in)510 b(the)g(system.)808
b(Pro)36 b(cess)510 b(con)-36 b(trol)511 b(is)f(consisten)-36
b(t)510 b(with)g(the)f(design)h(of)h(Cilk-AP)-108 b(,)511
b(b)36 b(ecause)510 b(of)2000 51060 y(the)d(w)-36 b(a)g(y)509
b(the)e(job)h(sc)-36 b(heduler)507 b(adjusts)h(the)f(usage)h(of)g(a)g
(job.)802 b(It)508 b(is)g(also)g(consisten)-36 b(t)508
b(with)g(the)2000 52665 y(existing)443 b(implemen)-36
b(tation)442 b(of)h(Cilk,)j(whic)-36 b(h)442 b(virtualizes)h(a)g(job's)
g(pro)36 b(cessors)442 b(using)g(Pthreads.)2000 54270
y(The)414 b(extensions)f(to)h(the)f(run)-36 b(time)413
b(system)g(required)h(to)f(implemen)-36 b(t)413 b(pro)36
b(cess)414 b(con)-36 b(trol)414 b(in)f(Cilk-)2000 55875
y(AP)434 b(are)f(therefore)h(relativ)-36 b(ely)435 b(simple.)3951
57554 y(T)-108 b(o)615 b(reduce)e(the)h(o)-36 b(v)g(erhead)614
b(of)h(creating/destro)-36 b(ying)615 b(virtual)g(pro)36
b(cessors,)660 b(the)614 b(Cilk-AP)2000 59159 y(sc)-36
b(heduler)651 b(automatically)j(creates)e Fu(P)834 b
Fy(w)-36 b(ork)g(ers)652 b(at)h(the)e(b)36 b(eginning)652
b(of)h(a)g(job's)f(execution.)2000 60764 y(Mean)-36 b(while,)620
b(the)581 b(sc)-36 b(heduler)581 b(con)-36 b(tin)g(ues)581
b(to)i(run)e(on)g(its)i(o)-36 b(wn)582 b(Pthread,)618
b(whic)-36 b(h)582 b(w)-36 b(e)583 b(call)g(the)2000
62369 y Fo(b)-78 b(ackgr)g(ound)646 b(thr)-78 b(e)g(ad)144
b Fy(.)841 b(T)-108 b(o)521 b(adjust)g(the)f(pro)36 b(cessor)521
b(usage)g(of)g(a)g(job,)544 b(the)520 b(w)-36 b(ork)g(ers)521
b(are)g(put)2000 63975 y(to)420 b(sleep)h(or)f(a)-36
b(w)g(ak)g(ened)421 b(according)g(to)f(the)g(strategy)h(sp)36
b(eci\257ed)420 b(in)g(Section)g(6.1.)575 b(The)420 b(Cilk-AP)2000
65580 y(sc)-36 b(heduler)433 b(creates)g(an)h(unnamed)e(UNIX)i(pip)36
b(e)433 b(for)h(eac)-36 b(h)434 b(w)-36 b(ork)g(er)434
b(to)g(implemen)-36 b(t)433 b(the)g(sleeping)2000 67185
y(mec)-36 b(hanism:)752 b(a)521 b(w)-36 b(ork)g(er)521
b(go)36 b(es)522 b(to)f(sleep)f(b)-36 b(y)521 b(p)36
b(erforming)521 b(a)g(blo)36 b(c)-36 b(king)521 b(read)g(on)f(its)h
(pip)36 b(e,)542 b(and)2000 68790 y(a)434 b(sleeping)h(w)-36
b(ork)g(er)434 b(is)h(a)-36 b(w)g(ak)g(ened)434 b(when)g(either)f(the)h
(bac)-36 b(kground)433 b(thread)h(or)g(another)f(w)-36
b(ork)g(er)2000 70395 y(writes)372 b(to)f(its)h(pip)36
b(e.)557 b(Initially)-108 b(,)385 b(the)371 b(desire)g(of)h(a)g(job)g
(is)g(set)f(to)g(1)h(pro)36 b(cessor,)384 b(whic)-36
b(h)371 b(causes)h(most)2000 72000 y(of)402 b(the)f(w)-36
b(ork)g(ers)402 b(\(whic)-36 b(h)401 b(start)h(out)f(stealing\))h(to)g
(put)e(themselv)-36 b(es)402 b(to)f(sleep.)568 b(After)402
b(this)f(p)36 b(oin)-36 b(t,)25350 75321 y(52)p eop end
%%Page: 53 53
TeXDict begin 53 52 bop 2000 1328 a Fy(the)427 b(job's)i(desire)f(is)g
(measured)g(p)36 b(erio)g(dically)429 b(b)-36 b(y)428
b(the)g(bac)-36 b(kground)427 b(thread)h(using)f(the)h(pro)36
b(cess)2000 2933 y(describ)g(ed)519 b(in)i(Section)e(6.1.)840
b(The)520 b(steal-attempt)g(coun)-36 b(ters)519 b(used)g(to)i
(calculated)f Fp(PUS)p 46173 2933 411 45 v 491 w(ratio)2000
4539 y Fy(are)572 b(main)-36 b(tained)571 b(b)-36 b(y)571
b(eac)-36 b(h)571 b(w)-36 b(ork)g(er)572 b(using)g(the)e(ev)-36
b(en)g(t-recording)571 b(mec)-36 b(hanism)571 b(already)h(built)2000
6144 y(in)-36 b(to)433 b(Cilk.)3951 7749 y(According)462
b(to)h(the)f(pro)36 b(cess-con)-36 b(trol)462 b(tec)-36
b(hnique,)469 b(no)463 b(w)-36 b(ork)g(er)462 b(is)h(forcibly)h(put)d
(to)i(sleep)f(b)-36 b(y)2000 9354 y(the)460 b(Cilk-AP)i(sc)-36
b(heduler)459 b(when)i(reducing)f(a)h(job's)g(usage.)660
b(Instead,)467 b(the)460 b(sc)-36 b(heduler)460 b(signals)i(a)2000
10959 y(sleep)322 b(exception)g(to)h(the)e(w)-36 b(ork)g(er)323
b(from)f(the)g(bac)-36 b(kground)321 b(thread)g(using)h(the)g(existing)
h(exception)2000 12564 y(mec)-36 b(hanism)456 b(of)h(Cilk)h([19].)649
b(Since)456 b(the)g(w)-36 b(ork)g(er)457 b(only)g(c)-36
b(hec)g(ks)456 b(for)i(an)e(exception)h(after)g(a)f(frame)2000
14169 y(is)445 b(p)36 b(opp)g(ed)444 b(from)i(its)f(deque,)j(it)d(ma)
-36 b(y)446 b(tak)-36 b(e)445 b(a)h(while)f(for)h(the)e(w)-36
b(ork)g(er)446 b(to)f(notice)g(the)g(exception)2000 15774
y(if)631 b(the)e(thread)h(it)g(is)g(curren)-36 b(tly)630
b(executing)g(is)h(v)-36 b(ery)630 b(long)h(\(for)f(example,)681
b(if)630 b(the)g(w)-36 b(ork)g(er)631 b(is)2000 17379
y(executing)613 b(a)h(sub)36 b(computation)612 b(of)h(the)g(LOOPY)e(b)
36 b(enc)-36 b(hmark\).)1116 b(In)613 b(the)f(w)-36 b(orst)614
b(case,)658 b(this)2000 18984 y(dela)-36 b(y)592 b(causes)f(the)g
(total)g(n)-36 b(um)g(b)36 b(er)590 b(of)i(w)-36 b(ork)g(ers)592
b(in)f(the)f(system)i(to)f(exceed)g Fu(P)181 b Fy(,)631
b(resulting)591 b(in)2000 20589 y(added)457 b(o)-36 b(v)g(erhead)458
b(due)f(to)h(con)-36 b(text)458 b(switc)-36 b(hing)458
b(and)g(sync)-36 b(hronization)458 b(dela)-36 b(ys)458
b([17].)653 b(A)458 b(similar)2000 22195 y(situation)543
b(o)36 b(ccurs)542 b(when)g(the)g(n)-36 b(um)g(b)36 b(er)541
b(of)i(jobs)g(in)f(the)g(system)h(exceeds)g Fu(P)181
b Fy(,)570 b(since)542 b(eac)-36 b(h)543 b(job)2000 23800
y(is)465 b(giv)-36 b(en)466 b(at)f(least)g(1)h(pro)36
b(cessor.)673 b(While)465 b(this)g(phenomenon)e(of)j(pro)36
b(cess)465 b(con)-36 b(trol)465 b(temp)36 b(orarily)2000
25405 y(a\256ects)556 b(the)f(p)36 b(erformance)555 b(of)i(running)d
(jobs,)587 b(it)556 b(is)g(a)f(m)-36 b(uc)g(h)555 b(b)36
b(etter)555 b(alternativ)-36 b(e)556 b(to)g(p)36 b(olicies)2000
27010 y(that)433 b(resort)h(to)f(queuing)h(in)f(these)g(situations)h
([52].)4533 48716 y @beginspecial 150 @llx 74 @lly 794
@urx 374 @ury 3864 @rwi @setspecial
%%BeginDocument: tsa.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - Thesis Figures.ppt)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910130614-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 150 74 794 374
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
150 74 moveto 794 74 lineto 794 374 lineto 150 374 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
150 74 644 301 rectclip
[ 0 -1 1 0 76.87985 524.80173 ] concat
/N53 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font ACEGCI+CourierNewPSMT
11 dict begin
/FontName /ACEGCI+CourierNewPSMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1318 dict dup begin
/.notdef 
<10bf31704faacd68130743d1032b190034e66bfe220959d1d966dfb0f017
1a28cd5cf1737c91b7113f3bf6> ND 
/underscore 
<10bf317079c84b92ad1db04e5bb4bc76ca2bec87807729f667d307425fd7
8f71833699c5c610e21c83e59521cc1d16799d35ce5613d18bc1ba621bef
5964726b7942b1fd41ef3de5e1b9dc1748> ND 
/a 
<10bf3170232f85bb91fd59ea4e6eead0126de560aebc020c547b48f32d2b
abf93200bad04879ad1bd23f7ed1ee74f058dcafeda9b28230093761878b
ce932f46a60e5ee361904ea5f5aa9dada691c20e75c341d821d103a06670
bd04aa001d36164c2c53462a248c68b1a096e1e1731f0d513d61689724b1
eaf4466b0b071658231f9e540ea28aa6001d68e22fe44fd43054e99d5e01
1b42649288af7cb657336a6dab295618d586bc69c3219cd3e6ddfbf9d9b8
5146df15a31b20e2116d63f0204c3258194efa025105c76978026da95a2d
2c6a82899809d2f0446bae470cb67bd05df83f189d0e1cd217bace53a6ae
ff> ND 
/c 
<10bf31702ce1b272a974523f106d916e62297489d83166a408d334ea0831
8891c563969ac7a1af1b8242f3cd390eca23e4a7bbe0e5e28ff78928646a
5ceeab9b6644150ee02d024168d48f4ba55347e031ede47a7ceacd9a4580
91243c90d13538afab4e9559496040795ba61d3de23b6ff5b85e7b43e53b
ae89d195b0e7298e1a19b83fbf87ed268322197550f50d27ee7ef693c9b0
7e54c994416b10ea39f48b7297e7fe04a3b69de806c6ce0183799b687e97
b7d40f0fe3b1187f8258be5558cfa1d00c017c9ee1> ND 
/e 
<10bf3170383ec05dd664788074553f78752bdcb76c418fd5ffe9a10b0d24
a52cb57694a22e7c481c43c88a64f0e0098fcd3307e0b20b122d8920b0f8
56b30705d24db3f5fc4badd1597f173ff5476673dbb00f0694615ce846a5
a647b19e7820da01c8104df7d59927e6c05c834865730c173833000ec3d5
e58b6b8f7e43633b2ca59416f67c8cd3f143402766c1da49ee8e03c2f589
a9048d7887964fd46cb0de319625ab7e13> ND 
/h 
<10bf3170472740c4a38a899208b8a13c7b0fb1c21b83e74c0a517820101b
10e67cbc80626559d428aaa06780d6e8840a305c7b19c5120f84f983a428
3ee995fabee18b04d1a60f7f09352ae663446a001427d4f8a415e57373aa
3d1e08dfca375fdc63db87c169f8afc5dfaf544f695f5fe73d149f43c503
9400e47fe454e86201fa5c9a6c4b6bb19be41733c785845ab4aeab8ebb8d
089400238f96f4027124dd14aa9c6dd4dc188fa775c938823256369b045c
9c92db4625e79324fffdc2e3d84180858ec6ee204ab498fea91aa6c57a8f
112a872407a0acd4ad6616b9cd788939c223df80af38236951c6a47222e0
02fbb0712b820a31a73a> ND 
/i 
<10bf31701575859094c8d8dccbc4f7940557b0dba46eabcd2b410561593f
1c3b57c0f4283368afb1586fb0f465724159f7c8f7c4c45cbf98842cdbdd
a3bac01111ae963878f51cab75fb912a6bcb1ec9b94cdfe0c63078f174b9
1445570a816b4348a969be2042e9bb526ae4184baf486a97be393f42778f
3f19a1af185cd40db467dcfbdd> ND 
/k 
<10bf31701a6e2450ef156e7bb7c31add805f21dd31be7f1292e16454c4cf
6364036af9e24898ad91b735d39e2f9f2a3c88a59b9f2c7c54b95f2ea996
2bbe6e82a790af3cc247a94f104fd601e97ffb79a7fe32b289b5b9782eb3
a54aaec7e1387f5592c438bae21f59c6895dfb545a528d23a12d7658117d
5d0b8286abd5979ea17b5acd9416a15bbfe127cae7021848b6b96ed09953
591ea103c7283be955035566f20aa4e400126e92742a6db2f3841ceb4e99
a902fdb16a243816a9b4a793ba77b176b40b5735e0cfe29019fc4a7b047a
28512b082f34a811283a2b1bbc15bf0e1ef4878ec103dce5fabb19> ND 
/o 
<10bf31702094e62e57ba031cd9f618fa49b1fbf116ef636835dbc7768fae
c8df4c0908b89fe0646715c51b45a90079abd2690a10607ae79881b92b5a
375bed1e8f05175f9423d58ec0f6889237f015a8145f6d8109026bc2a146
4c7ae9fee59de83eb06630e4d965fabef7de6894e14fb92feeba7e76c259
ce36c38d589caa7f92751b8a> ND 
/p 
<10bf31705374ecc9a451c6e4e09171a4eea24c71ac7d1dce65b5fdc06f32
5ec5231b780eaf8855d18e1abfa3edcdefe9eee40b04669d804d8bb56e46
7bb165d25af4eeb819555983e617eb34dc365af46ec63b7b2dfeec055759
85fef68746c83d78f454411c502ccf6511435e6ea5f32f8cd0ddd0177e59
04d8ec2d6ce4a3ee957d42a0b7ef335bd887529778118efa1c4057f08ae9
8cd6df47f0d380fe0c7b1b2a343d179289b6765efe33e43a31429182affd
65e0d1d12d7312011a30ae9c6ed0f6f7e4377d6170e0e58d89bba5bb1706
718428618d1199cde4b00b2751a3653aa25dc422ae2fb6b8ab> ND 
/r 
<10bf31702ce1b272e1cfea273864a55b510451ce2e699e3a05850d33fa41
fd2614bd419625fc1c6755defd118fd83f002d6a0ec3dc82f8442b64c24a
a84fb6745177fd22b8b0b2c2b1dc5a86d4b6b3259781be385f368a63b247
0c71a448bc514b3db35bcf7863f44c92c7a044dbf87c371f4b2bbcf4c896
797386e5c2baf124d22bc9c3f04cf863d5a7039c892f654d46812bce460c
ab30b56fa13b9a757b612341d59389f65b9d7682ba6a833799fc3c3048ff
d2f126276eebb8e64c01658ce6f7f21bc018285d8fb8eb> ND 
/s 
<10bf317002c334dab3629f7a671113a749f85c0dc9cd007b5c722c30c298
c379034a1d4dff63659ab6ee7d28c1b50f6acfbe7097ca323ff9a1d92da8
a5a8fa26a6b978329c7ac9264ffd0c310fee0de2aa9eea54b20b9b72f165
69d2fb00093c098531b58470c59a04b3f549cc5176f6c0cbeb8e781060df
60db409a177d850029a682caf2a8dfa86e97718d5190c2b20d5fbbe88daa
c5cda07598bbfae6f51515472e4b6cd489cc11d1d5097ec478219063517e
bf9d6e33f8197ca58033b5a19aa2c87426655e79f87bc280c4b0a1f6234b
db4b0b5685733017a57444d9d45a085cf22a811f5a9c277184e642721bc9
c089f5c25ebd8c8f45f6983859fafaae7e67882d8be9cafc094c7bb60ba6
3afba644e37c53d6aeb42ee83b3543622478875ffb503a11244e3ad97ccc
e2c7171d3675844e40975990d6> ND 
/t 
<10bf31702094e62e5851135cb2cea9c8879583241a0e969bea74a623b2a4
bc5d546fe56dabf32903e97e457eaab7f6d06bd0f8e9bb64762fd6bc5100
1d4a3a56e8c5514ceb4878028b31374e0165e40ecb9cabcef37f2e33c2d0
bfcb7d3627376c4b2081651e1e2c272abc99d0c00094d3de745d7b62fbaf
41bf6ff60b962626842781631bf9513246667da15ddb5457e1ab9e8a2424
eec22cf0f015f40246e797ccc20e63b7c00d8e6cace3c37f93b8f3cd5a4d
24fb69db1bf13106ddcc61ed00b020b826230a453c28542c1a> ND 
/v 
<10bf31705ac92f4103cbed62fab9c3efa08dbda54f3e3541020524c1fd5b
b866cfd0d1e55779567ca1f180045e08271d29f89482e759cbce37ad5d87
0b2bdc3c5712e2b297be931100a2b9ab2403c0947c7188e9d01eeacab8fe
19106b3f8e5bca5915402df947944402685362dd9f8e2705f703414662fb
9d39b4000045f883c878bbf791d59f82cd48e2b562b0c2698049c2b050ab
3d76f044220a033be3cf1da7d21503> ND 
/w 
<10bf317054a25e4d3fd8a5c041cd868e055b2e0ceb62c12b2c6f8f557f7f
dd824797705967dce1578cce540d7e10890c749b4aad1a2be670a881264d
36e599096a57844619c8b95e2d7be3aa5067ca60369b0d44991366824971
7801b7eb0c3775d29381dc7ed4a8d5680585853c26fb48e5d4c62ce99500
490efc3f114410c972240c3c3fa187bd2134c9fd5f1cabb56e9b7775d151
e099234da0e513bc427145f0c8d55b336beb665cec2d202eb8406464> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACEGCI+CourierNewPSMT findfont /Encoding get
dup 0 /.notdef put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
pop
%%EndResource
[/N28/ACEGCI+CourierNewPSMT 1 TZ
%%BeginResource: font ACEGBC+Arial,BoldItalic
11 dict begin
/FontName /ACEGBC+Arial,BoldItalic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 956 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/P 
<10bf317046e9af1cf423124b07084dab0e605c2db16002fd3c7e6d8f84e9
f31176b512d3f087c6b8a5a5c8f948a36ca56c75c4daeeba544ecfc159c5
c2951f5d1caf3fbfc249ce10f2a981440a1f9a92d7b0d5079d0501098dfc
2433bd415cc9b2cc5dde7b1078c6779126b1853a8bd9cd384737aa262905
4eeef9749c12b822bbb97875e9e86656036c2dcac30bf2> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACEGBC+Arial,BoldItalic findfont /Encoding get
dup 0 /.notdef put
dup 80 /P put
pop
%%EndResource
[/N27/ACEGBC+Arial,BoldItalic 1 TZ
%%BeginResource: font ACEGAG+Arial,Bold
11 dict begin
/FontName /ACEGAG+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/one 
<10bf317028182169f7f13730e09770e210fcfa2d271bc92d4342c903256c
6dd594be31116a507d9e9bf7a06f7b02cb638869b9> ND 
/two 
<10bf3170560f9ea7e16bf7693df0cb4f75611840d7a72974788dc612e04a
7d391fa4118f20c60ca0210831c4216daf82822fd8577427332b85b36191
bafa300362603f7ac5486d82f6744735bd9aea952436a54773d0a34c3025
802ed04fffcb4fa74d75ac70e802cddfdbd6346360b0b1acf15e7ef6f0dd
ea8a6108bc3278173c6d152ded71a3f7dba5eefbc64d9c815a4795> ND 
/three 
<10bf3170435d0d440860530d539ff91fbeb84b45ccc7a1133230e64e009e
0c490ad4a8c72e30c66b9d7da2ebb61201fd5dbcf58b0c0488dc2a377321
5f26e0f7b61ae06bbd548a7c70db3930bb70d925be0576849d7017235523
559a7bd33c2b1cf718bf0b01521a2da1ae141319b8a7b7648826982192c9
9cac43d499c3346f8ae704779f7b332be818bd1aedb27938b45cc4303b57
6f7b6048a80721796cf703217479afeb4946fccc211036e97d76c144b665
49f485406b5a21bfa9b3b6ddd1fb25f39a00f379> ND 
/four 
<10bf31706c4c139ade6f8bf362e1c7a16dbcd949f520c66a4ee068301011
5c84fd3458c85a1ed0da84b737ec75e38936c9e254983ec49c73b3d2f1ea
186a33> ND 
/W 
<10bf31707c612c3b7bd433b9e43e6202cd879c4bc827a4b400cb2e1b28b9
caedd1d06dfccc9032db0eb18dd67d81496e93e802d7046db29767309287
25e1cb0f1f0043> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/k 
<10bf31703cf850293dbeacb4825d9b43eba4ffb09ca8073f22015f91e054
b1f7b181ceef1abb9c955a524d127d186a3d6e0ab18596ed70aada> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACEGAG+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 87 /W put
dup 101 /e put
dup 107 /k put
dup 111 /o put
dup 114 /r put
dup 160 /space put
pop
%%EndResource
[/N26/ACEGAG+Arial,Bold 1 TZ
%%BeginResource: font ACEFAJ+Arial,Italic
11 dict begin
/FontName /ACEFAJ+Arial,Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 956 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/J 
<10bf31705e925b80b480841c9c1eebf4e7cab3458ee2ccb086469af42f4b
bfc0e13d1c5eab3ff207e03a8aa1909053b661d38e81e1b6de8fe9830fd3
b14e97e26ef603346e16e7af41ceccdb833922d41f51e219ec1e04c8c98a
02d9cf1294f1a711899222a375a5> ND 
/P 
<10bf3170448a9e9b4f07b297744b05b6ed61cba8ea83e0513d8b44afd680
60d02b65b0432cce0e7e00989310e0fc4783855e8d2bc0969fdd92c17ad3
3426a50c47994ccc90096b37bceda47a84b3d9027039c98772c3745754ce
a902b09e76fed7509971d2707bdec4850507348f474d6dc2ca40415ad957
97472821948c0f086b6c43a389f126c30984bdaa6b088f> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACEFAJ+Arial,Italic findfont /Encoding get
dup 0 /.notdef put
dup 74 /J put
dup 80 /P put
pop
%%EndResource
[/N25/ACEFAJ+Arial,Italic 1 TZ
%%BeginResource: font ACECGH+Arial
11 dict begin
/FontName /ACECGH+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/slash 
<10bf317079c7734b2b2d10870fa08bf22c5d2d2b831224fa01d492> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/equal 
<10bf317031d9337efec57cde6d0e2594940fb2f7d43f8231e7e886eb65b9
941cfa14b36a37f61b> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153ca9a91165
96e2ea405597ca7f292098a14c92b8766b957d29536d6a74922bce6efa67
d7fa67d47a8ae997e897ea42f1e923c09a3ad5b1aa2186622859ef03a213
f7c26727c45c24d289e1bf8fa6a719352242839e565e8af9cb5c48758232
20530e01b09cb28b590a86024fb341940ed5d19a7e036981d38ceef64334
a577636f4f149330a371e1> ND 
/E 
<10bf317028198094ce8cd275e305c79a7a258ddd928bd9dc896c51a549b4
869242612fc9caa06c2483d03d9996ef> ND 
/G 
<10bf317032094fc341dd3fe1e9917e7219e2faf83af778bdd7ec0c55098b
e0e9b7739ea63012a93f617db4a54ea175a87f3963b18d82408a4b4aca07
c62fb2e9535e5b6e8c7ae61eda2a1953530b7a1c20e1c613736eaa239c10
515a07f3aa0b6d64123373a1e5a99a624259a238e115671adf7333dd41a7
8ab39a78f4284786c4df0d20429167addc89fc078c7c417063dcfe0d52c4
81387bcf48cb4c7455f1384c6dd065c8e657f42b246b3a7cb37a89589130
dac20b879178be4ff3a9d7cba8> ND 
/H 
<10bf317029572e11ba08a126ba806446a0c9c3ab3c813945ebc6acc68365
3aed03753c654018a3b91d9f74de> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/J 
<10bf317054a23a350bd8657c97523c2449830f2addfaa5717667b59bcb2d
036471fab8ce4c5ebc99101e60b80084d709068021fa27df51efcf4e0c39
2f415e56722e844c86f08af512f65c2828294800fceec78aa058d6f73bf5
497ea1a0> ND 
/K 
<10bf317026ba62062704f9ba87c1ab1fc7730cdfdacc88df1e45004269f1
b43137c9251fe2841c5423281c9858682237f26a47da9c17460f> ND 
/L 
<10bf317026bbdb3a0b5fa193bb84a78137b0c1eca959bcd3e291fc955f> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/O 
<10bf317049853377ebc41c579b14b81e62dc18fcb981afe077cd458d5644
5d162ad01eefba418dc940d1d3586db0f88db59e5528595c3075286d478f
ea78855f3395d4738c829bc906481255e6921ecaae5330664e2d60658bdb
995713c78bf5f3c9aa2888eb787edfd0a898f063dfe41961d0136090fc22
3d36c7c34c3efd0ca3ba6ab8d9dee45f39f5c1354854a0db2f2d67ebe6d0
37578a0ff716ab77d6c101> ND 
/P 
<10bf31702a85d5ccd794b0f82fad1df586d5fbd89610cffce961ef0c01e8
0dd41794780f980f6fae77f9030913b26e9faf7c4997be350b070860e734
b58d1af4e1f6fdede1ce393d1a10ecb0df5eb5d5689fc4b0c8ea8e8ea551
86c9a594f8c2368e99f819874a733380254b54725709f6d7ae5e> ND 
/R 
<10bf31702819c97bfff21764697e50774ba74072e0daf25a84b5ab81ce67
f36424a8f4f31afdf4de9e5912f7a5ba0ce90948b990647285d2500d6d57
ef6e940fb321e739e33f71f0994fb0b96bf3e18815066ca201f1578cce2a
71a0a57bc87021521bfe1b691fde6e9063a575e47bf725cfd1c0afa40b0c
a839a6c28bfd0b7f0f7469b4cf16ee3c7a54706ea2da49ba1db858f3c370
3042b60d2181c6c1afb0bef5eb> ND 
/S 
<10bf31704ab370a8a6c235279ed6c2ccfc716fa1295d141c34dd24f95c73
82e11c724a74e86021432ff58ab0f9585559c2cc7a3fe0720eadda5eee3e
cb055c76e8d7f22cfddbcfbe4ee1a562282b307d86efef90d9a8c71c96ab
9543712fa6240508ea1f38536804c47dfcc21f777c873fc11b7e20f7a228
b35e8d75f100a7da6082feb065d087853344b8bf00df7291cc74173d8c17
2964ca635a4e981f1604dc10d454f452e70073d386bcbe3ed4c09e72aa02
e7eb1e382ccb2fe70e1e9e3084e7824b4261723bffe42f4fc72d36ddcdd9
e884d10e18a55004b6149a9b0c7ead4b42afa8906a80deea322a930f4d91
ac35a6e6186e5d082f09> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/V 
<10bf31707d937b42ca5aa917fb8735867898e23266ce63f299decbd88902
a58f50d327fa84a3893c0fe3af9d5b8d8ece1349c10cbf> ND 
/W 
<10bf317065f5a4c4e3c80d2d3c9a1fcad659c2e6c6d2c6d3837d757d8ce5
bc1499c5c524e9e63c31a8d844fdbf4be5dd703a7370e5d253c1c2978b20
65c127b3368a3f09d4a091f1db80d20fc735898bba004f1ee64395ffadec
3ecc114449263c21476fc24c8796d2> ND 
/underscore 
<10bf31708ee791b2da218e69d97bd547a4d26ba7404ea4bc55> ND 
/a 
<10bf31705d64e193f685fe465eb14b2f9aa41e82540f554b50893fe63efd
4692fb4fc721a117ec78b6e9515c29fcb60e3aee68a6df1c3946e2cf738d
cda3e29fd055085b4d27d1a9d3bf0581a4eb2a1ee52161275aad552d9745
cae2527ba314929e16b3adcf63fbfe5b600507b479eb6bac8dbf57f9ea61
cf0c38792d951ff40006e32bfab335adbde18dd700c5843625ec18424a1a
470a3d82d751a36d8b4a69f1f5fb08cfc2b94ed2658b49c9985bc490581e
62f221617e1b4bb61c6dcc9e8e61b29e5f74c69c328c213bfddbc217436d
81d1dfe6a13e1cac30c3fa16cb4e265d8db4217e880afbaeb0227e92e214
5534c463a18baaf155fa6678668091a696c5190fde> ND 
/b 
<10bf31703e65fd7e1217c9f29c64bb1b9e17851bf25dd0466fa484e27564
2ef62da05fc0e561425aa7c0cf759f2df2fed9f5cab4e563d9d485ca6e49
6a23023cc7d5336a38ed163f6d25eac0416c891913363ad8aab5312feed7
de0b0bbcc0db8b66958d96174480f5040af2cfb1590a9410022fc6398cb1
d4435f6325a11aad4c77347983eb4748b4ada02263a3> ND 
/c 
<10bf317040c2e74a5fc1787aadb34082a8ba9190bcda4e6309e8a2068a81
15bfd146d0733468211951e54d63b47a4bb20769a10fe2c7ab6af1003e92
c307e62580c4fc4fcb30f321670fe8ea6fc382860db4ab478167543744c2
7eee42bb190b50ff8a3de3702b096b5a0dbc687d9934d27330861f8f151c
46c0261f0a9972bb3873263c80a2161987b9c9> ND 
/e 
<10bf3170422fdb64737aa996af2c16aa574465e2c930c2d6c70f2c72ffe1
f5ae975a706a2cc8ae00b6163837b6e50d4221eaf76eb409c442c6352c58
b6f53cd585b0d4d507cc48acee66f883df189a3c8bf101622dd4022876bd
14603c08f3944b80e2f5e4e7a62999282a391fd9d657c5f0af2673747752
c83501ca742ca70911b84f52143e873794bcaff697373392d39b09bb> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19b91e9f126
e6f5aabcb4381bf8bfee294b80bae1d888f1314da01fbe02> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
/n 
<10bf31703f932f5ecb68c849e33d657776fc326fe2f54f4bc03b7f3fa95b
3e37550287a3822f66bab52dc802d77dcc608442caba0a099550a895735f
067f96366abd71cd4bfcf52bc4da085550e8eac7df2e04a58377ae472993
06a8805e14d9bcbf32aaef31> ND 
/o 
<10bf31705e921373942a1df751ebc6db4ec72c05404f7de2844dacd3e4cf
31126a38f288b6ae9b7d8f2dfbc6da8ac0d7c81b1e33f3b0d42a36c4711f
eaf8cb9fa6d4a4a92b6ac2214800466fb64367d9087f85fe66540f2cdace
637f2d8f1a779e763ea7643d7ab1f37b5e7c3da5a24dc2e927da3937c07b
4fef169bc767237647c3151dea42fc9d1c> ND 
/r 
<10bf31703e6aa4be08d01c511eaadd0473a3483c7b936ed6e6cf91cffcbd
a815b8df60ae150c20432c17a46c0682480f6226770a8905e960aec3fe5e
934f4cc994b08abf0fc9d432168086e4> ND 
/s 
<10bf3170586c182310772ef569c52e8a28e70ab0d8a07df40f23a570f6b8
110b6ca531096c401daf049a20dcabf79d56164e73db3a474a30573096a7
404eb97e5ce29f730842fc393ad09b95ed0671e10fb71efb1a363521b013
915cc88b3ac6f0ba589395594814da911281623368756fb16579fa9358a8
75b177830c9cbc6555453d35bc648383a53ae4cf9040fc62716099ee082d
9b7578cf9dde30b64249b8b9795ff42c9c8ae9907909c29f306594b1c23c
555bcd231348fd1800442f0eb86aff30c0e412f71e22a228c30832473ba4
3b655be973df9c78943b851583a400b4a0e41168da8a907e9f2f> ND 
/t 
<10bf31706fd71d386b6c99b1d09bb1ad104eda9ab80d9f94a735d54116f5
9c58b6bda429b5392910a11f88b68881d1c7fdb07e40a06d14aa641d6e68
4a64544555b97e482a6c7cb4aa6fb83472e09b52ff42b290b85900fae15f
7904eb69f44b98bcd014> ND 
/u 
<10bf3170396d6c263643d7ba7494b52feb74e74b6fa68562a82a97fbbf5e
bed8907781d8ac84572229182c5c4b88be68c16550f8f2c56a1aafc9bc96
2dd9615eeaed29124f4b67a26151f4cd2e0ab6ff1b11f4d5d3a9d63d9288
f75e43ea4479033e77ce4d726627ff6cb14d9150> ND 
/ellipsis 
<10bf317005ae4251cd21abe49da2ed2a9dd884bb56dbc7458ad71cf5a1d6
2dfe225499a0bcd86f7ad5ac4a6a41> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACECGH+Arial findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 61 /equal put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 133 /ellipsis put
dup 160 /space put
pop
%%EndResource
[/N23/ACECGH+Arial 1 TZ
%%BeginResource: font ACDMFF+TimesNewRoman,Italic
11 dict begin
/FontName /ACDMFF+TimesNewRoman,Italic def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 940 dict dup begin
/.notdef 
<10bf317005b8302fd45b07fb1549d56700cd874f9785acaaa30edf166f7d
7fe0592f51d07c5aaaff66bb85fa> ND 
/G 
<10bf317022f0081597cff576c41b27466fe1e52d193034b36888cf3b2ca3
68a68d779fafce3b72c5293d6a3f887f14f5a58b0034aee71698546c4c0b
991181b84d52072635415222f7bd056e66888b79f595879cd3baf7efe159
063d43845ef9a025705d8ec9651b457099654394d2992e33c012343fc4f2
66bd7986fb9a6f6efaf2a6ba768f8b612ddae90ca0c801101a2b8812c0d1
878114ac488c2949f4102b5df4236669c09640ae29afbccb443338828b0c
4517115a6e5e3eaba334cf1dcb7ac13c67e72a57aac6dbd46b8372a5bd25
904367c6e60889f07aa8786d7c3e90b25aad92f3e9244c386428145e> ND 
/J 
<10bf31709b62baa6ed3ff432fee50dc00607d5d72252eb6bcb129243db2d
20da9a1bba6a2a66e7e0aa49e064b3cd91583d479cde6fdea9b68aa6c210
4c340f6d9eaee545ca5b3220798b86c6c501559929908fda3517e01edd65
a0870f99744c55f160054bcc26b2401397f00007e631a3ec8136de71a1ea
54cb887274c598e3d9a0cf2e81ae1712a04402d31806c05b33b9d0d9e621
a3c3431c175d72d405299a8e75c6a1cb1be61e602566dfa0681fdb581ce1
0fdbd4208d25dddacc> ND 
/N 
<10bf31709dce1b1ed41c47addeb7a391f41ed8083f4afeff1c947df10a4d
2de36425e89f6bd82e60d9023e2d78bc84830b34e62f8a4568be7bc208ea
4fc6e9ca969e8aec41dd80f80f4c4fe472639ba3366569cb87de5f9213ad
98120d1a71b4584b509f09b5200a62d6e7ca1119d61533e703d2441b08cc
bd9b3c336c42188f729bae655049971d2e4b7d6cd44a7b76666f37ef7463
60a28e6259dace068776b5c8cc33f800437ece6dccba77e4b0e7> ND 
/P 
<10bf3170815b61898ffe1eb7109b3eb3fe8179c947126cde0ca1f0f3a57b
4fde4a0e49d820192254c426f8d7a6d5299e28c0b3aaba378c26c6f147b4
8a5a4c0122cff4b969b15e30e1453b0937d2109da30e4ce446da9a7e9ab9
e76e27900c04c0add80988c0c7b9922b0ef4ac86d418261120e07369b2d9
b1acf0aff00cee423b3cd264a8c70a5a05e09d6c0a09605b3b34e7c29b8d
125ff0629d3b1843ba7d87672b5291e3ddb8d717dd2e32b1285a5857a4d9
e80141d3d7199fd282a27fa888d0b8> ND 
/v 
<10bf317052452fc5aad0396ffeda7b26078ecb2bae9160e8a2ff79b8413c
c7863fa52f084c124f376817021d111fd45356a585fa0f70e03eec5a8676
69a27d45857cbfc4b89a5c4acca120869d8cdd588b39c064d4789bf98644
9a3831f33b7c7bd3b9aba947b52369d2b2d9cafbc4e36825d1ad23fe62d1
3909f21c6e75f9844e2a64feab8b455daba318be09eef7ede45676853dea
cc5a8d23424c2053e51531cbf2f4df> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/ACDMFF+TimesNewRoman,Italic findfont /Encoding get
dup 0 /.notdef put
dup 71 /G put
dup 74 /J put
dup 78 /N put
dup 80 /P put
dup 118 /v put
pop
%%EndResource
[/N22/ACDMFF+TimesNewRoman,Italic 1 TZ
q
n
36 756 540 -720 re
eoclip
n
false setSA
n
36 756 540 -720 re
1 1 1 setrgbcolor
f
Q
false setSA
0 0 0 setrgbcolor
194.16 556.5 m
/N23 [0 21 -21 0 0 0] Tf
(\205) show
n
349.2 692.22 42 -588 re
1 1 1  setrgbcolor
f
1 J
0 j
0.75 w
8 M
[] 0 d
n
349.26 104.22 42 588 re
0.0039978 0.0039978 0.0039978  setrgbcolor
S
n
162 91.74 m
162 86.22 166.5 81.72 172.02 81.72 c
211.98 81.72 l
217.5 81.72 222 86.22 222 91.74 c
222 173.76 l
222 179.28 217.5 183.72 211.98 183.72 c
172.02 183.72 l
166.5 183.72 162 179.28 162 173.76 c
0.867004 0.867004 0.867004  setrgbcolor
eofill
1 j
10 M
n
162 91.74 m
162 86.22 166.5 81.72 172.02 81.72 c
211.98 81.72 l
217.5 81.72 222 86.22 222 91.74 c
222 173.76 l
222 179.28 217.5 183.72 211.98 183.72 c
172.02 183.72 l
166.5 183.72 162 179.28 162 173.76 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
180.66 105.9 m
/N23 [0 13.98 -13.98 0 0 0] Tf
(W) show
(orker 1)
[7.76861 4.65097 6.98573 7.76861 4.65097 3.84164 7.76861 ] pdfys
200.82 95.04 m
/N23 [0 10.02 -10.02 0 0 0] Tf
(status = ACTIVE)
[5.04012 2.70145 5.54513 2.70145 5.54513 5.04012 2.70147 5.8798 2.76159 6.65727 7.2083 
6.09616 2.70145 6.65727 6.65727 ] pdfys
n
162 205.74 m
162 200.22 166.5 195.72 172.02 195.72 c
211.98 195.72 l
217.5 195.72 222 200.22 222 205.74 c
222 287.76 l
222 293.28 217.5 297.72 211.98 297.72 c
172.02 297.72 l
166.5 297.72 162 293.28 162 287.76 c
0.867004 0.867004 0.867004  setrgbcolor
eofill
n
162 205.74 m
162 200.22 166.5 195.72 172.02 195.72 c
211.98 195.72 l
217.5 195.72 222 200.22 222 205.74 c
222 287.76 l
222 293.28 217.5 297.72 211.98 297.72 c
172.02 297.72 l
166.5 297.72 162 293.28 162 287.76 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
180.66 219.9 m
/N23 [0 13.98 -13.98 0 0 0] Tf
(W) show
(orker 2)
[7.76861 4.65097 6.98573 7.76861 4.65097 3.84164 7.76861 ] pdfys
200.82 199.38 m
/N23 [0 10.02 -10.02 0 0 0] Tf
(status = SLEEPING_ )
[5.04003 2.70136 5.5781 2.70136 5.51898 5.04003 2.70132 5.8797 2.76144 6.63113 5.51898 
6.63113 6.63113 6.63113 2.73342 7.18215 7.74343 5.51898 2.70132 ] pdfys
212.82 214.86 m
(WITH_WORK)
[9.4647 2.79152 6.12811 7.24025 5.57708 9.42161 7.80153 7.19817 6.68923 ] pdfys
n
162 319.74 m
162 314.22 166.5 309.72 172.02 309.72 c
211.98 309.72 l
217.5 309.72 222 314.22 222 319.74 c
222 401.76 l
222 407.28 217.5 411.72 211.98 411.72 c
172.02 411.72 l
166.5 411.72 162 407.28 162 401.76 c
0.867004 0.867004 0.867004  setrgbcolor
eofill
n
162 319.74 m
162 314.22 166.5 309.72 172.02 309.72 c
211.98 309.72 l
217.5 309.72 222 314.22 222 319.74 c
222 401.76 l
222 407.28 217.5 411.72 211.98 411.72 c
172.02 411.72 l
166.5 411.72 162 407.28 162 401.76 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
180.66 333.9 m
/N23 [0 13.98 -13.98 0 0 0] Tf
(W) show
(orker 3)
[7.76861 4.65097 6.98573 7.76861 4.65097 3.84164 7.76861 ] pdfys
200.82 313.38 m
/N23 [0 10.02 -10.02 0 0 0] Tf
(status = SLEEPING_ )
[5.04003 2.70136 5.5781 2.70136 5.51898 5.04003 2.70132 5.8797 2.76144 6.63113 5.51898 
6.63113 6.63113 6.63113 2.73342 7.18215 7.74343 5.51898 2.70132 ] pdfys
212.82 331.62 m
(W/O_WORK)
[9.47479 2.80161 7.74148 5.57816 9.47479 7.74148 7.25035 6.69932 ] pdfys
n
162 433.74 m
162 428.22 166.5 423.72 172.02 423.72 c
211.98 423.72 l
217.5 423.72 222 428.22 222 433.74 c
222 515.76 l
222 521.28 217.5 525.72 211.98 525.72 c
172.02 525.72 l
166.5 525.72 162 521.28 162 515.76 c
0.867004 0.867004 0.867004  setrgbcolor
eofill
n
162 433.74 m
162 428.22 166.5 423.72 172.02 423.72 c
211.98 423.72 l
217.5 423.72 222 428.22 222 433.74 c
222 515.76 l
222 521.28 217.5 525.72 211.98 525.72 c
172.02 525.72 l
166.5 525.72 162 521.28 162 515.76 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
180.66 447.9 m
/N23 [0 13.98 -13.98 0 0 0] Tf
(W) show
(orker 4)
[7.76861 4.65097 6.98573 7.76861 4.65097 3.84164 7.76861 ] pdfys
200.82 437.04 m
/N23 [0 10.02 -10.02 0 0 0] Tf
(status = ACTIVE)
[5.04012 2.70145 5.54513 2.70145 5.54513 5.04012 2.70147 5.8798 2.76159 6.65727 7.2083 
6.09616 2.70145 6.65727 6.65727 ] pdfys
n
162 613.74 m
162 608.22 166.5 603.72 172.02 603.72 c
211.98 603.72 l
217.5 603.72 222 608.22 222 613.74 c
222 695.76 l
222 701.28 217.5 705.72 211.98 705.72 c
172.02 705.72 l
166.5 705.72 162 701.28 162 695.76 c
0.867004 0.867004 0.867004  setrgbcolor
eofill
n
162 613.74 m
162 608.22 166.5 603.72 172.02 603.72 c
211.98 603.72 l
217.5 603.72 222 608.22 222 613.74 c
222 695.76 l
222 701.28 217.5 705.72 211.98 705.72 c
172.02 705.72 l
166.5 705.72 162 701.28 162 695.76 c
h
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
180.66 627.48 m
/N23 [0 13.98 -13.98 0 0 0] Tf
(W)
[13.1997 ] pdfys
(orker) show
180.66 676.439 m
/N25 [0 13.98 -13.98 0 0 0] Tf
(P) show
200.82 607.38 m
/N23 [0 10.02 -10.02 0 0 0] Tf
(status = SLEEPING_ )
[5.0401 2.70143 5.57817 2.70143 5.51103 5.0401 2.70147 5.87977 2.76159 6.62318 5.51103 
6.62318 6.66025 6.66025 2.76154 7.1742 7.73548 5.51103 2.70147 ] pdfys
212.82 622.86 m
(WITH_WORK)
[9.4647 2.79152 6.12811 7.24025 5.57708 9.42161 7.80153 7.19817 6.68923 ] pdfys
n
349.26 170.22 m
391.26 170.22 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
375.84 112.32 m
/N26 [0 12 -12 0 0 0] Tf
(Worker 4)
[11.4022 7.32225 4.67745 6.59754 6.65754 4.67745 3.30231 6.74634 ] pdfys
n
349.26 236.22 m
391.26 236.22 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
375.84 176.82 m
(Worker 1)
[11.4022 7.32225 4.67745 6.59754 6.65754 4.67745 3.30231 6.74634 ] pdfys
n
349.26 332.22 m
391.26 332.22 l
349.26 398.22 m
391.26 398.22 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
373.02 276.72 m
/N23 [0 21 -21 0 0 0] Tf
(\205) show
n
349.26 458.22 m
391.26 458.22 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
375.84 338.82 m
/N26 [0 12 -12 0 0 0] Tf
(Wo)
[11.4022 7.32231 ] pdfys
(r) show
(k)
[6.5976 ] pdfys
(er) show
( 2W)
[3.30249 19.1976 11.4022 ] pdfys
(or) show
(ke)
[6.5976 6.6576 ] pdfys
(r) show
( ) show
375.84 447.36 m
/N27 [0 12 -12 0 0 0] Tf
(P) show
372.54 498.72 m
/N23 [0 21 -21 0 0 0] Tf
(\205) show
n
349.26 558 m
391.26 558 l
349.26 624 m
391.26 624 l
0.0039978 0.0039978 0.0039978  setrgbcolor
S
0 0 0  setrgbcolor
375.84 564.54 m
/N26 [0 12 -12 0 0 0] Tf
(Worker 3)
[11.4011 7.32235 4.67755 6.59884 6.65764 4.67755 3.30249 6.74524 ] pdfys
372.54 648.72 m
/N23 [0 21 -21 0 0 0] Tf
(\205) show
436.5 308.22 m
/N28 [0 12 -12 0 0 0] Tf
(active)
[7.24915 7.24915 7.24915 7.24915 7.24915 7.24915 ] pdfys
n
421.26 331.98 m
396.24 331.98 l
396.12 331.98 396 332.1 396 332.22 c
396 332.4 396.12 332.52 396.24 332.52 c
421.26 332.52 l
421.38 332.52 421.5 332.4 421.5 332.22 c
421.5 332.1 421.38 331.98 421.26 331.98 c
h
397.26 329.22 m
391.26 332.22 l
397.26 335.22 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
0 0 0  setrgbcolor
436.5 503.58 m
(procs_with_work)
[7.24915 7.24915 7.24915 7.24915 7.24915 7.24915 7.24915 7.24915 7.24915 7.24915 7.24915 
7.24915 7.24915 7.24915 7.24915 ] pdfys
n
421.26 557.76 m
396.24 557.76 l
396.12 557.76 396 557.88 396 558 c
396 558.12 396.12 558.24 396.24 558.24 c
421.26 558.24 l
421.38 558.24 421.5 558.12 421.5 558 c
421.5 557.88 421.38 557.76 421.26 557.76 c
h
397.26 555 m
391.26 558 l
397.26 561 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
n
221.82 132.3 m
344.76 204.06 l
344.94 204.18 345.12 204.12 345.24 203.94 c
345.36 203.76 345.3 203.52 345.12 203.4 c
222.18 131.7 l
222 131.58 221.76 131.64 221.7 131.82 c
221.58 132 221.64 132.24 221.82 132.3 c
h
342.54 205.8 m
349.26 206.22 l
345.6 200.64 l
f
n
221.76 246.24 m
345.36 365.04 l
345.54 365.22 345.78 365.22 345.9 365.04 c
346.08 364.92 346.08 364.68 345.9 364.5 c
222.24 245.7 l
222.12 245.58 221.88 245.58 221.7 245.76 c
221.58 245.88 221.58 246.12 221.76 246.24 c
h
342.84 366.24 m
349.26 368.22 l
346.98 361.92 l
f
n
221.64 360.18 m
346.5 586.08 l
346.62 586.26 346.8 586.32 347.04 586.2 c
347.22 586.08 347.28 585.9 347.16 585.72 c
222.3 359.82 l
222.24 359.64 222 359.58 221.82 359.64 c
221.64 359.76 221.58 360 221.64 360.18 c
h
343.74 586.44 m
349.26 590.22 l
348.96 583.56 l
f
n
222.36 480.12 m
347.82 145.08 l
347.94 144.84 347.82 144.66 347.64 144.6 c
347.46 144.48 347.22 144.6 347.16 144.78 c
221.64 479.88 l
221.58 480.06 221.7 480.3 221.88 480.36 c
222.06 480.42 222.3 480.3 222.36 480.12 c
h
349.98 146.94 m
349.26 140.22 l
344.34 144.84 l
f
n
222.3 660.18 m
347.16 432.84 l
347.28 432.6 347.22 432.42 347.04 432.3 c
346.86 432.18 346.62 432.24 346.5 432.48 c
221.64 659.82 l
221.58 660 221.64 660.24 221.82 660.3 c
222 660.42 222.24 660.36 222.3 660.18 c
h
348.96 434.94 m
349.26 428.22 l
343.74 432.06 l
f
0 0 0  setrgbcolor
437.52 686.34 m
/N22 [0 12 -12 0 0 0] Tf
(P) show
n
421.26 691.98 m
396.24 691.98 l
396.12 691.98 396 692.1 396 692.22 c
396 692.4 396.12 692.52 396.24 692.52 c
421.26 692.52 l
421.38 692.52 421.5 692.4 421.5 692.22 c
421.5 692.1 421.38 691.98 421.26 691.98 c
h
397.26 689.22 m
391.26 692.22 l
397.26 695.22 l
0.0039978 0.0039978 0.0039978  setrgbcolor
f
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 51328 a Fn(Figure)871 b(6-4:)1244 b
Fm(The)757 b(thread)h(state)f(arra)-34 b(y)757 b(\(TSA\))h(used)f(b)-34
b(y)758 b(the)f(Cilk-AP)f(sc)-34 b(heduler)757 b(to)g(or-)2000
52834 y(ganize)708 b(the)g(w)-34 b(ork)g(ers)709 b(of)f(a)g(job.)1452
b(The)709 b(\257rst)f Fe(active)j Fm(w)-34 b(ork)g(ers)708
b(are)g(either)f(w)-34 b(orking)709 b(or)f(steal-)2000
54339 y(ing;)685 b(the)592 b(next)g Fe(procs)p 13084
54339 382 45 v 460 w(with)p 16088 54339 V 460 w(work)396
b Ff(\241)e Fe(active)594 b Fm(w)-34 b(ork)g(ers)592
b(are)f(sleeping)g(with)i(w)-34 b(ork;)685 b(and)593
b(the)f(last)2000 55844 y Fl(P)438 b Ff(\241)269 b Fe(procs)p
7684 55844 V 460 w(with)p 10688 55844 V 460 w(work)405
b Fm(w)-34 b(ork)g(ers)404 b(are)g(sleeping)g(without)i(w)-34
b(ork.)3951 60199 y Fy(T)-108 b(o)434 b(simplify)h(the)e(managemen)-36
b(t)434 b(of)g(the)g(w)-36 b(ork)g(ers,)434 b(the)g(Cilk-AP)g(sc)-36
b(heduler)433 b(uses)h(an)f(arra)-36 b(y)2000 61804 y(of)609
b(indirection)g(to)f(group)g(the)g(w)-36 b(ork)g(ers)610
b(according)e(to)h(their)f(curren)-36 b(t)607 b(status:)928
b(activ)-36 b(e)610 b(\(the)2000 63410 y(w)-36 b(ork)g(er)504
b(is)f(either)g(w)-36 b(orking)505 b(or)e(stealing\),)521
b(sleeping)504 b(with)f(w)-36 b(ork)504 b(\(the)f(w)-36
b(ork)g(er)504 b(is)f(asleep)h(with)2000 65015 y(a)461
b(nonempt)-36 b(y)460 b(deque\),)467 b(and)461 b(sleeping)f(without)h
(w)-36 b(ork)462 b(\(the)e(w)-36 b(ork)g(er)461 b(is)g(asleep)g(with)g
(an)f(empt)-36 b(y)2000 66620 y(deque\).)544 b(Figure)334
b(6-4)f(illustrates)g(this)g(arra)-36 b(y)334 b(of)g(indirection,)353
b(called)334 b(the)f Fo(thr)-78 b(e)g(ad)442 b(state)h(arr)-78
b(ay)2000 68225 y Fy(\(TSA\).)549 b(The)h(TSA)f(simpli\257es)h(a)g(n)
-36 b(um)g(b)36 b(er)548 b(of)i(the)f(op)36 b(erations)549
b(p)36 b(erformed)550 b(b)-36 b(y)549 b(the)g(Cilk-AP)2000
69830 y(sc)-36 b(heduler:)3590 72000 y(1.)651 b(When)606
b(a)h(w)-36 b(ork)g(er)608 b(is)f(stealing,)651 b(it)607
b(only)h(c)-36 b(ho)36 b(oses)607 b(victims)h(that)e(are)i(either)e
(activ)-36 b(e)608 b(or)25350 75321 y(53)p eop end
%%Page: 54 54
TeXDict begin 54 53 bop 5252 1328 a Fy(sleeping)434 b(with)f(w)-36
b(ork.)3590 3363 y(2.)651 b(When)577 b(the)g(bac)-36
b(kground)577 b(thread)f(increases)i(the)f(usage)h(of)g(a)g(job,)614
b(it)577 b(only)h(w)-36 b(ak)g(es)579 b(up)5252 4968
y(w)-36 b(ork)g(ers)434 b(that)f(are)h(either)f(sleeping)h(with)f(w)-36
b(ork)435 b(or)f(sleeping)f(without)h(w)-36 b(ork.)3590
7003 y(3.)651 b(When)475 b(the)g(bac)-36 b(kground)475
b(thread)f(reduces)h(a)h(job's)g(usage,)487 b(it)475
b(only)h(signals)h(a)e(sleep)h(ex-)5252 8608 y(ception)433
b(to)h(w)-36 b(ork)g(ers)434 b(that)f(are)h(activ)-36
b(e.)3951 11103 y(Accesses)347 b(to)g(the)f(TSA)h(b)-36
b(y)347 b(the)f(di\256eren)-36 b(t)346 b(w)-36 b(ork)g(ers)347
b(are)g(sync)-36 b(hronized)346 b(with)h(the)g(use)f(of)i(Cilk)2000
12708 y(lo)36 b(c)-36 b(ks)317 b([47].)540 b(Cilk)317
b(lo)36 b(c)-36 b(ks)317 b(supp)36 b(ort)315 b(the)g
(memory-consistency)h(seman)-36 b(tics)316 b(of)g(release)h
(consistency)2000 14313 y([23,)365 b(p.)555 b(716])365
b(and)e(are)h(designed)f(to)h(b)36 b(e)363 b(as)h(fast)h(as)f(is)g
(supp)36 b(orted)362 b(b)-36 b(y)364 b(the)f(underlying)g(hardw)-36
b(are)2000 15918 y([47].)3951 17602 y(The)394 b(\257nal)g(comp)36
b(onen)-36 b(t)394 b(of)h(the)e(Cilk-AP)i(system)g(is)f(the)g(GA)-108
b(T,)394 b(whic)-36 b(h)394 b(is)h(curren)-36 b(tly)393
b(stored)2000 19207 y(in)431 b(a)h(memory-mapp)36 b(ed)431
b(\257le)h(that)f(all)h(jobs)g(ha)-36 b(v)g(e)432 b(access)g(to.)578
b(Before)432 b(creating)g(the)f(w)-36 b(ork)g(ers)432
b(of)2000 20812 y(a)420 b(job,)k(the)419 b(Cilk-AP)i(sc)-36
b(heduler)419 b(\257rst)h(maps)f(the)h(GA)-108 b(T)420
b(\257le)g(in)-36 b(to)420 b(memory)g(and)g(then)f(registers)2000
22417 y(the)454 b(job)g(\(adding)g(a)h(ro)-36 b(w)454
b(to)g(the)g(GA)-108 b(T\))454 b(using)g(the)f(obtained)h(p)36
b(oin)-36 b(ter.)640 b(The)454 b(same)h(p)36 b(oin)-36
b(ter)454 b(is)2000 24022 y(used)360 b(in)g(subsequen)-36
b(t)360 b(up)36 b(dates)360 b(to)g(the)g(GA)-108 b(T.)361
b(Curren)-36 b(tly)-108 b(,)375 b(w)-36 b(e)361 b(do)f(not)g(use)h(a)g
(lo)36 b(c)-36 b(king)362 b(sc)-36 b(heme)360 b(to)2000
25627 y(con)-36 b(trol)414 b(accesses)g(to)g(the)g(GA)-108
b(T)413 b(for)h(t)-36 b(w)g(o)415 b(main)e(reasons.)572
b(First,)418 b(since)c(ev)-36 b(ery)415 b(job)f(accesses)h(the)2000
27232 y(GA)-108 b(T)339 b(on)f(a)i(regular)f(basis,)359
b(using)339 b(a)g(coarse-grained)g(lo)36 b(c)-36 b(k)340
b(on)f(the)g(table)g(w)-36 b(ould)339 b(mak)-36 b(e)340
b(the)e(GA)-108 b(T)2000 28837 y(a)504 b(b)36 b(ottlenec)-36
b(k)504 b(\(or)f(\\hot)h(sp)36 b(ot"\))504 b(in)f(the)g(system.)789
b(Using)504 b(\257ne-grained)e(lo)36 b(c)-36 b(ks)505
b(\(e.g.,)522 b(one)504 b(lo)36 b(c)-36 b(k)2000 30443
y(p)36 b(er)521 b(ro)-36 b(w\))521 b(is)h(an)f(alternativ)-36
b(e,)545 b(but)520 b(this)h(strategy)h(is)g(complicated)f(to)h
(implemen)-36 b(t)520 b(correctly)-108 b(.)2000 32048
y(Secondly)g(,)469 b(since)463 b(algorithm)g(DP)g(\(as)f(presen)-36
b(ted)461 b(in)h(Section)g(5.2\))h(only)g(transfers)g(pro)36
b(cessors)2000 33653 y(b)g(et)-36 b(w)g(een)511 b(jobs)g(one)g(at)g(a)h
(time,)530 b(it)512 b(is)f(unlik)-36 b(ely)512 b(that)f(concurren)-36
b(t)509 b(up)36 b(dates)511 b(to)g(the)f(GA)-108 b(T)511
b(can)2000 35258 y(cause)538 b(the)g(allo)36 b(cation)540
b(to)e(deviate)g(that)g(m)-36 b(uc)g(h)537 b(from)h(the)g(fair,)565
b(e\261cien)-36 b(t,)564 b(and)538 b(conserv)-72 b(ativ)-36
b(e)2000 36863 y(ideal.)577 b(If)429 b(deviations)g(do)f(o)36
b(ccur,)429 b(the)f(allo)36 b(cation)430 b(can)e(easily)h(b)36
b(e)428 b(rebalanced)g(during)f(the)h(next)2000 38468
y(up)36 b(date)550 b(to)g(the)g(GA)-108 b(T.)551 b(In)f(general,)581
b(w)-36 b(e)550 b(\257nd)g(that)g(the)g(cost)g(of)i(implemen)-36
b(ting)550 b(an)g(e\261cien)-36 b(t)2000 40073 y(lo)36
b(c)-36 b(king)579 b(sc)-36 b(heme)578 b(out)-36 b(w)g(eighs)578
b(the)f(o)-36 b(v)g(erhead)578 b(incurred)f(b)-36 b(y)578
b(brief)g(p)36 b(erio)g(ds)578 b(of)h(ine\261ciency)f(or)2000
41678 y(unfairness)371 b(in)g(the)f(allo)36 b(cation.)559
b(Nev)-36 b(ertheless,)384 b(w)-36 b(e)371 b(consider)g(more)g
(scalable)h(approac)-36 b(hes)371 b(than)2000 43283 y(the)433
b(curren)-36 b(t)432 b(sc)-36 b(heme)433 b(in)h(Chapter)f(9.)3951
44967 y(By)594 b(restricting)f(our)f(mo)36 b(di\257cations)594
b(to)f(the)g(Cilk)h(run)-36 b(time)592 b(system,)634
b(w)-36 b(e)593 b(automatically)2000 46572 y(imp)36 b(ose)504
b(the)f(condition)h(that)f(all)i(jobs)f(in)g(the)f(Cilk-AP)h(system)g
(are)g(Cilk)h(jobs.)790 b(Since)503 b(eac)-36 b(h)2000
48177 y(job)487 b(is)f(link)-36 b(ed)487 b(with)f(the)g(same)h(\(mo)36
b(di\257ed\))485 b(run)-36 b(time)485 b(system,)501 b(they)486
b(are)g(all)i(asso)36 b(ciated)487 b(with)2000 49783
y(instances)471 b(of)h(the)f(same)g(job)g(sc)-36 b(heduler|the)470
b(Cilk-AP)i(sc)-36 b(heduler.)690 b(While)472 b(this)f(consistency)2000
51388 y(limits)554 b(the)f(scop)36 b(e)554 b(of)h(our)e(system,)584
b(it)554 b(eliminates)g(the)f(problem)g(of)i(trust)d(b)36
b(et)-36 b(w)g(een)554 b(the)f(job)2000 52993 y(sc)-36
b(hedulers,)428 b(b)36 b(ecause)427 b(they)h(all)g(share)f(the)g(same)h
(co)36 b(de.)576 b(In)427 b(Chapter)g(9,)j(w)-36 b(e)427
b(consider)h(p)36 b(ossible)2000 54598 y(w)-36 b(a)g(ys)434
b(to)g(generalize)h(the)e(Cilk-AP)h(system)g(to)g(include)f(other)g(t)
-36 b(yp)36 b(es)434 b(of)g(jobs)g(as)g(w)-36 b(ell.)2000
58935 y Fx(Upholding)599 b(the)f(Design)h(Goals)e(of)g(Cilk)2000
61559 y Fy(The)470 b(implemen)-36 b(tation)470 b(of)g(the)g(Cilk-AP)g
(system)h(upholds)e(the)g(three)g(ma)72 b(jor)471 b(design)f(goals)h
(of)2000 63164 y(the)386 b(curren)-36 b(t)384 b(Cilk)k(implemen)-36
b(tation:)554 b(simplicit)-36 b(y)-108 b(,)396 b(minimal)387
b(w)-36 b(ork)387 b(o)-36 b(v)g(erhead,)396 b(and)385
b(p)36 b(ortabilit)-36 b(y)-108 b(.)2000 64769 y(W)g(e)434
b(summarize)f(Cilk-AP's)i(adherence)e(to)g(these)h(goals)g(b)36
b(elo)-36 b(w.)3937 67185 y Fs(\262)651 b Fg(Simplicity)p
Fy(.)574 b(The)431 b(extensions)f(made)g(b)-36 b(y)430
b(Cilk-AP)h(to)f(the)g(Cilk)h(run)-36 b(time)429 b(system)i(lev)-36
b(er-)5252 68790 y(age)447 b(existing)h(mec)-36 b(hanisms)446
b(whenev)-36 b(er)446 b(p)36 b(ossible,)451 b(b)36 b(oth)446
b(simplifying)i(and)f(reducing)f(the)5252 70395 y(n)-36
b(um)g(b)36 b(er)391 b(of)i(c)-36 b(hanges)393 b(required.)564
b(The)393 b(pro)36 b(cess-con)-36 b(trol)392 b(tec)-36
b(hnique)392 b(lev)-36 b(erages)394 b(Cilk's)g(im-)5252
72000 y(plemen)-36 b(tation)520 b(of)h(w)-36 b(ork)g(ers)521
b(as)g(Pthreads.)838 b(The)521 b(steal-attempt)f(coun)-36
b(ters)519 b(main)-36 b(tained)25350 75321 y(54)p eop
end
%%Page: 55 55
TeXDict begin 55 54 bop 5252 1328 a Fy(b)-36 b(y)447
b(eac)-36 b(h)447 b(w)-36 b(ork)g(er)448 b(use)f(the)g(existing)h(ev)
-36 b(en)g(t-recording)447 b(mec)-36 b(hanism)447 b(of)h(Cilk.)621
b(The)447 b(bac)-36 b(k-)5252 2933 y(ground)416 b(thread)g(lev)-36
b(erages)418 b(Cilk's)g(exception)f(mec)-36 b(hanism)417
b(to)g(signal)g(w)-36 b(ork)g(ers)418 b(to)f(sleep.)5252
4539 y(Finally)-108 b(,)434 b(Cilk)h(lo)36 b(c)-36 b(ks)435
b(are)f(used)f(to)g(con)-36 b(trol)434 b(access)g(to)g(the)f(TSA.)3937
6376 y Fs(\262)651 b Fg(Minimal)562 b(work)i(overhe)-66
b(ad)p Fy(.)901 b(The)542 b(Cilk-AP)g(system)g(uses)f(steal-attempt)f
(information)5252 7981 y(to)446 b(estimate)h(the)f(desire)h(of)g(a)g
(job.)618 b(Since)446 b(this)g(information)h(is)g(only)g(gathered)f
(while)i(a)5252 9586 y(w)-36 b(ork)g(er)452 b(is)g(stealing,)458
b(it)452 b(do)36 b(es)452 b(not)g(con)-36 b(tribute)451
b(to)h(w)-36 b(ork)452 b(o)-36 b(v)g(erhead,)457 b(th)-36
b(us)451 b(satisfying)j(the)5252 11191 y(w)-36 b(ork-\257rst)433
b(principle)g(of)h(Cilk.)3937 13029 y Fs(\262)651 b Fg(Portability)p
Fy(.)568 b(The)408 b(Cilk-AP)h(sc)-36 b(heduler)406 b(p)36
b(erforms)408 b(b)36 b(oth)407 b(the)g(\257rst)g(and)g(second)g(lev)-36
b(els)409 b(of)5252 14634 y(sc)-36 b(heduling)343 b(and)h(do)36
b(es)344 b(not)g(dep)36 b(end)342 b(on)i(the)g(op)36
b(erating)344 b(system)h(or)f(underlying)f(arc)-36 b(hitec-)5252
16239 y(ture)511 b(of)h(the)f(mac)-36 b(hine.)812 b(The)512
b(pro)36 b(cess-con)-36 b(trol)511 b(tec)-36 b(hnique)511
b(escap)36 b(es)512 b(direct)f(in)-36 b(teraction)5252
17844 y(with)377 b(the)f(underlying)h(hardw)-36 b(are)376
b(b)-36 b(y)377 b(virtualizing)h(the)f(ph)-36 b(ysical)377
b(pro)36 b(cessors)377 b(of)h(the)e(ma-)5252 19449 y(c)-36
b(hine.)964 b(The)563 b(sleeping)g(mec)-36 b(hanism)562
b(used)f(to)i(increase)g(or)f(decrease)h(a)g(job's)g(usage)g(is)5252
21054 y(implemen)-36 b(ted)590 b(using)h(standard)f(UNIX)i(pip)36
b(es.)1051 b(Finally)-108 b(,)631 b(the)591 b(GA)-108
b(T)590 b(is)i(implemen)-36 b(ted)5252 22659 y(using)433
b(the)g(standard)g(UNIX)h(mec)-36 b(hanism)433 b(of)h(memory-mapp)36
b(ed)433 b(I/O.)25350 75321 y(55)p eop end
%%Page: 56 56
TeXDict begin 56 55 bop 3951 1328 a Fy(1)25350 75321
y(56)p eop end
%%Page: 57 57
TeXDict begin 57 56 bop 2000 10270 a Fw(Chapter)1033
b(7)2000 15890 y(Exp)86 b(erimen)-86 b(tal)1033 b(Results)2000
22009 y Fy(In)566 b(this)g(c)-36 b(hapter,)598 b(w)-36
b(e)566 b(presen)-36 b(t)565 b(a)h(suite)g(of)h(exp)36
b(erimen)-36 b(ts)566 b(that)f(measure)h(the)f(o)-36
b(v)g(erhead)566 b(and)2000 23614 y(p)36 b(erformance)405
b(of)h(the)e(Cilk-AP)i(system.)570 b(In)404 b(eac)-36
b(h)405 b(exp)36 b(erimen)-36 b(t,)411 b(w)-36 b(e)405
b(compare)g(Cilk-AP)h(to)g(the)2000 25219 y(curren)-36
b(t)542 b(Cilk)k(system)e(as)g(follo)-36 b(ws.)911 b(If)544
b(there)f(is)h(only)h(one)e(job)i(running,)570 b(then)543
b(w)-36 b(e)544 b(compare)2000 26824 y(the)536 b(results)g(from)g(the)g
(t)-36 b(w)g(o)537 b(systems)f(directly)-108 b(.)887
b(If)537 b(there)f(are)g(m)-36 b(ultiple)536 b(jobs)h(running,)561
b(then)2000 28429 y(w)-36 b(e)457 b(compare)g(Cilk-AP)h(to)f(the)f
(Cilk)i(system)f(com)-36 b(bined)456 b(with)h(a)g(static)g(pro)36
b(cessor-allo)g(cation)2000 30034 y(p)g(olicy)-108 b(.)923
b(\(Recall)549 b(that)f(Cilk)i(is)e(only)h(compatible)g(with)f(static)h
(allo)36 b(cation)550 b(p)36 b(olicies)549 b(b)36 b(ecause)2000
31639 y(it)520 b(uses)f(algorithm)h(WS.\))g(W)-108 b(e)520
b(b)36 b(egin)519 b(b)-36 b(y)520 b(describing)f(the)g(di\256eren)-36
b(t)519 b(Cilk)i(applications)f(used)2000 33244 y(in)482
b(our)g(exp)36 b(erimen)-36 b(ts.)723 b(Then,)494 b(w)-36
b(e)482 b(describ)36 b(e)482 b(our)f(exp)36 b(erimen)-36
b(ts)482 b(for)h(measuring)f(the)f(o)-36 b(v)g(erhead)2000
34850 y(of)548 b(the)f(Cilk-AP)h(system,)576 b(and)547
b(use)g(our)g(results)g(to)h(c)-36 b(ho)36 b(ose)548
b(an)f(appropriate)g(v)-72 b(alue)548 b(for)g(the)2000
36455 y(tunable)576 b(parameter)h Fp(est)p 15332 36455
411 45 v 491 w(cycle)p Fy(.)1007 b(Finally)-108 b(,)613
b(w)-36 b(e)578 b(describ)36 b(e)577 b(our)f(exp)36 b(erimen)-36
b(ts)577 b(for)h(analyzing)2000 38060 y(the)533 b(p)36
b(erformance)534 b(of)h(Cilk-AP)f(in)g(the)f(scenarios)i(presen)-36
b(ted)532 b(in)i(Figure)f(2-1,)560 b(and)533 b(compare)2000
39665 y(the)498 b(execution)g(times)g(ac)-36 b(hiev)g(ed)499
b(b)-36 b(y)498 b(Cilk-AP)h(to)f(the)g(greedy-sc)-36
b(heduling)497 b(b)36 b(ound)497 b(pro)-36 b(v)g(ed)498
b(in)2000 41270 y(Theorem)370 b(3.)557 b(Our)368 b(results)h(sho)-36
b(w)370 b(that)f(the)g(Cilk-AP)h(system)g(incurs)f(negligible)h(o)-36
b(v)g(erhead)369 b(and)2000 42875 y(pro)-36 b(vides)516
b(up)e(to)i(37\045)g(impro)-36 b(v)g(emen)g(t)515 b(in)g(throughput)f
(and)h(30\045)h(impro)-36 b(v)g(emen)g(t)515 b(in)g(resp)36
b(onse)2000 44480 y(time)434 b(for)g(the)f(tested)g(scenarios.)3951
46171 y(All)444 b(exp)36 b(erimen)-36 b(ts)443 b(in)g(this)g(c)-36
b(hapter)442 b(w)-36 b(ere)443 b(p)36 b(erformed)443
b(on)g(an)g(idle)h(SGI)e(Origin)h(2000)i(SMP)2000 47776
y(with)554 b(16)g(195-MHz)g(pro)36 b(cessors)553 b(and)g(8)h(Gb)f(of)h
(memory)-108 b(,)584 b(running)552 b(v)-36 b(ersion)554
b(6.5)g(of)h(the)e(SGI)2000 49381 y(IRIX)434 b(op)36
b(erating)434 b(system.)2000 54347 y FC(Cilk)717 b(Applications)2000
57441 y Fy(W)-108 b(e)587 b(used)g(sev)-36 b(eral)589
b(Cilk)f(applications)g(in)g(our)f(exp)36 b(erimen)-36
b(ts.)1040 b(These)587 b(applications)h(are)g(de-)2000
59046 y(scrib)36 b(ed)433 b(b)36 b(elo)-36 b(w:)3937
61476 y Fs(\262)651 b Fp(fib\(n\))562 b Fy(is)j(a)h(program)f(that)f
(calculates)i(the)f Fp(n)p Fy(th)f(Fib)36 b(onacci)565
b(n)-36 b(um)g(b)36 b(er)564 b(using)h(double)5252 63081
y(recursion.)3937 65133 y Fs(\262)651 b Fp(loopy\(n\))321
b Fy(is)326 b(an)f(implemen)-36 b(tation)325 b(of)h(the)f(LOOPY)f(b)36
b(enc)-36 b(hmark)325 b(from)g(Section)g(4.2)h(that)5252
66738 y(uses)431 b(a)h(single)h(lo)36 b(op)432 b(to)g(spa)-36
b(wn)432 b Fp(n)f Fy(equal-sized)h(sub)36 b(computations.)577
b(Eac)-36 b(h)431 b(sub)36 b(computa-)5252 68343 y(tion)433
b(consists)h(of)g(10)15497 67861 y Ft(6)16457 68343 y
Fy(iterations)g(of)h(a)f(small)g(amoun)-36 b(t)433 b(of)h(w)-36
b(ork.)3937 70395 y Fs(\262)651 b Fp(cholesky\(n,z\))637
b Fy(is)643 b(a)h(program)f(that)g(p)36 b(erforms)643
b(a)g(divide)h(and)e(conquer)h(Cholesky)5252 72000 y(factorization)460
b(of)g(a)f(sparse)g(symmetric)h(p)36 b(ositiv)-36 b(e-de\257nite)458
b(matrix.)655 b(The)459 b(input)f(matrix)25350 75321
y(57)p eop end
%%Page: 58 58
TeXDict begin 58 57 bop 5252 1328 a Fy(is)350 b(generated)f(randomly)h
(with)g(size)g Fp(n)f Fy(and)g Fp(z)h Fy(nonzero)f(elemen)-36
b(ts;)378 b(the)349 b(nonzero)g(elemen)-36 b(ts)5252
2933 y(are)433 b(stored)h(in)f(a)h(quad)g(tree.)3937
4722 y Fs(\262)651 b Fp(strassen\(n\))483 b Fy(is)489
b(a)g(program)f(that)g(m)-36 b(ultiplies)489 b(t)-36
b(w)g(o)488 b(randomly)h(generated)f Fp(n)332 b Fs(\243)h
Fp(n)488 b Fy(ma-)5252 6327 y(trices)395 b(using)g(Strassen's)h
(algorithm.)566 b(The)395 b(program)h(rev)-36 b(erts)395
b(to)h(a)g(simpler)f(divide-and-)5252 7932 y(conquer)347
b(algorithm)i(when)e(the)g(matrix)i(size)f(is)g(su\261cien)-36
b(tly)348 b(small)g(\(curren)-36 b(tly)-108 b(,)364 b(less)349
b(than)5252 9537 y(64\).)3937 11326 y Fs(\262)651 b Fp(knary\(n,k,r\))
301 b Fy(is)308 b(a)f(syn)-36 b(thetic)307 b(b)36 b(enc)-36
b(hmark)307 b(whose)g(parameters)g(can)g(b)36 b(e)307
b(set)g(to)h(pro)36 b(duce)5252 12931 y(di\256eren)-36
b(t)499 b(v)-72 b(alues)501 b(for)g(w)-36 b(ork)501 b(and)f(critical)h
(path)f(length.)778 b(W)-108 b(ritten)500 b(b)-36 b(y)500
b(Rob)36 b(ert)500 b(D.)h(Blu-)5252 14536 y(mofe)455
b(of)g(MIT's)g(Computer)f(Science)g(and)f(Arti\257cial)i(In)-36
b(telligence)455 b(Lab)36 b(oratory)-108 b(,)460 b Fp(knary)5252
16141 y Fy(generates)354 b(a)g(tree)g(of)g(depth)f Fp(n)h
Fy(and)f(branc)-36 b(hing)353 b(factor)i Fp(k)p Fy(,)370
b(where)353 b(the)h(\257rst)f Fp(r)h Fy(c)-36 b(hildren)353
b(are)5252 17746 y(executed)364 b(serially)i(and)e(the)h(remaining)f
Fp(k)154 b Fs(\241)g Fp(r)365 b Fy(are)g(executed)f(in)h(parallel.)556
b(A)-36 b(t)365 b(eac)-36 b(h)364 b(no)36 b(de)5252 19352
y(of)434 b(the)f(tree,)h(the)f(program)g(p)36 b(erforms)434
b(100)h(iterations)e(of)i(a)f(small)g(amoun)-36 b(t)433
b(of)h(w)-36 b(ork.)3951 21512 y(All)434 b(programs)g(are)g(compiled)f
(using)452 b Fp(gcc)682 b(-O2)432 b Fy(when)h(used)g(in)h(an)f(exp)36
b(erimen)-36 b(t.)2000 25899 y FC(7.1)2152 b(Ov)-60 b(erhead)716
b(of)h(Cilk-AP)2000 28819 y Fy(In)630 b(this)f(section,)680
b(w)-36 b(e)630 b(describ)36 b(e)630 b(three)f(exp)36
b(erimen)-36 b(ts)629 b(for)i(measuring)f(the)f(o)-36
b(v)g(erhead)630 b(of)h(the)2000 30424 y(Cilk-AP)458
b(system.)649 b(In)457 b(the)f(\257rst)g(exp)36 b(erimen)-36
b(t,)463 b(w)-36 b(e)457 b(ran)g(single)h(jobs)f(with)g(high)g
(parallelism)h(in)2000 32029 y(isolation)308 b(and)e(measured)g(the)g
(amoun)-36 b(t)307 b(of)g(w)-36 b(ork)308 b(p)36 b(erformed)306
b(b)36 b(efore)307 b(all)h(of)f(the)f(job's)i(pro)36
b(cessors)2000 33634 y(get)643 b(w)-36 b(ork)645 b(on)e(their)f
(deques;)749 b(w)-36 b(e)643 b(call)h(this)f(amoun)-36
b(t)643 b(the)g Fo(al)78 b(l-pr)-78 b(o)g(cs)752 b Fy(time.)1207
b(The)643 b(second)2000 35239 y(exp)36 b(erimen)-36 b(t)493
b(is)h(iden)-36 b(tical)493 b(to)h(the)f(\257rst,)508
b(except)493 b(w)-36 b(e)494 b(measured)f(the)g(o)-36
b(v)g(erall)495 b(running)d(time)h(of)2000 36845 y(the)463
b(job)h(instead.)667 b(By)464 b(p)36 b(erforming)463
b(these)g(exp)36 b(erimen)-36 b(ts)463 b(for)h(di\256eren)-36
b(t)463 b(v)-72 b(alues)463 b(of)557 b Fp(est)p 45812
36845 411 45 v 491 w(cycle)p Fy(,)2000 38450 y(w)-36
b(e)571 b(can)g(analyze)h(the)e(trade-o\256)g(b)36 b(et)-36
b(w)g(een)570 b(the)g(all-pro)36 b(cs)571 b(time)g(and)f(running)g
(time)h(of)g(eac)-36 b(h)2000 40055 y(job,)394 b(and)383
b(then)g(use)g(this)h(information)g(to)g(c)-36 b(ho)36
b(ose)384 b(an)g(appropriate)f(v)-72 b(alue)384 b(for)g
Fp(est)p 43309 40055 V 491 w(cycle)p Fy(;)398 b(this)2000
41660 y(v)-72 b(alue)534 b(is)h(used)e(in)g(all)i(subsequen)-36
b(t)533 b(exp)36 b(erimen)-36 b(ts.)879 b(In)534 b(the)f(third)g(o)-36
b(v)g(erhead)534 b(exp)36 b(erimen)-36 b(t,)559 b(w)-36
b(e)2000 43265 y(p)36 b(erformed)477 b(a)h(simple)f(test)g(to)h
(illustrate)g(the)f(o)-36 b(v)g(erhead)477 b(incurred)f(b)-36
b(y)477 b(pro)36 b(cess)478 b(con)-36 b(trol)477 b(when)2000
44870 y(the)433 b(total)h(n)-36 b(um)g(b)36 b(er)432
b(of)i(w)-36 b(ork)g(ers)435 b(in)e(the)g(system)h(exceeds)g
Fu(P)181 b Fy(.)3951 46475 y(The)406 b(target)f(e\261ciency)i
Fu(\264)452 b Fy(of)407 b(the)e(Cilk-AP)h(sc)-36 b(heduler)405
b(w)-36 b(as)406 b(set)g(to)f(0.5)i(in)f(all)g(three)f(exp)36
b(eri-)2000 48080 y(men)-36 b(ts.)575 b(F)-108 b(or)426
b(accuracy)-108 b(,)429 b(eac)-36 b(h)427 b(data)f(p)36
b(oin)-36 b(t)426 b(rep)36 b(orted)426 b(\(either)g(an)h(all-pro)36
b(cs)427 b(time)g(or)f(a)h(running)2000 49685 y(time\))433
b(w)-36 b(as)435 b(a)-36 b(v)g(eraged)434 b(o)-36 b(v)g(er)434
b(5)g(trials.)2000 53486 y Fx(7.1.1)1792 b(Exp)50 b(erimen)-50
b(t)601 b(O1:)797 b(All-Pro)50 b(cs)598 b(Time)h(Ov)-50
b(erhead)2000 55949 y Fy(The)564 b(\257rst)g(o)-36 b(v)g(erhead)564
b(exp)36 b(erimen)-36 b(t)564 b(measures)h(the)e(all-pro)36
b(cs)565 b(time)g(of)g(sev)-36 b(eral)565 b(jobs,)598
b(eac)-36 b(h)564 b(of)2000 57554 y(whic)-36 b(h)598
b(has)h(parallelism)h(m)-36 b(uc)g(h)598 b(greater)g(than)g
Fu(P)181 b Fy(.)1074 b(The)599 b(jobs)g(w)-36 b(ere)599
b(run)e(in)i(isolation)h(with)2000 59159 y(all)541 b
Fu(P)720 b Fy(pro)36 b(cessors)540 b(using)g(b)36 b(oth)539
b(the)g(Cilk)j(and)d(Cilk-AP)h(systems.)898 b(W)-108
b(e)539 b(\257rst)g(measured)h(the)2000 60764 y(parallelism)631
b Fu(T)9541 60963 y Ft(1)10067 60764 y Fu(=T)11479 60963
y Fq(1)13105 60764 y Fy(of)f(eac)-36 b(h)630 b(job)f(using)h(the)e
(built-in)h(pro\257ling)g(mec)-36 b(hanism)629 b(a)-36
b(v)-72 b(ailable)631 b(in)2000 62369 y(Cilk;)532 b(the)497
b(pro\257ler)g(w)-36 b(as)499 b(not)e(used)g(during)g(the)h(actual)g
Fu(P)181 b Fy(-pro)36 b(cessor)498 b(runs.)770 b(Since)497
b(all)i(of)g(the)2000 63975 y(applications)405 b(w)-36
b(e)405 b(used)f(are)g(deterministic|meaning)g(that)g(the)g
(computation)g(only)h(dep)36 b(ends)2000 65580 y(on)568
b(the)f(program)h(and)f(its)h(inputs|w)-36 b(e)567 b(could)g(measure)h
(the)f(w)-36 b(ork)569 b Fu(T)38413 65779 y Ft(1)39507
65580 y Fy(b)-36 b(y)568 b(directly)g(timing)2000 67185
y(the)585 b(1-pro)36 b(cessor)587 b(run.)1034 b(The)586
b(critical)h(path)f(length)f Fu(T)30053 67384 y Fq(1)31636
67185 y Fy(w)-36 b(as)587 b(measured)e(in)-36 b(ternally)587
b(b)-36 b(y)586 b(the)2000 68790 y(Cilk)380 b(pro\257ler.)559
b(Since)378 b(the)g(pro\257ler)f(incurs)h(a)h(signi\257can)-36
b(t)378 b(amoun)-36 b(t)377 b(of)i(o)-36 b(v)g(erhead,)390
b(the)378 b(measured)2000 70395 y(v)-72 b(alues)559 b(of)g
Fu(T)8366 70594 y Ft(1)9450 70395 y Fy(predict)e(a)i(m)-36
b(uc)g(h)557 b(slo)-36 b(w)g(er)559 b(running)e(time)h(on)g
Fu(P)739 b Fy(pro)36 b(cessors)559 b(than)e(our)h(results)2000
72000 y(indicate)582 b(\(where)g(pro\257ling)f(is)i(turned)d(o\256)93
b(\).)1023 b(W)-108 b(e)582 b(can)g(ignore)g(this)g(discrepancy)-108
b(,)618 b(ho)-36 b(w)g(ev)g(er,)25350 75321 y(58)p eop
end
%%Page: 59 59
TeXDict begin 59 58 bop 2000 155 49341 45 v 16977 1760
45 1606 v 21268 1760 V 27510 1760 V 32740 1760 V 33427
1279 a Fy(All-pro)36 b(cs)434 b(time)p 42169 1760 V 1328
w(Running)f(time)2664 2884 y(Cilk)i(Job)p 16977 3365
V 11014 w Fu(T)19263 3083 y Ft(1)p 21268 3365 V 23532
2884 a Fu(T)24294 3083 y Fq(1)p 27510 3365 V 28299 2884
a Fu(T)29061 3083 y Ft(1)29587 2884 y Fu(=T)30999 3083
y Fq(1)p 32740 3365 V 34420 2884 a Fy(\(16)f(pro)36 b(cs.\))p
42169 3365 V 4848 w(\()p Fu(T)46649 3083 y Ft(16)47645
2884 y Fy(\))p 2000 3409 49341 45 v 2000 3631 V 2664
4754 a Fp(fib\(33\))p 16977 5236 45 1606 v 10211 w Fy(189.9)p
21268 5236 V 1330 w(0.001093)p 27510 5236 V 1331 w(169152)p
32740 5236 V 5818 w(0.0709)p 42169 5236 V 6189 w(1.044)2664
6359 y Fp(loopy\(64\))p 16977 6841 V 8843 w Fy(279.2)p
21268 6841 V 3281 w(4.366)p 27510 6841 V 2270 w(63.95)p
32740 6841 V 5817 w(0.1089)p 42169 6841 V 6189 w(18.15)2664
7965 y Fp(cholesky\(2048,10000\))p 16977 8446 V 1319
w Fy(373.8)p 21268 8446 V 2631 w(0.4843)p 27510 8446
V 2270 w(771.7)p 32740 8446 V 5817 w(0.1271)p 42169 8446
V 6189 w(11.17)2664 9570 y Fp(knary\(10,6,1\))p 16977
10051 V 6469 w Fy(1386)p 21268 10051 V 2630 w(0.3748)p
27510 10051 V 2631 w(3698)p 32740 10051 V 5817 w(0.1199)p
42169 10051 V 6189 w(12.89)p 2000 10095 49341 45 v 2000
13594 a Fn(Figure)535 b(7-1:)660 b Fm(The)466 b(parallelism)e(of)h
(four)g(Cilk)g(jobs,)481 b(deriv)-34 b(ed)464 b(from)h(w)-34
b(ork)466 b(and)f(critical)f(path)i(mea-)2000 15099 y(suremen)-34
b(ts.)528 b(The)371 b(all-pro)34 b(cs)370 b(time)g(and)i(running)f
(time)f(of)h(eac)-34 b(h)371 b(job)g(using)g(the)g(Cilk)f(system)h(is)f
(sho)-34 b(wn)2000 16605 y(on)405 b(the)f(righ)-34 b(t.)539
b(All)404 b(times)g(are)f(in)h(seconds.)2000 20763 y
Fy(b)36 b(ecause)494 b(w)-36 b(e)494 b(are)h(only)f(using)g(the)g
(pro\257ler)g(to)g(measure)g(the)f(parallelism)j(of)e(a)h(job,)510
b(whic)-36 b(h)494 b(is)2000 22368 y(the)439 b Fg(r)-66
b(atio)438 b Fy(b)36 b(et)-36 b(w)g(een)439 b Fu(T)13115
22567 y Ft(1)14080 22368 y Fy(and)g Fu(T)17377 22567
y Fq(1)18373 22368 y Fy(,)i(under)d(the)h(assumption)f(that)h
(pro\257ling)g(a\256ects)g Fu(T)44741 22567 y Ft(1)45707
22368 y Fy(and)f Fu(T)49003 22567 y Fq(1)2000 23973 y
Fy(comparativ)-36 b(ely)-108 b(.)3951 25768 y(Figure)401
b(7.1.1)h(sho)-36 b(ws)401 b(the)f(w)-36 b(ork,)409 b(critical)401
b(path)f(length,)408 b(and)400 b(parallelism)i(of)f(four)g(di\256eren)
-36 b(t)2000 27373 y(jobs;)402 b(eac)-36 b(h)386 b(job)g(has)g
(parallelism)h(m)-36 b(uc)g(h)385 b(greater)h(than)f(the)h(n)-36
b(um)g(b)36 b(er)384 b(of)i(pro)36 b(cessors)387 b(in)e(our)h(sys-)2000
28978 y(tem,)402 b Fu(P)550 b Fy(=)368 b(16.)566 b(The)394
b(all-pro)36 b(cs)394 b(time)g(of)g(eac)-36 b(h)394 b(job)g(using)g
(the)f(Cilk)i(system)f(\(on)g(16)g(pro)36 b(cessors\))2000
30583 y(is)539 b(also)h(sho)-36 b(wn)539 b(in)f(Figure)h(7.1.1.)896
b(Using)539 b(this)g(v)-72 b(alue)539 b(as)g(a)g(basis)h(for)f
(comparison,)566 b(w)-36 b(e)539 b(then)2000 32188 y(measured)399
b(the)h(all-pro)36 b(cs)400 b(time)g(of)g(eac)-36 b(h)400
b(job)g(using)g(the)f(Cilk-AP)i(system)f(for)h(di\256eren)-36
b(t)398 b(v)-72 b(alues)2000 33793 y(of)542 b Fp(est)p
5723 33793 411 45 v 491 w(cycle)p Fy(.)621 b(W)-108 b(e)449
b(started)f(with)g Fp(est)p 22330 33793 V 491 w(cycle)392
b Fy(=)j(1)448 b(ms)h(and)f(rep)36 b(eat)448 b(our)h(measuremen)-36
b(ts)447 b(for)2000 35399 y Fp(est)p 4134 35399 V 491
w(cycle)515 b Fy(=)j(2,)543 b(5,)h(10,)f(25,)h(50,)g(and)520
b(100)i(ms.)841 b(\(The)521 b(resolution)g(of)h(the)e(hardw)-36
b(are)521 b(clo)36 b(c)-36 b(ks)2000 37004 y(on)499 b(our)g(mac)-36
b(hine)498 b(is)i(appro)-36 b(ximately)500 b(0.8)g(ms.\))774
b(The)499 b(measured)f(all-pro)36 b(cs)500 b(times)f(are)g(sho)-36
b(wn)2000 38609 y(in)595 b(Figure)g(7-2\(a\).)1063 b(Figure)596
b(7-2\(b\))e(plots)h(the)g(same)g(results)g(in)g(terms)g(of)h(the)f(n)
-36 b(um)g(b)36 b(er)593 b(of)2000 40214 y Fp(est)p 4134
40214 V 491 w(cycle)431 b Fy(in)-36 b(terv)-72 b(als.)3951
42009 y(Since)498 b(a)g(job)h(starts)f(out)g(with)g(only)h(1)g(pro)36
b(cessor)499 b(in)f(Cilk-AP)-108 b(,)499 b(w)-36 b(e)498
b(exp)36 b(ect)499 b(the)f(all-pro)36 b(cs)2000 43614
y(times)440 b(rep)36 b(orted)440 b(in)g(Figure)g(7-2\(a\))h(to)f(b)36
b(e)440 b(longer)h(than)f(the)f(times)i(recorded)f(for)g(Cilk,)k(where)
2000 45219 y(the)403 b(job)h(starts)f(out)g(using)h(all)g
Fu(P)585 b Fy(pro)36 b(cessors.)568 b(W)-108 b(e)404
b(compare)f(the)g(t)-36 b(w)g(o)404 b(systems)g(in)f(Figure)g(7-3.)2000
46824 y(A)428 b(v)-72 b(alue)428 b(of)g(1)g(in)g(Figure)f(7-3)h
(indicates)g(that)f(the)g(all-pro)36 b(cs)429 b(time)e(using)h(Cilk-AP)
g(is)g(as)g(short)2000 48429 y(or)434 b(shorter)f(than)g(when)g(using)g
(Cilk,)i(for)g(the)e(giv)-36 b(en)434 b(job)g(and)f(v)-72
b(alue)434 b(of)527 b Fp(est)p 40407 48429 V 491 w(cycle)p
Fy(.)3951 50224 y(In)610 b(Cilk-AP)-108 b(,)612 b(the)e(desire)g(of)i
(a)f(job)g(gro)-36 b(ws)611 b(b)-36 b(y)611 b(at)f(most)h(a)g(factor)g
(of)h(1)p Fu(=\264)658 b Fy(during)610 b(eac)-36 b(h)2000
51829 y Fp(est)p 4134 51829 V 491 w(cycle)471 b Fy(in)-36
b(terv)-72 b(al,)484 b(so)474 b(it)g(tak)-36 b(es)474
b(at)g(least)g(log)26284 52143 y Ft(1)p Fr(=\264)28005
51829 y Fu(P)655 b Fy(in)-36 b(terv)-72 b(als)474 b(b)36
b(efore)474 b(a)g(job)g(requests)f(all)i Fu(P)2000 53434
y Fy(pro)36 b(cessors)411 b(of)g(the)f(mac)-36 b(hine.)571
b(Once)410 b(a)g(pro)36 b(cessor)411 b(has)g(b)36 b(een)410
b(requested)g(and)g(allo)36 b(cated)412 b(to)f(the)2000
55040 y(job,)544 b(there)520 b(is)i(a)f(short)g(dela)-36
b(y)522 b(b)36 b(efore)521 b(the)g(job's)h(usage)f(actually)i
(increases,)543 b(since)521 b(the)g(Cilk-)2000 56645
y(AP)470 b(sc)-36 b(heduler)470 b(m)-36 b(ust)469 b(w)-36
b(ak)g(e)471 b(up)f(a)g(sleeping)h(w)-36 b(ork)g(er,)480
b(and)470 b(another)g(dela)-36 b(y)471 b(b)36 b(efore)471
b(the)e(w)-36 b(ork)g(er)2000 58250 y(gets)471 b(w)-36
b(ork)472 b(on)f(its)g(deque,)481 b(since)471 b(it)g(has)g(to)h(steal)f
(this)g(w)-36 b(ork)472 b(from)f(someone)h(else.)691
b(The)471 b(total)2000 59855 y Fu(\277)708 b Fy(of)561
b(these)e(dela)-36 b(ys)560 b(o)-36 b(v)g(er)561 b(all)f
Fu(P)741 b Fy(w)-36 b(ork)g(ers)560 b(represen)-36 b(ts)559
b(the)g(all-pro)36 b(cs)561 b(time)e(of)i(the)e(job)h(when)2000
61460 y Fp(est)p 4134 61460 V 491 w(cycle)592 b Fy(=)h(0.)976
b(Assuming)565 b(eac)-36 b(h)566 b(dela)-36 b(y)567 b(tak)-36
b(es)566 b(a)g(constan)-36 b(t)565 b(amoun)-36 b(t)566
b(of)g(time,)599 b Fu(\277)714 b Fy(can)566 b(b)36 b(e)2000
63065 y(expressed)433 b(as)h(follo)-36 b(ws:)18809 64670
y Fu(\277)517 b Fy(=)368 b Fu(O)36 b Fy(\()p Fu(P)181
b Fy(\))295 b(+)g Fu(O)36 b Fy(\(log)29150 64984 y Ft(1)p
Fr(=\264)30872 64670 y Fu(P)181 b Fy(\))433 b Fu(:)14135
b Fy(\(7.1\))3951 67185 y(The)425 b(\257rst)e(term)h(represen)-36
b(ts)424 b(the)g(time)g(tak)-36 b(en)425 b(to)g(w)-36
b(ak)g(e)425 b(up)f(all)h Fu(P)606 b Fy(w)-36 b(ork)g(ers,)427
b(p)36 b(erformed)424 b(\(in)2000 68790 y(series\))495
b(b)-36 b(y)495 b(the)g(Cilk-AP)h(sc)-36 b(heduler)494
b(from)h(the)g(bac)-36 b(kground)494 b(thread;)526 b(and)494
b(the)h(second)f(term)2000 70395 y(represen)-36 b(ts)571
b(the)h(time)g(for)h(all)h Fu(P)753 b Fy(w)-36 b(ork)g(ers)573
b(to)g(\257nd)e(w)-36 b(ork,)608 b(p)36 b(erformed)572
b(\(in)g(parallel\))h(b)-36 b(y)573 b(the)2000 72000
y(a)-36 b(w)g(ak)g(ened)449 b(w)-36 b(ork)g(ers)450 b(during)e(eac)-36
b(h)449 b Fp(est)p 21834 72000 V 491 w(cycle)d Fy(in)-36
b(terv)-72 b(al.)625 b(In)449 b(practice,)k Fp(est)p
40427 72000 V 491 w(cycle)446 b Fy(is)k(greater)25350
75321 y(59)p eop end
%%Page: 60 60
TeXDict begin 60 59 bop 2000 1328 a Fy(than)382 b(0,)393
b(so)383 b Fu(\277)530 b Fy(is)383 b(distributed)e(across)i(sev)-36
b(eral)383 b(in)-36 b(terv)-72 b(als.)562 b(If)476 b
Fp(est)p 34077 1328 411 45 v 490 w(cycle)381 b Fy(is)h(large)i(enough,)
392 b(then)2000 2933 y(eac)-36 b(h)510 b(p)36 b(ortion)510
b(of)g Fu(\277)658 b Fy(completes)510 b(within)g(an)g(in)-36
b(terv)-72 b(al,)529 b(and)510 b(the)f(all-pro)36 b(cs)511
b(time)e(of)i(the)e(job)i(is)2000 4539 y(b)36 b(ounded)437
b(b)-36 b(y)439 b(log)10808 4852 y Ft(1)p Fr(=\264)12747
4539 y Fy(in)-36 b(terv)-72 b(als.)594 b(If)532 b Fp(est)p
22010 4539 V 491 w(cycle)437 b Fy(is)i(small,)i(then)d(the)g(all-pro)36
b(cs)439 b(time)g(ma)-36 b(y)439 b(tak)-36 b(e)2000 6144
y(longer)401 b(than)f(log)10551 6457 y Ft(1)p Fr(=\264)12451
6144 y Fy(in)-36 b(terv)-72 b(als.)568 b(F)-108 b(or)400
b(the)g(v)-72 b(alues)401 b(of)494 b Fp(est)p 30175 6144
V 491 w(cycle)398 b Fy(used)i(in)g(our)g(exp)36 b(erimen)-36
b(t,)408 b(the)2000 7749 y(all-pro)36 b(cs)464 b(time)f(is)g(alw)-36
b(a)g(ys)465 b(m)-36 b(uc)g(h)462 b(longer)i(than)e(log)27971
8062 y Ft(1)p Fr(=\264)29693 7749 y Fu(P)600 b Fy(=)419
b(log)34242 8062 y Ft(2)34989 7749 y Fy(16)h(=)f(4)464
b(in)-36 b(terv)-72 b(als,)471 b(as)463 b(sho)-36 b(wn)2000
9354 y(in)531 b(Figure)h(7-2\(b\).)871 b(The)532 b(n)-36
b(um)g(b)36 b(er)529 b(of)k(in)-36 b(terv)-72 b(als)531
b(drops)g(rapidly)-108 b(,)556 b(ho)-36 b(w)g(ev)g(er,)557
b(as)532 b Fp(est)p 44768 9354 V 490 w(cycle)e Fy(is)2000
10959 y(increased.)803 b(When)508 b(reading)h(Figure)f(7-2\(b\),)527
b(observ)-36 b(e)509 b(that)f(while)h(the)f(n)-36 b(um)g(b)36
b(er)506 b(of)k(in)-36 b(terv)-72 b(als)2000 12564 y(decreases)632
b(for)g(larger)h(v)-72 b(alues)632 b(of)725 b Fp(est)p
21895 12564 V 491 w(cycle)p Fy(,)679 b(the)632 b(v)-72
b(alue)632 b(of)g(the)g(all-pro)36 b(cs)632 b(time)g(actually)2000
14169 y(increases,)434 b(as)g(sho)-36 b(wn)433 b(in)h(Figure)f
(7-2\(a\).)3951 15789 y(Figure)570 b(7-2)h(illustrates)g(the)e
(trade-o\256)h(b)36 b(et)-36 b(w)g(een)570 b(o)-36 b(v)g(erhead)570
b(and)g(resp)36 b(onsiv)-36 b(eness)570 b(in)h(the)2000
17394 y(Cilk-AP)433 b(system.)578 b(The)432 b(smaller)h(the)f(v)-72
b(alue)432 b(of)525 b Fp(est)p 28354 17394 V 491 w(cycle)p
Fy(,)431 b(the)g(shorter)h(the)f(all-pro)36 b(cs)433
b(time,)2000 18999 y(but)464 b(the)g(greater)h(the)f(n)-36
b(um)g(b)36 b(er)463 b(of)i(desire-estimation)g(in)-36
b(terv)-72 b(als)465 b(p)36 b(erformed)464 b(b)-36 b(y)465
b(the)f(Cilk-AP)2000 20605 y(sc)-36 b(heduler.)849 b(In)523
b(other)h(w)-36 b(ords,)547 b(while)525 b(Figure)e(7-2\(a\))i(tells)f
(us)g(to)g(use)g(the)f(smallest)i(v)-72 b(alue)524 b(of)2000
22210 y Fp(est)p 4134 22210 V 491 w(cycle)321 b Fy(p)36
b(ossible,)346 b(Figure)323 b(7-2\(b\))g(cautions)g(us)g(from)h(using)f
(a)g(v)-72 b(alue)324 b(that)f(is)g(to)36 b(o)324 b(small,)347
b(lest)2000 23815 y(it)444 b(incur)f(signi\257can)-36
b(t)443 b(o)-36 b(v)g(erhead.)609 b(Lo)36 b(oking)445
b(at)e(b)36 b(oth)444 b(graphs,)i(it)d(seems)h(that)f(a)h(v)-72
b(alue)445 b(b)36 b(et)-36 b(w)g(een)2000 25420 y(5)502
b(and)g(10)h(ms)f(strik)-36 b(es)502 b(a)h(go)36 b(o)g(d)503
b(balance)f(b)36 b(et)-36 b(w)g(een)502 b(the)f(t)-36
b(w)g(o)503 b(extremes.)784 b(W)-108 b(e)502 b(in)-36
b(v)g(estigate)503 b(this)2000 27025 y(trade-o\256)468
b(further)f(in)h(the)g(next)g(exp)36 b(erimen)-36 b(t,)477
b(and)468 b(use)g(our)g(com)-36 b(bined)468 b(results)g(to)g(c)-36
b(ho)36 b(ose)469 b(an)2000 28630 y(appropriate)433 b(v)-72
b(alue)434 b(for)g Fp(est)p 16490 28630 V 491 w(cycle)p
Fy(.)3951 30250 y(As)543 b(an)g(aside,)571 b(w)-36 b(e)544
b(compared)e(the)h(all-pro)36 b(cs)544 b(time)f(of)h(the)e
Fp(loopy)f Fy(program)i(using)g(Cilk-)2000 31855 y(AP)522
b(to)g(the)f(all-pro)36 b(cs)523 b(time)e(measured)h(using)g
(Cilk-AP-INST,)g(a)h(v)-36 b(ersion)522 b(of)h(Cilk-AP)f(that)2000
33460 y(estimates)499 b(the)g(pro)36 b(cessor)499 b(desire)g(of)h(a)f
(job)h(b)-36 b(y)499 b(directly)g(measuring)g(its)g(instan)-36
b(taneous)499 b(par-)2000 35065 y(allelism.)1021 b(In)580
b(Cilk-AP-INST,)i(the)e(instan)-36 b(taneous)580 b(parallelism)i(of)f
(a)g(job)g(is)g(measured)f(b)-36 b(y)2000 36671 y(coun)g(ting)588
b(the)h(total)g(n)-36 b(um)g(b)36 b(er)587 b(of)j(threads)e(on)h(the)f
(ready)h(deques)g(of)g(all)h(w)-36 b(ork)g(ers.)1045
b(As)589 b(ex-)2000 38276 y(plained)444 b(in)h(Section)f(4.2,)449
b(p)36 b(olicies)446 b(of)f(this)f(nature)g(are)h(inheren)-36
b(tly)444 b(misleading)i(b)36 b(ecause)444 b(they)2000
39881 y(can)404 b(substan)-36 b(tially)404 b(underestimate)f(the)h
(actual)g(parallelism)h(of)g(a)f(computation.)568 b(The)404
b(results)2000 41486 y(of)543 b(our)g(comparison)g(supp)36
b(ort)542 b(this)g(claim,)571 b(and)542 b(are)h(sho)-36
b(wn)543 b(in)f(Figure)h(7-4.)906 b(As)543 b(predicted,)2000
43091 y(the)388 b(Cilk-AP-INST)i(system)f(p)36 b(erforms)389
b(considerably)h(w)-36 b(orse)389 b(than)g(Cilk-AP)g(for)h(all)g(v)-72
b(alues)389 b(of)2000 44696 y Fp(est)p 4134 44696 V 491
w(cycle)p Fy(;)452 b(ev)-36 b(en)448 b(at)g(the)e(smallest)j(in)-36
b(terv)-72 b(al)448 b(size,)j(Cilk-AP-INST)e(is)e(o)-36
b(v)g(er)448 b(2.5)h(times)e(slo)-36 b(w)g(er)2000 46301
y(than)433 b(Cilk-AP)-108 b(.)2000 50245 y Fx(7.1.2)1792
b(Exp)50 b(erimen)-50 b(t)601 b(O2:)797 b(Running)598
b(Time)g(Ov)-50 b(erhead)2000 52739 y Fy(In)296 b(Exp)36
b(erimen)-36 b(t)295 b(O1,)324 b(w)-36 b(e)296 b(observ)-36
b(ed)296 b(a)h(trade-o\256)e(b)36 b(et)-36 b(w)g(een)295
b(the)h(o)-36 b(v)g(erhead)296 b(and)f(resp)36 b(onsiv)-36
b(eness)296 b(of)2000 54344 y(Cilk-AP)321 b(as)g(the)f(v)-72
b(alue)321 b(of)413 b Fp(est)p 17414 54344 V 491 w(cycle)318
b Fy(is)j(c)-36 b(hanged.)540 b(In)320 b(Exp)36 b(erimen)-36
b(t)320 b(O2,)343 b(w)-36 b(e)321 b(assess)g(the)f(trade-)2000
55949 y(o\256)337 b(further)f(b)-36 b(y)337 b(measuring)g(its)h
(e\256ect)e(on)h(the)g(running)f(time)h(of)h(eac)-36
b(h)337 b(job.)546 b(F)-108 b(or)337 b(consistency)-108
b(,)357 b(w)-36 b(e)2000 57554 y(used)343 b(the)g(same)h(jobs)h(listed)
f(in)f(Figure)h(7.1.1)h(from)g(the)e(\257rst)g(exp)36
b(erimen)-36 b(t.)548 b(W)-108 b(e)344 b(then)f(measured)2000
59159 y(the)404 b(running)g(time)h(of)g(eac)-36 b(h)405
b(job)g(using)g(b)36 b(oth)404 b(the)h(Cilk)h(and)e(Cilk-AP)i(systems)f
(o)-36 b(v)g(er)405 b(the)g(same)2000 60764 y(range)319
b(of)g(v)-72 b(alues)319 b(for)g Fp(est)p 14556 60764
V 491 w(cycle)p Fy(.)538 b(By)319 b(comparing)g(the)f(running)f(times)i
(of)g(Cilk-AP)h(to)e(Cilk,)344 b(w)-36 b(e)2000 62369
y(can)368 b(gauge)i(the)e(o)-36 b(v)g(erhead)368 b(incurred)f(b)-36
b(y)369 b(the)f(desire-estimation)g(pro)36 b(cess,)382
b(whic)-36 b(h)368 b(is)h(p)36 b(erformed)2000 63975
y(b)-36 b(y)462 b(the)f(Cilk-AP)i(sc)-36 b(heduler)462
b(during)f(ev)-36 b(ery)463 b(in)-36 b(terv)-72 b(al.)664
b(F)-108 b(or)461 b(small)i(v)-72 b(alues)463 b(of)555
b Fp(est)p 43240 63975 V 491 w(cycle)p Fy(,)467 b(this)2000
65580 y(pro)36 b(cess)593 b(o)36 b(ccurs)594 b(with)f(high)g(frequency)
h(throughout)e(the)h(job's)h(execution,)634 b(and)593
b(hence)g(w)-36 b(e)2000 67185 y(exp)36 b(ect)502 b(the)g(o)-36
b(v)g(erhead)502 b(to)h(b)36 b(e)502 b(high.)784 b(As)502
b Fp(est)p 25244 67185 V 491 w(cycle)e Fy(is)j(increased,)519
b(the)502 b(pro)36 b(cess)502 b(o)36 b(ccurs)503 b(less)2000
68790 y(frequen)-36 b(tly)-108 b(,)567 b(and)539 b(the)g(resulting)h(o)
-36 b(v)g(erhead)540 b(is)g(lo)-36 b(w.)898 b(Figure)540
b(7-5)g(sho)-36 b(ws)540 b(our)g(results)f(for)i(the)2000
70395 y(di\256eren)-36 b(t)428 b(v)-72 b(alues)429 b(of)522
b Fp(est)p 14697 70395 V 491 w(cycle)p Fy(.)575 b(The)429
b(o)-36 b(v)g(erhead)429 b(of)g(Cilk-AP)h(is)f(expressed)g(as)g(a)g(p)
36 b(ercen)-36 b(tage)2000 72000 y(of)437 b(the)f(running)g(time)g
(using)h(Cilk;)i(a)e(v)-72 b(alue)437 b(of)g(0)g(indicates)g(that)f
(Cilk-AP's)i(running)d(time)i(is)25350 75321 y(60)p eop
end
%%Page: 61 61
TeXDict begin 61 60 bop 2000 1328 a Fy(as)434 b(short)f(or)h(shorter)f
(than)g(the)g(running)f(time)i(using)f(Cilk.)3951 2947
y(F)-108 b(rom)344 b(Figure)g(7-5,)363 b(w)-36 b(e)345
b(see)f(that)g(the)g(o)-36 b(v)g(erhead)345 b(of)g(Cilk-AP)g(drops)f
(rapidly)h(as)f(the)g(v)-72 b(alue)345 b(of)2000 4552
y Fp(est)p 4134 4552 411 45 v 491 w(cycle)g Fy(is)j(increased.)550
b(In)347 b(particular,)365 b(for)349 b Fp(est)p 27516
4552 V 490 w(cycle)367 b Fu(>)i Fy(5)348 b(ms,)365 b(the)347
b(o)-36 b(v)g(erhead)348 b(is)g(virtually)2000 6157 y(nonexisten)-36
b(t.)601 b(The)442 b(decline)f(of)h(the)f(o)-36 b(v)g(erhead)442
b(in)f(Figure)g(7-5)h(is)g(consisten)-36 b(t)441 b(with)g(the)g
(decline)2000 7762 y(of)399 b(the)f(n)-36 b(um)g(b)36
b(er)397 b(of)j(in)-36 b(terv)-72 b(als)398 b(in)h(Figure)f(7-2\(b\).)
566 b(In)399 b(particular,)406 b(b)36 b(oth)398 b(graphs)g(suggest)h
(that)f(a)2000 9368 y(v)-72 b(alue)465 b(of)558 b Fp(est)p
9130 9368 V 491 w(cycle)463 b Fy(greater)i(than)f(5)h(ms)f(is)h(large)h
(enough)e(to)h(a)-36 b(v)g(oid)465 b(signi\257can)-36
b(t)465 b(o)-36 b(v)g(erheads)2000 10973 y(when)401 b(using)g(Cilk-AP)
-108 b(.)401 b(Bey)-36 b(ond)401 b(5)h(ms,)408 b(the)400
b(di\256erence)g(in)h(o)-36 b(v)g(erhead)401 b(is)h(minimal.)568
b(Com)-36 b(bining)2000 12578 y(this)357 b(result)f(with)h(our)g
(analysis)h(of)g(Figure)f(7-2\(a\),)373 b(w)-36 b(e)357
b(conclude)f(that)h(a)g(v)-72 b(alue)358 b Fp(est)p 43774
12578 V 490 w(cycle)367 b Fy(=)i(5)2000 14183 y(ms)433
b(is)h(an)g(appropriate)f(c)-36 b(hoice)434 b(for)g(our)f(system.)3951
15802 y(By)524 b(rep)36 b(eating)524 b(the)f(\257rst)g(and)g(second)h
(exp)36 b(erimen)-36 b(ts)523 b(for)h(di\256eren)-36
b(t)523 b(v)-72 b(alues)524 b(of)g Fu(P)181 b Fy(,)547
b(w)-36 b(e)524 b(can)2000 17407 y(mak)-36 b(e)394 b(a)g(general)h
(statemen)-36 b(t)393 b(ab)36 b(out)393 b(the)g(o)-36
b(v)g(erhead)394 b(and)f(optimal)i(in)-36 b(terv)-72
b(al)394 b(size)g(of)g(Cilk-AP)h(in)2000 19012 y(terms)376
b(of)h(the)g(n)-36 b(um)g(b)36 b(er)375 b(of)i(pro)36
b(cessors)377 b(in)f(a)h(system.)560 b(W)-108 b(e)376
b(describ)36 b(e)376 b(a)h(strategy)h(for)f(p)36 b(erforming)2000
20617 y(this)433 b(extrap)36 b(olation)435 b(in)f(Chapter)f(9.)2000
24553 y Fx(7.1.3)1792 b(Exp)50 b(erimen)-50 b(t)601 b(O3:)797
b(Pro)50 b(cess)598 b(Con)-50 b(trol)599 b(Ov)-50 b(erhead)2000
27044 y Fy(In)438 b(this)g(exp)36 b(erimen)-36 b(t,)440
b(w)-36 b(e)439 b(p)36 b(erformed)438 b(a)g(simple)h(test)f(to)g
(measure)h(the)e(o)-36 b(v)g(erhead)439 b(incurred)e(b)-36
b(y)2000 28649 y(pro)36 b(cess)392 b(con)-36 b(trol)393
b(when)f(the)f(n)-36 b(um)g(b)36 b(er)391 b(of)i(w)-36
b(ork)g(ers)393 b(in)f(the)g(system)g(exceeds)h Fu(P)181
b Fy(.)565 b(As)392 b(observ)-36 b(ed)392 b(in)2000 30254
y(Section)398 b(6.2,)407 b(this)398 b(situation)h(usually)g(o)36
b(ccurs)398 b(when)g(the)g(threads)g(of)h(a)g(computation)f(are)g(v)-36
b(ery)2000 31859 y(long,)419 b(b)36 b(ecause)414 b(a)g(w)-36
b(ork)g(er)415 b(that)e(is)i(signaled)f(to)h(sleep)f(only)g(notices)h
(the)e(exception)i(after)f(com-)2000 33464 y(pleting)446
b(the)f(curren)-36 b(tly)445 b(executing)h(thread.)613
b(T)-108 b(o)446 b(sim)-36 b(ulate)446 b(this)f(e\256ect,)k(w)-36
b(e)446 b(ran)f(t)-36 b(w)g(o)446 b(instances)2000 35069
y(of)c(the)f Fp(loopy)e Fy(program|eac)-36 b(h)441 b(with)g
(parallelism)i(greater)e(than)g(or)g(equal)h(to)g Fu(P)181
b Fy(|separated)2000 36674 y(b)-36 b(y)539 b(the)f(all-pro)36
b(cs)540 b(time)f(of)h(the)e(\257rst)h(instance.)894
b(In)539 b(other)g(w)-36 b(ords,)566 b(w)-36 b(e)539
b(allo)-36 b(w)540 b(the)f(\257rst)f(job's)2000 38279
y(usage)480 b(to)h(reac)-36 b(h)479 b Fu(P)661 b Fy(pro)36
b(cessors)481 b(b)36 b(efore)480 b(starting)g(the)f(second)h(job.)718
b(In)480 b(the)f(Cilk-AP)i(system,)2000 39884 y(the)337
b(allotmen)-36 b(t)337 b(of)h(the)e(\257rst)h(job)g(is)h(reduced)d(to)j
Fu(P)108 b(=)p Fy(2)338 b(pro)36 b(cessors)338 b(when)e(the)h(second)g
(job)g(arriv)-36 b(es,)2000 41490 y(but)434 b(there)h(is)g(a)h(p)36
b(oten)-36 b(tially)436 b(long)g(dela)-36 b(y)436 b(b)36
b(efore)436 b(the)e(\257rst)h(job)g(is)h(actually)g(able)g(to)f(reduce)
g(its)2000 43095 y(curren)-36 b(t)447 b(usage,)454 b(b)36
b(ecause)448 b(eac)-36 b(h)449 b(of)g(its)g(w)-36 b(ork)g(ers)450
b(is)f(busy)f(executing)h(a)g(long)h(sub)36 b(computation.)2000
44700 y(The)474 b(second)f(job)h(is)g(oblivious)h(to)f(this)f(dela)-36
b(y)474 b(and)f(b)36 b(egins)474 b(using)g(its)f(fair)i(share)e(of)i
Fu(P)108 b(=)p Fy(2)475 b(pro-)2000 46305 y(cessors)517
b(immediately)h(after)f(starting.)829 b(As)517 b(a)g(result,)538
b(the)516 b(total)h(n)-36 b(um)g(b)36 b(er)516 b(of)h(w)-36
b(ork)g(ers)518 b(in)f(the)2000 47910 y(system)434 b(exceeds)g
Fu(P)614 b Fy(for)435 b(as)e(long)i(as)e(the)g(\257rst)g(job)h(is)g
(unable)f(to)h(prop)36 b(erly)433 b(reduce)g(its)h(usage.)3951
49529 y(The)388 b Fo(r)-78 b(esp)g(onse)501 b(time)g
Fy(of)389 b(a)f(job)g(is)g(de\257ned)f(as)h(the)f(time)h(elapsed)g
(from)g(when)g(the)f(job)h(ar-)2000 51134 y(riv)-36 b(es)383
b(to)g(when)f(it)g(completes)h(\(including)f(an)-36 b(y)383
b(time)f(the)g(job)h(sp)36 b(ends)382 b(queued\).)560
b(W)-108 b(e)383 b(measured)2000 52739 y(the)450 b(mean)h(resp)36
b(onse)451 b(time)g(of)h(the)e(t)-36 b(w)g(o)451 b(jobs)h(for)f
(di\256eren)-36 b(t)450 b(input)g(sizes,)456 b(once)451
b(using)g(Cilk-AP)2000 54344 y(and)490 b(again)h(using)f(Cilk-AP)h
(with)f(an)g(allo)36 b(cation)492 b(limit)f(of)g Fu(P)108
b(=)p Fy(2)492 b(pro)36 b(cessors)490 b(p)36 b(er)490
b(job.)749 b(In)490 b(the)2000 55949 y(second)545 b(case,)575
b(the)545 b(total)h(n)-36 b(um)g(b)36 b(er)544 b(of)i(w)-36
b(ork)g(ers)546 b(nev)-36 b(er)546 b(exceeds)g Fu(P)181
b Fy(,)573 b(b)36 b(ecause)546 b(the)f(\257rst)g(job)h(is)2000
57554 y(limited)442 b(to)f Fu(P)108 b(=)p Fy(2)443 b(pro)36
b(cessors)442 b(from)g(the)f(start.)602 b(Our)441 b(results)g(are)h
(sho)-36 b(wn)441 b(in)g(Figure)h(7.1.3.)603 b(F)-108
b(or)2000 59159 y(comparison,)453 b(w)-36 b(e)449 b(ran)f(the)h(exp)36
b(erimen)-36 b(t)448 b(using)h(the)f(Cilk)i(system)f(with)g(a)g(static)
g(allo)36 b(cation)450 b(of)2000 60764 y Fu(P)108 b(=)p
Fy(2)400 b(pro)36 b(cessors)398 b(p)36 b(er)398 b(job.)567
b(F)-108 b(rom)398 b(Figure)g(7.1.3,)407 b(one)398 b(can)g(see)h(that)f
(the)f(pro)36 b(cess)399 b(con)-36 b(trol)398 b(tec)-36
b(h-)2000 62369 y(nique)442 b(incurs)f(signi\257can)-36
b(t)442 b(o)-36 b(v)g(erhead)441 b(relativ)-36 b(e)443
b(to)f(Cilk)h(when)f(the)f(n)-36 b(um)g(b)36 b(er)440
b(of)i(w)-36 b(ork)g(ers)443 b(in)f(the)2000 63975 y(system)448
b(exceeds)g Fu(P)181 b Fy(.)620 b(If)448 b(the)f(n)-36
b(um)g(b)36 b(er)446 b(of)i(w)-36 b(ork)g(ers)448 b(is)g(k)-36
b(ept)448 b(at)f(or)h(b)36 b(elo)-36 b(w)448 b Fu(P)181
b Fy(,)451 b(ho)-36 b(w)g(ev)g(er,)452 b(pro)36 b(cess)2000
65580 y(con)-36 b(trol)339 b(incurs)f(no)h(additional)g(o)-36
b(v)g(erhead,)359 b(as)339 b(evidenced)g(b)-36 b(y)338
b(the)h(last)g(column)g(of)g(Figure)g(7.1.3.)2000 67185
y(The)485 b(larger)g(the)g(input)e(size)j(to)f Fp(loopy)p
Fy(,)495 b(the)485 b(lo)-36 b(w)g(er)485 b(the)f(pro)36
b(cess)485 b(con)-36 b(trol)485 b(o)-36 b(v)g(erhead,)498
b(b)36 b(ecause)2000 68790 y(the)537 b(\257rst)h(job)g(has)g(more)g
(time)g(to)g(reduce)f(its)h(pro)36 b(cessor)538 b(usage)g(\(in)g(fact,)
565 b(all)538 b(sub)36 b(computa-)2000 70395 y(tions)463
b(after)g(the)f(\257rst)g Fu(P)644 b Fy(are)463 b(executed)g(using)f
(only)i Fu(P)108 b(=)p Fy(2)464 b(pro)36 b(cessors)463
b(b)-36 b(y)463 b(the)f(\257rst)g(job\).)666 b(The)2000
72000 y(allo)36 b(cation)534 b(limits)e(used)g(in)f(this)h(exp)36
b(erimen)-36 b(t)532 b(are)g(for)g(illustrativ)-36 b(e)533
b(purp)36 b(oses)531 b(only)-108 b(,)557 b(and)532 b(are)25350
75321 y(61)p eop end
%%Page: 62 62
TeXDict begin 62 61 bop 2000 1328 a Fy(not)466 b(part)h(of)g(the)f
(design)h(or)g(implemen)-36 b(tation)467 b(of)g(the)f(Cilk-AP)i
(system.)678 b(Ev)-36 b(en)467 b(though)f(suc)-36 b(h)2000
2933 y(limits)429 b(help)f(prev)-36 b(en)g(t)427 b(the)h(n)-36
b(um)g(b)36 b(er)427 b(of)i(w)-36 b(ork)g(ers)429 b(from)g(exceeding)g
Fu(P)181 b Fy(,)429 b(they)g(also)g(w)-36 b(aste)429
b(system)2000 4539 y(resources)k(and)g(limit)i(ac)-36
b(hiev)-72 b(able)434 b(utilization,)g(as)g(explained)g(in)g(Chapter)f
(2.)2000 9251 y FC(7.2)2152 b(P)-60 b(erformance)717
b(of)f(Cilk-AP)2000 12262 y Fy(In)467 b(this)h(section,)477
b(w)-36 b(e)468 b(describ)36 b(e)467 b(three)g(exp)36
b(erimen)-36 b(ts)467 b(for)i(measuring)e(the)g(p)36
b(erformance)468 b(of)h(the)2000 13867 y(Cilk-AP)525
b(system.)849 b(In)524 b(the)f(\257rst)g(exp)36 b(erimen)-36
b(t,)546 b(w)-36 b(e)524 b(sim)-36 b(ulated)524 b(scenario)g(\(a\))g
(from)g(Figure)g(2-)2000 15472 y(1)627 b(using)g(three)g(iden)-36
b(tical)627 b(instances)g(of)h(the)f Fp(fib)e Fy(program.)1160
b(In)627 b(the)f(second)h(exp)36 b(erimen)-36 b(t,)2000
17078 y(w)g(e)529 b(sim)-36 b(ulated)529 b(scenario)g(\(b\))f(from)i
(Figure)f(2-1)g(using)f(complemen)-36 b(tary)529 b(runs)f(of)i(the)e
Fp(knary)2000 18683 y Fy(program.)575 b(W)-108 b(e)425
b(compare)g(the)f(mean)g(resp)36 b(onse)424 b(time)h(and)f(throughput)e
(ac)-36 b(hiev)g(ed)425 b(b)-36 b(y)425 b(the)f(Cilk)2000
20288 y(and)549 b(Cilk-AP)i(systems)f(in)g(b)36 b(oth)549
b(of)i(these)e(exp)36 b(erimen)-36 b(ts.)927 b(W)-108
b(e)550 b(use)f(the)g(notion)h(of)h Fo(p)-78 b(ower)148
b Fy(,)2000 21893 y(de\257ned)644 b(as)h(the)g(throughput)e(divided)i
(b)-36 b(y)645 b(the)g(resp)36 b(onse)645 b(time)g([25,)298
b(26],)699 b(to)645 b(compare)h(the)2000 23498 y(o)-36
b(v)g(erall)571 b(p)36 b(erformance.)988 b(P)-36 b(o)g(w)g(er)570
b(is)g(a)g(suitable)g(metric)g(for)h(comparison)f(b)36
b(ecause)570 b(it)g(re\260ects)2000 25103 y(our)496 b(goal)h(of)g
(maximizing)g(the)e(throughput)f(while)j(minimizing)f(the)g(resp)36
b(onse)495 b(time.)766 b(In)496 b(the)2000 26708 y(last)525
b(exp)36 b(erimen)-36 b(t,)547 b(w)-36 b(e)525 b(measured)f(the)g
(running)g(times)h(of)g(sev)-36 b(eral)526 b(jobs)f(using)f(Cilk-AP)h
(and)2000 28313 y(compare)434 b(them)f(to)g(the)g(greedy-sc)-36
b(heduling)433 b(b)36 b(ound)432 b(pro)-36 b(v)g(ed)434
b(in)f(Theorem)h(3.)3951 29963 y(The)545 b(target)g(e\261ciency)g
Fu(\264)592 b Fy(of)546 b(the)e(Cilk-AP)i(sc)-36 b(heduler)544
b(w)-36 b(as)545 b(set)g(to)g(0.5)h(in)e(the)h(\257rst)f(t)-36
b(w)g(o)2000 31568 y(exp)36 b(erimen)-36 b(ts)484 b(and)g(0.75)i(in)e
(the)g(third.)730 b(F)-108 b(or)484 b(accuracy)-108 b(,)498
b(all)485 b(of)g(the)f(measured)g(running)f(times)2000
33173 y(w)-36 b(ere)434 b(a)-36 b(v)g(eraged)434 b(o)-36
b(v)g(er)434 b(5)g(trials.)2000 37300 y Fx(7.2.1)1792
b(Exp)50 b(erimen)-50 b(t)601 b(P1:)797 b(Arriv)-100
b(al)599 b(of)f(a)f(New)i(Job)2000 39854 y Fy(In)511
b(this)g(exp)36 b(erimen)-36 b(t,)530 b(w)-36 b(e)511
b(sim)-36 b(ulated)511 b(scenario)h(\(a\))f(from)g(Figure)g(2-1)g
(using)g(three)g(iden)-36 b(tical)2000 41459 y(jobs,)373
b(called)358 b(A,)f(B,)g(and)g(C,)h(that)e(request)h
Fu(P)108 b(=)p Fy(2)358 b(pro)36 b(cessors)358 b(eac)-36
b(h.)553 b(In)356 b(the)h(giv)-36 b(en)357 b(scenario,)374
b(jobs)2000 43064 y(A)436 b(and)f(B)h(start)g(running)e(at)i(time)g(0)g
(and)g(job)g(C)g(arriv)-36 b(es)436 b(at)g(some)h(time)e
Fu(t)373 b Fs(\270)g Fy(0.)585 b(W)-108 b(e)436 b(b)36
b(egin)436 b(b)-36 b(y)2000 44669 y(analyzing)404 b(the)e(mean)g(resp)
36 b(onse)402 b(time)h(and)f(throughput)e(ac)-36 b(hiev)g(ed)403
b(b)-36 b(y)402 b(the)g(Cilk)i(and)e(Cilk-AP)2000 46274
y(systems)470 b(theoretically)-108 b(,)480 b(assuming)470
b(an)f(ideal)i(mac)-36 b(hine)469 b(with)h(no)g(sc)-36
b(heduling)469 b(o)-36 b(v)g(erhead.)687 b(If)470 b Fu(T)2000
47879 y Fy(is)368 b(the)g(execution)g(time)g(of)h(eac)-36
b(h)368 b(job)g(on)g Fu(P)108 b(=)p Fy(2)370 b(pro)36
b(cessors,)381 b(then)367 b(the)h(mean)g(resp)36 b(onse)367
b(time)h(and)2000 49484 y(throughput)447 b(of)j(eac)-36
b(h)449 b(system)g(can)g(b)36 b(e)449 b(expressed)g(using)g
Fu(P)181 b Fy(,)453 b Fu(T)181 b Fy(,)453 b(and)448 b
Fu(t)p Fy(.)625 b(W)-108 b(e)449 b(calculated)g(these)2000
51089 y(v)-72 b(alues)449 b(for)f Fu(t)393 b Fy(=)h(0)448
b(and)f Fu(t)394 b Fy(=)f Fu(T)145 b(=)p Fy(2)448 b(and)g(list)g(them)g
(in)f(Figure)h(7.2.1.)624 b(F)-108 b(or)447 b(b)36 b(oth)448
b(v)-72 b(alues)448 b(of)h Fu(t)p Fy(,)j(the)2000 52694
y(mean)474 b(resp)36 b(onse)474 b(time)g(using)g(Cilk-AP)h(is)f(longer)
h(than)e(when)h(using)g(Cilk,)486 b(but)473 b(the)h(increase)2000
54299 y(in)394 b(throughput)d(is)k(still)f(large)h(enough)e(to)h(yield)
g(a)g(greater)g(p)36 b(o)-36 b(w)g(er)394 b(for)g(Cilk-AP)-108
b(.)395 b(The)f(ratios)g(in)2000 55904 y(Figure)444 b(7.2.1)i(indicate)
f(the)e(relativ)-36 b(e)446 b(p)36 b(erformance)444 b(w)-36
b(e)445 b(can)f(exp)36 b(ect)445 b(from)f(Cilk-AP)i(and)e(Cilk)2000
57510 y(in)433 b(practice.)3951 59159 y(In)543 b(our)f(exp)36
b(erimen)-36 b(t,)570 b(w)-36 b(e)544 b(used)e(three)g(instances)h(of)
636 b Fp(fib\(38\))540 b Fy(to)j(represen)-36 b(t)541
b(jobs)i(A,)h(B,)2000 60764 y(and)379 b(C.)h(Since)e(eac)-36
b(h)380 b(job)f(has)g(parallelism)i(m)-36 b(uc)g(h)378
b(greater)i(than)e Fu(P)181 b Fy(,)390 b(w)-36 b(e)380
b(set)f(an)g(allo)36 b(cation)381 b(limit)2000 62369
y(of)562 b Fu(P)108 b(=)p Fy(2)563 b(pro)36 b(cessors)561
b(to)g(sim)-36 b(ulate)562 b(scenario)f(\(a\))h(correctly)-108
b(.)961 b(Figure)561 b(7.2.1)i(sho)-36 b(ws)561 b(the)g(mean)2000
63975 y(resp)36 b(onse)591 b(time,)630 b(throughput,)f(and)590
b(p)36 b(o)-36 b(w)g(er)591 b(ac)-36 b(hiev)g(ed)591
b(b)-36 b(y)591 b(the)f(Cilk)j(and)d(Cilk-AP)i(systems)2000
65580 y(during)433 b(the)g(actual)h(exp)36 b(erimen)-36
b(t.)579 b(The)433 b(v)-72 b(alue)435 b(of)f Fu(T)615
b Fy(w)-36 b(as)434 b(measured)f(exp)36 b(erimen)-36
b(tally)435 b(for)f(eac)-36 b(h)2000 67185 y(system.)556
b(Giv)-36 b(en)365 b(the)f(nonideal)i(conditions)f(of)h(our)e(mac)-36
b(hine,)379 b(the)365 b(ratios)g(in)g(Figure)g(7.2.1)i(coin-)2000
68790 y(cide)431 b(reasonably)h(w)-36 b(ell)432 b(with)g(the)f
(theoretical)g(v)-72 b(alues)432 b(sho)-36 b(wn)431 b(in)g(Figure)g
(7.2.1.)579 b(As)432 b(predicted,)2000 70395 y(the)405
b(p)36 b(o)-36 b(w)g(er)406 b(ac)-36 b(hiev)g(ed)406
b(b)-36 b(y)406 b(Cilk-AP)g(is)g(greater)g(than)f(the)g(p)36
b(o)-36 b(w)g(er)406 b(of)h(Cilk)g(for)f(b)36 b(oth)405
b(v)-72 b(alues)407 b(of)f Fu(t)p Fy(,)2000 72000 y(ev)-36
b(en)434 b(with)f(a)h(theoretical)g(ratio)g(as)g(small)h(as)f(1.067)h
(\(as)f(predicted)e(for)i Fu(t)369 b Fy(=)f Fu(T)145
b(=)p Fy(2\).)25350 75321 y(62)p eop end
%%Page: 63 63
TeXDict begin 63 62 bop 2000 1328 a Fx(7.2.2)1792 b(Exp)50
b(erimen)-50 b(t)712 b(P2:)1019 b(Changes)710 b(in)f(P)-50
b(arallelism)711 b(During)f(Run-)7479 3321 y(time)2000
6073 y Fy(In)407 b(the)g(second)g(p)36 b(erformance)408
b(exp)36 b(erimen)-36 b(t,)413 b(w)-36 b(e)407 b(sim)-36
b(ulated)408 b(scenario)f(\(b\))g(from)h(Figure)f(2-1)h(b)-36
b(y)2000 7678 y(running)431 b(t)-36 b(w)g(o)432 b(jobs,)h(called)f(A)g
(and)g(B,)g(that)f(ha)-36 b(v)g(e)432 b(complemen)-36
b(tary)432 b(parallelism)h(pro\257les.)578 b(W)-108 b(e)2000
9283 y(divided)502 b(eac)-36 b(h)502 b(job)g(in)-36 b(to)502
b(t)-36 b(w)g(o)502 b(phases,)519 b(a)503 b(serial)f(phase)g(and)f(a)i
(parallel)g(phase,)519 b(and)501 b(used)h(the)2000 10888
y Fp(knary)383 b Fy(program)j(to)g(implemen)-36 b(t)385
b(eac)-36 b(h)386 b(phase.)562 b(Job)386 b(A)g(executes)g(the)f(serial)
h(phase)g(b)36 b(efore)386 b(exe-)2000 12493 y(cuting)426
b(the)g(parallel)h(phase,)h(and)e(job)h(B)f(executes)h(the)f(parallel)h
(phase)f(b)36 b(efore)427 b(executing)g(the)2000 14098
y(serial)447 b(phase.)614 b(The)446 b(pseudo)36 b(co)g(de)445
b(for)i(eac)-36 b(h)445 b(job)i(is)f(sho)-36 b(wn)445
b(b)36 b(elo)-36 b(w.)616 b(W)-108 b(e)446 b(used)f Fp(knary\(11,4,4\))
2000 15703 y Fy(for)434 b(the)f(serial)i(phase)e(and)g
Fp(knary\(11,5,0\))427 b Fy(for)435 b(the)e(parallel)h(phase.)3951
19462 y Fp(Job)682 b(A:)3951 22672 y(cilk)g(int)g(main)g(\(...\))f({)
5318 24277 y(...)5318 25882 y(/*)i(serial)e(phase)g(*/)5318
27487 y(spawn)g(knary\(11,4,4\);)5318 29092 y(/*)i(wait)e(for)i(serial)
e(phase)7369 30697 y(to)h(complete)e(*/)5318 32302 y(sync;)5318
33908 y(/*)j(parallel)d(phase)h(*/)5318 35513 y(spawn)g
(knary\(11,5,0\);)5318 37118 y(sync;)5318 40328 y(return)g(0;)3951
41933 y(})28240 19462 y(Job)h(B:)28240 22672 y(cilk)g(int)g(main)g
(\(...\))f({)29607 24277 y(...)29607 25882 y(/*)i(parallel)d(phase)h
(*/)29607 27487 y(spawn)g(knary\(11,5,0\);)29607 29092
y(/*)i(wait)f(for)g(parallel)e(phase)31658 30697 y(to)i(complete)e(*/)
29607 32302 y(sync;)29607 33908 y(/*)j(serial)e(phase)g(*/)29607
35513 y(spawn)g(knary\(11,4,4\);)29607 37118 y(sync;)29607
40328 y(return)g(0;)28240 41933 y(})3951 46319 y Fy(Since)626
b(A)g(and)g(B)g(are)h(p)36 b(erfect)626 b(complemen)-36
b(ts)626 b(of)h(eac)-36 b(h)626 b(other,)674 b(they)626
b(exhibit)h(the)f(same)2000 47924 y(amoun)-36 b(t)364
b(of)h(parallelism.)557 b(W)-108 b(e)364 b(measured)g(this)g(v)-72
b(alue)365 b(to)g(b)36 b(e)364 b(13.68)i(using)e(the)g(Cilk)i
(pro\257ler.)555 b(T)-108 b(o)2000 49529 y(p)36 b(erform)456
b(our)f(exp)36 b(erimen)-36 b(t,)461 b(w)-36 b(e)456
b(ran)f(jobs)h(A)g(and)f(B)g(concurren)-36 b(tly)455
b(using)g(b)36 b(oth)455 b(the)h(Cilk)g(and)2000 51134
y(Cilk-AP)403 b(systems)g(and)e(measured)h(the)f(mean)h(resp)36
b(onse)402 b(time)g(in)g(eac)-36 b(h)402 b(case.)569
b(Our)401 b(results)h(are)2000 52739 y(sho)-36 b(wn)447
b(in)g(Figure)g(7.2.2.)620 b(When)447 b(using)g(the)f(Cilk)j(system,)i
(eac)-36 b(h)447 b(job)g(is)h(giv)-36 b(en)447 b(the)g(maxim)-36
b(um)2000 54344 y(allotmen)g(t)452 b(of)g Fu(P)108 b(=)p
Fy(2)400 b(=)f(8)452 b(pro)36 b(cessors,)456 b(based)451
b(on)h(their)e(rep)36 b(orted)451 b(parallelism)i(\(whic)-36
b(h)451 b(exceeds)2000 55949 y(this)364 b(v)-72 b(alue\).)555
b(Since)364 b(the)g(allotmen)-36 b(t)364 b(of)h(eac)-36
b(h)364 b(job)g(is)h(static,)378 b(it)365 b(remains)f(\257xed)g
(throughout)f(b)36 b(oth)2000 57554 y(the)469 b(serial)h(and)f
(parallel)h(phases)f(of)h(execution.)686 b(In)469 b(the)g(Cilk-AP)h
(system,)479 b(the)469 b(allotmen)-36 b(t)469 b(of)2000
59159 y(a)440 b(job)f(is)h(determined)e(dynamically)j(b)-36
b(y)439 b(the)g(Cilk-AP)h(sc)-36 b(heduler)439 b(based)g(on)g
(estimates)g(of)i(the)2000 60764 y(job's)473 b(curren)-36
b(t)472 b(desire.)696 b(As)473 b(a)g(result,)482 b(the)473
b(allotmen)-36 b(t)473 b(can)g(gro)-36 b(w)473 b(and)f(shrink)h(during)
f(run)-36 b(time)2000 62369 y(to)469 b(adapt)f(to)h(c)-36
b(hanges)469 b(in)f(the)g(job's)i(parallelism.)685 b(In)468
b(the)g(\257rst)g(half)h(of)h(our)e(exp)36 b(erimen)-36
b(t,)478 b(job)2000 63975 y(A)409 b(executes)g(the)g(serial)h(phase)f
(while)h(job)f(B)g(executes)h(the)e(parallel)i(phase,)k(whic)-36
b(h)409 b(causes)h(the)2000 65580 y(Cilk-AP)472 b(sc)-36
b(heduler)469 b(to)i(allo)36 b(cate)472 b(most)f(of)g(the)f(pro)36
b(cessors)471 b(to)g(job)g(B.)g(In)g(the)f(second)g(half)h(of)2000
67185 y(our)449 b(exp)36 b(erimen)-36 b(t,)454 b(the)449
b(situation)g(is)h(rev)-36 b(ersed,)454 b(and)449 b(job)h(A)f(receiv)
-36 b(es)451 b(most)e(of)h(the)f(pro)36 b(cessors.)2000
68790 y(Since)499 b(Cilk-AP)h(is)f(able)h(to)f(use)g(the)g(pro)36
b(cessors)499 b(more)g(e\261cien)-36 b(tly)500 b(than)e(Cilk,)518
b(it)499 b(ac)-36 b(hiev)g(es)500 b(a)2000 70395 y(shorter)489
b(mean)h(resp)36 b(onse)489 b(time)h(in)g(Figure)g(7.2.2,)505
b(completing)490 b(b)36 b(oth)489 b(jobs)i(ab)36 b(out)489
b(30\045)i(faster)2000 72000 y(than)384 b(Cilk.)563 b(Figure)385
b(7.2.2)h(also)g(sho)-36 b(ws)385 b(the)f(v)-72 b(alue)385
b(of)p 28549 70933 1020 54 v 386 w Fu(P)565 b Fy(\(de\257ned)383
b(in)i(Section)f(3.2\))i(for)f(eac)-36 b(h)385 b(job)25350
75321 y(63)p eop end
%%Page: 64 64
TeXDict begin 64 63 bop 2000 1328 a Fy(when)388 b(using)g(Cilk-AP)-108
b(.)388 b(W)-108 b(e)388 b(appro)-36 b(ximate)p 23655
261 1020 54 v 389 w Fu(P)569 b Fy(b)-36 b(y)388 b(measuring)g(the)f(a)
-36 b(v)g(erage)390 b(pro)36 b(cessor)388 b(usage)g(of)2000
2933 y(eac)-36 b(h)324 b(job)g(o)-36 b(v)g(er)325 b(all)f
Fp(est)p 13414 2933 411 45 v 491 w(cycle)e Fy(in)-36
b(terv)-72 b(als.)542 b(In)324 b(practice,)346 b(the)323
b(parallel)i(phase)f(of)h(our)e(exp)36 b(erimen)-36 b(t)2000
4539 y(tak)g(es)429 b(longer)g(than)f(the)g(serial)h(phase)g(\(ev)-36
b(en)428 b(when)g(all)i(16)f(pro)36 b(cessors)429 b(are)g(used\),)g
(and)f(so)h(the)2000 6144 y(v)-72 b(alue)434 b(of)p 6841
5077 1020 54 v 434 w Fu(P)615 b Fy(tends)433 b(to)g(b)36
b(e)434 b(greater)f(than)g(8.)2000 9995 y Fx(7.2.3)1792
b(Exp)50 b(erimen)-50 b(t)601 b(P3:)797 b(The)598 b(Greedy-Sc)-50
b(heduling)601 b(Bound)2000 12458 y Fy(In)487 b(this)f(exp)36
b(erimen)-36 b(t,)501 b(w)-36 b(e)487 b(measured)f(the)g(running)g
(times)h(of)h(di\256eren)-36 b(t)486 b(jobs)h(using)g(the)f(Cilk-)2000
14063 y(AP)346 b(system)h(and)f(compare)h(these)f(times)g(to)h(the)f
(greedy-sc)-36 b(heduling)346 b(b)36 b(ound)345 b(from)i(Theorem)f(3.)
2000 15668 y(Our)397 b(goal)i(is)f(to)f(sho)-36 b(w)398
b(that)f(the)h(Cilk-AP)g(sc)-36 b(heduler)397 b(ac)-36
b(hiev)g(es)398 b(asymptotically)i(optimal)e(time)2000
17273 y(in)314 b(practice,)338 b(whic)-36 b(h)313 b(suggests)h(that)g
(a)g(theoretical)g(analysis)h(of)g(algorithm)f(WSAP)g(should)f(yield)
2000 18878 y(the)367 b(same)h(result)g(\(w)-36 b(e)367
b(explore)i(this)e(analysis)i(in)f(future)f(w)-36 b(ork\).)557
b(Since)368 b(the)f(greedy-sc)-36 b(heduling)2000 20483
y(b)36 b(ound)584 b(b)36 b(ecomes)586 b(tigh)-36 b(ter)585
b(with)g(larger)p 22818 19416 V 586 w Fu(P)181 b Fy(,)624
b(w)-36 b(e)585 b(raised)h(the)f(target)g(e\261ciency)h
Fu(\264)633 b Fy(to)585 b(0.75)i(to)2000 22088 y(increase)422
b(the)g(accuracy)g(and)g(econom)-36 b(y)422 b(of)h(our)f(pro)36
b(cessor)422 b(desire)g(estimates.)575 b(A)422 b(higher)g(v)-72
b(alue)2000 23694 y(of)470 b Fu(\264)518 b Fy(means)469
b(that)h(few)-36 b(er)470 b(pro)36 b(cessors)470 b(are)g(used)f
(ine\261cien)-36 b(tly)470 b(b)-36 b(y)470 b(a)g(job,)479
b(resulting)470 b(in)f(a)h(lo)-36 b(w)g(er)2000 25299
y(v)-72 b(alue)434 b(of)p 6841 24232 V 434 w Fu(P)181
b Fy(.)3951 26904 y(Giv)-36 b(en)310 b(an)g(adaptiv)-36
b(ely)311 b(parallel)h(job)e(with)g(w)-36 b(ork)311 b
Fu(T)28715 27103 y Ft(1)29242 26904 y Fy(,)335 b(critical)311
b(path)e(length)h Fu(T)41674 27103 y Fq(1)42671 26904
y Fy(,)335 b(and)310 b(a)-36 b(v)g(erage)2000 28509 y(pro)36
b(cessor)349 b(allotmen)-36 b(t)p 13335 27442 V 350 w
Fu(P)181 b Fy(,)366 b(a)350 b(greedy)f(sc)-36 b(heduler)348
b(executes)i(the)e(job)i(in)f(time)g Fu(T)550 b Fs(\267)369
b Fu(T)42898 28708 y Ft(1)43424 28509 y Fu(=)p 44074
27442 V(P)304 b Fy(+)123 b Fu(T)47113 28708 y Fq(1)48109
28509 y Fy(,)367 b(as)2000 30114 y(pro)-36 b(v)g(ed)388
b(in)h(Theorem)g(3.)563 b(In)389 b(Figure)f(7.2.3,)400
b(w)-36 b(e)389 b(compare)f(the)h(running)e(times)i(of)g(di\256eren)-36
b(t)388 b(jobs)2000 31719 y(using)516 b(the)g(Cilk-AP)i(system)f(to)f
(the)h(greedy-sc)-36 b(heduling)515 b(b)36 b(ound)516
b(predicted)f(in)i(Theorem)f(3.)2000 33324 y(As)607 b(b)36
b(efore,)651 b(w)-36 b(e)607 b(appro)-36 b(ximate)p 18351
32257 V 607 w Fu(P)788 b Fy(using)607 b(the)f(a)-36 b(v)g(erage)608
b(pro)36 b(cessor)607 b(usage)h(of)f(a)h(job)f(o)-36
b(v)g(er)607 b(all)2000 34929 y Fp(est)p 4134 34929 411
45 v 491 w(cycle)379 b Fy(in)-36 b(terv)-72 b(als.)561
b(\(W)-108 b(e)381 b(use)h(the)e(job's)i(usage)g(instead)f(of)h(its)g
(allotmen)-36 b(t)382 b(b)36 b(ecause)381 b(the)g(t)-36
b(w)g(o)2000 36534 y(quan)g(tities)373 b(are)g(not)g(alw)-36
b(a)g(ys)375 b(the)d(same.\))558 b(In)373 b(ev)-36 b(ery)374
b(case,)386 b(the)372 b(running)g(time)h Fu(T)554 b Fy(using)373
b(Cilk-AP)2000 38139 y(is)449 b(within)h(a)f(factor)h(of)g(2)f(of)h
(the)f(greedy-sc)-36 b(heduling)448 b(b)36 b(ound,)453
b(and)448 b(the)h(p)36 b(erformance)449 b(of)h(Cilk-)2000
39744 y(AP)522 b(closely)i(matc)-36 b(hes)521 b(that)h(of)h(Cilk)g(on)f
(a)g(\257xed)g(allo)36 b(cation)524 b(of)f Fs(d)p 35606
38677 1020 54 v Fu(P)181 b Fs(e)523 b Fy(pro)36 b(cessors.)844
b(Since)522 b(the)2000 41350 y(Cilk)367 b(sc)-36 b(heduler)364
b(ac)-36 b(hiev)g(es)366 b(asymptotically)i(optimal)e(time)f(in)g(the)g
(static)h(case)g(\(when)e(the)h(job's)2000 42955 y(allotmen)-36
b(t)415 b(is)h(\257xed\))e([4,)152 b(7],)421 b(these)415
b(results)g(suggest)g(that)g(a)g(similar)h(b)36 b(ound)414
b(can)h(b)36 b(e)415 b(pro)-36 b(v)g(ed)414 b(for)2000
44560 y(the)433 b(Cilk-AP)i(sc)-36 b(heduler)432 b(in)i(the)f(dynamic)g
(case)h(\(when)f(the)g(allotmen)-36 b(t)434 b(is)g(allo)-36
b(w)g(ed)435 b(to)f(v)-72 b(ary\).)3951 46165 y(The)510
b(running)f(times)h(for)g(Cilk)h(sho)-36 b(wn)510 b(in)g(Figure)f
(7.2.3)j(come)e(remark)-72 b(ably)511 b(close)g(to)f(the)2000
47770 y(b)36 b(est)431 b(running)f(time)h(ac)-36 b(hiev)-72
b(able)432 b(b)-36 b(y)432 b(Cilk)g(on)f Fg(any)g Fy(n)-36
b(um)g(b)36 b(er)430 b(of)i(pro)36 b(cessors.)578 b(This)432
b(observ)-72 b(ation)2000 49375 y(suggests)320 b(that)g(the)f(Cilk-AP)i
(sc)-36 b(heduler)319 b(is)i(able)f(to)g(\257nd)f(the)h(optimal)g
(allotmen)-36 b(t)321 b(of)f(a)h(job)f(using)2000 50980
y(the)406 b(desire-estimation)h(strategy)g(presen)-36
b(ted)405 b(in)i(Section)f(6.1.)571 b(W)-108 b(e)406
b(exp)36 b(ect)407 b(the)f(accuracy)i(of)p 48981 49913
V 407 w Fu(P)2000 52585 y Fy(to)434 b(impro)-36 b(v)g(e)433
b(ev)-36 b(en)434 b(further)f(as)h(the)f(v)-72 b(alue)434
b(of)g Fu(\264)481 b Fy(is)434 b(increased.)25350 75321
y(64)p eop end
%%Page: 65 65
TeXDict begin 65 64 bop 3233 33148 a @beginspecial 51
@llx 42 @lly 734 @urx 525 @ury 4098 @rwi @setspecial
%%BeginDocument: cilk-ap-allprocs1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Cilk-AP experiments.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910162014-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 51 42 734 525
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
51 42 moveto 734 42 lineto 734 525 lineto 51 525 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
51 42 682 482 rectclip
[ 0 -1 1 0 8.71983 576.0022 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font BDGAKM+CourierNewPSMT
11 dict begin
/FontName /BDGAKM+CourierNewPSMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1318 dict dup begin
/.notdef 
<10bf31704faacd68130743d1032b190034e66bfe220959d1d966dfb0f017
1a28cd5cf1737c91b7113f3bf6> ND 
/parenleft 
<10bf3170051c0657cad441b8f532cd3da010ece2575ef7de2db56ee8fb73
7f2fd180d91201129a5968decec9580fb835746486f21039af7f682e263a
317a4c1038a70a08035305726dc4f4b7eb31235335e3a2765c50925e4795
0533122ff696b6c8d444ddcd6b9a32e7bad24b1b8685e61b3b0dfcb5d945
abc07d33825263c924c6cda5f3a33396b203fe4186> ND 
/parenright 
<10bf317005805916296da6243ee0e467f2f3313f9a036e34d827e2cea6e3
edd0af68ac5d3c4bddf14f5abad36a23995504293a2c8865869ac64e8fa0
9fc8b07f1b351b67db4fecfed37964e1564c2faaf1fe1b557a754431a18a
78747d7d81db11314c2ec7b02fa10201e0193bc9510aa16c0d513153c840
0ae4f6ae70b8922887de3dcfd91c3843728618e4c261> ND 
/comma 
<10bf31700581977eaf182c6123e4a98da1a350304b0ca60e47d10247e979
d286859ebba062d886fb7d8319a75a3067f9d2eff4bb6794> ND 
/zero 
<10bf317005a32251dac96c2e8a0698834239615d91ae4e74b2354a3d22c3
a68cd84ae142e7483b1c4b5bced8ea492db34f6881bfda63358b887ec236
d2cbab1d96e12fdb7ea887b883a009d7cce1510b5f8065f1c14f5f476b04
c6999cd2b92fc0f1757604a569b9bca551ba35f768492d9951e477634f63
c42f4763914ec027dcb247dbd566895ec45eaeeec3b6b7ef527b4960bae7
ee3b8a92446df2912e0944faad8a856a7cd64102e9a83c124e6f1666c80b
3817d1565dec213596b82d26e7a1499d1c7df570b0daf568fa3c1282d042
89> ND 
/one 
<10bf317005a4508329b5ddd7b22b109df223d600eef5524e2d82dda21233
5e0221ef511677ecd5fd11f2c8faa5a3539cceb3e8f496929afb1635f17c
9908e773909fedf540c5871290df753daeb2114c2135d44749daeabb9715
360fa9d22349a3e96555fa294bd04c8d501870316575f306540dd8d136a6
b9c637e619566c4fba> ND 
/two 
<10bf31702ce1b272ebff9b16764f8de85aa02f57f5999d54704240163fa9
7fd1d9894d59ce6b648ce4a59eec49a7dc0cd69437c058b1f662c1c6d5ff
a77b6cb2496438455e29ce4a8523a2deb5feaa9b9a4d6bd222fdc618fd31
c4794b3191fa0190e1df9675feffca7b9d112596b333479cd5c8644365ab
1e3f3e48cb3ec59f98dd5b0a9af3ed1e2b811a338fda4848983012568c7f
1946745c046828ec9e8ea2fd4645f0c4077e2ed1879f682542eebfbf0a7e
e4e85f2c291e0513c68b07a0d2a9a446f5e0765c357b> ND 
/three 
<10bf31701801432976392f1124966f16bdb6fa5274121e7ae70ea5a0e025
acc6dc17e105f63c635baa74343f3c3b1cf8df40679930b68ab9aa23a644
55b72125039e400f82696e9df8de2040071eda73571e049a7c9889261802
1c8030440860291dbd429ed8bbdc26ad5887e64e06db21a8ac571f3d97ba
0857df517741c58acc521eaf00d8a066e1407cd7352ff28a48464c05ba29
cb3539aef0cdd6e71b3a373a4d1f3e8935e3879cd56cd85efcec588db947
8ec627a9f7c2f0e847123bb006d6e8f686761e7c8f38bb4f27bf2aa8fc08
af3f773dbc70b8dc51337b39680e6852d4fec6b150928f7032c3a6a88a37
ffc26cc4673f56bf4c3d32b178255f0cd031cc1b17872f949c835b123f> ND 
/four 
<10bf31700195cadd36910bd5fcc897ef9ea857828d4cf087eeaab14220fb
8bc853e2278b1a8f74db0ac950059d1e1cb71ee296067dc76bf1f9f4400d
08b4080e9672f43ea98ad3b0a15796f3ffd7d18b3e935689bd32921f0dbc
87da7fc54b459e8ce8d02e2ef7cf98f526589664ed2d4cc03938418c9d9d
9bcc2ffd522607dbdcbe65b400ac9a9f229c0a31b754d5507fc281b59aae
> ND 
/six 
<10bf317005bd29fc10e74a1ea8b6a5c751376fd7fe34118efc6b0fe8c30a
c74c224e4fc8a848ece22432b6391c94c2cfc8a86d4cddf02e210627194e
de8b3622b4b075648f3e3afb5f20200e15143b3ff523d42faa4ed40e544f
097fa4522873019295d6e353e9606e3951935ddb23a26f0c6fa7498e69bf
a0df0ff2c1df4c100b5b5d7bb00440029ef710eaf4b884639a1751b0e395
cedf2bcb8566d6f83e9072702f0e6758ef0edb7bad8953e8211b76b8e617
4f45ca7cb28adde6daec81e7f18fd708f3de8bfb2b1fb418ed7ac79d56c5
05e673751a316fd70e497e2e04b441ac96e32ff5> ND 
/eight 
<10bf317005a2f345f038b55d2d56c81492963a35bc703ee0cd4f03d84036
703294948f86067a1cb4f145a447fc2c694b3e080ee056df6aac3c908f91
3fdeb2f9b20021dd927bf86e3352227d1eeacc6b4f0b2a0432d86e0afbaf
79753279236e5208b2f7882b246fa222a1d2de7ae4f9a481ff0352ae249c
39d71e8e3be634b44d8fa2e3dac793c6e2517350e21c77a3e91b0328ed46
7af5698a00fcf920291e76aff4cc97c5c4a8396af984a8bc8ac3a86b3838
6a46743adf75b9f684b0ebf6ec7c2529924e84732693711b00c2e32250fa
d007dbc6f3051ccacf265a6efe951ce9b8b0678e42c89d72a0e453560abf
18a3369325d6371541e3> ND 
/a 
<10bf3170232f85bb91fd59ea4e6eead0126de560aebc020c547b48f32d2b
abf93200bad04879ad1bd23f7ed1ee74f058dcafeda9b28230093761878b
ce932f46a60e5ee361904ea5f5aa9dada691c20e75c341d821d103a06670
bd04aa001d36164c2c53462a248c68b1a096e1e1731f0d513d61689724b1
eaf4466b0b071658231f9e540ea28aa6001d68e22fe44fd43054e99d5e01
1b42649288af7cb657336a6dab295618d586bc69c3219cd3e6ddfbf9d9b8
5146df15a31b20e2116d63f0204c3258194efa025105c76978026da95a2d
2c6a82899809d2f0446bae470cb67bd05df83f189d0e1cd217bace53a6ae
ff> ND 
/b 
<10bf31705374ecc9a4510497c7f4ac1a62bf05080bbc7e1c77f092dc031d
b6972b7c556257f76c172fa7b4d913a36c5f8bd7e87b885382352c0cf94c
e1ba7bc62c1ef20fb292d2fd17b7a51241e5187451b2c9075649fbe830e3
8ba5561432b8f13d09391fff28ff5c994889ac1bdab0300e7b811d13f599
a0f2d4865910c062a4dedcdc368087aa37302a49fd68755e7c11c9bbaf0d
96e4441e05a0cc16ff5b830babbaa4d224bc82a0570bb79bda689bea189b
dde1d9c88fc757163144> ND 
/c 
<10bf31702ce1b272a974523f106d916e62297489d83166a408d334ea0831
8891c563969ac7a1af1b8242f3cd390eca23e4a7bbe0e5e28ff78928646a
5ceeab9b6644150ee02d024168d48f4ba55347e031ede47a7ceacd9a4580
91243c90d13538afab4e9559496040795ba61d3de23b6ff5b85e7b43e53b
ae89d195b0e7298e1a19b83fbf87ed268322197550f50d27ee7ef693c9b0
7e54c994416b10ea39f48b7297e7fe04a3b69de806c6ce0183799b687e97
b7d40f0fe3b1187f8258be5558cfa1d00c017c9ee1> ND 
/e 
<10bf3170383ec05dd664788074553f78752bdcb76c418fd5ffe9a10b0d24
a52cb57694a22e7c481c43c88a64f0e0098fcd3307e0b20b122d8920b0f8
56b30705d24db3f5fc4badd1597f173ff5476673dbb00f0694615ce846a5
a647b19e7820da01c8104df7d59927e6c05c834865730c173833000ec3d5
e58b6b8f7e43633b2ca59416f67c8cd3f143402766c1da49ee8e03c2f589
a9048d7887964fd46cb0de319625ab7e13> ND 
/f 
<10bf3170068d5ba6fde035a4a5cc01ee050d0a5a5d5b75bc557316a90d85
08ff9867dbe48afb3c4cbd26d3c7704bd4e5dc07fb707b0268d0c27c95e9
ba22dbe15cb223abdfa1e53ca512eff98c6fdd69b6cfcb8d9e4345870968
b7815cb9fc29a02ecc6233a6b257687147f131574ee711bc06df43aeeed3
04be4277bf18e4856f66d816a17d16afd1397afefa1802ac0c133460bd89
7f4116b822f8d8812475ea32a5df0c99a8c39067e6e3865b0d5eb511a2c5
68a96a729d10ab3246f9c8c05174f69939b30b62dc645fc24e78327833e4
83d50d19ce00a56d4b44f82f7c71dfecc764ebd76f6c> ND 
/h 
<10bf3170472740c4a38a899208b8a13c7b0fb1c21b83e74c0a517820101b
10e67cbc80626559d428aaa06780d6e8840a305c7b19c5120f84f983a428
3ee995fabee18b04d1a60f7f09352ae663446a001427d4f8a415e57373aa
3d1e08dfca375fdc63db87c169f8afc5dfaf544f695f5fe73d149f43c503
9400e47fe454e86201fa5c9a6c4b6bb19be41733c785845ab4aeab8ebb8d
089400238f96f4027124dd14aa9c6dd4dc188fa775c938823256369b045c
9c92db4625e79324fffdc2e3d84180858ec6ee204ab498fea91aa6c57a8f
112a872407a0acd4ad6616b9cd788939c223df80af38236951c6a47222e0
02fbb0712b820a31a73a> ND 
/i 
<10bf31701575859094c8d8dccbc4f7940557b0dba46eabcd2b410561593f
1c3b57c0f4283368afb1586fb0f465724159f7c8f7c4c45cbf98842cdbdd
a3bac01111ae963878f51cab75fb912a6bcb1ec9b94cdfe0c63078f174b9
1445570a816b4348a969be2042e9bb526ae4184baf486a97be393f42778f
3f19a1af185cd40db467dcfbdd> ND 
/k 
<10bf31701a6e2450ef156e7bb7c31add805f21dd31be7f1292e16454c4cf
6364036af9e24898ad91b735d39e2f9f2a3c88a59b9f2c7c54b95f2ea996
2bbe6e82a790af3cc247a94f104fd601e97ffb79a7fe32b289b5b9782eb3
a54aaec7e1387f5592c438bae21f59c6895dfb545a528d23a12d7658117d
5d0b8286abd5979ea17b5acd9416a15bbfe127cae7021848b6b96ed09953
591ea103c7283be955035566f20aa4e400126e92742a6db2f3841ceb4e99
a902fdb16a243816a9b4a793ba77b176b40b5735e0cfe29019fc4a7b047a
28512b082f34a811283a2b1bbc15bf0e1ef4878ec103dce5fabb19> ND 
/l 
<10bf317014475bc94d7b76462b300a267411c22b05f1442892f39494dada
04043360430ee1bc362f1e1d0a6f11b05a168341eb18d1bd014b79de6627
9b03c2dbde10574656077bc23565266ee11fd48ae9f5f8c73bcd3f222783
d17386cd1f8b1d1fbe465c474fe24ed81bd4d906e207427235f68f747b> ND 
/n 
<10bf31703208ee67869336341cf9a553ed5921ba24dfcc23366b642a1603
f8d8318bcea36bb67e5ea6cda948875b4c2b8558898264bf9cc37ed272bf
4454efa61c79c53934d751332012576509d8efb8ee9cacdf5457498e7bc3
6d02f57f1ae5bc8404d96da4b0b2bc1523a25e92e8ef2c7820f69b9a8ad2
54ea270f066dc2be1a2de027b4c238a84e015e7f748229ab012829478f04
be096bb9b5733e5db891ed7dd0c27d057335ac852b6dec5593e764989898
1cc46ae59ba09107b00ed95813450d878e755878967075674caf2d5a40c4
ba5b248db93cfd82a8c4c649c4df86ce04b13d12d62a8fd6b3d081db8568
8697febd04ced3972d> ND 
/o 
<10bf31702094e62e57ba031cd9f618fa49b1fbf116ef636835dbc7768fae
c8df4c0908b89fe0646715c51b45a90079abd2690a10607ae79881b92b5a
375bed1e8f05175f9423d58ec0f6889237f015a8145f6d8109026bc2a146
4c7ae9fee59de83eb06630e4d965fabef7de6894e14fb92feeba7e76c259
ce36c38d589caa7f92751b8a> ND 
/p 
<10bf31705374ecc9a451c6e4e09171a4eea24c71ac7d1dce65b5fdc06f32
5ec5231b780eaf8855d18e1abfa3edcdefe9eee40b04669d804d8bb56e46
7bb165d25af4eeb819555983e617eb34dc365af46ec63b7b2dfeec055759
85fef68746c83d78f454411c502ccf6511435e6ea5f32f8cd0ddd0177e59
04d8ec2d6ce4a3ee957d42a0b7ef335bd887529778118efa1c4057f08ae9
8cd6df47f0d380fe0c7b1b2a343d179289b6765efe33e43a31429182affd
65e0d1d12d7312011a30ae9c6ed0f6f7e4377d6170e0e58d89bba5bb1706
718428618d1199cde4b00b2751a3653aa25dc422ae2fb6b8ab> ND 
/r 
<10bf31702ce1b272e1cfea273864a55b510451ce2e699e3a05850d33fa41
fd2614bd419625fc1c6755defd118fd83f002d6a0ec3dc82f8442b64c24a
a84fb6745177fd22b8b0b2c2b1dc5a86d4b6b3259781be385f368a63b247
0c71a448bc514b3db35bcf7863f44c92c7a044dbf87c371f4b2bbcf4c896
797386e5c2baf124d22bc9c3f04cf863d5a7039c892f654d46812bce460c
ab30b56fa13b9a757b612341d59389f65b9d7682ba6a833799fc3c3048ff
d2f126276eebb8e64c01658ce6f7f21bc018285d8fb8eb> ND 
/s 
<10bf317002c334dab3629f7a671113a749f85c0dc9cd007b5c722c30c298
c379034a1d4dff63659ab6ee7d28c1b50f6acfbe7097ca323ff9a1d92da8
a5a8fa26a6b978329c7ac9264ffd0c310fee0de2aa9eea54b20b9b72f165
69d2fb00093c098531b58470c59a04b3f549cc5176f6c0cbeb8e781060df
60db409a177d850029a682caf2a8dfa86e97718d5190c2b20d5fbbe88daa
c5cda07598bbfae6f51515472e4b6cd489cc11d1d5097ec478219063517e
bf9d6e33f8197ca58033b5a19aa2c87426655e79f87bc280c4b0a1f6234b
db4b0b5685733017a57444d9d45a085cf22a811f5a9c277184e642721bc9
c089f5c25ebd8c8f45f6983859fafaae7e67882d8be9cafc094c7bb60ba6
3afba644e37c53d6aeb42ee83b3543622478875ffb503a11244e3ad97ccc
e2c7171d3675844e40975990d6> ND 
/y 
<10bf317026bbf7c77e4588baf827d3936f8fefa2d84ccdfa79c9f8ed6c62
ae74f87922300f26864a5ed2fb19cab970aef96d8a6208138010de07fccf
a8ce1c31b28bca80b9a26115c09d159dc58726da3b0f4cb2174097c2569e
aeca4a6540176b713257632a09d720c94b51a90c0e16bc071d9a5ee93941
2596d4f0f9755a1978ce1c64ea92f2b1ff5e9ff8aabc9dd1b4b4ba02fef1
9fac0de6a0d4cb0c92bc08ccebfb8c46127883f51ec7cd839bde7812482c
d58a15eb6e7a38df2303d9409fc20a967466551bc71e21f2a232bf3e34e5
5d4a82d4dab73d20ef168e371fac492dcd1e26a8dadff91dc5e03f6d8838
b9> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/BDGAKM+CourierNewPSMT findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 121 /y put
pop
%%EndResource
[/N17/BDGAKM+CourierNewPSMT 1 TZ
%%BeginResource: font BDGAIM+Arial,Bold
11 dict begin
/FontName /BDGAIM+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31704d42f1352d5273addc7843b77bf144b304a7fd77e3f1cd5aa3d2
5843290f89d4b92d62022c6e20ff3fc16e851d04be964eb564d3148aa849
38f1853bb671322ebdad12328d10df755ca667b8d3> ND 
/parenright 
<10bf31705e9d53b165f4c2bf4ff0b54a54d2b121b1fb0b0443541ece65a0
a8176044e9807e70fc6500f41e661a6236bf6ceec5b6290ebcabc6b4ed73
20f89e31526599e6da59fa9728238cab6dffd27a90873c1ab1c84fdd> ND 
/hyphen 
<10bf317031d662871c21e4b24b45082f0229e121b5a5798a825a63> ND 
/A 
<10bf317079c9131fe82aed0960139938c7dd11f84d3486e157364ddfe73e
c1324c5f0a78446dd85572d81f76d5fdc971afc3b2e06bf4dc47bc679667
2b63> ND 
/C 
<10bf31704854f6e1a1a667b8970893ea3ae573d8f0b00f1e21c4da392880
f74a33a203a5eb2ac37bb1cec36ec2d3f1d6fe17d030e5f817de254d3a97
9bb0a180214fe6c133873897128ef01292c77a32877dc7bc6158a861cfdf
dd0152abc2812d8268588369a7e1e7abfe54f9dec9721a20ff256d00b940
20d33e255c770f4068fca4b2d690126cca> ND 
/P 
<10bf317026ba62063a41a530d6e25ee764c7f37e357d9f4340ad256cb4c6
3eb336efd9daf309283a29cbee7e81d5cb35b4e414d564fb43d54f1be124
58e12175036224baa1ddd853331407c204e3c541751c1c73505c6c30ec2d
6cdf96d9fde307c47b2bc88392f53a36b4a782bd0cc150cc752b44d84c5e
c0ddf42bd181226665ff> ND 
/underscore 
<10bf31707016729f51b1b86e4b9cd500905b15c87deab891d7> ND 
/a 
<10bf31705d64e193f644676913533d4f242b6181368ed1350652c8cb7a6f
e958f60841a88d1088c20f893090b458ae087d16aa8691f1ae44882b0528
d32f3e9827d4294992e18a57652ae7d531994f09c8f3899ddffaad39408b
1529cb6c6e94b8c5c36f6038811d22f304b6662d870ece2886bb4e9f799a
c37faedbf994154341e467f29126a4c489a05c6fef9ee5143f581ea41499
e4aecea25c0711d5cc7b9f01a37e7c0b7e59d5ee83c610a480921138ec2c
f957d766614f6ccaa7ceb4e20fd6f9ac362e8c090b1abb9485ee8c51fdeb
7fc72063a72ab3373c0c6872cf9ba20b3513a2189f8a98cd5a1ee87742> ND 
/c 
<10bf317047276c49998622737f5c0fdd43bdb1b35b15caae7eb2c80264ad
f0005e1c6be7a1a08efb8ae0111a7ff9c16d6d1d6fe6a62b9718659cdf71
ec1fec12732e715c04b3f3a8feb95e8d0f9e002393845281717573027f79
ad8c8ea5dce4faf3243344c83485cc434093ad2e51e73ce85594056ff3cf
8de95991fd7222c7dec9d4bc6113b2> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/g 
<10bf317046e845f3c38d9f70ba4464ac4e8fae8096f95866e14c9cfc76d4
2c91caccc55306d31fd922e308e96ee980323125643f9a86a8ffc2b52c12
c5bb9a13190b6aced9365e9c0da3f6e0016fa2ab359e2b06b32a173590b2
6f2094e4e558e81d1aad3b8794a704066a5c48c5835d67bbce791b1965a9
3fbd5fb55f1203033af92c703c31533cbcf30051576e5b8b57eedca25286
866fdee3b16f9555216746cd0cc4065676d353776467694c68063ac58586
fb4e91cf6077ef9d35ed3bc9160721b2f3dee4f8c47777dc722d34059624
2ed759> ND 
/i 
<10bf317021cc67b2bc312fc6a7ad37016808b8c74342617d801906e8ad23
4c7210637a5c2e2ea339f24d0c> ND 
/k 
<10bf31703cf850293dbeacb4825d9b43eba4ffb09ca8073f22015f91e054
b1f7b181ceef1abb9c955a524d127d186a3d6e0ab18596ed70aada> ND 
/l 
<10bf317021cc67b2bc31c11814793bc69b430b318ded78131a> ND 
/m 
<10bf31703bc84f280bc926798acdec2516269e7061028d385a31d255844f
a27fc6b4cdd6f6ba3dfabbbaadef207eca864f3bc97abd9a4f1b978df039
4779a47e3088a94b9cee6d3b276eef4d4950e88ef4a61f93e0b6cde961dc
7ec12956bd3a56a59704c6c5b5a401c3674bc856b6c34f276e7f1bc3056d
89b4805ca25b43894c427bc43b36554ede70476f7ee25d1a6c03ed9f5e40
5c72135defa96ede67a5a8ef5fea114c19a857db71952cb83f4d11> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073cab682ca78d0dc97da563
e3301b964801f725812f64cb67abc1e242f6d8dcd921f1fbf9e05fee92c3
cf16b5bf6083337a59bf026de7fa548a247b8bde12c672aa0ba0501ccc35
fcca587d7573f11dfc32a2ac31516847d39fb276060c6171da> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
/s 
<10bf317050d961e87d157c0fe86ec5afecbd608ce0f232c64dcfb1d39b45
2e71b8ca2a92c46173a52c993c8ea0e3a6a97bbca89eebc0e87a68da7dcf
335cb16989a377c8400340e09bb7a3a4fae54003803791fa4d2f5b88afdc
392f17afecc8a037b6118f07b51c97b137676b140e2fba0e4b7ecc574c70
cbfa35d84fd49bc18c067342180503665d383fcdebee907501f8719ff862
5030352810efab946329f109adefea2f39c8182336b9eb95b38d69ca43cf
161d7fb7e8f46433cafa> ND 
/t 
<10bf3170688ce4cb1d2f5bf487137bec8ecb87b4485146ce17824d997ac5
95ab4afb2e80a065a802ee3f010bb37eac91d0f6ed42677aa9dde7e1ad01
769b95b971dec6d1669588801bb2fb04109e79e9771f019783524f2f268e
35dce126a03e55d028a6951cc9b40e649071f577> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf399154810b2ea75
644b7bf3ca097b70d6244faa15faeaddcd0f234039d4b32fccf18d> ND 
/y 
<10bf317060ff2cd2175fcbd5188f2ead34c280175b68fa58eaeb7ff989f6
0b87f35441d734b6a71e070b5e34de773fbdfd6c4fe3b673d4b7999a1cea
703a048c48b5f433a740261363d7015ad7ad31dd41dc6049fa5a3516c28b
7faaad85929b64ac7256bc9d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/BDGAIM+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 65 /A put
dup 67 /C put
dup 80 /P put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 160 /space put
dup 173 /hyphen put
pop
%%EndResource
[/N15/BDGAIM+Arial,Bold 1 TZ
%%BeginResource: font BDGAHP+Arial
11 dict begin
/FontName /BDGAHP+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/period 
<10bf317014482feecab94451e2e92893e6ea1ac0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/BDGAHP+Arial findfont /Encoding get
dup 0 /.notdef put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
pop
%%EndResource
[/N13/BDGAHP+Arial 1 TZ
false setSA
n
76.02 733.02 459.06 -675 re
1 1 1 setrgbcolor
f
q
n
72 54 467.04 683.04 re
346.62 487.8 65.52 173.94 re
eoclip
n
1 J
0 j
0.960007 w
10 M
[] 0 d
n
95.76 135.48 371.58 568.26 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
1 J
0 j
0.0599976 w
10 M
[] 0 d
n
95.76 135.48 m
467.34 135.48 l
467.34 130.86 m
467.34 135.48 l
420.9 130.86 m
420.9 135.48 l
374.46 130.86 m
374.46 135.48 l
328.02 130.86 m
328.02 135.48 l
281.58 130.86 m
281.58 135.48 l
235.08 130.86 m
235.08 135.48 l
188.64 130.86 m
188.64 135.48 l
142.2 130.86 m
142.2 135.48 l
95.76 130.86 m
95.76 135.48 l
467.34 135.48 m
467.34 703.74 l
471.96 135.48 m
467.34 135.48 l
471.96 187.14 m
467.34 187.14 l
471.96 238.8 m
467.34 238.8 l
471.96 290.46 m
467.34 290.46 l
471.96 342.12 m
467.34 342.12 l
471.96 393.78 m
467.34 393.78 l
471.96 445.44 m
467.34 445.44 l
471.96 497.1 m
467.34 497.1 l
471.96 548.76 m
467.34 548.76 l
471.96 600.42 m
467.34 600.42 l
471.96 652.08 m
467.34 652.08 l
471.96 703.74 m
467.34 703.74 l
0 0 0  setrgbcolor
S
1 j
0.960007 w
n
445.5 140.64 m
446.16 145.8 l
445.56 161.34 l
430.5 187.14 l
386.94 264.66 l
303.36 393.78 l
153.54 652.08 l
0 0 0.501999  setrgbcolor
S
n
443.64 140.64 m
438.42 145.8 l
432.42 161.34 l
413.22 187.14 l
364.14 264.66 l
293.82 393.78 l
139.2 652.08 l
1 0 1  setrgbcolor
S
n
425.16 140.64 m
418.2 145.8 l
402.06 161.34 l
388.32 187.14 l
350.58 264.66 l
284.16 393.78 l
141.24 652.08 l
1 1 0  setrgbcolor
S
n
435.24 140.64 m
430.86 145.8 l
429.9 161.34 l
416.4 187.14 l
384.72 264.66 l
304.62 393.78 l
154.8 652.08 l
0 1 1  setrgbcolor
S
n
442.98 140.64 m
445.5 143.16 l
448.02 140.64 l
445.5 138.12 l
442.98 140.64 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
0 0 0.501999  setrgbcolor
S
n
443.64 145.8 m
446.16 148.32 l
448.68 145.8 l
446.16 143.28 l
443.64 145.8 l
h
q
eofill
Q
S
n
443.04 161.34 m
445.56 163.86 l
448.08 161.34 l
445.56 158.82 l
443.04 161.34 l
h
q
eofill
Q
S
n
427.98 187.14 m
430.5 189.66 l
433.02 187.14 l
430.5 184.62 l
427.98 187.14 l
h
q
eofill
Q
S
n
384.42 264.66 m
386.94 267.18 l
389.46 264.66 l
386.94 262.14 l
384.42 264.66 l
h
q
eofill
Q
S
n
300.84 393.78 m
303.36 396.3 l
305.88 393.78 l
303.36 391.26 l
300.84 393.78 l
h
q
eofill
Q
S
n
151.02 652.08 m
153.54 654.6 l
156.06 652.08 l
153.54 649.56 l
151.02 652.08 l
h
q
eofill
Q
S
0 j
n
441.12 138.12 4.97998 4.98 re
q
1 0 1  setrgbcolor
eofill
Q
1 0 1  setrgbcolor
S
n
435.9 143.28 4.98001 4.98 re
q
eofill
Q
S
n
429.9 158.82 4.98001 4.98 re
q
eofill
Q
S
n
410.7 184.62 4.97998 4.98 re
q
eofill
Q
S
n
361.62 262.14 4.97998 4.97998 re
q
eofill
Q
S
n
291.3 391.26 4.97998 4.97998 re
q
eofill
Q
S
n
136.68 649.56 4.98 4.97998 re
q
eofill
Q
S
1 j
n
422.64 140.64 m
427.68 143.16 l
427.68 138.12 l
422.64 140.64 l
h
q
1 1 0  setrgbcolor
eofill
Q
1 1 0  setrgbcolor
S
n
415.68 145.8 m
420.72 148.32 l
420.72 143.28 l
415.68 145.8 l
h
q
eofill
Q
S
n
399.54 161.34 m
404.58 163.86 l
404.58 158.82 l
399.54 161.34 l
h
q
eofill
Q
S
n
385.8 187.14 m
390.84 189.66 l
390.84 184.62 l
385.8 187.14 l
h
q
eofill
Q
S
n
348.06 264.66 m
353.1 267.18 l
353.1 262.14 l
348.06 264.66 l
h
q
eofill
Q
S
n
281.64 393.78 m
286.68 396.3 l
286.68 391.26 l
281.64 393.78 l
h
q
eofill
Q
S
n
138.72 652.08 m
143.76 654.6 l
143.76 649.56 l
138.72 652.08 l
h
q
eofill
Q
S
n
435.24 140.64 m
432.72 138.12 l
435.24 140.64 m
437.76 143.16 l
435.24 140.64 m
437.76 138.12 l
435.24 140.64 m
432.72 143.16 l
430.86 145.8 m
428.34 143.28 l
430.86 145.8 m
433.38 148.32 l
430.86 145.8 m
433.38 143.28 l
430.86 145.8 m
428.34 148.32 l
429.9 161.34 m
427.38 158.82 l
429.9 161.34 m
432.42 163.86 l
429.9 161.34 m
432.42 158.82 l
429.9 161.34 m
427.38 163.86 l
416.4 187.14 m
413.88 184.62 l
416.4 187.14 m
418.92 189.66 l
416.4 187.14 m
418.92 184.62 l
416.4 187.14 m
413.88 189.66 l
384.72 264.66 m
382.2 262.14 l
384.72 264.66 m
387.24 267.18 l
384.72 264.66 m
387.24 262.14 l
384.72 264.66 m
382.2 267.18 l
304.62 393.78 m
302.1 391.26 l
304.62 393.78 m
307.14 396.3 l
304.62 393.78 m
307.14 391.26 l
304.62 393.78 m
302.1 396.3 l
154.8 652.08 m
152.28 649.56 l
154.8 652.08 m
157.32 654.6 l
154.8 652.08 m
157.32 649.56 l
154.8 652.08 m
152.28 654.6 l
0 1 1  setrgbcolor
S
0 0 0  setrgbcolor
472.2 115.8 m
/N13 [0 15 -15 0 0 0] Tf
(0) show
425.76 103.32 m
(0.2) show
379.32 103.32 m
(0.4) show
332.88 103.32 m
(0.6) show
286.44 103.32 m
(0.8) show
239.94 115.8 m
(1) show
193.501 103.32 m
(1.2) show
147.061 103.32 m
(1.4) show
100.621 103.32 m
(1.6) show
493.741 131.34 m
(0)
[47.4569 ] pdfys
(1) show
(0)
[43.3154 ] pdfys
(2) show
(0)
[43.3154 ] pdfys
(3) show
(0)
[43.3154 ] pdfys
(4) show
(0)
[43.3154 ] pdfys
(5) show
(0)
[43.3154 ] pdfys
(6) show
(0)
[43.3154 ] pdfys
(7) show
(0)
[43.3154 ] pdfys
(8) show
(0)
[43.3154 ] pdfys
(9) show
(0)
[39.1754 ] pdfys
(10) show
(0)
[34.9724 ] pdfys
(11) show
(0) show
523.441 333.54 m
/N15 [0 15 -15 0 0 0] Tf
(est_cycle interval \(ms\)) show
400.2 82.14 m
/N15 -15 Tf
(A)
[-10.8268 ] pdfxs
(ll) show
(-)
[-4.99191 ] pdfxs
(p) show
(r)
[-5.83191 ] pdfxs
(o) show
(cs t)
[-8.33702 -8.33702 -4.14299 -4.99191 ] pdfxs
(i) show
(me )
[-13.3319 -8.33702 -4.14299 ] pdfxs
(u) show
(s)
[-8.33702 ] pdfxs
(ing) show
( C)
[-4.14299 -10.8268 ] pdfxs
(il) show
(k-A)
[-8.33702 -4.99191 -10.8268 ] pdfxs
(P) show
( \(ms\))
[-4.14299 -4.99191 -13.3319 -8.33702 -4.99191 ] pdfxs
n
346.68 661.68 65.46 -173.82 re
1 1 1  setrgbcolor
f
0.0599976 w
n
346.62 487.8 65.52 173.88 re
0 0 0  setrgbcolor
S
0.960007 w
n
354.72 491.22 m
354.72 511.2 l
0 0 0.501999  setrgbcolor
S
n
352.2 501.18 m
354.72 503.7 l
357.24 501.18 l
354.72 498.66 l
352.2 501.18 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
358.32 513.6 m
/N17 [0 12 -12 0 0 0] Tf
(fib\(33\)) show
n
371.1 491.22 m
371.1 511.2 l
1 0 1  setrgbcolor
S
0 j
n
368.58 498.66 4.97998 4.98001 re
q
eofill
Q
S
0 0 0  setrgbcolor
374.7 513.6 m
(pfloop\(64\)) show
1 j
n
387.48 491.22 m
387.48 511.2 l
1 1 0  setrgbcolor
S
n
384.96 501.18 m
390 503.7 l
390 498.66 l
384.96 501.18 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
391.08 513.6 m
(cholesky\(2048,10000\)) show
n
403.86 491.22 m
403.86 511.2 l
403.86 501.18 m
401.34 498.66 l
403.86 501.18 m
406.38 503.7 l
403.86 501.18 m
406.38 498.66 l
403.86 501.18 m
401.34 503.7 l
0 1 1  setrgbcolor
S
0 0 0  setrgbcolor
407.46 513.6 m
(knary\(10,6,1\)) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 3200 65192 a @beginspecial 58 @llx 46 @lly
742 @urx 525 @ury 4104 @rwi @setspecial
%%BeginDocument: cilk-ap-allprocs2.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Cilk-AP experiments.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910162421-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 58 46 742 525
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
58 46 moveto 742 46 lineto 742 525 lineto 58 525 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
58 46 683 478 rectclip
[ 0 -1 1 0 11.91983 583.20222 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font BHCEOP+CourierNewPSMT
11 dict begin
/FontName /BHCEOP+CourierNewPSMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1318 dict dup begin
/.notdef 
<10bf31704faacd68130743d1032b190034e66bfe220959d1d966dfb0f017
1a28cd5cf1737c91b7113f3bf6> ND 
/parenleft 
<10bf3170051c0657cad441b8f532cd3da010ece2575ef7de2db56ee8fb73
7f2fd180d91201129a5968decec9580fb835746486f21039af7f682e263a
317a4c1038a70a08035305726dc4f4b7eb31235335e3a2765c50925e4795
0533122ff696b6c8d444ddcd6b9a32e7bad24b1b8685e61b3b0dfcb5d945
abc07d33825263c924c6cda5f3a33396b203fe4186> ND 
/parenright 
<10bf317005805916296da6243ee0e467f2f3313f9a036e34d827e2cea6e3
edd0af68ac5d3c4bddf14f5abad36a23995504293a2c8865869ac64e8fa0
9fc8b07f1b351b67db4fecfed37964e1564c2faaf1fe1b557a754431a18a
78747d7d81db11314c2ec7b02fa10201e0193bc9510aa16c0d513153c840
0ae4f6ae70b8922887de3dcfd91c3843728618e4c261> ND 
/comma 
<10bf31700581977eaf182c6123e4a98da1a350304b0ca60e47d10247e979
d286859ebba062d886fb7d8319a75a3067f9d2eff4bb6794> ND 
/zero 
<10bf317005a32251dac96c2e8a0698834239615d91ae4e74b2354a3d22c3
a68cd84ae142e7483b1c4b5bced8ea492db34f6881bfda63358b887ec236
d2cbab1d96e12fdb7ea887b883a009d7cce1510b5f8065f1c14f5f476b04
c6999cd2b92fc0f1757604a569b9bca551ba35f768492d9951e477634f63
c42f4763914ec027dcb247dbd566895ec45eaeeec3b6b7ef527b4960bae7
ee3b8a92446df2912e0944faad8a856a7cd64102e9a83c124e6f1666c80b
3817d1565dec213596b82d26e7a1499d1c7df570b0daf568fa3c1282d042
89> ND 
/one 
<10bf317005a4508329b5ddd7b22b109df223d600eef5524e2d82dda21233
5e0221ef511677ecd5fd11f2c8faa5a3539cceb3e8f496929afb1635f17c
9908e773909fedf540c5871290df753daeb2114c2135d44749daeabb9715
360fa9d22349a3e96555fa294bd04c8d501870316575f306540dd8d136a6
b9c637e619566c4fba> ND 
/two 
<10bf31702ce1b272ebff9b16764f8de85aa02f57f5999d54704240163fa9
7fd1d9894d59ce6b648ce4a59eec49a7dc0cd69437c058b1f662c1c6d5ff
a77b6cb2496438455e29ce4a8523a2deb5feaa9b9a4d6bd222fdc618fd31
c4794b3191fa0190e1df9675feffca7b9d112596b333479cd5c8644365ab
1e3f3e48cb3ec59f98dd5b0a9af3ed1e2b811a338fda4848983012568c7f
1946745c046828ec9e8ea2fd4645f0c4077e2ed1879f682542eebfbf0a7e
e4e85f2c291e0513c68b07a0d2a9a446f5e0765c357b> ND 
/three 
<10bf31701801432976392f1124966f16bdb6fa5274121e7ae70ea5a0e025
acc6dc17e105f63c635baa74343f3c3b1cf8df40679930b68ab9aa23a644
55b72125039e400f82696e9df8de2040071eda73571e049a7c9889261802
1c8030440860291dbd429ed8bbdc26ad5887e64e06db21a8ac571f3d97ba
0857df517741c58acc521eaf00d8a066e1407cd7352ff28a48464c05ba29
cb3539aef0cdd6e71b3a373a4d1f3e8935e3879cd56cd85efcec588db947
8ec627a9f7c2f0e847123bb006d6e8f686761e7c8f38bb4f27bf2aa8fc08
af3f773dbc70b8dc51337b39680e6852d4fec6b150928f7032c3a6a88a37
ffc26cc4673f56bf4c3d32b178255f0cd031cc1b17872f949c835b123f> ND 
/four 
<10bf31700195cadd36910bd5fcc897ef9ea857828d4cf087eeaab14220fb
8bc853e2278b1a8f74db0ac950059d1e1cb71ee296067dc76bf1f9f4400d
08b4080e9672f43ea98ad3b0a15796f3ffd7d18b3e935689bd32921f0dbc
87da7fc54b459e8ce8d02e2ef7cf98f526589664ed2d4cc03938418c9d9d
9bcc2ffd522607dbdcbe65b400ac9a9f229c0a31b754d5507fc281b59aae
> ND 
/six 
<10bf317005bd29fc10e74a1ea8b6a5c751376fd7fe34118efc6b0fe8c30a
c74c224e4fc8a848ece22432b6391c94c2cfc8a86d4cddf02e210627194e
de8b3622b4b075648f3e3afb5f20200e15143b3ff523d42faa4ed40e544f
097fa4522873019295d6e353e9606e3951935ddb23a26f0c6fa7498e69bf
a0df0ff2c1df4c100b5b5d7bb00440029ef710eaf4b884639a1751b0e395
cedf2bcb8566d6f83e9072702f0e6758ef0edb7bad8953e8211b76b8e617
4f45ca7cb28adde6daec81e7f18fd708f3de8bfb2b1fb418ed7ac79d56c5
05e673751a316fd70e497e2e04b441ac96e32ff5> ND 
/eight 
<10bf317005a2f345f038b55d2d56c81492963a35bc703ee0cd4f03d84036
703294948f86067a1cb4f145a447fc2c694b3e080ee056df6aac3c908f91
3fdeb2f9b20021dd927bf86e3352227d1eeacc6b4f0b2a0432d86e0afbaf
79753279236e5208b2f7882b246fa222a1d2de7ae4f9a481ff0352ae249c
39d71e8e3be634b44d8fa2e3dac793c6e2517350e21c77a3e91b0328ed46
7af5698a00fcf920291e76aff4cc97c5c4a8396af984a8bc8ac3a86b3838
6a46743adf75b9f684b0ebf6ec7c2529924e84732693711b00c2e32250fa
d007dbc6f3051ccacf265a6efe951ce9b8b0678e42c89d72a0e453560abf
18a3369325d6371541e3> ND 
/a 
<10bf3170232f85bb91fd59ea4e6eead0126de560aebc020c547b48f32d2b
abf93200bad04879ad1bd23f7ed1ee74f058dcafeda9b28230093761878b
ce932f46a60e5ee361904ea5f5aa9dada691c20e75c341d821d103a06670
bd04aa001d36164c2c53462a248c68b1a096e1e1731f0d513d61689724b1
eaf4466b0b071658231f9e540ea28aa6001d68e22fe44fd43054e99d5e01
1b42649288af7cb657336a6dab295618d586bc69c3219cd3e6ddfbf9d9b8
5146df15a31b20e2116d63f0204c3258194efa025105c76978026da95a2d
2c6a82899809d2f0446bae470cb67bd05df83f189d0e1cd217bace53a6ae
ff> ND 
/b 
<10bf31705374ecc9a4510497c7f4ac1a62bf05080bbc7e1c77f092dc031d
b6972b7c556257f76c172fa7b4d913a36c5f8bd7e87b885382352c0cf94c
e1ba7bc62c1ef20fb292d2fd17b7a51241e5187451b2c9075649fbe830e3
8ba5561432b8f13d09391fff28ff5c994889ac1bdab0300e7b811d13f599
a0f2d4865910c062a4dedcdc368087aa37302a49fd68755e7c11c9bbaf0d
96e4441e05a0cc16ff5b830babbaa4d224bc82a0570bb79bda689bea189b
dde1d9c88fc757163144> ND 
/c 
<10bf31702ce1b272a974523f106d916e62297489d83166a408d334ea0831
8891c563969ac7a1af1b8242f3cd390eca23e4a7bbe0e5e28ff78928646a
5ceeab9b6644150ee02d024168d48f4ba55347e031ede47a7ceacd9a4580
91243c90d13538afab4e9559496040795ba61d3de23b6ff5b85e7b43e53b
ae89d195b0e7298e1a19b83fbf87ed268322197550f50d27ee7ef693c9b0
7e54c994416b10ea39f48b7297e7fe04a3b69de806c6ce0183799b687e97
b7d40f0fe3b1187f8258be5558cfa1d00c017c9ee1> ND 
/e 
<10bf3170383ec05dd664788074553f78752bdcb76c418fd5ffe9a10b0d24
a52cb57694a22e7c481c43c88a64f0e0098fcd3307e0b20b122d8920b0f8
56b30705d24db3f5fc4badd1597f173ff5476673dbb00f0694615ce846a5
a647b19e7820da01c8104df7d59927e6c05c834865730c173833000ec3d5
e58b6b8f7e43633b2ca59416f67c8cd3f143402766c1da49ee8e03c2f589
a9048d7887964fd46cb0de319625ab7e13> ND 
/f 
<10bf3170068d5ba6fde035a4a5cc01ee050d0a5a5d5b75bc557316a90d85
08ff9867dbe48afb3c4cbd26d3c7704bd4e5dc07fb707b0268d0c27c95e9
ba22dbe15cb223abdfa1e53ca512eff98c6fdd69b6cfcb8d9e4345870968
b7815cb9fc29a02ecc6233a6b257687147f131574ee711bc06df43aeeed3
04be4277bf18e4856f66d816a17d16afd1397afefa1802ac0c133460bd89
7f4116b822f8d8812475ea32a5df0c99a8c39067e6e3865b0d5eb511a2c5
68a96a729d10ab3246f9c8c05174f69939b30b62dc645fc24e78327833e4
83d50d19ce00a56d4b44f82f7c71dfecc764ebd76f6c> ND 
/h 
<10bf3170472740c4a38a899208b8a13c7b0fb1c21b83e74c0a517820101b
10e67cbc80626559d428aaa06780d6e8840a305c7b19c5120f84f983a428
3ee995fabee18b04d1a60f7f09352ae663446a001427d4f8a415e57373aa
3d1e08dfca375fdc63db87c169f8afc5dfaf544f695f5fe73d149f43c503
9400e47fe454e86201fa5c9a6c4b6bb19be41733c785845ab4aeab8ebb8d
089400238f96f4027124dd14aa9c6dd4dc188fa775c938823256369b045c
9c92db4625e79324fffdc2e3d84180858ec6ee204ab498fea91aa6c57a8f
112a872407a0acd4ad6616b9cd788939c223df80af38236951c6a47222e0
02fbb0712b820a31a73a> ND 
/i 
<10bf31701575859094c8d8dccbc4f7940557b0dba46eabcd2b410561593f
1c3b57c0f4283368afb1586fb0f465724159f7c8f7c4c45cbf98842cdbdd
a3bac01111ae963878f51cab75fb912a6bcb1ec9b94cdfe0c63078f174b9
1445570a816b4348a969be2042e9bb526ae4184baf486a97be393f42778f
3f19a1af185cd40db467dcfbdd> ND 
/k 
<10bf31701a6e2450ef156e7bb7c31add805f21dd31be7f1292e16454c4cf
6364036af9e24898ad91b735d39e2f9f2a3c88a59b9f2c7c54b95f2ea996
2bbe6e82a790af3cc247a94f104fd601e97ffb79a7fe32b289b5b9782eb3
a54aaec7e1387f5592c438bae21f59c6895dfb545a528d23a12d7658117d
5d0b8286abd5979ea17b5acd9416a15bbfe127cae7021848b6b96ed09953
591ea103c7283be955035566f20aa4e400126e92742a6db2f3841ceb4e99
a902fdb16a243816a9b4a793ba77b176b40b5735e0cfe29019fc4a7b047a
28512b082f34a811283a2b1bbc15bf0e1ef4878ec103dce5fabb19> ND 
/l 
<10bf317014475bc94d7b76462b300a267411c22b05f1442892f39494dada
04043360430ee1bc362f1e1d0a6f11b05a168341eb18d1bd014b79de6627
9b03c2dbde10574656077bc23565266ee11fd48ae9f5f8c73bcd3f222783
d17386cd1f8b1d1fbe465c474fe24ed81bd4d906e207427235f68f747b> ND 
/n 
<10bf31703208ee67869336341cf9a553ed5921ba24dfcc23366b642a1603
f8d8318bcea36bb67e5ea6cda948875b4c2b8558898264bf9cc37ed272bf
4454efa61c79c53934d751332012576509d8efb8ee9cacdf5457498e7bc3
6d02f57f1ae5bc8404d96da4b0b2bc1523a25e92e8ef2c7820f69b9a8ad2
54ea270f066dc2be1a2de027b4c238a84e015e7f748229ab012829478f04
be096bb9b5733e5db891ed7dd0c27d057335ac852b6dec5593e764989898
1cc46ae59ba09107b00ed95813450d878e755878967075674caf2d5a40c4
ba5b248db93cfd82a8c4c649c4df86ce04b13d12d62a8fd6b3d081db8568
8697febd04ced3972d> ND 
/o 
<10bf31702094e62e57ba031cd9f618fa49b1fbf116ef636835dbc7768fae
c8df4c0908b89fe0646715c51b45a90079abd2690a10607ae79881b92b5a
375bed1e8f05175f9423d58ec0f6889237f015a8145f6d8109026bc2a146
4c7ae9fee59de83eb06630e4d965fabef7de6894e14fb92feeba7e76c259
ce36c38d589caa7f92751b8a> ND 
/p 
<10bf31705374ecc9a451c6e4e09171a4eea24c71ac7d1dce65b5fdc06f32
5ec5231b780eaf8855d18e1abfa3edcdefe9eee40b04669d804d8bb56e46
7bb165d25af4eeb819555983e617eb34dc365af46ec63b7b2dfeec055759
85fef68746c83d78f454411c502ccf6511435e6ea5f32f8cd0ddd0177e59
04d8ec2d6ce4a3ee957d42a0b7ef335bd887529778118efa1c4057f08ae9
8cd6df47f0d380fe0c7b1b2a343d179289b6765efe33e43a31429182affd
65e0d1d12d7312011a30ae9c6ed0f6f7e4377d6170e0e58d89bba5bb1706
718428618d1199cde4b00b2751a3653aa25dc422ae2fb6b8ab> ND 
/r 
<10bf31702ce1b272e1cfea273864a55b510451ce2e699e3a05850d33fa41
fd2614bd419625fc1c6755defd118fd83f002d6a0ec3dc82f8442b64c24a
a84fb6745177fd22b8b0b2c2b1dc5a86d4b6b3259781be385f368a63b247
0c71a448bc514b3db35bcf7863f44c92c7a044dbf87c371f4b2bbcf4c896
797386e5c2baf124d22bc9c3f04cf863d5a7039c892f654d46812bce460c
ab30b56fa13b9a757b612341d59389f65b9d7682ba6a833799fc3c3048ff
d2f126276eebb8e64c01658ce6f7f21bc018285d8fb8eb> ND 
/s 
<10bf317002c334dab3629f7a671113a749f85c0dc9cd007b5c722c30c298
c379034a1d4dff63659ab6ee7d28c1b50f6acfbe7097ca323ff9a1d92da8
a5a8fa26a6b978329c7ac9264ffd0c310fee0de2aa9eea54b20b9b72f165
69d2fb00093c098531b58470c59a04b3f549cc5176f6c0cbeb8e781060df
60db409a177d850029a682caf2a8dfa86e97718d5190c2b20d5fbbe88daa
c5cda07598bbfae6f51515472e4b6cd489cc11d1d5097ec478219063517e
bf9d6e33f8197ca58033b5a19aa2c87426655e79f87bc280c4b0a1f6234b
db4b0b5685733017a57444d9d45a085cf22a811f5a9c277184e642721bc9
c089f5c25ebd8c8f45f6983859fafaae7e67882d8be9cafc094c7bb60ba6
3afba644e37c53d6aeb42ee83b3543622478875ffb503a11244e3ad97ccc
e2c7171d3675844e40975990d6> ND 
/y 
<10bf317026bbf7c77e4588baf827d3936f8fefa2d84ccdfa79c9f8ed6c62
ae74f87922300f26864a5ed2fb19cab970aef96d8a6208138010de07fccf
a8ce1c31b28bca80b9a26115c09d159dc58726da3b0f4cb2174097c2569e
aeca4a6540176b713257632a09d720c94b51a90c0e16bc071d9a5ee93941
2596d4f0f9755a1978ce1c64ea92f2b1ff5e9ff8aabc9dd1b4b4ba02fef1
9fac0de6a0d4cb0c92bc08ccebfb8c46127883f51ec7cd839bde7812482c
d58a15eb6e7a38df2303d9409fc20a967466551bc71e21f2a232bf3e34e5
5d4a82d4dab73d20ef168e371fac492dcd1e26a8dadff91dc5e03f6d8838
b9> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/BHCEOP+CourierNewPSMT findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 121 /y put
pop
%%EndResource
[/N28/BHCEOP+CourierNewPSMT 1 TZ
%%BeginResource: font BHCEME+Arial,Bold
11 dict begin
/FontName /BHCEME+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31704d42f1352d5273addc7843b77bf144b304a7fd77e3f1cd5aa3d2
5843290f89d4b92d62022c6e20ff3fc16e851d04be964eb564d3148aa849
38f1853bb671322ebdad12328d10df755ca667b8d3> ND 
/parenright 
<10bf31705e9d53b165f4c2bf4ff0b54a54d2b121b1fb0b0443541ece65a0
a8176044e9807e70fc6500f41e661a6236bf6ceec5b6290ebcabc6b4ed73
20f89e31526599e6da59fa9728238cab6dffd27a90873c1ab1c84fdd> ND 
/hyphen 
<10bf317031d662871c21e4b24b45082f0229e121b5a5798a825a63> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/A 
<10bf317079c9131fe82aed0960139938c7dd11f84d3486e157364ddfe73e
c1324c5f0a78446dd85572d81f76d5fdc971afc3b2e06bf4dc47bc679667
2b63> ND 
/C 
<10bf31704854f6e1a1a667b8970893ea3ae573d8f0b00f1e21c4da392880
f74a33a203a5eb2ac37bb1cec36ec2d3f1d6fe17d030e5f817de254d3a97
9bb0a180214fe6c133873897128ef01292c77a32877dc7bc6158a861cfdf
dd0152abc2812d8268588369a7e1e7abfe54f9dec9721a20ff256d00b940
20d33e255c770f4068fca4b2d690126cca> ND 
/P 
<10bf317026ba62063a41a530d6e25ee764c7f37e357d9f4340ad256cb4c6
3eb336efd9daf309283a29cbee7e81d5cb35b4e414d564fb43d54f1be124
58e12175036224baa1ddd853331407c204e3c541751c1c73505c6c30ec2d
6cdf96d9fde307c47b2bc88392f53a36b4a782bd0cc150cc752b44d84c5e
c0ddf42bd181226665ff> ND 
/underscore 
<10bf31707016729f51b1b86e4b9cd500905b15c87deab891d7> ND 
/a 
<10bf31705d64e193f644676913533d4f242b6181368ed1350652c8cb7a6f
e958f60841a88d1088c20f893090b458ae087d16aa8691f1ae44882b0528
d32f3e9827d4294992e18a57652ae7d531994f09c8f3899ddffaad39408b
1529cb6c6e94b8c5c36f6038811d22f304b6662d870ece2886bb4e9f799a
c37faedbf994154341e467f29126a4c489a05c6fef9ee5143f581ea41499
e4aecea25c0711d5cc7b9f01a37e7c0b7e59d5ee83c610a480921138ec2c
f957d766614f6ccaa7ceb4e20fd6f9ac362e8c090b1abb9485ee8c51fdeb
7fc72063a72ab3373c0c6872cf9ba20b3513a2189f8a98cd5a1ee87742> ND 
/c 
<10bf317047276c49998622737f5c0fdd43bdb1b35b15caae7eb2c80264ad
f0005e1c6be7a1a08efb8ae0111a7ff9c16d6d1d6fe6a62b9718659cdf71
ec1fec12732e715c04b3f3a8feb95e8d0f9e002393845281717573027f79
ad8c8ea5dce4faf3243344c83485cc434093ad2e51e73ce85594056ff3cf
8de95991fd7222c7dec9d4bc6113b2> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/f 
<10bf317065f8aa629a44bd3be74bbe0cfa1409656d751dcdbb088484a3c9
84e11d0d09aae771e92b3d48596140fc2967fbcf96b4f7694ddca0744e47
fd6ddc298113201938776b254f36f4878baaf6514d0108bde72f2d6fbb4a
d588> ND 
/g 
<10bf317046e845f3c38d9f70ba4464ac4e8fae8096f95866e14c9cfc76d4
2c91caccc55306d31fd922e308e96ee980323125643f9a86a8ffc2b52c12
c5bb9a13190b6aced9365e9c0da3f6e0016fa2ab359e2b06b32a173590b2
6f2094e4e558e81d1aad3b8794a704066a5c48c5835d67bbce791b1965a9
3fbd5fb55f1203033af92c703c31533cbcf30051576e5b8b57eedca25286
866fdee3b16f9555216746cd0cc4065676d353776467694c68063ac58586
fb4e91cf6077ef9d35ed3bc9160721b2f3dee4f8c47777dc722d34059624
2ed759> ND 
/i 
<10bf317021cc67b2bc312fc6a7ad37016808b8c74342617d801906e8ad23
4c7210637a5c2e2ea339f24d0c> ND 
/k 
<10bf31703cf850293dbeacb4825d9b43eba4ffb09ca8073f22015f91e054
b1f7b181ceef1abb9c955a524d127d186a3d6e0ab18596ed70aada> ND 
/l 
<10bf317021cc67b2bc31c11814793bc69b430b318ded78131a> ND 
/m 
<10bf31703bc84f280bc926798acdec2516269e7061028d385a31d255844f
a27fc6b4cdd6f6ba3dfabbbaadef207eca864f3bc97abd9a4f1b978df039
4779a47e3088a94b9cee6d3b276eef4d4950e88ef4a61f93e0b6cde961dc
7ec12956bd3a56a59704c6c5b5a401c3674bc856b6c34f276e7f1bc3056d
89b4805ca25b43894c427bc43b36554ede70476f7ee25d1a6c03ed9f5e40
5c72135defa96ede67a5a8ef5fea114c19a857db71952cb83f4d11> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073cab682ca78d0dc97da563
e3301b964801f725812f64cb67abc1e242f6d8dcd921f1fbf9e05fee92c3
cf16b5bf6083337a59bf026de7fa548a247b8bde12c672aa0ba0501ccc35
fcca587d7573f11dfc32a2ac31516847d39fb276060c6171da> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
/s 
<10bf317050d961e87d157c0fe86ec5afecbd608ce0f232c64dcfb1d39b45
2e71b8ca2a92c46173a52c993c8ea0e3a6a97bbca89eebc0e87a68da7dcf
335cb16989a377c8400340e09bb7a3a4fae54003803791fa4d2f5b88afdc
392f17afecc8a037b6118f07b51c97b137676b140e2fba0e4b7ecc574c70
cbfa35d84fd49bc18c067342180503665d383fcdebee907501f8719ff862
5030352810efab946329f109adefea2f39c8182336b9eb95b38d69ca43cf
161d7fb7e8f46433cafa> ND 
/t 
<10bf3170688ce4cb1d2f5bf487137bec8ecb87b4485146ce17824d997ac5
95ab4afb2e80a065a802ee3f010bb37eac91d0f6ed42677aa9dde7e1ad01
769b95b971dec6d1669588801bb2fb04109e79e9771f019783524f2f268e
35dce126a03e55d028a6951cc9b40e649071f577> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf399154810b2ea75
644b7bf3ca097b70d6244faa15faeaddcd0f234039d4b32fccf18d> ND 
/y 
<10bf317060ff2cd2175fcbd5188f2ead34c280175b68fa58eaeb7ff989f6
0b87f35441d734b6a71e070b5e34de773fbdfd6c4fe3b673d4b7999a1cea
703a048c48b5f433a740261363d7015ad7ad31dd41dc6049fa5a3516c28b
7faaad85929b64ac7256bc9d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/BHCEME+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 65 /A put
dup 67 /C put
dup 80 /P put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 160 /space put
dup 173 /hyphen put
pop
%%EndResource
[/N26/BHCEME+Arial,Bold 1 TZ
%%BeginResource: font BHCELI+Arial
11 dict begin
/FontName /BHCELI+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/BHCELI+Arial findfont /Encoding get
dup 0 /.notdef put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
pop
%%EndResource
[/N24/BHCELI+Arial 1 TZ
false setSA
n
76.02 733.02 459.06 -675 re
1 1 1 setrgbcolor
f
q
n
72 54 467.04 683.04 re
129.48 489 65.52 173.94 re
eoclip
n
1 J
0 j
0.960007 w
10 M
[] 0 d
n
95.64 142.86 371.7 565.98 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
1 J
0 j
0.0599976 w
10 M
[] 0 d
n
95.64 142.86 m
467.34 142.86 l
467.34 138.24 m
467.34 142.86 l
430.2 138.24 m
430.2 142.86 l
393 138.24 m
393 142.86 l
355.86 138.24 m
355.86 142.86 l
318.66 138.24 m
318.66 142.86 l
281.52 138.24 m
281.52 142.86 l
244.32 138.24 m
244.32 142.86 l
207.18 138.24 m
207.18 142.86 l
169.98 138.24 m
169.98 142.86 l
132.84 138.24 m
132.84 142.86 l
95.64 138.24 m
95.64 142.86 l
467.34 142.86 m
467.34 708.84 l
471.96 142.86 m
467.34 142.86 l
471.96 194.34 m
467.34 194.34 l
471.96 245.76 m
467.34 245.76 l
471.96 297.24 m
467.34 297.24 l
471.96 348.66 m
467.34 348.66 l
471.96 400.14 m
467.34 400.14 l
471.96 451.56 m
467.34 451.56 l
471.96 503.04 m
467.34 503.04 l
471.96 554.46 m
467.34 554.46 l
471.96 605.94 m
467.34 605.94 l
471.96 657.36 m
467.34 657.36 l
471.96 708.84 m
467.34 708.84 l
0 0 0  setrgbcolor
S
1 j
0.960007 w
n
292.44 148.02 m
298.14 148.32 l
303.96 148.62 l
309.9 148.86 l
315.9 149.04 l
327.96 149.52 l
334.02 149.7 l
345.9 150.18 l
351.66 150.48 l
357.3 150.78 l
360.06 150.96 l
362.82 151.14 l
365.46 151.38 l
368.1 151.56 l
370.68 151.8 l
373.14 152.04 l
375.6 152.28 l
378 152.58 l
380.28 152.88 l
382.5 153.18 l
386.82 153.84 l
390.96 154.56 l
394.98 155.28 l
398.82 156.06 l
402.54 156.9 l
406.14 157.74 l
409.5 158.64 l
412.74 159.6 l
415.8 160.56 l
418.74 161.64 l
421.44 162.66 l
424.02 163.8 l
425.22 164.34 l
427.5 165.54 l
428.58 166.08 l
429.6 166.74 l
430.62 167.34 l
431.52 167.94 l
432.42 168.6 l
433.08 169.08 l
434.16 170.16 l
434.64 170.7 l
435.06 171.24 l
435.42 171.78 l
436.08 172.98 l
436.56 174.24 l
436.92 175.62 l
437.16 177 l
437.34 178.5 l
437.4 180.12 l
437.46 181.8 l
437.46 185.52 l
437.52 187.56 l
437.52 189.66 l
437.64 191.94 l
437.82 194.34 l
437.94 195.96 l
438.12 197.64 l
438.24 199.38 l
438.42 201.18 l
438.54 202.98 l
438.66 204.9 l
438.84 206.82 l
438.96 208.8 l
439.14 210.84 l
439.38 215.04 l
439.56 217.26 l
439.68 219.48 l
439.8 221.76 l
439.92 224.1 l
440.1 226.5 l
440.22 228.9 l
440.46 233.94 l
440.58 236.52 l
440.7 239.16 l
440.76 241.86 l
441 247.38 l
441.06 250.2 l
441.18 253.14 l
441.24 256.08 l
441.36 259.02 l
441.48 265.14 l
441.6 271.5 l
441.72 284.22 l
441.72 303.6 l
441.66 306.9 l
441.66 313.8 l
441.6 317.28 l
441.54 320.88 l
441.54 324.54 l
441.42 332.16 l
441.42 336.12 l
441.36 340.2 l
441.36 344.4 l
441.24 353.16 l
441.24 357.72 l
441.18 362.46 l
441.18 372.36 l
441.12 377.58 l
441.12 412.68 l
441.18 415.98 l
441.18 433.2 l
441.24 436.74 l
441.24 447.84 l
441.3 455.4 l
441.3 463.14 l
441.36 471 l
441.36 479.04 l
441.42 487.2 l
441.42 495.42 l
441.54 512.22 l
441.54 520.68 l
441.66 537.9 l
441.78 572.64 l
441.96 598.68 l
441.96 607.26 l
442.02 615.84 l
442.02 624.3 l
442.14 641.04 l
442.14 649.26 l
442.2 657.36 l
0 0 0.501999  setrgbcolor
S
n
277.62 148.02 m
282.24 148.32 l
286.98 148.62 l
296.4 149.04 l
305.94 149.52 l
315.48 149.94 l
320.16 150.18 l
324.84 150.48 l
329.46 150.78 l
334.02 151.14 l
338.52 151.56 l
342.96 152.04 l
347.28 152.58 l
351.54 153.18 l
355.74 153.84 l
360 154.56 l
368.58 156.06 l
372.9 156.9 l
377.1 157.74 l
381.24 158.64 l
385.32 159.6 l
389.28 160.56 l
393.06 161.64 l
394.86 162.12 l
396.66 162.66 l
398.4 163.2 l
400.08 163.8 l
401.76 164.34 l
403.32 164.94 l
404.82 165.54 l
406.32 166.08 l
407.7 166.74 l
409.02 167.34 l
410.22 167.94 l
411.42 168.6 l
412.32 169.14 l
413.16 169.68 l
413.94 170.22 l
414.66 170.76 l
415.98 171.84 l
417.12 173.04 l
418.08 174.24 l
418.92 175.5 l
419.64 176.88 l
420.24 178.32 l
420.78 179.88 l
421.26 181.5 l
421.68 183.3 l
422.1 185.22 l
422.52 187.26 l
423 189.42 l
423.48 191.82 l
423.72 193.08 l
424.02 194.34 l
424.38 195.96 l
424.74 197.64 l
425.1 199.38 l
425.82 202.98 l
426.54 206.82 l
426.84 208.8 l
427.2 210.84 l
427.92 215.04 l
428.28 217.26 l
428.58 219.48 l
428.94 221.76 l
429.3 224.1 l
429.6 226.5 l
429.96 228.9 l
430.56 233.94 l
430.92 236.52 l
431.22 239.16 l
431.52 241.86 l
432.12 247.38 l
432.42 250.2 l
432.72 253.14 l
432.96 256.08 l
433.26 259.02 l
433.5 262.08 l
433.8 265.14 l
434.28 271.5 l
434.76 277.92 l
435.18 284.22 l
435.66 290.58 l
436.02 297 l
436.26 300.3 l
436.62 306.9 l
436.8 310.32 l
437.16 317.28 l
437.28 320.88 l
437.46 324.54 l
437.64 328.32 l
437.76 332.16 l
437.94 336.12 l
438.06 340.2 l
438.24 344.4 l
438.36 348.72 l
438.48 353.16 l
438.6 357.72 l
438.72 362.46 l
438.9 367.32 l
439.02 372.36 l
439.14 377.58 l
439.2 382.92 l
439.38 391.32 l
439.5 397.14 l
439.62 403.2 l
439.74 409.44 l
439.74 412.68 l
439.86 419.28 l
439.86 422.7 l
439.92 426.12 l
439.98 429.66 l
439.98 433.2 l
440.04 436.74 l
440.1 440.4 l
440.1 444.12 l
440.16 447.84 l
440.28 463.14 l
440.28 471 l
440.46 495.42 l
440.46 503.76 l
440.52 512.22 l
440.52 520.68 l
440.58 529.26 l
440.58 537.9 l
440.76 590.04 l
440.82 598.68 l
440.82 607.26 l
440.88 615.84 l
440.88 624.3 l
440.94 632.7 l
440.94 641.04 l
441.06 657.36 l
1 0 1  setrgbcolor
S
n
129.66 148.02 m
134.1 148.2 l
138.54 148.32 l
147.6 148.62 l
156.78 148.86 l
166.02 149.04 l
175.38 149.28 l
184.68 149.52 l
193.98 149.7 l
203.22 149.94 l
212.34 150.18 l
221.34 150.48 l
225.78 150.66 l
230.22 150.78 l
234.54 150.96 l
238.86 151.14 l
243.06 151.38 l
247.26 151.56 l
251.34 151.8 l
255.36 152.04 l
259.32 152.28 l
263.16 152.58 l
266.94 152.88 l
270.66 153.18 l
274.26 153.48 l
277.86 153.84 l
281.4 154.2 l
284.88 154.56 l
291.72 155.28 l
295.02 155.7 l
298.32 156.06 l
304.8 156.9 l
311.04 157.74 l
314.1 158.22 l
317.1 158.64 l
320.1 159.12 l
325.86 160.08 l
328.68 160.56 l
331.44 161.1 l
334.2 161.58 l
339.48 162.66 l
342.06 163.2 l
344.58 163.8 l
347.04 164.34 l
349.44 164.94 l
351.84 165.48 l
354.12 166.08 l
356.4 166.74 l
358.62 167.34 l
360.78 167.94 l
362.88 168.6 l
364.92 169.2 l
366.9 169.86 l
368.76 170.4 l
370.56 171 l
372.3 171.54 l
373.98 172.08 l
375.6 172.56 l
377.16 173.1 l
380.04 174.18 l
381.42 174.72 l
382.74 175.26 l
384 175.8 l
385.26 176.4 l
387.66 177.6 l
389.88 178.98 l
390.96 179.7 l
391.98 180.48 l
393.06 181.26 l
395.1 183.06 l
396.06 184.02 l
397.08 185.1 l
398.04 186.18 l
399.06 187.38 l
400.02 188.58 l
401.04 189.9 l
402.06 191.28 l
403.08 192.78 l
404.1 194.34 l
405.12 195.96 l
406.14 197.64 l
407.16 199.38 l
409.2 202.98 l
411.12 206.82 l
412.08 208.8 l
412.98 210.84 l
413.94 212.94 l
414.84 215.04 l
415.68 217.26 l
416.58 219.48 l
417.42 221.76 l
418.26 224.1 l
419.94 228.9 l
421.5 233.94 l
422.22 236.52 l
423 239.16 l
423.72 241.86 l
424.44 244.62 l
425.1 247.38 l
425.76 250.2 l
427.08 256.08 l
427.68 259.02 l
428.88 265.14 l
429.96 271.5 l
430.98 277.92 l
431.82 284.22 l
432.66 290.58 l
433.32 297 l
434.22 306.9 l
434.46 310.32 l
434.76 313.8 l
434.94 317.28 l
435.18 320.88 l
435.36 324.54 l
435.6 328.32 l
435.78 332.16 l
435.96 336.12 l
436.14 340.2 l
436.26 344.4 l
436.44 348.72 l
436.56 353.16 l
436.74 357.72 l
436.86 362.46 l
437.04 367.32 l
437.22 372.36 l
437.34 377.58 l
437.52 382.92 l
437.64 388.5 l
437.76 391.32 l
437.82 394.2 l
437.94 397.14 l
438 400.14 l
1 1 0  setrgbcolor
S
n
438 400.14 m
438.06 403.2 l
438.18 406.32 l
438.24 409.44 l
438.36 412.68 l
438.48 419.28 l
438.54 422.7 l
438.66 426.12 l
438.84 436.74 l
439.14 455.4 l
439.38 471 l
439.44 479.04 l
439.68 495.42 l
439.74 503.76 l
439.86 512.22 l
439.98 529.26 l
440.1 537.9 l
440.22 555.24 l
440.4 572.64 l
440.52 590.04 l
440.64 598.68 l
440.76 615.84 l
440.88 624.3 l
440.94 632.7 l
441.06 641.04 l
441.12 649.26 l
441.24 657.36 l
S
n
210.42 148.02 m
217.38 148.32 l
224.46 148.62 l
231.6 148.86 l
238.74 149.04 l
253.14 149.52 l
260.34 149.7 l
267.48 149.94 l
274.56 150.18 l
281.64 150.48 l
288.6 150.78 l
295.44 151.14 l
302.16 151.56 l
308.76 152.04 l
315.18 152.58 l
321.42 153.18 l
327.6 153.84 l
340.08 155.28 l
346.26 156.06 l
352.38 156.9 l
358.44 157.74 l
364.38 158.64 l
370.2 159.6 l
373.02 160.08 l
375.78 160.56 l
378.54 161.1 l
381.18 161.58 l
383.82 162.12 l
388.86 163.2 l
391.26 163.8 l
393.6 164.34 l
395.82 164.94 l
397.98 165.48 l
400.08 166.08 l
402.06 166.74 l
403.98 167.34 l
405.78 167.94 l
407.46 168.6 l
408.84 169.14 l
410.1 169.68 l
412.38 170.76 l
413.4 171.36 l
414.36 171.9 l
415.26 172.44 l
416.1 173.04 l
416.88 173.64 l
418.2 174.84 l
418.8 175.44 l
419.4 176.1 l
419.94 176.76 l
420.84 178.2 l
421.68 179.7 l
422.4 181.32 l
423.06 183.06 l
423.72 184.98 l
424.32 187.02 l
425.4 190.44 l
425.76 191.7 l
426.6 194.34 l
427.14 195.96 l
427.68 197.64 l
428.16 199.38 l
429.24 202.98 l
430.32 206.82 l
430.86 208.8 l
431.34 210.84 l
432.42 215.04 l
432.9 217.26 l
433.44 219.48 l
433.92 221.76 l
434.4 224.1 l
435.36 228.9 l
436.32 233.94 l
436.74 236.52 l
437.16 239.16 l
437.58 241.86 l
438.42 247.38 l
438.78 250.2 l
439.14 253.14 l
439.44 256.08 l
439.8 259.02 l
440.4 265.14 l
440.88 271.5 l
441.3 277.92 l
441.6 284.22 l
441.96 297 l
441.96 300.3 l
442.02 303.6 l
442.02 313.8 l
441.96 317.28 l
441.96 320.88 l
441.9 324.54 l
441.84 328.32 l
441.84 332.16 l
441.72 340.2 l
441.6 348.72 l
441.48 357.72 l
441.36 367.32 l
441.36 372.36 l
441.3 377.58 l
441.3 406.32 l
441.36 409.44 l
441.36 422.7 l
441.42 426.12 l
441.42 436.74 l
441.48 440.4 l
441.48 455.4 l
441.54 463.14 l
441.54 471 l
441.66 487.2 l
441.66 495.42 l
441.72 503.76 l
441.72 512.22 l
441.78 520.68 l
441.78 529.26 l
441.84 537.9 l
442.02 590.04 l
442.14 607.26 l
442.14 615.84 l
442.2 624.3 l
442.2 632.7 l
442.26 641.04 l
442.26 649.26 l
442.32 657.36 l
0 1 1  setrgbcolor
S
n
289.92 148.02 m
292.44 150.54 l
294.96 148.02 l
292.44 145.5 l
289.92 148.02 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
0 0 0.501999  setrgbcolor
S
n
379.98 153.18 m
382.5 155.7 l
385.02 153.18 l
382.5 150.66 l
379.98 153.18 l
h
q
eofill
Q
S
n
429.9 168.6 m
432.42 171.12 l
434.94 168.6 l
432.42 166.08 l
429.9 168.6 l
h
q
eofill
Q
S
n
435.3 194.34 m
437.82 196.86 l
440.34 194.34 l
437.82 191.82 l
435.3 194.34 l
h
q
eofill
Q
S
n
439.08 271.5 m
441.6 274.02 l
444.12 271.5 l
441.6 268.98 l
439.08 271.5 l
h
q
eofill
Q
S
n
438.6 400.14 m
441.12 402.66 l
443.64 400.14 l
441.12 397.62 l
438.6 400.14 l
h
q
eofill
Q
S
n
439.68 657.36 m
442.2 659.88 l
444.72 657.36 l
442.2 654.84 l
439.68 657.36 l
h
q
eofill
Q
S
0 j
n
275.1 145.5 4.98001 4.98 re
q
1 0 1  setrgbcolor
eofill
Q
1 0 1  setrgbcolor
S
n
349.02 150.66 4.97998 4.98 re
q
eofill
Q
S
n
408.9 166.08 4.98001 4.98 re
q
eofill
Q
S
n
421.5 191.82 4.97998 4.98 re
q
eofill
Q
S
n
431.76 268.98 4.97998 4.97998 re
q
eofill
Q
S
n
437.04 397.62 4.97998 4.97998 re
q
eofill
Q
S
n
438.54 654.84 4.97998 4.97998 re
q
eofill
Q
S
1 j
n
127.14 148.02 m
132.18 150.54 l
132.18 145.5 l
127.14 148.02 l
h
q
1 1 0  setrgbcolor
eofill
Q
1 1 0  setrgbcolor
S
n
268.14 153.18 m
273.18 155.7 l
273.18 150.66 l
268.14 153.18 l
h
q
eofill
Q
S
n
360.36 168.6 m
365.4 171.12 l
365.4 166.08 l
360.36 168.6 l
h
q
eofill
Q
S
n
401.58 194.34 m
406.62 196.86 l
406.62 191.82 l
401.58 194.34 l
h
q
eofill
Q
S
n
427.44 271.5 m
432.48 274.02 l
432.48 268.98 l
427.44 271.5 l
h
q
eofill
Q
S
n
435.48 400.14 m
440.52 402.66 l
440.52 397.62 l
435.48 400.14 l
h
q
eofill
Q
S
n
438.72 657.36 m
443.76 659.88 l
443.76 654.84 l
438.72 657.36 l
h
q
eofill
Q
S
n
210.42 148.02 m
207.9 145.5 l
210.42 148.02 m
212.94 150.54 l
210.42 148.02 m
212.94 145.5 l
210.42 148.02 m
207.9 150.54 l
321.42 153.18 m
318.9 150.66 l
321.42 153.18 m
323.94 155.7 l
321.42 153.18 m
323.94 150.66 l
321.42 153.18 m
318.9 155.7 l
407.46 168.6 m
404.94 166.08 l
407.46 168.6 m
409.98 171.12 l
407.46 168.6 m
409.98 166.08 l
407.46 168.6 m
404.94 171.12 l
426.6 194.34 m
424.08 191.82 l
426.6 194.34 m
429.12 196.86 l
426.6 194.34 m
429.12 191.82 l
426.6 194.34 m
424.08 196.86 l
440.88 271.5 m
438.36 268.98 l
440.88 271.5 m
443.4 274.02 l
440.88 271.5 m
443.4 268.98 l
440.88 271.5 m
438.36 274.02 l
441.3 400.14 m
438.78 397.62 l
441.3 400.14 m
443.82 402.66 l
441.3 400.14 m
443.82 397.62 l
441.3 400.14 m
438.78 402.66 l
442.32 657.36 m
439.8 654.84 l
442.32 657.36 m
444.84 659.88 l
442.32 657.36 m
444.84 654.84 l
442.32 657.36 m
439.8 659.88 l
0 1 1  setrgbcolor
S
0 0 0  setrgbcolor
472.2 123.18 m
/N24 [0 15 -15 0 0 0] Tf
(0) show
435.06 114.84 m
(20) show
397.86 114.84 m
(40) show
360.72 114.84 m
(60) show
323.52 114.84 m
(80) show
286.38 106.5 m
(100) show
249.18 106.5 m
(120) show
212.04 106.5 m
(140) show
174.84 106.5 m
(160) show
137.7 106.5 m
(180) show
100.501 106.5 m
(200) show
493.741 138.72 m
(0)
[47.277 ] pdfys
(1) show
(0)
[43.1055 ] pdfys
(2) show
(0)
[43.1055 ] pdfys
(3) show
(0)
[43.1055 ] pdfys
(4) show
(0)
[43.1055 ] pdfys
(5) show
(0)
[43.1055 ] pdfys
(6) show
(0)
[43.1055 ] pdfys
(7) show
(0)
[43.1055 ] pdfys
(8) show
(0)
[43.1055 ] pdfys
(9) show
(0)
[38.9355 ] pdfys
(10) show
(0)
[34.7925 ] pdfys
(11) show
(0) show
523.021 346.62 m
/N26 [0 15 -15 0 0 0] Tf
(est_cycle interval \(ms\)) show
448.86 88.38 m
/N26 -15 Tf
(A)
[-10.8252 ] pdfxs
(ll) show
(-)
[-4.99031 ] pdfxs
(p) show
(r)
[-5.83031 ] pdfxs
(o) show
(cs t)
[-8.33542 -8.33542 -4.14299 -4.99031 ] pdfxs
(i) show
(me )
[-13.3303 -8.33542 -4.14299 ] pdfxs
(u) show
(s)
[-8.33542 ] pdfxs
(ing) show
( C)
[-4.14299 -10.8252 ] pdfxs
(il) show
(k-AP \()
[-8.33542 -4.99031 -10.8252 -10.0003 -4.14299 -4.99031 ] pdfxs
(no.) show
( )
[-4.14299 ] pdfxs
(o) show
(f )
[-4.99031 -4.14299 ] pdfxs
(in) show
(terva)
[-4.99031 -8.33542 -5.83031 -8.33542 -8.33542 ] pdfxs
(l) show
(s\))
[-8.33542 -4.99031 ] pdfxs
n
129.54 662.88 65.46 -173.82 re
1 1 1  setrgbcolor
f
0.0599976 w
n
129.48 489 65.52 173.88 re
0 0 0  setrgbcolor
S
0.960007 w
n
137.58 492.42 m
137.58 512.4 l
0 0 0.501999  setrgbcolor
S
n
135.06 502.38 m
137.58 504.9 l
140.1 502.38 l
137.58 499.86 l
135.06 502.38 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
141.18 514.8 m
/N28 [0 12 -12 0 0 0] Tf
(fib\(33\)) show
n
153.96 492.42 m
153.96 512.4 l
1 0 1  setrgbcolor
S
0 j
n
151.44 499.86 4.98 4.97998 re
q
eofill
Q
S
0 0 0  setrgbcolor
157.56 514.8 m
(pfloop\(64\)) show
1 j
n
170.34 492.42 m
170.34 512.4 l
1 1 0  setrgbcolor
S
n
167.82 502.38 m
172.86 504.9 l
172.86 499.86 l
167.82 502.38 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
173.94 514.8 m
(cholesky\(2048,10000\)) show
n
186.72 492.42 m
186.72 512.4 l
186.72 502.38 m
184.2 499.86 l
186.72 502.38 m
189.24 504.9 l
186.72 502.38 m
189.24 499.86 l
186.72 502.38 m
184.2 504.9 l
0 1 1  setrgbcolor
S
0 0 0  setrgbcolor
190.32 514.8 m
(knary\(10,6,1\)) show
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 67805 a Fn(Figure)538 b(7-2:)665 b
Fm(The)468 b(all-pro)34 b(cs)466 b(time)i(of)f(di\256eren)-34
b(t)468 b(jobs)g(using)g(the)g(Cilk-AP)f(system,)483
b(sho)-34 b(wn)469 b(on)f(an)2000 69310 y(absolute)405
b(scale)e(in)h(\(a\))h(and)g(in)f(terms)g(of)499 b Fe(est)p
23664 69310 382 45 v 459 w(cycle)406 b Fm(in)e(\(b\).)25350
75321 y Fy(65)p eop end
%%Page: 66 66
TeXDict begin 66 65 bop 4466 48237 a @beginspecial 78
@llx 60 @lly 724 @urx 514 @ury 3876 @rwi @setspecial
%%BeginDocument: cilk-ap-allprocs3.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Cilk-AP experiments.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910125153-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 78 60 724 514
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
78 60 moveto 724 60 lineto 724 514 lineto 78 514 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
78 60 646 454 rectclip
[ 0 -1 1 0 18.47978 592.00226 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font PFBJPC+CourierNewPSMT
11 dict begin
/FontName /PFBJPC+CourierNewPSMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1318 dict dup begin
/.notdef 
<10bf31704faacd68130743d1032b190034e66bfe220959d1d966dfb0f017
1a28cd5cf1737c91b7113f3bf6> ND 
/parenleft 
<10bf3170051c0657cad441b8f532cd3da010ece2575ef7de2db56ee8fb73
7f2fd180d91201129a5968decec9580fb835746486f21039af7f682e263a
317a4c1038a70a08035305726dc4f4b7eb31235335e3a2765c50925e4795
0533122ff696b6c8d444ddcd6b9a32e7bad24b1b8685e61b3b0dfcb5d945
abc07d33825263c924c6cda5f3a33396b203fe4186> ND 
/parenright 
<10bf317005805916296da6243ee0e467f2f3313f9a036e34d827e2cea6e3
edd0af68ac5d3c4bddf14f5abad36a23995504293a2c8865869ac64e8fa0
9fc8b07f1b351b67db4fecfed37964e1564c2faaf1fe1b557a754431a18a
78747d7d81db11314c2ec7b02fa10201e0193bc9510aa16c0d513153c840
0ae4f6ae70b8922887de3dcfd91c3843728618e4c261> ND 
/comma 
<10bf31700581977eaf182c6123e4a98da1a350304b0ca60e47d10247e979
d286859ebba062d886fb7d8319a75a3067f9d2eff4bb6794> ND 
/zero 
<10bf317005a32251dac96c2e8a0698834239615d91ae4e74b2354a3d22c3
a68cd84ae142e7483b1c4b5bced8ea492db34f6881bfda63358b887ec236
d2cbab1d96e12fdb7ea887b883a009d7cce1510b5f8065f1c14f5f476b04
c6999cd2b92fc0f1757604a569b9bca551ba35f768492d9951e477634f63
c42f4763914ec027dcb247dbd566895ec45eaeeec3b6b7ef527b4960bae7
ee3b8a92446df2912e0944faad8a856a7cd64102e9a83c124e6f1666c80b
3817d1565dec213596b82d26e7a1499d1c7df570b0daf568fa3c1282d042
89> ND 
/one 
<10bf317005a4508329b5ddd7b22b109df223d600eef5524e2d82dda21233
5e0221ef511677ecd5fd11f2c8faa5a3539cceb3e8f496929afb1635f17c
9908e773909fedf540c5871290df753daeb2114c2135d44749daeabb9715
360fa9d22349a3e96555fa294bd04c8d501870316575f306540dd8d136a6
b9c637e619566c4fba> ND 
/two 
<10bf31702ce1b272ebff9b16764f8de85aa02f57f5999d54704240163fa9
7fd1d9894d59ce6b648ce4a59eec49a7dc0cd69437c058b1f662c1c6d5ff
a77b6cb2496438455e29ce4a8523a2deb5feaa9b9a4d6bd222fdc618fd31
c4794b3191fa0190e1df9675feffca7b9d112596b333479cd5c8644365ab
1e3f3e48cb3ec59f98dd5b0a9af3ed1e2b811a338fda4848983012568c7f
1946745c046828ec9e8ea2fd4645f0c4077e2ed1879f682542eebfbf0a7e
e4e85f2c291e0513c68b07a0d2a9a446f5e0765c357b> ND 
/three 
<10bf31701801432976392f1124966f16bdb6fa5274121e7ae70ea5a0e025
acc6dc17e105f63c635baa74343f3c3b1cf8df40679930b68ab9aa23a644
55b72125039e400f82696e9df8de2040071eda73571e049a7c9889261802
1c8030440860291dbd429ed8bbdc26ad5887e64e06db21a8ac571f3d97ba
0857df517741c58acc521eaf00d8a066e1407cd7352ff28a48464c05ba29
cb3539aef0cdd6e71b3a373a4d1f3e8935e3879cd56cd85efcec588db947
8ec627a9f7c2f0e847123bb006d6e8f686761e7c8f38bb4f27bf2aa8fc08
af3f773dbc70b8dc51337b39680e6852d4fec6b150928f7032c3a6a88a37
ffc26cc4673f56bf4c3d32b178255f0cd031cc1b17872f949c835b123f> ND 
/four 
<10bf31700195cadd36910bd5fcc897ef9ea857828d4cf087eeaab14220fb
8bc853e2278b1a8f74db0ac950059d1e1cb71ee296067dc76bf1f9f4400d
08b4080e9672f43ea98ad3b0a15796f3ffd7d18b3e935689bd32921f0dbc
87da7fc54b459e8ce8d02e2ef7cf98f526589664ed2d4cc03938418c9d9d
9bcc2ffd522607dbdcbe65b400ac9a9f229c0a31b754d5507fc281b59aae
> ND 
/six 
<10bf317005bd29fc10e74a1ea8b6a5c751376fd7fe34118efc6b0fe8c30a
c74c224e4fc8a848ece22432b6391c94c2cfc8a86d4cddf02e210627194e
de8b3622b4b075648f3e3afb5f20200e15143b3ff523d42faa4ed40e544f
097fa4522873019295d6e353e9606e3951935ddb23a26f0c6fa7498e69bf
a0df0ff2c1df4c100b5b5d7bb00440029ef710eaf4b884639a1751b0e395
cedf2bcb8566d6f83e9072702f0e6758ef0edb7bad8953e8211b76b8e617
4f45ca7cb28adde6daec81e7f18fd708f3de8bfb2b1fb418ed7ac79d56c5
05e673751a316fd70e497e2e04b441ac96e32ff5> ND 
/eight 
<10bf317005a2f345f038b55d2d56c81492963a35bc703ee0cd4f03d84036
703294948f86067a1cb4f145a447fc2c694b3e080ee056df6aac3c908f91
3fdeb2f9b20021dd927bf86e3352227d1eeacc6b4f0b2a0432d86e0afbaf
79753279236e5208b2f7882b246fa222a1d2de7ae4f9a481ff0352ae249c
39d71e8e3be634b44d8fa2e3dac793c6e2517350e21c77a3e91b0328ed46
7af5698a00fcf920291e76aff4cc97c5c4a8396af984a8bc8ac3a86b3838
6a46743adf75b9f684b0ebf6ec7c2529924e84732693711b00c2e32250fa
d007dbc6f3051ccacf265a6efe951ce9b8b0678e42c89d72a0e453560abf
18a3369325d6371541e3> ND 
/a 
<10bf3170232f85bb91fd59ea4e6eead0126de560aebc020c547b48f32d2b
abf93200bad04879ad1bd23f7ed1ee74f058dcafeda9b28230093761878b
ce932f46a60e5ee361904ea5f5aa9dada691c20e75c341d821d103a06670
bd04aa001d36164c2c53462a248c68b1a096e1e1731f0d513d61689724b1
eaf4466b0b071658231f9e540ea28aa6001d68e22fe44fd43054e99d5e01
1b42649288af7cb657336a6dab295618d586bc69c3219cd3e6ddfbf9d9b8
5146df15a31b20e2116d63f0204c3258194efa025105c76978026da95a2d
2c6a82899809d2f0446bae470cb67bd05df83f189d0e1cd217bace53a6ae
ff> ND 
/b 
<10bf31705374ecc9a4510497c7f4ac1a62bf05080bbc7e1c77f092dc031d
b6972b7c556257f76c172fa7b4d913a36c5f8bd7e87b885382352c0cf94c
e1ba7bc62c1ef20fb292d2fd17b7a51241e5187451b2c9075649fbe830e3
8ba5561432b8f13d09391fff28ff5c994889ac1bdab0300e7b811d13f599
a0f2d4865910c062a4dedcdc368087aa37302a49fd68755e7c11c9bbaf0d
96e4441e05a0cc16ff5b830babbaa4d224bc82a0570bb79bda689bea189b
dde1d9c88fc757163144> ND 
/c 
<10bf31702ce1b272a974523f106d916e62297489d83166a408d334ea0831
8891c563969ac7a1af1b8242f3cd390eca23e4a7bbe0e5e28ff78928646a
5ceeab9b6644150ee02d024168d48f4ba55347e031ede47a7ceacd9a4580
91243c90d13538afab4e9559496040795ba61d3de23b6ff5b85e7b43e53b
ae89d195b0e7298e1a19b83fbf87ed268322197550f50d27ee7ef693c9b0
7e54c994416b10ea39f48b7297e7fe04a3b69de806c6ce0183799b687e97
b7d40f0fe3b1187f8258be5558cfa1d00c017c9ee1> ND 
/e 
<10bf3170383ec05dd664788074553f78752bdcb76c418fd5ffe9a10b0d24
a52cb57694a22e7c481c43c88a64f0e0098fcd3307e0b20b122d8920b0f8
56b30705d24db3f5fc4badd1597f173ff5476673dbb00f0694615ce846a5
a647b19e7820da01c8104df7d59927e6c05c834865730c173833000ec3d5
e58b6b8f7e43633b2ca59416f67c8cd3f143402766c1da49ee8e03c2f589
a9048d7887964fd46cb0de319625ab7e13> ND 
/f 
<10bf3170068d5ba6fde035a4a5cc01ee050d0a5a5d5b75bc557316a90d85
08ff9867dbe48afb3c4cbd26d3c7704bd4e5dc07fb707b0268d0c27c95e9
ba22dbe15cb223abdfa1e53ca512eff98c6fdd69b6cfcb8d9e4345870968
b7815cb9fc29a02ecc6233a6b257687147f131574ee711bc06df43aeeed3
04be4277bf18e4856f66d816a17d16afd1397afefa1802ac0c133460bd89
7f4116b822f8d8812475ea32a5df0c99a8c39067e6e3865b0d5eb511a2c5
68a96a729d10ab3246f9c8c05174f69939b30b62dc645fc24e78327833e4
83d50d19ce00a56d4b44f82f7c71dfecc764ebd76f6c> ND 
/h 
<10bf3170472740c4a38a899208b8a13c7b0fb1c21b83e74c0a517820101b
10e67cbc80626559d428aaa06780d6e8840a305c7b19c5120f84f983a428
3ee995fabee18b04d1a60f7f09352ae663446a001427d4f8a415e57373aa
3d1e08dfca375fdc63db87c169f8afc5dfaf544f695f5fe73d149f43c503
9400e47fe454e86201fa5c9a6c4b6bb19be41733c785845ab4aeab8ebb8d
089400238f96f4027124dd14aa9c6dd4dc188fa775c938823256369b045c
9c92db4625e79324fffdc2e3d84180858ec6ee204ab498fea91aa6c57a8f
112a872407a0acd4ad6616b9cd788939c223df80af38236951c6a47222e0
02fbb0712b820a31a73a> ND 
/i 
<10bf31701575859094c8d8dccbc4f7940557b0dba46eabcd2b410561593f
1c3b57c0f4283368afb1586fb0f465724159f7c8f7c4c45cbf98842cdbdd
a3bac01111ae963878f51cab75fb912a6bcb1ec9b94cdfe0c63078f174b9
1445570a816b4348a969be2042e9bb526ae4184baf486a97be393f42778f
3f19a1af185cd40db467dcfbdd> ND 
/k 
<10bf31701a6e2450ef156e7bb7c31add805f21dd31be7f1292e16454c4cf
6364036af9e24898ad91b735d39e2f9f2a3c88a59b9f2c7c54b95f2ea996
2bbe6e82a790af3cc247a94f104fd601e97ffb79a7fe32b289b5b9782eb3
a54aaec7e1387f5592c438bae21f59c6895dfb545a528d23a12d7658117d
5d0b8286abd5979ea17b5acd9416a15bbfe127cae7021848b6b96ed09953
591ea103c7283be955035566f20aa4e400126e92742a6db2f3841ceb4e99
a902fdb16a243816a9b4a793ba77b176b40b5735e0cfe29019fc4a7b047a
28512b082f34a811283a2b1bbc15bf0e1ef4878ec103dce5fabb19> ND 
/l 
<10bf317014475bc94d7b76462b300a267411c22b05f1442892f39494dada
04043360430ee1bc362f1e1d0a6f11b05a168341eb18d1bd014b79de6627
9b03c2dbde10574656077bc23565266ee11fd48ae9f5f8c73bcd3f222783
d17386cd1f8b1d1fbe465c474fe24ed81bd4d906e207427235f68f747b> ND 
/n 
<10bf31703208ee67869336341cf9a553ed5921ba24dfcc23366b642a1603
f8d8318bcea36bb67e5ea6cda948875b4c2b8558898264bf9cc37ed272bf
4454efa61c79c53934d751332012576509d8efb8ee9cacdf5457498e7bc3
6d02f57f1ae5bc8404d96da4b0b2bc1523a25e92e8ef2c7820f69b9a8ad2
54ea270f066dc2be1a2de027b4c238a84e015e7f748229ab012829478f04
be096bb9b5733e5db891ed7dd0c27d057335ac852b6dec5593e764989898
1cc46ae59ba09107b00ed95813450d878e755878967075674caf2d5a40c4
ba5b248db93cfd82a8c4c649c4df86ce04b13d12d62a8fd6b3d081db8568
8697febd04ced3972d> ND 
/o 
<10bf31702094e62e57ba031cd9f618fa49b1fbf116ef636835dbc7768fae
c8df4c0908b89fe0646715c51b45a90079abd2690a10607ae79881b92b5a
375bed1e8f05175f9423d58ec0f6889237f015a8145f6d8109026bc2a146
4c7ae9fee59de83eb06630e4d965fabef7de6894e14fb92feeba7e76c259
ce36c38d589caa7f92751b8a> ND 
/p 
<10bf31705374ecc9a451c6e4e09171a4eea24c71ac7d1dce65b5fdc06f32
5ec5231b780eaf8855d18e1abfa3edcdefe9eee40b04669d804d8bb56e46
7bb165d25af4eeb819555983e617eb34dc365af46ec63b7b2dfeec055759
85fef68746c83d78f454411c502ccf6511435e6ea5f32f8cd0ddd0177e59
04d8ec2d6ce4a3ee957d42a0b7ef335bd887529778118efa1c4057f08ae9
8cd6df47f0d380fe0c7b1b2a343d179289b6765efe33e43a31429182affd
65e0d1d12d7312011a30ae9c6ed0f6f7e4377d6170e0e58d89bba5bb1706
718428618d1199cde4b00b2751a3653aa25dc422ae2fb6b8ab> ND 
/r 
<10bf31702ce1b272e1cfea273864a55b510451ce2e699e3a05850d33fa41
fd2614bd419625fc1c6755defd118fd83f002d6a0ec3dc82f8442b64c24a
a84fb6745177fd22b8b0b2c2b1dc5a86d4b6b3259781be385f368a63b247
0c71a448bc514b3db35bcf7863f44c92c7a044dbf87c371f4b2bbcf4c896
797386e5c2baf124d22bc9c3f04cf863d5a7039c892f654d46812bce460c
ab30b56fa13b9a757b612341d59389f65b9d7682ba6a833799fc3c3048ff
d2f126276eebb8e64c01658ce6f7f21bc018285d8fb8eb> ND 
/s 
<10bf317002c334dab3629f7a671113a749f85c0dc9cd007b5c722c30c298
c379034a1d4dff63659ab6ee7d28c1b50f6acfbe7097ca323ff9a1d92da8
a5a8fa26a6b978329c7ac9264ffd0c310fee0de2aa9eea54b20b9b72f165
69d2fb00093c098531b58470c59a04b3f549cc5176f6c0cbeb8e781060df
60db409a177d850029a682caf2a8dfa86e97718d5190c2b20d5fbbe88daa
c5cda07598bbfae6f51515472e4b6cd489cc11d1d5097ec478219063517e
bf9d6e33f8197ca58033b5a19aa2c87426655e79f87bc280c4b0a1f6234b
db4b0b5685733017a57444d9d45a085cf22a811f5a9c277184e642721bc9
c089f5c25ebd8c8f45f6983859fafaae7e67882d8be9cafc094c7bb60ba6
3afba644e37c53d6aeb42ee83b3543622478875ffb503a11244e3ad97ccc
e2c7171d3675844e40975990d6> ND 
/y 
<10bf317026bbf7c77e4588baf827d3936f8fefa2d84ccdfa79c9f8ed6c62
ae74f87922300f26864a5ed2fb19cab970aef96d8a6208138010de07fccf
a8ce1c31b28bca80b9a26115c09d159dc58726da3b0f4cb2174097c2569e
aeca4a6540176b713257632a09d720c94b51a90c0e16bc071d9a5ee93941
2596d4f0f9755a1978ce1c64ea92f2b1ff5e9ff8aabc9dd1b4b4ba02fef1
9fac0de6a0d4cb0c92bc08ccebfb8c46127883f51ec7cd839bde7812482c
d58a15eb6e7a38df2303d9409fc20a967466551bc71e21f2a232bf3e34e5
5d4a82d4dab73d20ef168e371fac492dcd1e26a8dadff91dc5e03f6d8838
b9> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PFBJPC+CourierNewPSMT findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 121 /y put
pop
%%EndResource
[/N17/PFBJPC+CourierNewPSMT 1 TZ
%%BeginResource: font PFBJIL+Arial,Bold
11 dict begin
/FontName /PFBJIL+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31704d42f1352d5273addc7843b77bf144b304a7fd77e3f1cd5aa3d2
5843290f89d4b92d62022c6e20ff3fc16e851d04be964eb564d3148aa849
38f1853bb671322ebdad12328d10df755ca667b8d3> ND 
/parenright 
<10bf31705e9d53b165f4c2bf4ff0b54a54d2b121b1fb0b0443541ece65a0
a8176044e9807e70fc6500f41e661a6236bf6ceec5b6290ebcabc6b4ed73
20f89e31526599e6da59fa9728238cab6dffd27a90873c1ab1c84fdd> ND 
/hyphen 
<10bf317031d662871c21e4b24b45082f0229e121b5a5798a825a63> ND 
/period 
<10bf317021cc67b2bc301f516a49c5d2eaf38d05e04c6bb061> ND 
/A 
<10bf317079c9131fe82aed0960139938c7dd11f84d3486e157364ddfe73e
c1324c5f0a78446dd85572d81f76d5fdc971afc3b2e06bf4dc47bc679667
2b63> ND 
/C 
<10bf31704854f6e1a1a667b8970893ea3ae573d8f0b00f1e21c4da392880
f74a33a203a5eb2ac37bb1cec36ec2d3f1d6fe17d030e5f817de254d3a97
9bb0a180214fe6c133873897128ef01292c77a32877dc7bc6158a861cfdf
dd0152abc2812d8268588369a7e1e7abfe54f9dec9721a20ff256d00b940
20d33e255c770f4068fca4b2d690126cca> ND 
/P 
<10bf317026ba62063a41a530d6e25ee764c7f37e357d9f4340ad256cb4c6
3eb336efd9daf309283a29cbee7e81d5cb35b4e414d564fb43d54f1be124
58e12175036224baa1ddd853331407c204e3c541751c1c73505c6c30ec2d
6cdf96d9fde307c47b2bc88392f53a36b4a782bd0cc150cc752b44d84c5e
c0ddf42bd181226665ff> ND 
/underscore 
<10bf31707016729f51b1b86e4b9cd500905b15c87deab891d7> ND 
/a 
<10bf31705d64e193f644676913533d4f242b6181368ed1350652c8cb7a6f
e958f60841a88d1088c20f893090b458ae087d16aa8691f1ae44882b0528
d32f3e9827d4294992e18a57652ae7d531994f09c8f3899ddffaad39408b
1529cb6c6e94b8c5c36f6038811d22f304b6662d870ece2886bb4e9f799a
c37faedbf994154341e467f29126a4c489a05c6fef9ee5143f581ea41499
e4aecea25c0711d5cc7b9f01a37e7c0b7e59d5ee83c610a480921138ec2c
f957d766614f6ccaa7ceb4e20fd6f9ac362e8c090b1abb9485ee8c51fdeb
7fc72063a72ab3373c0c6872cf9ba20b3513a2189f8a98cd5a1ee87742> ND 
/c 
<10bf317047276c49998622737f5c0fdd43bdb1b35b15caae7eb2c80264ad
f0005e1c6be7a1a08efb8ae0111a7ff9c16d6d1d6fe6a62b9718659cdf71
ec1fec12732e715c04b3f3a8feb95e8d0f9e002393845281717573027f79
ad8c8ea5dce4faf3243344c83485cc434093ad2e51e73ce85594056ff3cf
8de95991fd7222c7dec9d4bc6113b2> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/i 
<10bf317021cc67b2bc312fc6a7ad37016808b8c74342617d801906e8ad23
4c7210637a5c2e2ea339f24d0c> ND 
/k 
<10bf31703cf850293dbeacb4825d9b43eba4ffb09ca8073f22015f91e054
b1f7b181ceef1abb9c955a524d127d186a3d6e0ab18596ed70aada> ND 
/l 
<10bf317021cc67b2bc31c11814793bc69b430b318ded78131a> ND 
/m 
<10bf31703bc84f280bc926798acdec2516269e7061028d385a31d255844f
a27fc6b4cdd6f6ba3dfabbbaadef207eca864f3bc97abd9a4f1b978df039
4779a47e3088a94b9cee6d3b276eef4d4950e88ef4a61f93e0b6cde961dc
7ec12956bd3a56a59704c6c5b5a401c3674bc856b6c34f276e7f1bc3056d
89b4805ca25b43894c427bc43b36554ede70476f7ee25d1a6c03ed9f5e40
5c72135defa96ede67a5a8ef5fea114c19a857db71952cb83f4d11> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073cab682ca78d0dc97da563
e3301b964801f725812f64cb67abc1e242f6d8dcd921f1fbf9e05fee92c3
cf16b5bf6083337a59bf026de7fa548a247b8bde12c672aa0ba0501ccc35
fcca587d7573f11dfc32a2ac31516847d39fb276060c6171da> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
/s 
<10bf317050d961e87d157c0fe86ec5afecbd608ce0f232c64dcfb1d39b45
2e71b8ca2a92c46173a52c993c8ea0e3a6a97bbca89eebc0e87a68da7dcf
335cb16989a377c8400340e09bb7a3a4fae54003803791fa4d2f5b88afdc
392f17afecc8a037b6118f07b51c97b137676b140e2fba0e4b7ecc574c70
cbfa35d84fd49bc18c067342180503665d383fcdebee907501f8719ff862
5030352810efab946329f109adefea2f39c8182336b9eb95b38d69ca43cf
161d7fb7e8f46433cafa> ND 
/t 
<10bf3170688ce4cb1d2f5bf487137bec8ecb87b4485146ce17824d997ac5
95ab4afb2e80a065a802ee3f010bb37eac91d0f6ed42677aa9dde7e1ad01
769b95b971dec6d1669588801bb2fb04109e79e9771f019783524f2f268e
35dce126a03e55d028a6951cc9b40e649071f577> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf399154810b2ea75
644b7bf3ca097b70d6244faa15faeaddcd0f234039d4b32fccf18d> ND 
/y 
<10bf317060ff2cd2175fcbd5188f2ead34c280175b68fa58eaeb7ff989f6
0b87f35441d734b6a71e070b5e34de773fbdfd6c4fe3b673d4b7999a1cea
703a048c48b5f433a740261363d7015ad7ad31dd41dc6049fa5a3516c28b
7faaad85929b64ac7256bc9d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PFBJIL+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 65 /A put
dup 67 /C put
dup 80 /P put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
dup 160 /space put
dup 173 /hyphen put
pop
%%EndResource
[/N15/PFBJIL+Arial,Bold 1 TZ
%%BeginResource: font PFBJIJ+Arial
11 dict begin
/FontName /PFBJIJ+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PFBJIJ+Arial findfont /Encoding get
dup 0 /.notdef put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
pop
%%EndResource
[/N12/PFBJIJ+Arial 1 TZ
false setSA
n
76.08 732.96 458.94 -674.88 re
1 1 1 setrgbcolor
f
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
76.02 58.02 459 674.94 re
0 0 0  setrgbcolor
S
q
n
72 54 467.04 683.04 re
372.06 479.4 58.56 155.16 re
eoclip
n
0 j
0.960007 w
n
95.58 131.16 370.14 549.66 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
0 j
n
95.58 131.16 m
465.72 131.16 l
465.72 126.6 m
465.72 131.16 l
426.78 126.6 m
426.78 131.16 l
387.78 126.6 m
387.78 131.16 l
348.84 126.6 m
348.84 131.16 l
309.9 126.6 m
309.9 131.16 l
270.9 126.6 m
270.9 131.16 l
231.96 126.6 m
231.96 131.16 l
192.96 126.6 m
192.96 131.16 l
154.02 126.6 m
154.02 131.16 l
115.08 126.6 m
115.08 131.16 l
465.72 131.16 m
465.72 680.82 l
470.28 131.16 m
465.72 131.16 l
470.28 181.14 m
465.72 181.14 l
470.28 231.12 m
465.72 231.12 l
470.28 281.04 m
465.72 281.04 l
470.28 331.02 m
465.72 331.02 l
470.28 381 m
465.72 381 l
470.28 430.98 m
465.72 430.98 l
470.28 480.96 m
465.72 480.96 l
470.28 530.94 m
465.72 530.94 l
470.28 580.86 m
465.72 580.86 l
470.28 630.84 m
465.72 630.84 l
470.28 680.82 m
465.72 680.82 l
S
1 j
0.960007 w
n
459.36 136.14 m
460.14 141.18 l
459.42 156.12 l
441.6 181.14 l
390.06 256.08 l
291.18 381 l
113.94 630.84 l
0 0 0.501999  setrgbcolor
S
n
465.72 136.14 m
462.9 141.18 l
458.28 156.12 l
443.52 181.14 l
405.72 256.08 l
351.6 381 l
232.56 630.84 l
1 0 1  setrgbcolor
S
n
457.32 136.14 m
452.76 141.18 l
442.14 156.12 l
433.08 181.14 l
408.12 256.08 l
364.26 381 l
270 630.84 l
1 1 0  setrgbcolor
S
n
462.72 136.14 m
459.72 141.18 l
459.06 156.12 l
449.58 181.14 l
427.44 256.08 l
371.4 381 l
266.64 630.84 l
0 1 1  setrgbcolor
S
n
456.84 136.14 m
459.36 138.66 l
461.88 136.14 l
459.36 133.62 l
456.84 136.14 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
0 0 0.501999  setrgbcolor
S
n
457.62 141.18 m
460.14 143.7 l
462.66 141.18 l
460.14 138.66 l
457.62 141.18 l
h
q
eofill
Q
S
n
456.9 156.12 m
459.42 158.64 l
461.94 156.12 l
459.42 153.6 l
456.9 156.12 l
h
q
eofill
Q
S
n
439.08 181.14 m
441.6 183.66 l
444.12 181.14 l
441.6 178.62 l
439.08 181.14 l
h
q
eofill
Q
S
n
387.54 256.08 m
390.06 258.6 l
392.58 256.08 l
390.06 253.56 l
387.54 256.08 l
h
q
eofill
Q
S
n
288.66 381 m
291.18 383.52 l
293.7 381 l
291.18 378.48 l
288.66 381 l
h
q
eofill
Q
S
n
111.42 630.84 m
113.94 633.36 l
116.46 630.84 l
113.94 628.32 l
111.42 630.84 l
h
q
eofill
Q
S
0 j
n
463.2 133.62 4.97998 4.98 re
q
1 0 1  setrgbcolor
eofill
Q
1 0 1  setrgbcolor
S
n
460.38 138.66 4.97998 4.98 re
q
eofill
Q
S
n
455.76 153.6 4.97998 4.98 re
q
eofill
Q
S
n
441 178.62 4.97998 4.98 re
q
eofill
Q
S
n
403.2 253.56 4.97998 4.97998 re
q
eofill
Q
S
n
349.08 378.48 4.97998 4.97998 re
q
eofill
Q
S
n
230.04 628.32 4.98 4.97998 re
q
eofill
Q
S
1 j
n
454.8 136.14 m
459.84 138.66 l
459.84 133.62 l
454.8 136.14 l
h
q
1 1 0  setrgbcolor
eofill
Q
1 1 0  setrgbcolor
S
n
450.24 141.18 m
455.28 143.7 l
455.28 138.66 l
450.24 141.18 l
h
q
eofill
Q
S
n
439.62 156.12 m
444.66 158.64 l
444.66 153.6 l
439.62 156.12 l
h
q
eofill
Q
S
n
430.56 181.14 m
435.6 183.66 l
435.6 178.62 l
430.56 181.14 l
h
q
eofill
Q
S
n
405.6 256.08 m
410.64 258.6 l
410.64 253.56 l
405.6 256.08 l
h
q
eofill
Q
S
n
361.74 381 m
366.78 383.52 l
366.78 378.48 l
361.74 381 l
h
q
eofill
Q
S
n
267.48 630.84 m
272.52 633.36 l
272.52 628.32 l
267.48 630.84 l
h
q
eofill
Q
S
n
462.72 136.14 m
460.2 133.62 l
462.72 136.14 m
465.24 138.66 l
462.72 136.14 m
465.24 133.62 l
462.72 136.14 m
460.2 138.66 l
459.72 141.18 m
457.2 138.66 l
459.72 141.18 m
462.24 143.7 l
459.72 141.18 m
462.24 138.66 l
459.72 141.18 m
457.2 143.7 l
459.06 156.12 m
456.54 153.6 l
459.06 156.12 m
461.58 158.64 l
459.06 156.12 m
461.58 153.6 l
459.06 156.12 m
456.54 158.64 l
449.58 181.14 m
447.06 178.62 l
449.58 181.14 m
452.1 183.66 l
449.58 181.14 m
452.1 178.62 l
449.58 181.14 m
447.06 183.66 l
427.44 256.08 m
424.92 253.56 l
427.44 256.08 m
429.96 258.6 l
427.44 256.08 m
429.96 253.56 l
427.44 256.08 m
424.92 258.6 l
371.4 381 m
368.88 378.48 l
371.4 381 m
373.92 383.52 l
371.4 381 m
373.92 378.48 l
371.4 381 m
368.88 383.52 l
266.64 630.84 m
264.12 628.32 l
266.64 630.84 m
269.16 633.36 l
266.64 630.84 m
269.16 628.32 l
266.64 630.84 m
264.12 633.36 l
0 1 1  setrgbcolor
S
0 0 0  setrgbcolor
470.52 111.72 m
/N12 [0 14.76 -14.76 0 0 0] Tf
(1) show
431.58 111.72 m
(3) show
392.58 111.72 m
(5) show
353.64 111.72 m
(7) show
314.7 111.72 m
(9) show
275.7 103.5 m
(11) show
236.76 103.5 m
(13) show
197.76 103.5 m
(15) show
158.82 103.5 m
(17) show
119.88 103.5 m
(19) show
491.76 127.081 m
(0)
[45.8372 ] pdfys
(1) show
(0)
[41.7546 ] pdfys
(2) show
(0)
[41.7546 ] pdfys
(3) show
(0)
[41.7546 ] pdfys
(4) show
(0)
[41.7546 ] pdfys
(5) show
(0)
[41.7546 ] pdfys
(6) show
(0)
[41.7546 ] pdfys
(7) show
(0)
[41.7546 ] pdfys
(8) show
(0)
[41.7546 ] pdfys
(9) show
(0)
[37.6897 ] pdfys
(10) show
(0)
[33.5598 ] pdfys
(11) show
(0) show
520.559 326.82 m
/N15 [0 14.76 -14.76 0 0 0] Tf
(est_cycle interval \(ms\)) show
429.3 87 m
/N15 -14.76 Tf
(A)
[-10.6549 ] pdfxs
(ll-p) show
(r)
[-5.73995 ] pdfxs
(o) show
(cs )
[-8.20498 -8.20498 -4.08256 ] pdfxs
(ti) show
(me ra)
[-13.1199 -8.20498 -4.08256 -5.73995 -8.20498 ] pdfxs
(tio) show
( )
[-4.08256 ] pdfxs
(\() show
(C)
[-10.6549 ] pdfxs
(il) show
(k)
[-8.20498 ] pdfxs
(-) show
(A)
[-10.6549 ] pdfxs
(P) show
( vs)
[-4.08256 -8.20498 -8.20498 ] pdfxs
(.) show
( C)
[-4.08256 -10.6549 ] pdfxs
(il) show
(k)
[-8.20498 ] pdfxs
(\)) show
n
372.12 634.5 58.5 -155.04 re
1 1 1  setrgbcolor
f
0.0599976 w
n
372.06 479.4 58.56 155.1 re
0 0 0  setrgbcolor
S
0.960007 w
n
379.2 482.46 m
379.2 502.44 l
0 0 0.501999  setrgbcolor
S
n
376.68 492.42 m
379.2 494.94 l
381.72 492.42 l
379.2 489.9 l
376.68 492.42 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
382.38 504.54 m
/N17 [0 10.5 -10.5 0 0 0] Tf
(fib\(33\)) show
n
393.84 482.46 m
393.84 502.44 l
1 0 1  setrgbcolor
S
0 j
n
391.32 489.9 4.97998 4.98001 re
q
eofill
Q
S
0 0 0  setrgbcolor
397.02 504.54 m
(pfloop\(64\)) show
1 j
n
408.48 482.46 m
408.48 502.44 l
1 1 0  setrgbcolor
S
n
405.96 492.42 m
411 494.94 l
411 489.9 l
405.96 492.42 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
411.66 504.54 m
(cholesky\(2048,10000\)) show
n
423.12 482.46 m
423.12 502.44 l
423.12 492.42 m
420.6 489.9 l
423.12 492.42 m
425.64 494.94 l
423.12 492.42 m
425.64 489.9 l
423.12 492.42 m
420.6 494.94 l
0 1 1  setrgbcolor
S
0 0 0  setrgbcolor
426.3 504.54 m
(knary\(10,6,1\)) show
0.0599976 w
n
76.02 58.02 459 674.94 re
S
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 50850 a Fn(Figure)381 b(7-3:)502 b
Fm(The)332 b(all-pro)34 b(cs)330 b(time)h(of)g(di\256eren)-34
b(t)331 b(jobs)h(using)g(the)f(Cilk-AP)g(system,)345
b(sho)-34 b(wn)333 b(as)e(a)g(ratio)2000 52355 y(of)404
b(the)h(all-pro)34 b(cs)403 b(time)h(using)h(Cilk.)25350
75321 y Fy(66)p eop end
%%Page: 67 67
TeXDict begin 67 66 bop 3733 47602 a @beginspecial 79
@llx 61 @lly 747 @urx 515 @ury 4008 @rwi @setspecial
%%BeginDocument: inst-vs-future.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Cilk-AP experiments.xls)
%%Version: 1 3
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910125214-04'00')
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 79 61 747 515
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
79 61 moveto 747 61 lineto 747 515 lineto 79 515 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
79 61 668 454 rectclip
[ 0 -1 1 0 18.20001 594 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font PFGLMC+Arial,Bold
11 dict begin
/FontName /PFGLMC+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/parenleft 
<10bf31704d42f1352d5273addc7843b77bf144b304a7fd77e3f1cd5aa3d2
5843290f89d4b92d62022c6e20ff3fc16e851d04be964eb564d3148aa849
38f1853bb671322ebdad12328d10df755ca667b8d3> ND 
/parenright 
<10bf31705e9d53b165f4c2bf4ff0b54a54d2b121b1fb0b0443541ece65a0
a8176044e9807e70fc6500f41e661a6236bf6ceec5b6290ebcabc6b4ed73
20f89e31526599e6da59fa9728238cab6dffd27a90873c1ab1c84fdd> ND 
/hyphen 
<10bf317031d662871c21e4b24b45082f0229e121b5a5798a825a63> ND 
/A 
<10bf317079c9131fe82aed0960139938c7dd11f84d3486e157364ddfe73e
c1324c5f0a78446dd85572d81f76d5fdc971afc3b2e06bf4dc47bc679667
2b63> ND 
/underscore 
<10bf31707016729f51b1b86e4b9cd500905b15c87deab891d7> ND 
/a 
<10bf31705d64e193f644676913533d4f242b6181368ed1350652c8cb7a6f
e958f60841a88d1088c20f893090b458ae087d16aa8691f1ae44882b0528
d32f3e9827d4294992e18a57652ae7d531994f09c8f3899ddffaad39408b
1529cb6c6e94b8c5c36f6038811d22f304b6662d870ece2886bb4e9f799a
c37faedbf994154341e467f29126a4c489a05c6fef9ee5143f581ea41499
e4aecea25c0711d5cc7b9f01a37e7c0b7e59d5ee83c610a480921138ec2c
f957d766614f6ccaa7ceb4e20fd6f9ac362e8c090b1abb9485ee8c51fdeb
7fc72063a72ab3373c0c6872cf9ba20b3513a2189f8a98cd5a1ee87742> ND 
/c 
<10bf317047276c49998622737f5c0fdd43bdb1b35b15caae7eb2c80264ad
f0005e1c6be7a1a08efb8ae0111a7ff9c16d6d1d6fe6a62b9718659cdf71
ec1fec12732e715c04b3f3a8feb95e8d0f9e002393845281717573027f79
ad8c8ea5dce4faf3243344c83485cc434093ad2e51e73ce85594056ff3cf
8de95991fd7222c7dec9d4bc6113b2> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/i 
<10bf317021cc67b2bc312fc6a7ad37016808b8c74342617d801906e8ad23
4c7210637a5c2e2ea339f24d0c> ND 
/l 
<10bf317021cc67b2bc31c11814793bc69b430b318ded78131a> ND 
/m 
<10bf31703bc84f280bc926798acdec2516269e7061028d385a31d255844f
a27fc6b4cdd6f6ba3dfabbbaadef207eca864f3bc97abd9a4f1b978df039
4779a47e3088a94b9cee6d3b276eef4d4950e88ef4a61f93e0b6cde961dc
7ec12956bd3a56a59704c6c5b5a401c3674bc856b6c34f276e7f1bc3056d
89b4805ca25b43894c427bc43b36554ede70476f7ee25d1a6c03ed9f5e40
5c72135defa96ede67a5a8ef5fea114c19a857db71952cb83f4d11> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073cab682ca78d0dc97da563
e3301b964801f725812f64cb67abc1e242f6d8dcd921f1fbf9e05fee92c3
cf16b5bf6083337a59bf026de7fa548a247b8bde12c672aa0ba0501ccc35
fcca587d7573f11dfc32a2ac31516847d39fb276060c6171da> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/p 
<10bf31703d364b58d236360a3109f388a509dc9806d07d5bc445174ad942
7c9600246e60ea62f48529a60136f844b413bd7834b903aeb5ec3a65352a
708c943d46c286b502a39b69aec9bc15c2a1798b51edb224db01e94ff1eb
dbf1e97f7f79a2c4ac7f7ccc29f5a1c29ed2d05ed3e5ff111a8b097f8d17
72a84cce0bcd066f78e2de698d38b96a99a99313e7a6639d82> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
/s 
<10bf317050d961e87d157c0fe86ec5afecbd608ce0f232c64dcfb1d39b45
2e71b8ca2a92c46173a52c993c8ea0e3a6a97bbca89eebc0e87a68da7dcf
335cb16989a377c8400340e09bb7a3a4fae54003803791fa4d2f5b88afdc
392f17afecc8a037b6118f07b51c97b137676b140e2fba0e4b7ecc574c70
cbfa35d84fd49bc18c067342180503665d383fcdebee907501f8719ff862
5030352810efab946329f109adefea2f39c8182336b9eb95b38d69ca43cf
161d7fb7e8f46433cafa> ND 
/t 
<10bf3170688ce4cb1d2f5bf487137bec8ecb87b4485146ce17824d997ac5
95ab4afb2e80a065a802ee3f010bb37eac91d0f6ed42677aa9dde7e1ad01
769b95b971dec6d1669588801bb2fb04109e79e9771f019783524f2f268e
35dce126a03e55d028a6951cc9b40e649071f577> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf399154810b2ea75
644b7bf3ca097b70d6244faa15faeaddcd0f234039d4b32fccf18d> ND 
/y 
<10bf317060ff2cd2175fcbd5188f2ead34c280175b68fa58eaeb7ff989f6
0b87f35441d734b6a71e070b5e34de773fbdfd6c4fe3b673d4b7999a1cea
703a048c48b5f433a740261363d7015ad7ad31dd41dc6049fa5a3516c28b
7faaad85929b64ac7256bc9d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PFGLMC+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 65 /A put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
dup 160 /space put
dup 173 /hyphen put
pop
%%EndResource
[/N15/PFGLMC+Arial,Bold 1 TZ
%%BeginResource: font PFGLLG+Arial
11 dict begin
/FontName /PFGLLG+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/hyphen 
<10bf31705995db6ed81c8e93e5d1d568f767c41aee4b2647d0> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
/A 
<10bf3170789bec1ccf5fb017e1dd1362ac54cb2fa3a278c1c5e8b8e0184d
7cbeaa35d4ddaa02f35f83f589e53f609414a1e8dd86a2916a5d28875546
282a3c313b2605b04804> ND 
/C 
<10bf31704fab892742fc2c6be78329c0825c84c392f40122153ca9a91165
96e2ea405597ca7f292098a14c92b8766b957d29536d6a74922bce6efa67
d7fa67d47a8ae997e897ea42f1e923c09a3ad5b1aa2186622859ef03a213
f7c26727c45c24d289e1bf8fa6a719352242839e565e8af9cb5c48758232
20530e01b09cb28b590a86024fb341940ed5d19a7e036981d38ceef64334
a577636f4f149330a371e1> ND 
/I 
<10bf31701a61e6f9a78e08bbc896e02c88ca268e19a5> ND 
/N 
<10bf3170258d0fb193698b7049546445ecd17fd85e4bf2706de899f33391
fbaa27f5dc8abddb7736c2d7> ND 
/P 
<10bf31702a85d5ccd794b0f82fad1df586d5fbd89610cffce961ef0c01e8
0dd41794780f980f6fae77f9030913b26e9faf7c4997be350b070860e734
b58d1af4e1f6fdede1ce393d1a10ecb0df5eb5d5689fc4b0c8ea8e8ea551
86c9a594f8c2368e99f819874a733380254b54725709f6d7ae5e> ND 
/S 
<10bf31704ab370a8a6c235279ed6c2ccfc716fa1295d141c34dd24f95c73
82e11c724a74e86021432ff58ab0f9585559c2cc7a3fe0720eadda5eee3e
cb055c76e8d7f22cfddbcfbe4ee1a562282b307d86efef90d9a8c71c96ab
9543712fa6240508ea1f38536804c47dfcc21f777c873fc11b7e20f7a228
b35e8d75f100a7da6082feb065d087853344b8bf00df7291cc74173d8c17
2964ca635a4e981f1604dc10d454f452e70073d386bcbe3ed4c09e72aa02
e7eb1e382ccb2fe70e1e9e3084e7824b4261723bffe42f4fc72d36ddcdd9
e884d10e18a55004b6149a9b0c7ead4b42afa8906a80deea322a930f4d91
ac35a6e6186e5d082f09> ND 
/T 
<10bf317050d9560b3cb54d581860f439ad72a17a69c33f00af1e6fc67c4b
afccfda0> ND 
/i 
<10bf31703f9c43ec382ac71b0be91f29c503cae1b1e6095503cc0fe0ac65
3b18436e1776> ND 
/k 
<10bf31703f936777fb99983a11586419ce72aadc44a2aa69d19b91e9f126
e6f5aabcb4381bf8bfee294b80bae1d888f1314da01fbe02> ND 
/l 
<10bf31703962bf7b2e903c47f674adcdf4f2bfaa638a> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PFGLLG+Arial findfont /Encoding get
dup 0 /.notdef put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 67 /C put
dup 73 /I put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 173 /hyphen put
pop
%%EndResource
[/N13/PFGLLG+Arial 1 TZ
false setSA
n
76.08 732.96 458.94 -674.88 re
1 1 1 setrgbcolor
f
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
76.02 58.02 459 674.94 re
0 0 0  setrgbcolor
S
q
n
72 54 467.04 683.04 re
118.5 179.52 40.68 119.88 re
eoclip
n
0 j
0.960007 w
n
95.94 145.38 365.94 563.22 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
0 j
n
95.94 145.38 m
461.88 145.38 l
461.88 140.7 m
461.88 145.38 l
400.92 140.7 m
400.92 145.38 l
339.9 140.7 m
339.9 145.38 l
278.94 140.7 m
278.94 145.38 l
217.92 140.7 m
217.92 145.38 l
156.96 140.7 m
156.96 145.38 l
95.94 140.7 m
95.94 145.38 l
461.88 145.38 m
461.88 708.6 l
466.56 145.38 m
461.88 145.38 l
466.56 196.56 m
461.88 196.56 l
466.56 247.8 m
461.88 247.8 l
466.56 298.98 m
461.88 298.98 l
466.56 350.16 m
461.88 350.16 l
466.56 401.4 m
461.88 401.4 l
466.56 452.58 m
461.88 452.58 l
466.56 503.82 m
461.88 503.82 l
466.56 555 m
461.88 555 l
466.56 606.18 m
461.88 606.18 l
466.56 657.42 m
461.88 657.42 l
466.56 708.6 m
461.88 708.6 l
S
1 j
0.960007 w
n
455.64 150.48 m
454.26 155.64 l
452.7 171 l
447.66 196.56 l
434.76 273.36 l
416.34 401.4 l
375.72 657.42 l
0 0 0.501999  setrgbcolor
S
n
444.9 150.48 m
440.52 155.64 l
436.38 171 l
424.74 196.56 l
384.3 273.36 l
308.88 401.4 l
163.02 657.42 l
1 0 1  setrgbcolor
S
n
453.12 150.48 m
455.64 153 l
458.16 150.48 l
455.64 147.96 l
453.12 150.48 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
0 0 0.501999  setrgbcolor
S
n
451.74 155.64 m
454.26 158.16 l
456.78 155.64 l
454.26 153.12 l
451.74 155.64 l
h
q
eofill
Q
S
n
450.18 171 m
452.7 173.52 l
455.22 171 l
452.7 168.48 l
450.18 171 l
h
q
eofill
Q
S
n
445.14 196.56 m
447.66 199.08 l
450.18 196.56 l
447.66 194.04 l
445.14 196.56 l
h
q
eofill
Q
S
n
432.24 273.36 m
434.76 275.88 l
437.28 273.36 l
434.76 270.84 l
432.24 273.36 l
h
q
eofill
Q
S
n
413.82 401.4 m
416.34 403.92 l
418.86 401.4 l
416.34 398.88 l
413.82 401.4 l
h
q
eofill
Q
S
n
373.2 657.42 m
375.72 659.94 l
378.24 657.42 l
375.72 654.9 l
373.2 657.42 l
h
q
eofill
Q
S
0 j
n
442.38 147.96 4.97998 4.98 re
q
1 0 1  setrgbcolor
eofill
Q
1 0 1  setrgbcolor
S
n
438 153.12 4.97998 4.98 re
q
eofill
Q
S
n
433.86 168.48 4.97998 4.98 re
q
eofill
Q
S
n
422.22 194.04 4.98001 4.98 re
q
eofill
Q
S
n
381.78 270.84 4.98001 4.98001 re
q
eofill
Q
S
n
306.36 398.88 4.97998 4.97998 re
q
eofill
Q
S
n
160.5 654.9 4.98 4.97998 re
q
eofill
Q
S
0 0 0  setrgbcolor
466.86 125.4 m
/N13 [0 15.24 -15.24 0 0 0] Tf
(0) show
405.9 100.019 m
(1000) show
344.88 100.019 m
(2000) show
283.92 100.019 m
(3000) show
222.901 100.019 m
(4000) show
161.941 100.019 m
(5000) show
100.921 100.019 m
(6000) show
488.702 141.18 m
(0)
[46.9178 ] pdfys
(1) show
(0)
[42.7253 ] pdfys
(2) show
(0)
[42.7253 ] pdfys
(3) show
(0)
[42.7253 ] pdfys
(4) show
(0)
[42.7253 ] pdfys
(5) show
(0)
[42.7253 ] pdfys
(6) show
(0)
[42.7253 ] pdfys
(7) show
(0)
[42.7253 ] pdfys
(8) show
(0)
[42.7253 ] pdfys
(9) show
(0)
[38.5617 ] pdfys
(10) show
(0)
[34.226 ] pdfys
(11) show
(0) show
521.582 346.319 m
/N15 [0 15.24 -15.24 0 0 0] Tf
(est_cycle interval \(ms\)) show
351.66 80.4 m
/N15 -15.24 Tf
(A) show
(ll)
[-4.23974 -4.23974 ] pdfxs
(-) show
(p)
[-9.31455 ] pdfxs
(r) show
(o)
[-9.31455 ] pdfxs
(cs) show
( )
[-4.26253 ] pdfxs
(t) show
(i)
[-4.23974 ] pdfxs
(me) show
( )
[-4.26253 ] pdfxs
(\(ms\)) show
n
118.56 299.34 40.62 -119.76 re
1 1 1  setrgbcolor
f
0.0599976 w
n
118.5 179.52 40.68 119.82 re
0 0 0  setrgbcolor
S
1 j
0.960007 w
n
129.3 183.96 m
129.3 203.94 l
0 0 0.501999  setrgbcolor
S
n
126.78 193.92 m
129.3 196.44 l
131.82 193.92 l
129.3 191.4 l
126.78 193.92 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
134.28 207.36 m
/N13 [0 14.76 -14.76 0 0 0] Tf
(Cilk-AP) show
n
149.64 183.96 m
149.64 203.94 l
1 0 1  setrgbcolor
S
0 j
n
147.12 191.4 4.98 4.98 re
q
eofill
Q
S
0 0 0  setrgbcolor
154.62 207.36 m
(Cilk-AP-INST) show
0.0599976 w
n
76.02 58.02 459 674.94 re
S
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 50215 a Fn(Figure)511 b(7-4:)619 b
Fm(The)444 b(all-pro)34 b(cs)444 b(time)g(of)g(the)h
Fe(loopy)h Fm(program)e(using)g(Cilk-AP)g(and)h(Cilk-AP-INST,)2000
51720 y(a)412 b(v)-34 b(ersion)412 b(of)g(Cilk-AP)f(that)j(uses)e
(instan)-34 b(taneous)414 b(parallelism)d(measuremen)-34
b(ts)413 b(to)f(estimate)g(a)g(job's)2000 53226 y(desire.)25350
75321 y Fy(67)p eop end
%%Page: 68 68
TeXDict begin 68 67 bop 3600 34865 a @beginspecial 78
@llx 59 @lly 750 @urx 515 @ury 4032 @rwi @setspecial
%%BeginDocument: cilk-ap-running.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Cilk-AP experiments.xls)
%%Version: 1 4
%%Creator: (PScript5.dll Version 5.2)
%%CreationDate: (D:20040910165250Z)
%%For: (siddhartha sen)
%%DocumentData: Clean7Bit
%%BoundingBox: 78 59 750 515
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
78 59 moveto 750 59 lineto 750 515 lineto 78 515 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
78 59 672 456 rectclip
[ 0 -1 1 0 18.55977 592.96199 ] concat
/N10 [/DeviceRGB] /ColorSpace defineRes pop

%%BeginResource: font PFPGJD+CourierNewPSMT
11 dict begin
/FontName /PFPGJD+CourierNewPSMT def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1318 dict dup begin
/.notdef 
<10bf31704faacd68130743d1032b190034e66bfe220959d1d966dfb0f017
1a28cd5cf1737c91b7113f3bf6> ND 
/parenleft 
<10bf3170051c0657cad441b8f532cd3da010ece2575ef7de2db56ee8fb73
7f2fd180d91201129a5968decec9580fb835746486f21039af7f682e263a
317a4c1038a70a08035305726dc4f4b7eb31235335e3a2765c50925e4795
0533122ff696b6c8d444ddcd6b9a32e7bad24b1b8685e61b3b0dfcb5d945
abc07d33825263c924c6cda5f3a33396b203fe4186> ND 
/parenright 
<10bf317005805916296da6243ee0e467f2f3313f9a036e34d827e2cea6e3
edd0af68ac5d3c4bddf14f5abad36a23995504293a2c8865869ac64e8fa0
9fc8b07f1b351b67db4fecfed37964e1564c2faaf1fe1b557a754431a18a
78747d7d81db11314c2ec7b02fa10201e0193bc9510aa16c0d513153c840
0ae4f6ae70b8922887de3dcfd91c3843728618e4c261> ND 
/comma 
<10bf31700581977eaf182c6123e4a98da1a350304b0ca60e47d10247e979
d286859ebba062d886fb7d8319a75a3067f9d2eff4bb6794> ND 
/zero 
<10bf317005a32251dac96c2e8a0698834239615d91ae4e74b2354a3d22c3
a68cd84ae142e7483b1c4b5bced8ea492db34f6881bfda63358b887ec236
d2cbab1d96e12fdb7ea887b883a009d7cce1510b5f8065f1c14f5f476b04
c6999cd2b92fc0f1757604a569b9bca551ba35f768492d9951e477634f63
c42f4763914ec027dcb247dbd566895ec45eaeeec3b6b7ef527b4960bae7
ee3b8a92446df2912e0944faad8a856a7cd64102e9a83c124e6f1666c80b
3817d1565dec213596b82d26e7a1499d1c7df570b0daf568fa3c1282d042
89> ND 
/one 
<10bf317005a4508329b5ddd7b22b109df223d600eef5524e2d82dda21233
5e0221ef511677ecd5fd11f2c8faa5a3539cceb3e8f496929afb1635f17c
9908e773909fedf540c5871290df753daeb2114c2135d44749daeabb9715
360fa9d22349a3e96555fa294bd04c8d501870316575f306540dd8d136a6
b9c637e619566c4fba> ND 
/two 
<10bf31702ce1b272ebff9b16764f8de85aa02f57f5999d54704240163fa9
7fd1d9894d59ce6b648ce4a59eec49a7dc0cd69437c058b1f662c1c6d5ff
a77b6cb2496438455e29ce4a8523a2deb5feaa9b9a4d6bd222fdc618fd31
c4794b3191fa0190e1df9675feffca7b9d112596b333479cd5c8644365ab
1e3f3e48cb3ec59f98dd5b0a9af3ed1e2b811a338fda4848983012568c7f
1946745c046828ec9e8ea2fd4645f0c4077e2ed1879f682542eebfbf0a7e
e4e85f2c291e0513c68b07a0d2a9a446f5e0765c357b> ND 
/three 
<10bf31701801432976392f1124966f16bdb6fa5274121e7ae70ea5a0e025
acc6dc17e105f63c635baa74343f3c3b1cf8df40679930b68ab9aa23a644
55b72125039e400f82696e9df8de2040071eda73571e049a7c9889261802
1c8030440860291dbd429ed8bbdc26ad5887e64e06db21a8ac571f3d97ba
0857df517741c58acc521eaf00d8a066e1407cd7352ff28a48464c05ba29
cb3539aef0cdd6e71b3a373a4d1f3e8935e3879cd56cd85efcec588db947
8ec627a9f7c2f0e847123bb006d6e8f686761e7c8f38bb4f27bf2aa8fc08
af3f773dbc70b8dc51337b39680e6852d4fec6b150928f7032c3a6a88a37
ffc26cc4673f56bf4c3d32b178255f0cd031cc1b17872f949c835b123f> ND 
/four 
<10bf31700195cadd36910bd5fcc897ef9ea857828d4cf087eeaab14220fb
8bc853e2278b1a8f74db0ac950059d1e1cb71ee296067dc76bf1f9f4400d
08b4080e9672f43ea98ad3b0a15796f3ffd7d18b3e935689bd32921f0dbc
87da7fc54b459e8ce8d02e2ef7cf98f526589664ed2d4cc03938418c9d9d
9bcc2ffd522607dbdcbe65b400ac9a9f229c0a31b754d5507fc281b59aae
> ND 
/six 
<10bf317005bd29fc10e74a1ea8b6a5c751376fd7fe34118efc6b0fe8c30a
c74c224e4fc8a848ece22432b6391c94c2cfc8a86d4cddf02e210627194e
de8b3622b4b075648f3e3afb5f20200e15143b3ff523d42faa4ed40e544f
097fa4522873019295d6e353e9606e3951935ddb23a26f0c6fa7498e69bf
a0df0ff2c1df4c100b5b5d7bb00440029ef710eaf4b884639a1751b0e395
cedf2bcb8566d6f83e9072702f0e6758ef0edb7bad8953e8211b76b8e617
4f45ca7cb28adde6daec81e7f18fd708f3de8bfb2b1fb418ed7ac79d56c5
05e673751a316fd70e497e2e04b441ac96e32ff5> ND 
/eight 
<10bf317005a2f345f038b55d2d56c81492963a35bc703ee0cd4f03d84036
703294948f86067a1cb4f145a447fc2c694b3e080ee056df6aac3c908f91
3fdeb2f9b20021dd927bf86e3352227d1eeacc6b4f0b2a0432d86e0afbaf
79753279236e5208b2f7882b246fa222a1d2de7ae4f9a481ff0352ae249c
39d71e8e3be634b44d8fa2e3dac793c6e2517350e21c77a3e91b0328ed46
7af5698a00fcf920291e76aff4cc97c5c4a8396af984a8bc8ac3a86b3838
6a46743adf75b9f684b0ebf6ec7c2529924e84732693711b00c2e32250fa
d007dbc6f3051ccacf265a6efe951ce9b8b0678e42c89d72a0e453560abf
18a3369325d6371541e3> ND 
/a 
<10bf3170232f85bb91fd59ea4e6eead0126de560aebc020c547b48f32d2b
abf93200bad04879ad1bd23f7ed1ee74f058dcafeda9b28230093761878b
ce932f46a60e5ee361904ea5f5aa9dada691c20e75c341d821d103a06670
bd04aa001d36164c2c53462a248c68b1a096e1e1731f0d513d61689724b1
eaf4466b0b071658231f9e540ea28aa6001d68e22fe44fd43054e99d5e01
1b42649288af7cb657336a6dab295618d586bc69c3219cd3e6ddfbf9d9b8
5146df15a31b20e2116d63f0204c3258194efa025105c76978026da95a2d
2c6a82899809d2f0446bae470cb67bd05df83f189d0e1cd217bace53a6ae
ff> ND 
/b 
<10bf31705374ecc9a4510497c7f4ac1a62bf05080bbc7e1c77f092dc031d
b6972b7c556257f76c172fa7b4d913a36c5f8bd7e87b885382352c0cf94c
e1ba7bc62c1ef20fb292d2fd17b7a51241e5187451b2c9075649fbe830e3
8ba5561432b8f13d09391fff28ff5c994889ac1bdab0300e7b811d13f599
a0f2d4865910c062a4dedcdc368087aa37302a49fd68755e7c11c9bbaf0d
96e4441e05a0cc16ff5b830babbaa4d224bc82a0570bb79bda689bea189b
dde1d9c88fc757163144> ND 
/c 
<10bf31702ce1b272a974523f106d916e62297489d83166a408d334ea0831
8891c563969ac7a1af1b8242f3cd390eca23e4a7bbe0e5e28ff78928646a
5ceeab9b6644150ee02d024168d48f4ba55347e031ede47a7ceacd9a4580
91243c90d13538afab4e9559496040795ba61d3de23b6ff5b85e7b43e53b
ae89d195b0e7298e1a19b83fbf87ed268322197550f50d27ee7ef693c9b0
7e54c994416b10ea39f48b7297e7fe04a3b69de806c6ce0183799b687e97
b7d40f0fe3b1187f8258be5558cfa1d00c017c9ee1> ND 
/e 
<10bf3170383ec05dd664788074553f78752bdcb76c418fd5ffe9a10b0d24
a52cb57694a22e7c481c43c88a64f0e0098fcd3307e0b20b122d8920b0f8
56b30705d24db3f5fc4badd1597f173ff5476673dbb00f0694615ce846a5
a647b19e7820da01c8104df7d59927e6c05c834865730c173833000ec3d5
e58b6b8f7e43633b2ca59416f67c8cd3f143402766c1da49ee8e03c2f589
a9048d7887964fd46cb0de319625ab7e13> ND 
/f 
<10bf3170068d5ba6fde035a4a5cc01ee050d0a5a5d5b75bc557316a90d85
08ff9867dbe48afb3c4cbd26d3c7704bd4e5dc07fb707b0268d0c27c95e9
ba22dbe15cb223abdfa1e53ca512eff98c6fdd69b6cfcb8d9e4345870968
b7815cb9fc29a02ecc6233a6b257687147f131574ee711bc06df43aeeed3
04be4277bf18e4856f66d816a17d16afd1397afefa1802ac0c133460bd89
7f4116b822f8d8812475ea32a5df0c99a8c39067e6e3865b0d5eb511a2c5
68a96a729d10ab3246f9c8c05174f69939b30b62dc645fc24e78327833e4
83d50d19ce00a56d4b44f82f7c71dfecc764ebd76f6c> ND 
/h 
<10bf3170472740c4a38a899208b8a13c7b0fb1c21b83e74c0a517820101b
10e67cbc80626559d428aaa06780d6e8840a305c7b19c5120f84f983a428
3ee995fabee18b04d1a60f7f09352ae663446a001427d4f8a415e57373aa
3d1e08dfca375fdc63db87c169f8afc5dfaf544f695f5fe73d149f43c503
9400e47fe454e86201fa5c9a6c4b6bb19be41733c785845ab4aeab8ebb8d
089400238f96f4027124dd14aa9c6dd4dc188fa775c938823256369b045c
9c92db4625e79324fffdc2e3d84180858ec6ee204ab498fea91aa6c57a8f
112a872407a0acd4ad6616b9cd788939c223df80af38236951c6a47222e0
02fbb0712b820a31a73a> ND 
/i 
<10bf31701575859094c8d8dccbc4f7940557b0dba46eabcd2b410561593f
1c3b57c0f4283368afb1586fb0f465724159f7c8f7c4c45cbf98842cdbdd
a3bac01111ae963878f51cab75fb912a6bcb1ec9b94cdfe0c63078f174b9
1445570a816b4348a969be2042e9bb526ae4184baf486a97be393f42778f
3f19a1af185cd40db467dcfbdd> ND 
/k 
<10bf31701a6e2450ef156e7bb7c31add805f21dd31be7f1292e16454c4cf
6364036af9e24898ad91b735d39e2f9f2a3c88a59b9f2c7c54b95f2ea996
2bbe6e82a790af3cc247a94f104fd601e97ffb79a7fe32b289b5b9782eb3
a54aaec7e1387f5592c438bae21f59c6895dfb545a528d23a12d7658117d
5d0b8286abd5979ea17b5acd9416a15bbfe127cae7021848b6b96ed09953
591ea103c7283be955035566f20aa4e400126e92742a6db2f3841ceb4e99
a902fdb16a243816a9b4a793ba77b176b40b5735e0cfe29019fc4a7b047a
28512b082f34a811283a2b1bbc15bf0e1ef4878ec103dce5fabb19> ND 
/l 
<10bf317014475bc94d7b76462b300a267411c22b05f1442892f39494dada
04043360430ee1bc362f1e1d0a6f11b05a168341eb18d1bd014b79de6627
9b03c2dbde10574656077bc23565266ee11fd48ae9f5f8c73bcd3f222783
d17386cd1f8b1d1fbe465c474fe24ed81bd4d906e207427235f68f747b> ND 
/n 
<10bf31703208ee67869336341cf9a553ed5921ba24dfcc23366b642a1603
f8d8318bcea36bb67e5ea6cda948875b4c2b8558898264bf9cc37ed272bf
4454efa61c79c53934d751332012576509d8efb8ee9cacdf5457498e7bc3
6d02f57f1ae5bc8404d96da4b0b2bc1523a25e92e8ef2c7820f69b9a8ad2
54ea270f066dc2be1a2de027b4c238a84e015e7f748229ab012829478f04
be096bb9b5733e5db891ed7dd0c27d057335ac852b6dec5593e764989898
1cc46ae59ba09107b00ed95813450d878e755878967075674caf2d5a40c4
ba5b248db93cfd82a8c4c649c4df86ce04b13d12d62a8fd6b3d081db8568
8697febd04ced3972d> ND 
/o 
<10bf31702094e62e57ba031cd9f618fa49b1fbf116ef636835dbc7768fae
c8df4c0908b89fe0646715c51b45a90079abd2690a10607ae79881b92b5a
375bed1e8f05175f9423d58ec0f6889237f015a8145f6d8109026bc2a146
4c7ae9fee59de83eb06630e4d965fabef7de6894e14fb92feeba7e76c259
ce36c38d589caa7f92751b8a> ND 
/p 
<10bf31705374ecc9a451c6e4e09171a4eea24c71ac7d1dce65b5fdc06f32
5ec5231b780eaf8855d18e1abfa3edcdefe9eee40b04669d804d8bb56e46
7bb165d25af4eeb819555983e617eb34dc365af46ec63b7b2dfeec055759
85fef68746c83d78f454411c502ccf6511435e6ea5f32f8cd0ddd0177e59
04d8ec2d6ce4a3ee957d42a0b7ef335bd887529778118efa1c4057f08ae9
8cd6df47f0d380fe0c7b1b2a343d179289b6765efe33e43a31429182affd
65e0d1d12d7312011a30ae9c6ed0f6f7e4377d6170e0e58d89bba5bb1706
718428618d1199cde4b00b2751a3653aa25dc422ae2fb6b8ab> ND 
/r 
<10bf31702ce1b272e1cfea273864a55b510451ce2e699e3a05850d33fa41
fd2614bd419625fc1c6755defd118fd83f002d6a0ec3dc82f8442b64c24a
a84fb6745177fd22b8b0b2c2b1dc5a86d4b6b3259781be385f368a63b247
0c71a448bc514b3db35bcf7863f44c92c7a044dbf87c371f4b2bbcf4c896
797386e5c2baf124d22bc9c3f04cf863d5a7039c892f654d46812bce460c
ab30b56fa13b9a757b612341d59389f65b9d7682ba6a833799fc3c3048ff
d2f126276eebb8e64c01658ce6f7f21bc018285d8fb8eb> ND 
/s 
<10bf317002c334dab3629f7a671113a749f85c0dc9cd007b5c722c30c298
c379034a1d4dff63659ab6ee7d28c1b50f6acfbe7097ca323ff9a1d92da8
a5a8fa26a6b978329c7ac9264ffd0c310fee0de2aa9eea54b20b9b72f165
69d2fb00093c098531b58470c59a04b3f549cc5176f6c0cbeb8e781060df
60db409a177d850029a682caf2a8dfa86e97718d5190c2b20d5fbbe88daa
c5cda07598bbfae6f51515472e4b6cd489cc11d1d5097ec478219063517e
bf9d6e33f8197ca58033b5a19aa2c87426655e79f87bc280c4b0a1f6234b
db4b0b5685733017a57444d9d45a085cf22a811f5a9c277184e642721bc9
c089f5c25ebd8c8f45f6983859fafaae7e67882d8be9cafc094c7bb60ba6
3afba644e37c53d6aeb42ee83b3543622478875ffb503a11244e3ad97ccc
e2c7171d3675844e40975990d6> ND 
/y 
<10bf317026bbf7c77e4588baf827d3936f8fefa2d84ccdfa79c9f8ed6c62
ae74f87922300f26864a5ed2fb19cab970aef96d8a6208138010de07fccf
a8ce1c31b28bca80b9a26115c09d159dc58726da3b0f4cb2174097c2569e
aeca4a6540176b713257632a09d720c94b51a90c0e16bc071d9a5ee93941
2596d4f0f9755a1978ce1c64ea92f2b1ff5e9ff8aabc9dd1b4b4ba02fef1
9fac0de6a0d4cb0c92bc08ccebfb8c46127883f51ec7cd839bde7812482c
d58a15eb6e7a38df2303d9409fc20a967466551bc71e21f2a232bf3e34e5
5d4a82d4dab73d20ef168e371fac492dcd1e26a8dadff91dc5e03f6d8838
b9> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PFPGJD+CourierNewPSMT findfont /Encoding get
dup 0 /.notdef put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 121 /y put
pop
%%EndResource
[/N17/PFPGJD+CourierNewPSMT 1 TZ
%%BeginResource: font PFPGHD+Arial,Bold
11 dict begin
/FontName /PFPGHD+Arial,Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/space 
<10bf317079c7734bf7> ND 
/percent 
<10bf31704489ef4104fcc37f801f99b7f6c5d1ab68fa0b3e8c3b4b594002
dfc3f10705317990a291e3f3f1a086259589c5c842f068278e3113329d36
4fd1455fdce543ebff32014a1e0e8833c0e3c4bf74dc0325f76bede51b12
bb0ac91928721927d115a6a4ca7ad5efdcd86725d5671c6f47b8d14e8a52
f7a6e560f1beb456461d31201aea9bb0bc4f01e5998452f27207c8e460f5
7933089ede4d658204d419ca8bec781a78c33b5dba245e9d7015b187267b
88233f5e877d09a5e3f651c32e17e9f4edeacd9e69efd0e2560fec734e01
cc60dd73852527350358277eb8913be7a706fae8e661039b3b4bf3950d4c
e162e91274f12a24a6287234f92ade5e48c0413aefb0eb2bcf21949d46c1
25a4a805ebbef6> ND 
/parenleft 
<10bf31704d42f1352d5273addc7843b77bf144b304a7fd77e3f1cd5aa3d2
5843290f89d4b92d62022c6e20ff3fc16e851d04be964eb564d3148aa849
38f1853bb671322ebdad12328d10df755ca667b8d3> ND 
/parenright 
<10bf31705e9d53b165f4c2bf4ff0b54a54d2b121b1fb0b0443541ece65a0
a8176044e9807e70fc6500f41e661a6236bf6ceec5b6290ebcabc6b4ed73
20f89e31526599e6da59fa9728238cab6dffd27a90873c1ab1c84fdd> ND 
/hyphen 
<10bf317031d662871c21e4b24b45082f0229e121b5a5798a825a63> ND 
/A 
<10bf317079c9131fe82aed0960139938c7dd11f84d3486e157364ddfe73e
c1324c5f0a78446dd85572d81f76d5fdc971afc3b2e06bf4dc47bc679667
2b63> ND 
/C 
<10bf31704854f6e1a1a667b8970893ea3ae573d8f0b00f1e21c4da392880
f74a33a203a5eb2ac37bb1cec36ec2d3f1d6fe17d030e5f817de254d3a97
9bb0a180214fe6c133873897128ef01292c77a32877dc7bc6158a861cfdf
dd0152abc2812d8268588369a7e1e7abfe54f9dec9721a20ff256d00b940
20d33e255c770f4068fca4b2d690126cca> ND 
/P 
<10bf317026ba62063a41a530d6e25ee764c7f37e357d9f4340ad256cb4c6
3eb336efd9daf309283a29cbee7e81d5cb35b4e414d564fb43d54f1be124
58e12175036224baa1ddd853331407c204e3c541751c1c73505c6c30ec2d
6cdf96d9fde307c47b2bc88392f53a36b4a782bd0cc150cc752b44d84c5e
c0ddf42bd181226665ff> ND 
/R 
<10bf317026ba2bbc95a451500e8f7f1d9eea40aa6073cf8d8a53256d5069
7a95f0a69cc27900ab66f73526710c1dd1b314dd64652bf01e66e7f1a039
9f801abc85bdfedaa9c191a89df077e519ba29ac06c308453bc06fc68fe6
b9d02220c09e8991fe4c96b0e59636d8c7b7e6c81d6ab22b6d7790c2f074
6fd6013faa33b96dab58268b6e89ee1d96b97459969f9ef8dca47d5b13c4
b0ca738a9d2aa7f7b1da1ca4> ND 
/underscore 
<10bf31707016729f51b1b86e4b9cd500905b15c87deab891d7> ND 
/a 
<10bf31705d64e193f644676913533d4f242b6181368ed1350652c8cb7a6f
e958f60841a88d1088c20f893090b458ae087d16aa8691f1ae44882b0528
d32f3e9827d4294992e18a57652ae7d531994f09c8f3899ddffaad39408b
1529cb6c6e94b8c5c36f6038811d22f304b6662d870ece2886bb4e9f799a
c37faedbf994154341e467f29126a4c489a05c6fef9ee5143f581ea41499
e4aecea25c0711d5cc7b9f01a37e7c0b7e59d5ee83c610a480921138ec2c
f957d766614f6ccaa7ceb4e20fd6f9ac362e8c090b1abb9485ee8c51fdeb
7fc72063a72ab3373c0c6872cf9ba20b3513a2189f8a98cd5a1ee87742> ND 
/c 
<10bf317047276c49998622737f5c0fdd43bdb1b35b15caae7eb2c80264ad
f0005e1c6be7a1a08efb8ae0111a7ff9c16d6d1d6fe6a62b9718659cdf71
ec1fec12732e715c04b3f3a8feb95e8d0f9e002393845281717573027f79
ad8c8ea5dce4faf3243344c83485cc434093ad2e51e73ce85594056ff3cf
8de95991fd7222c7dec9d4bc6113b2> ND 
/d 
<10bf317046e845f3cc81de7a4b8a8a1b3fe3a86a2a74eb0ce101ae9ff9ea
ca0b0d6152bab57b5a1a20451eca1d8bce22d8934498cbe1f50790f6dd2f
9d5a0cab606ce69313bb3e4094a370b8d3856d24b15d355e84c7c481bc80
d07358154d4cee4bac791720fabdb39630005823af359d78acbc47e52e70
c34626a827ae2272bde1c4ecc0359b7e45162ac0> ND 
/e 
<10bf3170599a82aebce2d0d9cd696e2d2232ae83b1d98ff884add96e0282
26fcd2cbd306888649029fbc75f18f771bf21f4d5f53f71cd70d56907fb2
0780ae57f65359db4c49ca929cb86ae96dd2f43742f720ffcefc0d1d3194
c72a55a6bfcf26d975c031741b09b969ea0410af02ae1e13b6c1d337a6b3
96eba6c714d73f9b5d2c2499a66a60f107d1dad4da56ef> ND 
/f 
<10bf317065f8aa629a44bd3be74bbe0cfa1409656d751dcdbb088484a3c9
84e11d0d09aae771e92b3d48596140fc2967fbcf96b4f7694ddca0744e47
fd6ddc298113201938776b254f36f4878baaf6514d0108bde72f2d6fbb4a
d588> ND 
/g 
<10bf317046e845f3c38d9f70ba4464ac4e8fae8096f95866e14c9cfc76d4
2c91caccc55306d31fd922e308e96ee980323125643f9a86a8ffc2b52c12
c5bb9a13190b6aced9365e9c0da3f6e0016fa2ab359e2b06b32a173590b2
6f2094e4e558e81d1aad3b8794a704066a5c48c5835d67bbce791b1965a9
3fbd5fb55f1203033af92c703c31533cbcf30051576e5b8b57eedca25286
866fdee3b16f9555216746cd0cc4065676d353776467694c68063ac58586
fb4e91cf6077ef9d35ed3bc9160721b2f3dee4f8c47777dc722d34059624
2ed759> ND 
/h 
<10bf31702094fda29d7d9038ab4fee8abf76646fa4a846d0367b5a54876e
2a541cfd95f451579a0f7f551e01b191fc14f79b55fcde52e4ccc0995780
32aaa82e4a077ad07b73764d38341b2b10dacc1e6cbb88640d057cabc549
bdb879a152243e5cac38d5f3e0e8b36d8ba3052117b5fa9ab4> ND 
/i 
<10bf317021cc67b2bc312fc6a7ad37016808b8c74342617d801906e8ad23
4c7210637a5c2e2ea339f24d0c> ND 
/k 
<10bf31703cf850293dbeacb4825d9b43eba4ffb09ca8073f22015f91e054
b1f7b181ceef1abb9c955a524d127d186a3d6e0ab18596ed70aada> ND 
/l 
<10bf317021cc67b2bc31c11814793bc69b430b318ded78131a> ND 
/m 
<10bf31703bc84f280bc926798acdec2516269e7061028d385a31d255844f
a27fc6b4cdd6f6ba3dfabbbaadef207eca864f3bc97abd9a4f1b978df039
4779a47e3088a94b9cee6d3b276eef4d4950e88ef4a61f93e0b6cde961dc
7ec12956bd3a56a59704c6c5b5a401c3674bc856b6c34f276e7f1bc3056d
89b4805ca25b43894c427bc43b36554ede70476f7ee25d1a6c03ed9f5e40
5c72135defa96ede67a5a8ef5fea114c19a857db71952cb83f4d11> ND 
/n 
<10bf31702094fda2efce4110428b7f86f5f2073cab682ca78d0dc97da563
e3301b964801f725812f64cb67abc1e242f6d8dcd921f1fbf9e05fee92c3
cf16b5bf6083337a59bf026de7fa548a247b8bde12c672aa0ba0501ccc35
fcca587d7573f11dfc32a2ac31516847d39fb276060c6171da> ND 
/o 
<10bf317041f0d680f4930f6b0672f7536ce2eb70a2366463cc9006c590f6
6bbb22b4a706eff4a93c95880cecbbf82d6e623efa721926a49ba75b71ef
97d0e3d8c35761734c54d6d734cb61cf4c4d7050d90fa115600d26f47050
dfb8739452ed0059ffdca41c137f0b71425a690a4da83dcf8abcf17c206e
c5eff5dd0d7b85b999c37123dfb769cd075b5a162cb33d72426c> ND 
/r 
<10bf31703f93f6c49808fdd8544fecb184adc28a087f99360dbfdf8b0375
9b819135c930698375e13c34125773b22d251f861dc05246608ab0d559df
442670f87f9615eabcaf25ab4b613b44e059b394bfb9> ND 
/s 
<10bf317050d961e87d157c0fe86ec5afecbd608ce0f232c64dcfb1d39b45
2e71b8ca2a92c46173a52c993c8ea0e3a6a97bbca89eebc0e87a68da7dcf
335cb16989a377c8400340e09bb7a3a4fae54003803791fa4d2f5b88afdc
392f17afecc8a037b6118f07b51c97b137676b140e2fba0e4b7ecc574c70
cbfa35d84fd49bc18c067342180503665d383fcdebee907501f8719ff862
5030352810efab946329f109adefea2f39c8182336b9eb95b38d69ca43cf
161d7fb7e8f46433cafa> ND 
/t 
<10bf3170688ce4cb1d2f5bf487137bec8ecb87b4485146ce17824d997ac5
95ab4afb2e80a065a802ee3f010bb37eac91d0f6ed42677aa9dde7e1ad01
769b95b971dec6d1669588801bb2fb04109e79e9771f019783524f2f268e
35dce126a03e55d028a6951cc9b40e649071f577> ND 
/u 
<10bf317022f1ca2cc2a22c3ff97c1232bc55839582d9c5ff7e86bfa4508d
4c6c2a32b8a91c23bc7417819a6d61bb6c4ffa588f9ea417cfc189ff4ca4
86806cfbdc09b2f0ef54b54c53e50d4afcfcb2df030b19aa33138b0a422d
d58054461b41c9166e86f2fb1f6b43052b68dc3202c1cc> ND 
/v 
<10bf3170625c727453162c8fc1a6c3317db0654c8d1cf399154810b2ea75
644b7bf3ca097b70d6244faa15faeaddcd0f234039d4b32fccf18d> ND 
/y 
<10bf317060ff2cd2175fcbd5188f2ead34c280175b68fa58eaeb7ff989f6
0b87f35441d734b6a71e070b5e34de773fbdfd6c4fe3b673d4b7999a1cea
703a048c48b5f433a740261363d7015ad7ad31dd41dc6049fa5a3516c28b
7faaad85929b64ac7256bc9d> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PFPGHD+Arial,Bold findfont /Encoding get
dup 0 /.notdef put
dup 32 /space put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 65 /A put
dup 67 /C put
dup 80 /P put
dup 82 /R put
dup 95 /underscore put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 160 /space put
dup 173 /hyphen put
pop
%%EndResource
[/N15/PFPGHD+Arial,Bold 1 TZ
%%BeginResource: font PFPGGH+Arial
11 dict begin
/FontName /PFPGGH+Arial def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 1320 dict dup begin
/.notdef 
<10bf317005b6d50bd3b903bc9f60e6e804630266f839393d56ae50a85fbe
ffec110deebde9f8a007323688ac> ND 
/zero 
<10bf317047276c49b351d9623648ba231144bc53a0ca0f7137dd26acafd7
a97e034bcb411e070b28033a95585d14cc3049211cd8d6dbdc740e7e557b
8b0bae35a0f458c915f0c42d4639db9a6f5be8ea13662c7ddbf896c5212e
82bb811e04cfd3e7e4c6b33f992c4b804c27926604f71ad62c4caff5ad28
f37dca9db86e540c19061066e9956293f0fe2d5a7761fabb37f03c88ecf7
f39a88f359b0b2fcad10a34d95> ND 
/one 
<10bf317005a6bd48c4a6ac17ff781e4d9d43b0d3b470defa64830ce9e82c
a42843f3746bb6c5816fc2f2acc9616849f0fb06de8ffab0e186> ND 
/two 
<10bf31705ac903dc9a7655fb1cbe16b0c7e0879796676cfad704f90dc700
a86b567dfb510d73e1eda2d25481e3e3d20a511167bf4f5111151f12fb5e
5148b97bc9e8b92f2397a19c4772d4ba061304f4dbf35b8f856430b2bb0f
08d2f25a6aab8461d96e2c6ffa85eccdebf2e249af74bf434f3c62413f00
2a31d30ba682cae0ea90b106d10c83845aabfb8f0d6840476b9cba1b1b33
8d> ND 
/three 
<10bf317047276c49b32f77fc0b1d0c5740dcd2446a925ec070d898870164
1dba6c5defb41d909040a164fdb0a088fefa45fff299b57b0e194251a4a8
b9cf3bc1815fd2c5ba06e651f9d7799098b4541de9c35043282b335f2de1
7def94eec0695fa30f7aaa5574cd9d280a8b4d225396feeeafb4b20c3fcc
9f12e751228b7464328a957a71c1d6fc11ef53a8f692024ab80f5e0d7623
62b42a462a2bf96d5a0db86097e421e5cb8c7d7a0900e6cfd70978f26b60
122332f14359637710d630381bc4f9c629fd5be208af03ab6a69f0ba40b9
a2> ND 
/four 
<10bf31706ae035c09f45a3341524b986c2b652ea6a39cb8af0e0fc5bbd6e
2bc3cdf03d1f50c6012a6a62d7d13e3b061a175eb1dcdf7d528d2a646f> ND 
/five 
<10bf317047276c49b09acfa7bc79efc344047909ce1f733e1cd354b07630
213f625adb3ae8b5aa6a51c1055a59d5f55e13f6cd6e1d9a82c372ef809e
0ee864af865bf5dd5f7dae9a46388470afbd9e2e8c39b7ea4fc9ab800d6e
8ab2edc1e3d36e194904842b1236ff6f70f88f5551621a9fa448c516e732
df410d140d211e3fe0becb6d0a54202b80a6977f> ND 
/six 
<10bf3170435d0d4425184fc061c7faa8dc6add2447c73d0495af3ae4cbe6
71b2a7700f040b5d9fec272a0180dbc9357b9de2d4d226b00cab96cfa6ff
d4525fd5fdbe5aade510cfc7cacabe52b0525986d0147839af70fe53fbd7
f15198bbfd1bae2061f4f49fd71dc08e9970f70083123f8d66b634fb7315
bebd4054f7add22d02ae4b05edbd93dd36100ec8d8de9338fa3376fac047
09884a6568cb1a4a1bc019a4541fd5336bbf3178a330d69e79b2faeff373
c4a7266727a8881d997fda33f08bb656e21f4f69dff5317fad9fb438e4a6
11e7fbf82c> ND 
/seven 
<10bf317048559e9c292b4762aa54ba120b5bb6d9743398f6558de0cda9ce
72c94d95b651df1bda9b63361a928dc3b98c779dfd157220ceb78b8ebeab
638d0f6753cf0f10ef> ND 
/eight 
<10bf317046e8724abd4524a50020e9dc3980c715ec740ae6d67b383e7a21
bbe3be56c8d2784f6ec387931b917e7c302623ca7662f45cd71e99c5e15d
8a11f992831c451f3679822c2af303300e984e0eefcb133e310f6a46109a
9d146b93f55052b2f78ef3224c87d699d722a73d34d859dd1f2bd96bf673
baaddbf695f6c3bf7769f7e07a5e24b82d87f50426587e10e40ded624e17
eff02597ffc635ab9595a4af117c1f6c691cc04f7505cc8cd1a327aaa560
a5ede63a1ca5db943a0e1404d814d511720bef0253fd39fd1556e76c68f9
95550a0b50407412fbd7a8b2eeb8d21996172d225bcaa7fc25ecc9c8768d
c697b0249278711014c6dbcc84d68426> ND 
/nine 
<10bf317047276c49b9c0f950eed45ca9abbead4f9a337d9778d52804f095
e0959c13860a3969943ef1a12c3ee6c45422162d204a6f0d8cdc2d4e75b5
67f1b01796340d6df61e18c819464639606becbe4894a8ef149ed72054cf
28ee583aeb880d27fff9e2fa582b760e67cbad4f844afdb68b34f85c1a95
a0e8285de8ad462405443a57e05fe3bbb3d2281adc779f19070fa98342c5
c2c2ec79e83ff4803e54082ff002fd18e3d25566d6e2d40f56cc659c4866
84f0030ca9d50085195745fdce82f2f52a9ae7ae7227879d15b08026dcde
5aab87db399da6bb3c6e8f68808a93> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/PFPGGH+Arial findfont /Encoding get
dup 0 /.notdef put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
pop
%%EndResource
[/N13/PFPGGH+Arial 1 TZ
false setSA
n
76.08 732.96 458.94 -674.88 re
1 1 1 setrgbcolor
f
1 J
1 j
0.0599976 w
10 M
[] 0 d
n
76.02 58.02 459 674.94 re
0 0 0  setrgbcolor
S
q
n
72 54 467.04 683.04 re
135.72 492.36 65.52 173.94 re
eoclip
n
0 j
0.960007 w
n
100.44 122.7 370.02 583.86 re
0.501999 0.501999 0.501999  setrgbcolor
S
Q
0 j
n
100.44 122.7 m
470.46 122.7 l
470.46 118.02 m
470.46 122.7 l
424.2 118.02 m
424.2 122.7 l
377.94 118.02 m
377.94 122.7 l
331.68 118.02 m
331.68 122.7 l
285.48 118.02 m
285.48 122.7 l
239.22 118.02 m
239.22 122.7 l
192.96 118.02 m
192.96 122.7 l
146.7 118.02 m
146.7 122.7 l
100.44 118.02 m
100.44 122.7 l
470.46 122.7 m
470.46 706.56 l
475.14 122.7 m
470.46 122.7 l
475.14 175.8 m
470.46 175.8 l
475.14 228.84 m
470.46 228.84 l
475.14 281.94 m
470.46 281.94 l
475.14 335.04 m
470.46 335.04 l
475.14 388.08 m
470.46 388.08 l
475.14 441.18 m
470.46 441.18 l
475.14 494.22 m
470.46 494.22 l
475.14 547.32 m
470.46 547.32 l
475.14 600.42 m
470.46 600.42 l
475.14 653.46 m
470.46 653.46 l
475.14 706.56 m
470.46 706.56 l
S
1 j
0.960007 w
n
142.44 127.98 m
353.1 133.32 l
470.46 149.22 l
470.46 653.46 l
0 0 0.501999  setrgbcolor
S
n
452.22 127.98 m
470.46 133.32 l
470.46 653.46 l
1 0 1  setrgbcolor
S
n
463.5 127.98 m
470.46 133.32 l
470.46 653.46 l
1 1 0  setrgbcolor
S
n
143.34 127.98 m
193.02 133.32 l
470.46 149.22 l
470.46 175.8 l
470.04 255.42 l
470.46 388.08 l
470.46 653.46 l
0 1 1  setrgbcolor
S
n
139.92 127.98 m
142.44 130.5 l
144.96 127.98 l
142.44 125.46 l
139.92 127.98 l
h
q
0 0 0.501999  setrgbcolor
eofill
Q
0 0 0.501999  setrgbcolor
S
n
350.58 133.32 m
353.1 135.84 l
355.62 133.32 l
353.1 130.8 l
350.58 133.32 l
h
q
eofill
Q
S
n
467.94 149.22 m
470.46 151.74 l
472.98 149.22 l
470.46 146.7 l
467.94 149.22 l
h
q
eofill
Q
S
n
467.94 175.8 m
470.46 178.32 l
472.98 175.8 l
470.46 173.28 l
467.94 175.8 l
h
q
eofill
Q
S
n
467.94 255.42 m
470.46 257.94 l
472.98 255.42 l
470.46 252.9 l
467.94 255.42 l
h
q
eofill
Q
S
n
467.94 388.08 m
470.46 390.6 l
472.98 388.08 l
470.46 385.56 l
467.94 388.08 l
h
q
eofill
Q
S
n
467.94 653.46 m
470.46 655.98 l
472.98 653.46 l
470.46 650.94 l
467.94 653.46 l
h
q
eofill
Q
S
0 j
n
449.7 125.46 4.97998 4.98 re
q
1 0 1  setrgbcolor
eofill
Q
1 0 1  setrgbcolor
S
n
467.94 130.8 4.97998 4.98 re
q
eofill
Q
S
n
467.94 146.7 4.97998 4.98 re
q
eofill
Q
S
n
467.94 173.28 4.97998 4.98 re
q
eofill
Q
S
n
467.94 252.9 4.97998 4.98001 re
q
eofill
Q
S
n
467.94 385.56 4.97998 4.97998 re
q
eofill
Q
S
n
467.94 650.94 4.97998 4.97998 re
q
eofill
Q
S
1 j
n
460.98 127.98 m
466.02 130.5 l
466.02 125.46 l
460.98 127.98 l
h
q
1 1 0  setrgbcolor
eofill
Q
1 1 0  setrgbcolor
S
n
467.94 133.32 m
472.98 135.84 l
472.98 130.8 l
467.94 133.32 l
h
q
eofill
Q
S
n
467.94 149.22 m
472.98 151.74 l
472.98 146.7 l
467.94 149.22 l
h
q
eofill
Q
S
n
467.94 175.8 m
472.98 178.32 l
472.98 173.28 l
467.94 175.8 l
h
q
eofill
Q
S
n
467.94 255.42 m
472.98 257.94 l
472.98 252.9 l
467.94 255.42 l
h
q
eofill
Q
S
n
467.94 388.08 m
472.98 390.6 l
472.98 385.56 l
467.94 388.08 l
h
q
eofill
Q
S
n
467.94 653.46 m
472.98 655.98 l
472.98 650.94 l
467.94 653.46 l
h
q
eofill
Q
S
n
143.34 127.98 m
140.82 125.46 l
143.34 127.98 m
145.86 130.5 l
143.34 127.98 m
145.86 125.46 l
143.34 127.98 m
140.82 130.5 l
193.02 133.32 m
190.5 130.8 l
193.02 133.32 m
195.54 135.84 l
193.02 133.32 m
195.54 130.8 l
193.02 133.32 m
190.5 135.84 l
470.46 149.22 m
467.94 146.7 l
0 1 1  setrgbcolor
S
q
n
469.92 148.68 3.06 3.66 re
W
n
n
470.46 149.22 m
472.98 151.74 l
S
Q
q
n
469.92 146.16 3.06 3.66 re
W
n
n
470.46 149.22 m
472.98 146.7 l
S
Q
n
470.46 149.22 m
467.94 151.74 l
470.46 175.8 m
467.94 173.28 l
S
q
n
469.92 175.26 3.06 3.66 re
W
n
n
470.46 175.8 m
472.98 178.32 l
S
Q
q
n
469.92 172.74 3.06 3.66 re
W
n
n
470.46 175.8 m
472.98 173.28 l
S
Q
n
470.46 175.8 m
467.94 178.32 l
470.04 255.42 m
467.52 252.9 l
S
q
n
469.5 254.88 3.47998 3.66 re
W
n
n
470.04 255.42 m
472.56 257.94 l
S
Q
q
n
469.5 252.36 3.47998 3.66002 re
W
n
n
470.04 255.42 m
472.56 252.9 l
S
Q
n
470.04 255.42 m
467.52 257.94 l
470.46 388.08 m
467.94 385.56 l
S
q
n
469.92 387.54 3.06 3.66 re
W
n
n
470.46 388.08 m
472.98 390.6 l
S
Q
q
n
469.92 385.02 3.06 3.66 re
W
n
n
470.46 388.08 m
472.98 385.56 l
S
Q
n
470.46 388.08 m
467.94 390.6 l
470.46 653.46 m
467.94 650.94 l
S
q
n
469.92 652.92 3.06 3.65997 re
W
n
n
470.46 653.46 m
472.98 655.98 l
S
Q
q
n
469.92 650.4 3.06 3.66003 re
W
n
n
470.46 653.46 m
472.98 650.94 l
S
Q
n
470.46 653.46 m
467.94 655.98 l
S
0 0 0  setrgbcolor
475.44 102.72 m
/N13 [0 15.24 -15.24 0 0 0] Tf
(0) show
429.18 102.72 m
(2) show
382.921 102.72 m
(4) show
336.661 102.72 m
(6) show
290.461 102.72 m
(8) show
244.202 94.2603 m
(10) show
197.942 94.2603 m
(12) show
151.683 94.2603 m
(14) show
105.423 94.2603 m
(16) show
497.284 118.501 m
(0)
[48.8382 ] pdfys
(1) show
(0)
[44.5985 ] pdfys
(2) show
(0)
[44.5985 ] pdfys
(3) show
(0)
[44.5985 ] pdfys
(4) show
(0)
[44.5985 ] pdfys
(5) show
(0)
[44.5985 ] pdfys
(6) show
(0)
[44.5985 ] pdfys
(7) show
(0)
[44.5985 ] pdfys
(8) show
(0)
[44.5985 ] pdfys
(9) show
(0)
[40.3617 ] pdfys
(10) show
(0)
[36.1464 ] pdfys
(11) show
(0) show
527.463 330.48 m
/N15 [0 15.24 -15.24 0 0 0] Tf
(est_cycle interval \(ms\)) show
427.44 75.84 m
/N15 -15.24 Tf
(Running) show
( )
[-4.26253 ] pdfxs
(time) show
( )
[-4.26253 ] pdfxs
(overhead) show
( )
[-4.26253 ] pdfxs
(of) show
( )
[-4.26253 ] pdfxs
(Cilk-AP) show
( )
[-4.26253 ] pdfxs
(\(%\)) show
n
135.78 666.24 65.46 -173.82 re
1 1 1  setrgbcolor
f
0.0599976 w
n
135.72 492.36 65.52 173.88 re
0 0 0  setrgbcolor
S
0.960007 w
n
143.82 495.78 m
143.82 515.76 l
0 0 0.501999  setrgbcolor
S
n
141.3 505.74 m
143.82 508.26 l
146.34 505.74 l
143.82 503.22 l
141.3 505.74 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
147.42 518.16 m
/N17 [0 12 -12 0 0 0] Tf
(fib\(33\)) show
n
160.2 495.78 m
160.2 515.76 l
1 0 1  setrgbcolor
S
0 j
n
157.68 503.22 4.98 4.98001 re
q
eofill
Q
S
0 0 0  setrgbcolor
163.8 518.16 m
(pfloop\(64\)) show
1 j
n
176.58 495.78 m
176.58 515.76 l
1 1 0  setrgbcolor
S
n
174.06 505.74 m
179.1 508.26 l
179.1 503.22 l
174.06 505.74 l
h
q
eofill
Q
S
0 0 0  setrgbcolor
180.18 518.16 m
(cholesky\(2048,10000\)) show
n
192.96 495.78 m
192.96 515.76 l
192.96 505.74 m
190.44 503.22 l
192.96 505.74 m
195.48 508.26 l
192.96 505.74 m
195.48 503.22 l
192.96 505.74 m
190.44 508.26 l
0 1 1  setrgbcolor
S
0 0 0  setrgbcolor
196.56 518.16 m
(knary\(10,6,1\)) show
0.0599976 w
n
76.02 58.02 459 674.94 re
S
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2000 37478 a Fn(Figure)390 b(7-5:)506 b
Fm(The)339 b(running)h(time)e(o)-34 b(v)g(erhead)340
b(of)f(the)g(Cilk-AP)f(system)h(for)g(di\256eren)-34
b(t)339 b(jobs,)352 b(expressed)2000 38983 y(as)404 b(a)g(p)34
b(ercen)-34 b(tage)404 b(of)h(the)f(corresp)34 b(onding)405
b(running)g(time)f(using)g(Cilk.)p 2000 50850 48139 45
v 9458 52455 45 1606 v 16938 52455 V 19214 51973 a Fy(Cilk)p
23795 52455 V 29765 52455 V 36513 52455 V 16081 w(Cilk-AP)p
43369 52455 V 9458 54060 V 16938 54060 V 17625 53578
a(\(w/)434 b(allo)36 b(c.)p 23795 54060 V 29765 54060
V 7300 w(Ov)-36 b(erhead)p 36513 54060 V 1328 w(\(w/)434
b(allo)36 b(c.)p 43369 54060 V 1330 w(Ov)-36 b(erhead)2664
55183 y(Job)434 b(1)p 9458 55665 V 4355 w(Job)g(2)p 16938
55665 V 5530 w(limit\))p 23795 55665 V 2503 w(Cilk-AP)p
29765 55665 V 2991 w(\(\045\))p 36513 55665 V 4164 w(limit\))p
43369 55665 V 4165 w(\(\045\))p 2000 55709 48139 45 v
2000 55930 V 2664 57054 a Fp(loopy\(16\))p 9458 57536
45 1606 v 1324 w(loopy\(16\))p 16938 57536 V 3890 w Fy(9.035)p
23795 57536 V 3009 w(12.31)p 29765 57536 V 3787 w(36.26)p
36513 57536 V 3895 w(8.984)p 43369 57536 V 6099 w(0)2664
58659 y Fp(loopy\(32\))p 9458 59141 V 1324 w(loopy\(32\))p
16938 59141 V 3890 w Fy(17.83)p 23795 59141 V 3009 w(19.70)p
29765 59141 V 3787 w(10.47)p 36513 59141 V 3895 w(17.83)p
43369 59141 V 2486 w(0.01528)2664 60264 y Fp(loopy\(64\))p
9458 60746 V 1324 w(loopy\(64\))p 16938 60746 V 3890
w Fy(36.21)p 23795 60746 V 3009 w(37.68)p 29765 60746
V 3787 w(4.078)p 36513 60746 V 3895 w(35.81)p 43369 60746
V 6099 w(0)p 2000 60790 48139 45 v 2000 64288 a Fn(Figure)537
b(7-6:)664 b Fm(The)468 b(o)-34 b(v)g(erhead)467 b(of)g(pro)34
b(cess)466 b(con)-34 b(trol)468 b(when)f(the)h(n)-34
b(um)g(b)34 b(er)468 b(of)f(w)-34 b(ork)g(ers)467 b(in)g(the)g(system)
2000 65794 y(exceeds)416 b Fl(P)586 b Fm(\(=)358 b(16)417
b(in)g(the)g(ab)34 b(o)-34 b(v)g(e)418 b(exp)34 b(erimen)-34
b(ts\).)577 b(Eac)-34 b(h)417 b(time)g(represen)-34 b(ts)418
b(the)f(mean)g(resp)34 b(onse)417 b(time)2000 67299 y(of)404
b(jobs)h(1)g(and)f(2)h(in)f(seconds.)25350 75321 y Fy(68)p
eop end
%%Page: 69 69
TeXDict begin 69 68 bop 4445 2555 43110 45 v 17110 4160
45 1606 v 23284 3679 a Fu(t)368 b Fy(=)h(0)p 32282 4160
V 11563 w Fu(t)g Fy(=)f Fu(T)145 b(=)p Fy(2)p 17132 4205
30423 45 v 5110 5284 a(Metric)p 17110 5766 45 1606 v
9501 w(Cilk)p 21858 5766 V 1866 w(Cilk-AP)p 27829 5766
V 1329 w(Ratio)p 32282 5766 V 1865 w(Cilk)p 37030 5766
V 1905 w(Cilk-AP)p 43079 5766 V 1368 w(Ratio)p 4445 5810
43110 45 v 4445 6031 V 5110 7155 a(Mean)433 b(resp)36
b(onse)433 b(time)p 17110 7636 45 1606 v 1610 w(4)p Fu(T)145
b(=)p Fy(3)p 21858 7636 V 2502 w(3)p Fu(T)g(=)p Fy(2)p
27829 7636 V 2383 w(1.125)p 32282 7636 V 1611 w(7)p Fu(T)g(=)p
Fy(6)p 37030 7636 V 2542 w(5)p Fu(T)g(=)p Fy(4)p 43079
7636 V 2423 w(1.071)5943 8760 y Fd(\(sec\))p 17110 9241
V 21858 9241 V 27829 9241 V 32282 9241 V 37030 9241 V
43079 9241 V 5110 10365 a Fy(Throughput)p 17110 10847
V 6084 w(3)p Fu(=)p Fy(2)p Fu(T)p 21858 10847 V 2972
w Fy(2)p Fu(=T)p 27829 10847 V 2871 w Fy(1.333)p 32282
10847 V 1593 w(3)p Fu(=)p Fy(2)p Fu(T)p 37030 10847 V
2362 w Fy(12)p Fu(=)p Fy(7)p Fu(T)p 43079 10847 V 2261
w Fy(1.143)5943 11970 y Fd(\(jobs/sec\))p 17110 12452
V 21858 12452 V 27829 12452 V 32282 12452 V 37030 12452
V 43079 12452 V 5110 13575 a Fy(P)-36 b(o)g(w)g(er)p
17110 14057 V 9237 w(9)p Fu(=)p Fy(8)p Fu(T)20690 13093
y Ft(2)p 21858 14057 V 23156 13575 a Fy(4)p Fu(=)p Fy(3)p
Fu(T)26049 13093 y Ft(2)p 27829 14057 V 28677 13575 a
Fy(1.185)p 32282 14057 V 1330 w(9)p Fu(=)p Fy(7)p Fu(T)35861
13093 y Ft(2)p 37030 14057 V 37717 13575 a Fy(48)p Fu(=)p
Fy(35)p Fu(T)41910 13093 y Ft(2)p 43079 14057 V 43928
13575 a Fy(1.067)5943 15180 y Fd(\(jobs/sec)10290 14779
y Fc(2)10788 15180 y Fd(\))p 17110 15662 V 21858 15662
V 27829 15662 V 32282 15662 V 37030 15662 V 43079 15662
V 4445 15706 43110 45 v 2000 19205 a Fn(Figure)313 b(7-7:)472
b Fm(Theoretical)271 b(v)-67 b(alues)271 b(for)h(the)g(mean)g(resp)34
b(onse)271 b(time,)298 b(throughput,)i(and)273 b(p)34
b(o)-34 b(w)g(er)272 b(ac)-34 b(hiev)g(ed)2000 20710
y(b)g(y)353 b(the)g(Cilk)f(and)h(Cilk-AP)f(systems)h(in)g(scenario)f
(\(a\))h(of)g(Figure)g(2-1.)521 b(The)353 b(ratio)f(of)h(Cilk-AP)f(to)h
(Cilk)2000 22215 y(is)404 b(sho)-34 b(wn)406 b(for)e(eac)-34
b(h)404 b(metric.)p 3641 28389 44718 45 v 16306 29994
45 1606 v 22901 29513 a Fu(t)369 b Fy(=)f(0)p 32321 29994
V 12368 w Fu(t)g Fy(=)h Fu(T)145 b(=)p Fy(2)p 16328 30038
32031 45 v 4305 31118 a(Metric)p 16306 31599 45 1606
v 9924 w(Cilk)p 21898 31599 V 2287 w(Cilk-AP)p 27868
31599 V 1329 w(Ratio)p 32321 31599 V 2287 w(Cilk)p 37913
31599 V 2287 w(Cilk-AP)p 43883 31599 V 1330 w(Ratio)p
3641 31643 44718 45 v 3641 31865 V 4305 32988 a(Mean)434
b(resp)36 b(onse)433 b(time)p 16306 33470 45 1606 v 2629
w(21.10)p 21898 33470 V 3009 w(23.26)p 27868 33470 V
1493 w(1.102)p 32321 33470 V 2630 w(18.48)p 37913 33470
V 3010 w(19.76)p 43883 33470 V 1492 w(1.069)5139 34593
y Fd(\(sec\))p 16306 35075 V 21898 35075 V 27868 35075
V 32321 35075 V 37913 35075 V 43883 35075 V 4305 36199
a Fy(Throughput)p 16306 36680 V 5821 w(0.09450)p 21898
36680 V 2360 w(0.1291)p 27868 36680 V 1493 w(1.366)p
32321 36680 V 1330 w(0.09450)p 37913 36680 V 2359 w(0.1022)p
43883 36680 V 1493 w(1.082)5139 37804 y Fd(\(jobs/sec\))p
16306 38285 V 21898 38285 V 27868 38285 V 32321 38285
V 37913 38285 V 43883 38285 V 4305 39409 a Fy(P)-36 b(o)g(w)g(er)p
16306 39890 V 10538 w(4.478)p 21898 39890 V 3009 w(5.550)p
27868 39890 V 1493 w(1.239)p 32321 39890 V 2630 w(5.115)p
37913 39890 V 3010 w(5.175)p 43883 39890 V 1492 w(1.012)5139
41014 y Fd(\()p Fb(\243)p Fd(10)7536 40612 y Fa(\241)p
Fc(3)9095 41014 y Fd(jobs/sec)13012 40612 y Fc(2)13509
41014 y Fd(\))p 16306 41495 V 21898 41495 V 27868 41495
V 32321 41495 V 37913 41495 V 43883 41495 V 3641 41540
44718 45 v 2000 45038 a Fn(Figure)671 b(7-8:)896 b Fm(Exp)34
b(erimen)-34 b(tal)583 b(v)-67 b(alues)582 b(for)h(the)h(mean)f(resp)34
b(onse)583 b(time,)627 b(throughput,)j(and)584 b(p)34
b(o)-34 b(w)g(er)2000 46544 y(ac)g(hiev)g(ed)409 b(b)-34
b(y)409 b(the)g(Cilk)f(and)i(Cilk-AP)e(systems)h(in)g(scenario)f(\(a\))
i(of)f(Figure)g(2-1.)552 b(The)410 b(ratio)e(of)h(Cilk-)2000
48049 y(AP)364 b(to)h(Cilk)g(is)f(sho)-34 b(wn)366 b(for)f(eac)-34
b(h)365 b(metric.)524 b(Three)365 b(instances)g(of)459
b Fe(fib\(38\))367 b Fm(are)d(used)h(to)g(represen)-34
b(t)365 b(jobs)2000 49554 y(A,)404 b(B,)f(and)i(C.)p
12909 55964 26183 45 v 13573 57087 a Fy(Metric)p 25574
57569 45 1606 v 9345 w(Cilk)p 30009 57569 V 3254 w(Cilk-AP)p
12909 57613 26183 45 v 12909 57834 V 13573 58958 a(Mean)433
b(resp)36 b(onse)433 b(time)p 25574 59440 45 1606 v 1473
w(31.33)p 30009 59440 V 6100 w(22.12)14406 60563 y Fd(\(sec\))p
25574 61045 V 30009 61045 V 13573 61151 1020 54 v 13573
62218 a Fu(P)614 b Fy(\(Job)434 b(A,)g(Job)f(B\))p 25574
62700 45 1655 v 2583 w(\(8,)h(8\))p 30009 62700 V 1328
w(\(8.275,)i(9.756\))p 12909 62744 26183 45 v 2000 66242
a Fn(Figure)398 b(7-9:)510 b Fm(The)346 b(mean)g(resp)34
b(onse)346 b(time)g(and)h(pro)34 b(cessor)345 b(usage)h(of)h(the)f
(Cilk)g(and)g(Cilk-AP)g(systems)2000 67748 y(in)559 b(scenario)g(\(b\))
h(of)g(Figure)f(2-1.)1004 b(The)559 b Fe(knary)i Fm(program)e(is)g
(used)h(to)g(implemen)-34 b(t)559 b(the)h(serial)e(and)2000
69253 y(parallel)403 b(phases)i(of)f(jobs)h(A)g(and)f(B.)25350
75321 y Fy(69)p eop end
%%Page: 70 70
TeXDict begin 70 69 bop 2000 26012 48162 45 v 16977 27617
45 1606 v 21268 27617 V 27510 27617 V 31801 27617 V 39448
27617 V 40134 27135 a Fy(Cilk-AP)p 45418 27617 V 1851
w(Cilk)2664 28790 y(Job)p 16977 29358 45 1742 v 13796
w Fu(T)19263 28989 y Ft(1)p 21268 29358 V 23532 28790
a Fu(T)24294 28989 y Fq(1)p 27510 29358 V 29168 27723
1020 54 v 29168 28790 a Fu(P)p 31801 29358 45 1742 v
2481 w(T)33249 28989 y Ft(1)33776 28790 y Fu(=)p 34426
27723 1020 54 v(P)476 b Fy(+)295 b Fu(T)37809 28989 y
Fq(1)p 39448 29358 45 1742 v 41478 28790 a Fy(\()p Fu(T)181
b Fy(\))p 45418 29358 V 2671 w(\()p Fu(T)47372 29137
y Fq(d)p 47790 28412 728 40 v Fr(P)131 b Fq(e)48991 28790
y Fy(\))p 2000 29403 48162 45 v 2000 29624 V 2664 30747
a Fp(knary\(11,3,3\))p 16977 31229 45 1606 v 6107 w Fy(7.669)p
21268 31229 V 3281 w(4.187)p 27510 31229 V 1330 w(3.732)p
31801 31229 V 4686 w(6.242)p 39448 31229 V 3009 w(11.37)p
45418 31229 V 1760 w(10.85)2664 32353 y Fp(knary\(11,4,0\))p
16977 32834 V 6107 w Fy(122.6)p 21268 32834 V 1330 w(0.001212)p
27510 32834 V 1331 w(15.02)p 31801 32834 V 4686 w(8.164)p
39448 32834 V 3009 w(8.704)p 45418 32834 V 1760 w(8.166)2664
33958 y Fp(knary\(10,4,2\))p 16977 34439 V 6107 w Fy(35.60)p
21268 34439 V 3281 w(1.442)p 27510 34439 V 1330 w(11.49)p
31801 34439 V 4686 w(4.540)p 39448 34439 V 3009 w(8.617)p
45418 34439 V 1760 w(8.580)2664 35563 y Fp(strassen\(1024\))p
16977 36044 V 5423 w Fy(10.77)p 21268 36044 V 3281 w(2.582)p
27510 36044 V 1330 w(6.784)p 31801 36044 V 4686 w(4.170)p
39448 36044 V 3009 w(3.450)p 45418 36044 V 1760 w(3.906)2664
37168 y Fp(pfloop\(64\))p 16977 37649 V 8159 w Fy(279.2)p
21268 37649 V 3281 w(4.366)p 27510 37649 V 1330 w(15.82)p
31801 37649 V 4686 w(22.01)p 39448 37649 V 3009 w(18.55)p
45418 37649 V 1760 w(18.49)2664 38773 y Fp(fib\(33\))p
16977 39254 V 10211 w Fy(208.2)p 21268 39254 V 1981 w(0.00704)p
27510 39254 V 1330 w(15.60)p 31801 39254 V 4686 w(13.35)p
39448 39254 V 3009 w(18.99)p 45418 39254 V 1760 w(18.93)2664
40378 y Fp(cholesky\(2048,10000\))p 16977 40860 V 1319
w Fy(448.4)p 21268 40860 V 2631 w(0.8224)p 27510 40860
V 1330 w(14.45)p 31801 40860 V 4686 w(31.85)p 39448 40860
V 3009 w(43.74)p 45418 40860 V 1760 w(45.49)p 2000 40904
48162 45 v 2000 44402 a Fn(Figure)379 b(7-10:)501 b Fm(The)329
b(running)h(times)f(of)h(di\256eren)-34 b(t)329 b(jobs)h(using)g(the)f
(Cilk-AP)f(system,)344 b(compared)329 b(here)2000 45908
y(to)404 b(the)h(greedy-sc)-34 b(heduling)404 b(b)34
b(ound)406 b(in)e(Theorem)g(3.)539 b(All)403 b(times)h(are)g(in)g
(seconds.)25350 75321 y Fy(70)p eop end
%%Page: 71 71
TeXDict begin 71 70 bop 2000 10282 a Fw(Chapter)1033
b(8)2000 15915 y(Related)f(W)-258 b(ork)2000 22046 y
Fy(The)397 b(problem)f(of)h(sc)-36 b(heduling)396 b(adaptiv)-36
b(ely)397 b(parallel)h(jobs)f(on)f(m)-36 b(ultiprogrammed)396
b(parallel)i(sys-)2000 23651 y(tems)552 b(has)h(b)36
b(een)551 b(studied)h(extensiv)-36 b(ely)554 b(in)e(the)g(past.)935
b(In)552 b(this)g(c)-36 b(hapter,)582 b(w)-36 b(e)552
b(highligh)-36 b(t)553 b(some)2000 25256 y(of)466 b(this)f(w)-36
b(ork)467 b(in)e(the)g(con)-36 b(text)465 b(of)h(the)f(Cilk-AP)h
(system.)675 b(F)-108 b(or)465 b(a)g(thorough)g(treatmen)-36
b(t)465 b(of)h(job)2000 26861 y(sc)-36 b(heduling)410
b(in)g(m)-36 b(ultiprogrammed)409 b(parallel)i(systems,)416
b(the)410 b(reader)f(is)i(directed)e(to)i(F)-108 b(eitelson's)2000
28466 y(surv)-36 b(ey)319 b([17].)542 b(A)319 b(more)g(recen)-36
b(t)319 b(rep)36 b(ort)318 b(has)i(also)g(b)36 b(een)318
b(written)h(b)-36 b(y)319 b(F)-108 b(eitelson)319 b(and)g(Rudolph)f
([18].)2000 30071 y(F)-108 b(or)474 b(bac)-36 b(kground)474
b(on)g(the)g(concept)g(of)h(w)-36 b(ork)475 b(stealing,)486
b(the)474 b(reader)g(is)g(referred)g(to)h(Blumofe's)2000
31677 y(PhD)433 b(thesis)h([4].)3951 33380 y(Dynamic)603
b(pro)36 b(cessor-allo)g(cation)604 b(systems)e(are)h(sp)36
b(eci\257cally)603 b(designed)f(with)g(adaptiv)-36 b(ely)2000
34985 y(parallel)599 b(jobs)f(in)f(mind.)1070 b(The)597
b(term)g(\\adaptiv)-36 b(e)599 b(parallelism")g(itself)f(seems)g(to)g
(ha)-36 b(v)g(e)598 b(b)36 b(een)2000 36590 y(coined)553
b(b)-36 b(y)553 b(the)f(designers)h(of)h(Piranha)f([11,)242
b(12],)584 b(a)553 b(dynamic)h(pro)36 b(cessor)553 b(allo)36
b(cation)555 b(system)2000 38195 y(based)442 b(on)h(the)f(Linda)g
(programming)g(mo)36 b(del)443 b([13].)607 b(Piranha)442
b(is)h(considered)f(to)g(b)36 b(e)443 b(one)f(of)i(the)2000
39800 y(\257rst)486 b(real)g(implemen)-36 b(tations)486
b(of)h(dynamic)g(partitioning)f(on)g(a)h(parallel)g(mac)-36
b(hine)486 b([17].)738 b(Most)2000 41405 y(dynamic)555
b(allo)36 b(cation)557 b(systems)e(in)g(the)f(past)h(ha)-36
b(v)g(e)555 b(used)f(the)h(instan)-36 b(taneous)554 b(parallelism)i(of)
2000 43010 y(a)507 b(job|usually)f(determined)g(b)-36
b(y)506 b(the)g(n)-36 b(um)g(b)36 b(er)504 b(of)j(threads)f(that)g(are)
g(ready)h(to)f(execute|to)2000 44615 y(estimate)411 b(the)f(job's)h
(pro)36 b(cessor)411 b(desire.)571 b(W)-108 b(e)410 b(ha)-36
b(v)g(e)411 b(sho)-36 b(wn)411 b(in)f(Section)g(4.2)i(that)e(this)g
(approac)-36 b(h)2000 46220 y(is)545 b(inheren)-36 b(tly)545
b(inaccurate)g(for)g(a)g(large)h(class)g(of)f(parallel)h(programs.)913
b(Nguy)-36 b(en)545 b(et.)912 b(al.)h(use)2000 47826
y(run)-36 b(time)390 b(measuremen)-36 b(ts)391 b(of)h(e\261ciency)f
(and/or)h(sp)36 b(eedup)390 b(to)h(tune)f(a)i(job's)g(allotmen)-36
b(t)391 b([36,)131 b(37],)2000 49431 y(while)462 b(others)e(study)h
(the)f(e\256ect)h(of)h(using)f(v)-72 b(arious)461 b(application)h(c)-36
b(haracteristics)461 b(to)g(in\260uence)2000 51036 y(allo)36
b(cation)605 b(decisions)f([9,)272 b(14,)g(27,)g(29,)g(42,)g(44,)g
(45].)1089 b(These)604 b(systems)g(are)g(either)f(impractical,)2000
52641 y(b)36 b(ecause)547 b(they)f(assume)h(that)g(application)g(c)-36
b(haracteristics)547 b(are)g(pro)-36 b(vided)547 b(to)g(the)f(sc)-36
b(heduler)2000 54246 y(b)36 b(eforehand,)495 b(or)483
b(based)f(solely)i(on)f(recen)-36 b(t)482 b(measures)g(of)h(a)g(job's)h
(p)36 b(erformance.)726 b(In)482 b(con)-36 b(trast,)2000
55851 y(the)469 b(Cilk-AP)h(system)g(uses)f(a)g(p)36
b(olicy)471 b(that)e(proactiv)-36 b(ely)470 b(explores)g(the)f(future)g
(parallelism)h(of)2000 57456 y(a)434 b(job,)g(and)f(requires)h(no)f
Fg(a)465 b(priori)433 b Fy(information)i(ab)36 b(out)433
b(the)g(job.)3951 59159 y(F)-108 b(or)428 b(the)f(sp)36
b(eci\257c)428 b(case)h(of)g(w)-36 b(ork-stealing)429
b(jobs,)h(little)e(w)-36 b(ork)429 b(has)f(b)36 b(een)428
b(done)f(to)i(analyzing)2000 60764 y(their)514 b(p)36
b(erformance)515 b(in)f(m)-36 b(ultiprogrammed)514 b(en)-36
b(vironmen)g(ts.)820 b(The)515 b(w)-36 b(ork-stealing)515
b(algorithm)2000 62369 y(presen)-36 b(ted)585 b(b)-36
b(y)586 b(Blumofe)h(and)f(Leiserson)h([7],)626 b(algorithm)587
b(WS,)g(is)f(sim)-36 b(ultaneously)587 b(e\261cien)-36
b(t)2000 63975 y(with)563 b(resp)36 b(ect)562 b(to)h(time,)595
b(space,)g(and)562 b(comm)-36 b(unication,)596 b(but)561
b(assumes)i(that)f(the)g(n)-36 b(um)g(b)36 b(er)561 b(of)2000
65580 y(pro)36 b(cessors)369 b(used)f(to)g(execute)h(a)g(m)-36
b(ultithreaded)367 b(computation)h(is)h(\257xed.)557
b(As)368 b(a)h(result,)381 b(an)-36 b(y)369 b(im-)2000
67185 y(plemen)-36 b(tations)440 b(of)h(this)f(algorithm,)j(suc)-36
b(h)440 b(as)h(the)f(Cilk)i(system)e([5,)173 b(19,)g(47],)446
b(can)440 b(only)h(b)36 b(e)441 b(used)2000 68790 y(with)550
b(a)h(static)g(pro)36 b(cessor-allo)g(cation)551 b(p)36
b(olicy)552 b(in)e(a)h(t)-36 b(w)g(o-lev)g(el)551 b(sc)-36
b(heduling)549 b(en)-36 b(vironmen)g(t.)928 b(In)2000
70395 y(more)334 b(recen)-36 b(t)334 b(w)-36 b(ork,)355
b(Arora)334 b(et.)545 b(al.)335 b([2])h(presen)-36 b(t)333
b(a)h(non)-36 b(blo)36 b(c)-36 b(king)335 b(implemen)-36
b(tation)333 b(of)i(algorithm)2000 72000 y(WS)517 b(that)f(runs)g
(e\261cien)-36 b(tly)517 b(on)g(a)h(v)-72 b(ariable)517
b(n)-36 b(um)g(b)36 b(er)516 b(of)h(pro)36 b(cessors,)539
b(making)517 b(it)g(suitable)g(for)25350 75321 y(71)p
eop end
%%Page: 72 72
TeXDict begin 72 71 bop 2000 1328 a Fy(use)406 b(with)g(a)g(dynamic)g
(allo)36 b(cation)408 b(p)36 b(olicy)-108 b(.)570 b(Giv)-36
b(en)406 b(a)g(m)-36 b(ultithreaded)405 b(computation)g(with)h(w)-36
b(ork)2000 2933 y Fu(T)2762 3132 y Ft(1)3668 2933 y Fy(and)380
b(critical-path)g(length)g Fu(T)18144 3132 y Fq(1)19141
2933 y Fy(,)391 b(and)380 b(for)h(an)-36 b(y)380 b(n)-36
b(um)g(b)36 b(er)379 b Fu(P)561 b Fy(of)381 b(pro)36
b(cesses,)392 b(their)380 b(non)-36 b(blo)36 b(c)-36
b(king)2000 4539 y(w)g(ork)399 b(stealer)f(executes)g(the)g
(computation)f(in)h(exp)36 b(ected)398 b(time)g Fu(O)36
b Fy(\()p Fu(T)36219 4738 y Ft(1)36745 4539 y Fu(=P)38233
4738 y Fr(A)39216 4539 y Fy(+)222 b Fu(T)41212 4738 y
Fq(1)42208 4539 y Fu(P)108 b(=P)44642 4738 y Fr(A)45404
4539 y Fy(\),)405 b(where)2000 6144 y Fu(P)2838 6343
y Fr(A)4165 6144 y Fy(is)567 b(the)f(a)-36 b(v)g(erage)567
b(n)-36 b(um)g(b)36 b(er)565 b(of)j(pro)36 b(cessors)566
b(allo)36 b(cated)568 b(to)f(the)f(computation.)976 b(The)567
b(di\256er-)2000 7749 y(ence)518 b(b)36 b(et)-36 b(w)g(een)519
b(this)f(algorithm)h(and)f(WSAP)h(is)g(that)f(the)g(n)-36
b(um)g(b)36 b(er)517 b(of)j(pro)36 b(cesses)519 b(in)f(WSAP)2000
9354 y(alw)-36 b(a)g(ys)426 b(matc)-36 b(hes)424 b(the)g(n)-36
b(um)g(b)36 b(er)423 b(of)i(ph)-36 b(ysical)424 b(pro)36
b(cessors)425 b(allo)36 b(cated)426 b(to)e(the)g(computation.)575
b(W)-108 b(e)2000 10959 y(in)-36 b(v)g(estigate)434 b(the)f(p)36
b(erformance)434 b(of)g(WSAP)g(and)f(the)g(Cilk-AP)i(system)e(in)h
(future)f(w)-36 b(ork.)3951 12564 y(P)g(art)412 b(of)i(the)e(w)-36
b(ork)413 b(presen)-36 b(ted)411 b(in)i(this)f(thesis)h(is)g(based)f
(on)g(previous)h(\(unpublished\))d(w)-36 b(ork)2000 14169
y(b)g(y)509 b(Bin)g(Song,)528 b(Rob)36 b(ert)508 b(Blumofe,)529
b(and)508 b(Charles)i(Leiserson)f(of)g(the)g(Sup)36 b(ercomputing)507
b(T)-108 b(ec)-36 b(h-)2000 15774 y(nologies)415 b(Group)e(at)i(MIT.)g
(Song)f(et.)571 b(al.)i(sho)-36 b(w)414 b(that)g(if)h(a)f(Cilk)i(job)e
(running)f(on)i Fu(P)595 b Fy(pro)36 b(cessors)2000 17379
y(sp)g(ends)483 b(a)i(substan)-36 b(tial)483 b(fraction)i(of)g(its)f
(time)h(stealing,)497 b(then)484 b Fu(P)665 b Fy(is)484
b(bigger)h(than)e(the)h(a)-36 b(v)g(erage)2000 18984
y(parallelism)538 b(of)f(the)f(computation.)887 b(If)537
b(the)f(job)g(only)h(sp)36 b(ends)536 b(a)h(small)g(fraction)g(of)g
(its)g(time)2000 20589 y(stealing,)458 b(then)452 b Fu(P)633
b Fy(is)453 b(smaller)g(than)f(the)f(a)-36 b(v)g(erage)454
b(parallelism.)636 b(This)453 b(claim)g(is)g(justi\257ed)f(b)36
b(oth)2000 22195 y(theoretically)542 b(and)e(empirically)i(in)f(their)g
(w)-36 b(ork,)568 b(and)541 b(forms)g(part)f(of)i(the)e(in)-36
b(tuition)540 b(b)36 b(ehind)2000 23800 y(using)433 b(steal-attempts)g
(statistics)i(in)e(the)g(desire-estimation)g(pro)36 b(cess)434
b(of)g(Cilk-AP)-108 b(.)25350 75321 y(72)p eop end
%%Page: 73 73
TeXDict begin 73 72 bop 2000 10279 a Fw(Chapter)1033
b(9)2000 15909 y(Conclusion)2000 22037 y Fy(This)412
b(thesis)f(has)g(presen)-36 b(ted)410 b(the)h(theoretical)h
(foundation,)j(design)d(and)f(implemen)-36 b(tation)411
b(of)h(a)2000 23642 y(t)-36 b(w)g(o-lev)g(el)481 b(sc)-36
b(heduling)479 b(system)h(for)g(adaptiv)-36 b(ely)481
b(parallel)g(w)-36 b(ork-stealing)481 b(jobs.)717 b(The)480
b(Cilk-AP)2000 25247 y(system)510 b(uses)g(dynamic)g(partitioning)g
(\(algorithm)h(DP\))e(in)h(the)g(\257rst)f(lev)-36 b(el)511
b(of)g(sc)-36 b(heduling)509 b(to)2000 26852 y(allo)36
b(cate)394 b(pro)36 b(cessors)392 b(to)h(jobs)g(in)f(a)g(fair,)402
b(e\261cien)-36 b(t,)401 b(and)391 b(conserv)-72 b(ativ)-36
b(e)394 b(manner.)563 b(In)393 b(the)e(second)2000 28457
y(lev)-36 b(el)549 b(of)g(sc)-36 b(heduling,)576 b(Cilk-AP)548
b(uses)g(a)g(randomized)g(w)-36 b(ork-stealing)549 b(algorithm)f
(\(algorithm)2000 30062 y(WSAP\))444 b(to)h(sc)-36 b(hedule)444
b(a)h(job's)h(computation,)h(sub)72 b(ject)445 b(to)f(these)h(c)-36
b(hanging)444 b(allo)36 b(cations.)614 b(The)2000 31667
y(Cilk-AP)470 b(sc)-36 b(heduler)467 b(estimates)j(the)e(pro)36
b(cessor)469 b(desire)g(of)g(a)g(job)g(using)g(a)g(p)36
b(olicy)470 b(that)e(proac-)2000 33272 y(tiv)-36 b(ely)495
b(explores)g(the)f(job's)h(\\future")f(parallelism.)761
b(W)-108 b(e)494 b(ha)-36 b(v)g(e)494 b(sho)-36 b(wn)494
b(through)f(the)h(LOOPY)2000 34877 y(b)36 b(enc)-36 b(hmark)425
b(that)g(p)36 b(olicies)427 b(that)e(directly)h(measure)f(the)g(instan)
-36 b(taneous)425 b(parallelism)i(of)f(a)g(job)2000 36482
y(are)574 b(inheren)-36 b(tly)572 b(inaccurate.)998 b(These)573
b(p)36 b(olicies)575 b(grossly)g(underestimate)d(the)h(a)-36
b(v)g(erage)574 b(paral-)2000 38087 y(lelism)503 b(of)f(a)g(job)g(for)g
(a)h(large)f(class)h(of)f(programs.)783 b(The)502 b(information)g(used)
f(b)-36 b(y)502 b(the)f(Cilk-AP)2000 39693 y(sc)-36 b(heduler)486
b(to)g(estimate)h(a)g(job's)g(desire)g(is)g(pro)-36 b(vided)486
b(b)-36 b(y)487 b(algorithm)g(WSAP)f(at)h(virtually)h(no)2000
41298 y(additional)480 b(cost.)717 b(By)480 b(relying)g(solely)h(on)e
(steal-attempt)g(statistics,)492 b(w)-36 b(e)480 b(guaran)-36
b(tee)479 b(that)h(the)2000 42903 y(o)-36 b(v)g(erhead)457
b(incurred)f(b)-36 b(y)458 b(the)f(desire)g(estimation)h(pro)36
b(cess)457 b(is)h(b)36 b(orne)456 b(b)-36 b(y)458 b(the)f(critical)h
(path)e(and)2000 44508 y(prop)36 b(ortional)434 b(to)g(the)f
(ine\261ciency)h(of)g(the)f(job,)h(th)-36 b(us)433 b(satisfying)i(the)e
(w)-36 b(ork-\257rst)433 b(principle.)3951 46208 y(As)348
b(a)f(consequence)h(of)g(our)f(design)h(c)-36 b(hoices,)365
b(the)347 b(implemen)-36 b(tation)347 b(of)h(the)f(Cilk-AP)i(system)
2000 47813 y(requires)314 b(only)g(a)g(few)h(extensions)f(to)f(the)h
(curren)-36 b(t)312 b(implemen)-36 b(tation)313 b(of)i(Cilk.)540
b(Cilk-AP)314 b(uses)g(the)2000 49418 y(pro)36 b(cess)332
b(con)-36 b(trol)333 b(tec)-36 b(hnique)332 b(to)g(manage)h(the)f
(global)i(allo)36 b(cation)334 b(in)e(user)g(space.)545
b(By)333 b(lev)-36 b(eraging)2000 51023 y(existing)577
b(mec)-36 b(hanisms)576 b(of)h(Cilk)g(and)f(relying)h(only)g(on)f
(standard)f(UNIX)i(mec)-36 b(hanisms,)612 b(the)2000
52628 y(Cilk-AP)566 b(system)g(upholds)e(the)g(three)h(ma)72
b(jor)566 b(design)f(goals)i(of)f(the)e(Cilk)j(implemen)-36
b(tation:)2000 54233 y(simplicit)g(y)-108 b(,)480 b(minimal)471
b(w)-36 b(ork)471 b(o)-36 b(v)g(erhead,)480 b(and)469
b(p)36 b(ortabilit)-36 b(y)-108 b(.)689 b(A)-36 b(t)470
b(presen)-36 b(t,)479 b(all)471 b(jobs)f(in)g(the)g(Cilk-)2000
55838 y(AP)316 b(system)g(are)g(Cilk)i(jobs,)340 b(whic)-36
b(h)315 b(simpli\257es)h(issues)g(lik)-36 b(e)317 b(securit)-36
b(y)316 b(and)g(trust)f(b)36 b(et)-36 b(w)g(een)315 b(the)h(job)2000
57444 y(sc)-36 b(hedulers,)404 b(at)397 b(the)g(cost)g(of)h(limiting)g
(the)e(system's)i(scop)36 b(e.)567 b(W)-108 b(e)397 b(consider)g(w)-36
b(a)g(ys)398 b(to)f(generalize)2000 59049 y(the)445 b(Cilk-AP)h
(system,)k(and)445 b(other)g(extensions)h(to)f(the)g(curren)-36
b(t)444 b(design,)449 b(in)d(our)f(discussion)g(of)2000
60654 y(future)433 b(w)-36 b(ork)434 b(b)36 b(elo)-36
b(w.)2000 65676 y FC(F)-179 b(uture)715 b(W)-179 b(ork)2000
68790 y Fy(This)612 b(thesis)f(is)h(the)f(result)g(of)h(ongoing)g
(researc)-36 b(h)611 b(b)-36 b(y)612 b(the)e(Sup)36 b(ercomputing)610
b(T)-108 b(ec)-36 b(hnologies)2000 70395 y(Group)381
b(at)h(MIT.)h(As)f(suc)-36 b(h,)392 b(parts)382 b(of)h(the)e(w)-36
b(ork)383 b(presen)-36 b(ted)381 b(here)g(are)i(p)36
b(ending)381 b(further)g(in)-36 b(v)g(esti-)2000 72000
y(gation)332 b(and)e(study)-108 b(.)544 b(In)331 b(this)g(section,)352
b(w)-36 b(e)331 b(discuss)g(these)g(areas)g(and)g(directions)g(for)h
(future)e(w)-36 b(ork)25350 75321 y(73)p eop end
%%Page: 74 74
TeXDict begin 74 73 bop 2000 1328 a Fy(in)536 b(the)f(con)-36
b(text)536 b(of)g(the)g(Cilk-AP)g(system.)886 b(W)-108
b(e)536 b(b)36 b(egin)536 b(with)f(areas)i(p)36 b(ertaining)535
b(to)h(the)g(\257rst)2000 2933 y(lev)-36 b(el)416 b(of)g(sc)-36
b(heduling,)418 b(and)d(then)f(discuss)g(areas)i(p)36
b(ertaining)415 b(to)g(the)f(second)h(lev)-36 b(el.)573
b(Finally)-108 b(,)420 b(w)-36 b(e)2000 4539 y(describ)36
b(e)433 b(some)h(exp)36 b(erimen)-36 b(ts)433 b(that)g(can)h(b)36
b(e)433 b(done)h(to)f(extend)g(\(and)g(strengthen\))f(our)i(results.)
3951 6153 y(The)360 b(Cilk-AP)g(system)g(uses)f(algorithm)h(WSAP)g(to)f
(sc)-36 b(hedule)359 b(a)h(job's)g(computation)f(in)h(the)2000
7758 y(second)381 b(lev)-36 b(el)383 b(of)g(sc)-36 b(heduling.)560
b(W)-108 b(e)382 b(ha)-36 b(v)g(e)382 b(describ)36 b(ed)381
b(WSAP)g(in)h(the)f(con)-36 b(text)382 b(of)g(an)g(adv)-36
b(ersarial)2000 9363 y(mo)36 b(del,)457 b(but)450 b(ha)-36
b(v)g(e)452 b(not)f(pro)-36 b(vided)451 b(a)h(theoretical)g(analysis)h
(of)g(its)e(p)36 b(erformance;)461 b(this)452 b(analysis)2000
10968 y(is)463 b(part)g(of)g(our)g(curren)-36 b(t)461
b(researc)-36 b(h.)667 b(Lik)-36 b(e)463 b(algorithm)g(WS,)g(our)g
(goal)h(is)g(to)f(sho)-36 b(w)463 b(that)f(WSAP)2000
12574 y(ac)-36 b(hiev)g(es)386 b(pro)-36 b(v)-72 b(ably)386
b(go)36 b(o)g(d)386 b(time,)395 b(space,)h(and)385 b(comm)-36
b(unication)385 b(b)36 b(ounds.)561 b(The)386 b(nature)e(of)i(these)
2000 14179 y(b)36 b(ounds)432 b(is)i(unclear)g(to)f(us)h(at)f(this)h
(time.)3951 15793 y(W)-108 b(e)385 b(are)h(also)h(exploring)f
(di\256eren)-36 b(t)384 b(extensions)i(and)f(impro)-36
b(v)g(emen)g(ts)385 b(to)h(the)f(desire)g(estima-)2000
17398 y(tion)518 b(pro)36 b(cess)518 b(of)g(Cilk-AP)-108
b(.)519 b(One)e(idea)i(is)f(to)g(incorp)36 b(orate)518
b(the)f(history)h(of)h(a)f(job's)h(pro)36 b(cessor)2000
19003 y(usage)561 b(when)g(estimating)g(its)g(curren)-36
b(t)559 b(desire,)593 b(giving)562 b(more)f(w)-36 b(eigh)g(t)561
b(to)g(past)g(usage)g(trends)2000 20608 y(than)535 b(to)h(curren)-36
b(t)534 b(demands.)884 b(This)536 b(tec)-36 b(hnique)535
b(is)h(particularly)h(useful)e(for)i(mo)36 b(derating)536
b(the)2000 22214 y(e\256ect)468 b(of)g(short-liv)-36
b(ed)468 b(bursts)e(or)i(drops)f(in)h(a)g(job's)h(parallelism.)682
b(Another)467 b(idea)h(is)g(to)g(imple-)2000 23819 y(men)-36
b(t)471 b(a)i(mec)-36 b(hanism)472 b(for)g(detecting)g(whether)g(or)g
(not)g(a)h(w)-36 b(ork)g(er)472 b(is)h(blo)36 b(c)-36
b(k)g(ed)472 b(on)g(I/O,)h(similar)2000 25424 y(to)444
b(the)f(mec)-36 b(hanism)443 b(used)g(b)-36 b(y)444 b(McCann)f(et.)609
b(al.)g(in)444 b(their)f(dynamic)h(pro)36 b(cessor)444
b(allo)36 b(cator)445 b([33].)2000 27029 y(If)391 b(a)f(w)-36
b(ork)g(er)391 b(of)f(a)h(job)f(is)h(blo)36 b(c)-36 b(k)g(ed,)399
b(then)389 b(it)h(can)g(b)36 b(e)390 b(safely)i(discoun)-36
b(ted)389 b(from)h(the)g(job's)g(curren)-36 b(t)2000
28634 y(usage.)3951 30249 y(The)440 b(Cilk-AP)h(system)f(uses)g
(algorithm)g(DP)g(to)g(allo)36 b(cate)442 b(pro)36 b(cessors)440
b(to)g(jobs)h(in)e(the)h(\257rst)2000 31854 y(lev)-36
b(el)617 b(of)g(sc)-36 b(heduling.)1125 b(DP)616 b(uses)g(a)g(strict)g
(notion)g(of)h(fairness)g(that)f(do)36 b(es)616 b(not)g(distinguish)
2000 33459 y(b)36 b(et)-36 b(w)g(een)495 b(jobs.)764
b(In)495 b(practice,)511 b(it)495 b(ma)-36 b(y)496 b(b)36
b(e)495 b(useful)g(to)h(implemen)-36 b(t)495 b(a)g(priorit)-36
b(y)496 b(sc)-36 b(heme)495 b(for)h(dis-)2000 35064 y(tinguishing)501
b(b)36 b(et)-36 b(w)g(een)502 b(di\256eren)-36 b(t)500
b(jobs)i(\(or)g(users)f(of)h(jobs\).)783 b(A)502 b(job's)g(priorit)-36
b(y)502 b(can)g(b)36 b(e)501 b(set)h(b)-36 b(y)2000 36669
y(the)460 b(user,)467 b(and)460 b(the)g(user's)g(priorit)-36
b(y)461 b(can)g(b)36 b(e)460 b(set)g(b)-36 b(y)461 b(the)f
(administrator)g(of)h(the)f(mac)-36 b(hine,)467 b(for)2000
38274 y(example.)952 b(Alternativ)-36 b(ely)-108 b(,)591
b(the)557 b(priorit)-36 b(y)558 b(of)h(the)f(job)g(can)g(b)36
b(e)558 b(determined)f(b)-36 b(y)558 b(the)f(Cilk-AP)2000
39879 y(system)624 b(itself,)673 b(based)624 b(on)g(run)-36
b(time)623 b(c)-36 b(haracteristics)625 b(or)f(prop)36
b(erties)624 b(of)g(the)g(job.)1150 b(The)624 b(dy-)2000
41484 y(namic)461 b(pro)36 b(cessor)461 b(allo)36 b(cator)463
b(designed)d(b)-36 b(y)461 b(McCann)f(et.)660 b(al.)462
b([33])g(uses)f(an)g(adaptiv)-36 b(e)461 b(priorit)-36
b(y)2000 43089 y(mec)g(hanism)414 b(that)f(increases)i(the)f(priorit)
-36 b(y)414 b(of)h(jobs)f(using)g(few)-36 b(er)415 b(pro)36
b(cessors)415 b(than)e(the)h(system)2000 44694 y(equipartition,)488
b(and)476 b(lo)-36 b(w)g(ers)477 b(the)f(priorit)-36
b(y)477 b(of)g(jobs)g(using)f(more)h(than)e(the)h(system)h(equiparti-)
2000 46299 y(tion.)556 b(The)368 b(allo)36 b(cator)368
b(uses)f(a)h(job's)g(priorit)-36 b(y)367 b(to)h(determine)e(whic)-36
b(h)367 b(pro)36 b(cessors)368 b(it)f(can)g(preempt)2000
47905 y(on)516 b(the)f(job's)h(b)36 b(ehalf|for)517 b(example,)537
b(a)516 b(lo)-36 b(w)g(er)517 b(priorit)-36 b(y)516 b(job)g(can)g(nev)
-36 b(er)515 b(cause)h(the)f(preemp-)2000 49510 y(tion)461
b(of)i(a)e(pro)36 b(cessor)462 b(from)g(a)g(higher)f(priorit)-36
b(y)462 b(job.)662 b(Once)461 b(a)h(priorit)-36 b(y)461
b(sc)-36 b(heme)461 b(is)h(established)2000 51115 y(for)445
b(Cilk-AP)-108 b(,)445 b(the)e(\257rst-lev)-36 b(el)444
b(sc)-36 b(heduler)443 b(can)h(b)36 b(e)444 b(mo)36 b(di\257ed)444
b(in)g(a)g(similar)h(manner)e(to)i(use)e(this)2000 52720
y(information)434 b(when)f(reallo)36 b(cating)436 b(pro)36
b(cessors)434 b(b)36 b(et)-36 b(w)g(een)433 b(jobs.)3951
54334 y(Instead)363 b(of)i(implemen)-36 b(ting)363 b(its)h(o)-36
b(wn)363 b(priorit)-36 b(y)364 b(sc)-36 b(heme,)378 b(the)363
b(Cilk-AP)h(system)g(can)g(lev)-36 b(erage)2000 55940
y(existing)560 b(priorit)-36 b(y)560 b(mec)-36 b(hanisms)559
b(if)i(w)-36 b(e)560 b(mo)-36 b(v)g(e)560 b(the)f(\257rst-lev)-36
b(el)559 b(sc)-36 b(heduler)558 b(in)-36 b(to)560 b(k)-36
b(ernel)560 b(space.)2000 57545 y(Although)j(this)h(strategy)g(reduces)
g(the)f(p)36 b(ortabilit)-36 b(y)564 b(of)h(the)e(system,)597
b(it)564 b(extends)f(the)h(scop)36 b(e)2000 59150 y(of)505
b(Cilk-AP)g(to)f(all)h(t)-36 b(yp)36 b(es)504 b(of)h(jobs,)523
b(not)503 b(just)h(Cilk)i(jobs.)790 b(As)505 b(w)-36
b(e)504 b(noted)g(in)g(Section)g(6.1,)523 b(the)2000
60755 y(disadv)-72 b(an)-36 b(tages)471 b(of)g(a)g(k)-36
b(ernel-lev)g(el)471 b(implemen)-36 b(tation)470 b(include)g(the)g
(comm)-36 b(unication)470 b(o)-36 b(v)g(erhead)2000 62360
y(b)36 b(et)-36 b(w)g(een)480 b(the)g(\257rst)f(and)h(second)g(lev)-36
b(els)482 b(of)f(sc)-36 b(heduling)480 b(and)g(the)g(issue)g(of)h
(trust)f(b)36 b(et)-36 b(w)g(een)480 b(the)2000 63965
y(t)-36 b(w)g(o)362 b(lev)-36 b(els.)556 b(W)-108 b(e)362
b(are)g(curren)-36 b(tly)361 b(exploring)i(these)e(issues,)377
b(as)362 b(w)-36 b(ell)363 b(as)g(other)e(w)-36 b(a)g(ys)363
b(to)f(generalize)2000 65570 y(the)433 b(Cilk-AP)i(system.)3951
67185 y(A)428 b(more)h(immediate)f(problem)g(in)g(the)g(\257rst)g(lev)
-36 b(el)429 b(of)g(sc)-36 b(heduling)428 b(is)g(the)g(p)36
b(oten)-36 b(tial)429 b(for)g(the)2000 68790 y(GA)-108
b(T)419 b(to)h(b)36 b(ecome)420 b(a)g(hot)g(sp)36 b(ot,)422
b(esp)36 b(ecially)422 b(on)d(systems)h(with)g(a)g(large)h(n)-36
b(um)g(b)36 b(er)418 b(of)i(pro)36 b(cessors.)2000 70395
y(One)408 b(solution)h(to)f(this)h(problem)f(is)h(to)g(use)f(a)h
(separate,)414 b(dedicated)408 b(pro)36 b(cessor)409
b(to)f(p)36 b(erio)g(dically)2000 72000 y(up)g(date)609
b(the)g(allotmen)-36 b(ts)610 b(in)g(the)f(GA)-108 b(T,)610
b(relieving)h(the)e(individual)h(job)g(sc)-36 b(hedulers)609
b(of)h(this)25350 75321 y(74)p eop end
%%Page: 75 75
TeXDict begin 75 74 bop 2000 1328 a Fy(resp)36 b(onsibilit)-36
b(y)-108 b(.)750 b(If)491 b(the)g(up)36 b(dates)489 b(are)i(made)g
(frequen)-36 b(tly)491 b(enough,)505 b(w)-36 b(e)491
b(exp)36 b(ect)491 b(the)f(allo)36 b(cation)2000 2933
y(to)458 b(b)36 b(e)457 b(as)h(resp)36 b(onsiv)-36 b(e)458
b(to)g(c)-36 b(hanges)458 b(in)f(job)h(desires)g(as)g(the)f(curren)-36
b(t)456 b(system)i(is)h(\(at)e(the)g(cost)h(of)2000 4539
y(dedicating)434 b(a)f(separate)h(pro)36 b(cessor)434
b(for)g(this)f(role\).)3951 6144 y(Finally)-108 b(,)529
b(there)508 b(are)h(sev)-36 b(eral)510 b(exp)36 b(erimen)-36
b(ts)509 b(that)f(w)-36 b(e)510 b(are)f(planning)g(to)g(do)g(to)g
(extend)f(our)2000 7749 y(results)613 b(from)i(Chapter)e(7.)1119
b(First,)659 b(w)-36 b(e)614 b(are)g(considering)g(an)f(alternativ)-36
b(e)615 b(w)-36 b(a)g(y)614 b(to)g(measure)2000 9354
y(the)498 b(o)-36 b(v)g(erhead)498 b(of)h(the)e(Cilk-AP)i(system,)515
b(using)498 b(the)g(amoun)-36 b(t)497 b(of)i(w)-36 b(ork)499
b(p)36 b(erformed)498 b(b)-36 b(y)498 b(a)h(job)2000
10959 y(b)36 b(efore)501 b(all)h(pro)36 b(cessors)501
b(get)g(w)-36 b(ork)501 b(on)g(their)f(dequeus)g(\(instead)g(of)i
(measuring)e(the)h(time)f(this)2000 12564 y(pro)36 b(cess)466
b(tak)-36 b(es\).)678 b(By)467 b(rep)36 b(eating)466
b(this)g(exp)36 b(erimen)-36 b(t)466 b(for)h(di\256eren)-36
b(t)465 b(v)-72 b(alues)467 b(of)g Fu(P)181 b Fy(,)475
b(w)-36 b(e)467 b(can)f(mak)-36 b(e)2000 14169 y(a)430
b(general)g(statemen)-36 b(t)429 b(ab)36 b(out)429 b(the)g(startup)g(o)
-36 b(v)g(erhead)430 b(of)g(our)f(system)h(in)g(terms)f(of)h(the)f
(size)h(of)2000 15774 y(the)365 b(mac)-36 b(hine)365
b(and)g(the)g(v)-72 b(alue)366 b(of)458 b Fp(est)p 20762
15774 411 45 v 491 w(cycle)p Fy(.)553 b(This)366 b(o)-36
b(v)g(erhead)366 b(determines)e(the)h(minim)-36 b(um)365
b(job)2000 17379 y(size)386 b(for)g(whic)-36 b(h)386
b(it)f(is)h(adv)-72 b(an)-36 b(tageous)386 b(to)g(use)f(our)g(system.)
563 b(A)386 b(similar)g(statemen)-36 b(t)385 b(can)h(b)36
b(e)385 b(made)2000 18984 y(ab)36 b(out)419 b(the)g(optimal)h(v)-72
b(alue)420 b(of)513 b Fp(est)p 19728 18984 V 491 w(cycle)417
b Fy(in)i(terms)g(of)i(the)d(mac)-36 b(hine)420 b(size,)j(b)-36
b(y)419 b(rep)36 b(eating)420 b(the)2000 20589 y(second)579
b(o)-36 b(v)g(erhead)579 b(exp)36 b(erimen)-36 b(t)578
b(for)i(di\256eren)-36 b(t)578 b(v)-72 b(alues)579 b(of)h
Fu(P)181 b Fy(.)1015 b(T)-108 b(ogether,)616 b(these)578
b(results)h(can)2000 22195 y(mak)-36 b(e)508 b(a)f(strong)g(case)h(for)
g(the)e(scalabilit)-36 b(y)509 b(and)e(p)36 b(erformance)507
b(of)h(Cilk-AP)g(on)f(an)-36 b(y)507 b(mac)-36 b(hine)2000
23800 y(size.)625 b(As)449 b(a)g(\257nal)g(note,)j(w)-36
b(e)450 b(plan)e(to)h(test)g(the)f(Cilk-AP)i(system)f(on)g(real-w)-36
b(orld)449 b(applications,)2000 25405 y(suc)-36 b(h)433
b(as)h(protein)f(folding)h(and)f(ra)-36 b(y)434 b(tracing,)g(to)g
(further)f(reinforce)h(these)f(results.)25350 75321 y(75)p
eop end
%%Page: 76 76
TeXDict begin 76 75 bop 25350 75321 a Fy(76)p eop end
%%Page: 77 77
TeXDict begin 77 76 bop 2000 10268 a Fw(Bibliograph)-86
b(y)2650 16384 y Fy([1])652 b(Thomas)513 b(E.)g(Anderson,)533
b(Brian)513 b(N.)g(Bershad,)533 b(Edw)-36 b(ard)512 b(D.)i(Lazo)-36
b(wsk)-72 b(a,)534 b(and)513 b(Henry)g(M.)4674 17989
y(Levy)-108 b(.)562 b(Sc)-36 b(heduler)424 b(activ)-72
b(ations:)575 b(E\256ectiv)-36 b(e)425 b(k)-36 b(ernel)425
b(supp)36 b(ort)423 b(for)i(user-lev)-36 b(el)425 b(managemen)-36
b(t)4674 19594 y(of)412 b(parallelism.)544 b Fg(A)-33
b(CM)444 b(T)-100 b(r)-66 b(ansactions)444 b(on)h(Computer)g(Systems)p
Fy(,)417 b(10\(1\):53{79,)i(F)-108 b(ebruary)4674 21199
y(1992.)2650 24329 y([2])652 b(Nimar)488 b(S.)f(Arora,)502
b(Rob)36 b(ert)488 b(D.)g(Blumofe,)502 b(and)487 b(C.)i(Greg)e
(Plaxton.)739 b(Thread)488 b(sc)-36 b(heduling)4674 25934
y(for)459 b(m)-36 b(ultiprogrammed)458 b(m)-36 b(ultipro)36
b(cessors.)651 b(In)459 b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)485
b(of)i(the)h(10th)g(A)-33 b(CM)487 b(Symp)-66 b(o-)4674
27539 y(sium)473 b(on)g(Par)-66 b(al)66 b(lel)474 b(A)-33
b(lgorithms)473 b(and)g(A)-33 b(r)-66 b(chite)g(ctur)g(es)p
Fy(,)442 b(pages)i(119{129,)j(Puerto)c(V)-108 b(allarta,)4674
29144 y(Mexico,)434 b(June)f(1998.)2650 32274 y([3])652
b(Mic)-36 b(hael)454 b(A.)f(Bender)g(and)g(Mic)-36 b(hael)454
b(O.)g(Rabin.)636 b(Sc)-36 b(heduling)453 b(Cilk)i(m)-36
b(ultithreaded)452 b(com-)4674 33879 y(putations)602
b(on)i(pro)36 b(cessors)603 b(of)h(di\256eren)-36 b(t)603
b(sp)36 b(eeds.)1082 b(In)603 b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)618
b(of)j(the)g(12th)g(A)-33 b(CM)4674 35485 y(Symp)-66
b(osium)461 b(on)h(Par)-66 b(al)66 b(lel)463 b(A)-33
b(lgorithms)460 b(and)j(A)-33 b(r)-66 b(chite)g(ctur)g(es)p
Fy(,)428 b(pages)j(13{21,)i(Bar)e(Harb)36 b(or,)4674
37090 y(Maine,)434 b(United)f(States,)g(July)h(2000.)2650
40219 y([4])652 b(Rob)36 b(ert)580 b(D.)h(Blumofe.)1016
b Fg(Exe)-66 b(cuting)599 b(Multithr)-66 b(e)g(ade)g(d)598
b(Pr)-66 b(o)g(gr)g(ams)599 b(E\261ciently)p Fy(.)1014
b(PhD)580 b(the-)4674 41825 y(sis,)411 b(Departmen)-36
b(t)403 b(of)i(Electrical)h(Engineering)e(and)g(Computer)g(Science,)411
b(Massac)-36 b(h)g(usetts)4674 43430 y(Institute)432
b(of)j(T)-108 b(ec)-36 b(hnology)-108 b(,)434 b(Cam)-36
b(bridge,)434 b(Massac)-36 b(h)g(usetts,)433 b(Septem)-36
b(b)36 b(er)432 b(1995.)2650 46560 y([5])652 b(Rob)36
b(ert)616 b(D.)i(Blumofe,)663 b(Christopher)616 b(F.)h(Jo)36
b(erg,)664 b(Bradley)617 b(C.)h(Kuszmaul,)662 b(Charles)618
b(E.)4674 48165 y(Leiserson,)562 b(Keith)536 b(H.)g(Randall,)563
b(and)535 b(Y)-108 b(uli)536 b(Zhou.)882 b(Cilk:)785
b(An)536 b(e\261cien)-36 b(t)535 b(m)-36 b(ultithreaded)4674
49770 y(run)g(time)574 b(system.)1000 b Fg(Journal)596
b(of)f(Par)-66 b(al)66 b(lel)596 b(and)f(Distribute)-66
b(d)594 b(Computing)p Fy(,)610 b(37\(1\):55{69,)4674
51375 y(August)433 b(25)h(1996.)2650 54505 y([6])652
b(Rob)36 b(ert)356 b(D.)h(Blumofe)g(and)f(Charles)h(E.)g(Leiserson.)451
b(Space-e\261cien)-36 b(t)356 b(sc)-36 b(heduling)355
b(of)j(m)-36 b(ulti-)4674 56110 y(threaded)440 b(computations.)602
b Fg(SIAM)471 b(Journal)i(on)g(Computing)p Fy(,)443 b(27\(1\):202{229,)
448 b(F)-108 b(ebruary)4674 57715 y(1998.)2650 60845
y([7])652 b(Rob)36 b(ert)409 b(D.)h(Blumofe)g(and)e(Charles)i(E.)g
(Leiserson.)537 b(Sc)-36 b(heduling)408 b(m)-36 b(ultithreaded)408
b(compu-)4674 62450 y(tations)433 b(b)-36 b(y)434 b(w)-36
b(ork)434 b(stealing.)578 b Fg(Journal)465 b(of)g(the)f(A)-33
b(CM)p Fy(,)433 b(46\(5\):720{748,)k(Septem)-36 b(b)36
b(er)432 b(1999.)2650 65580 y([8])652 b(Timoth)-36 b(y)347
b(B.)g(Brec)-36 b(h)g(t.)434 b(An)346 b(exp)36 b(erimen)-36
b(tal)347 b(ev)-72 b(aluation)348 b(of)f(pro)36 b(cessor)347
b(p)36 b(o)g(ol-based)346 b(sc)-36 b(hedul-)4674 67185
y(ing)442 b(for)h(shared-memory)f(NUMA)g(m)-36 b(ultipro)36
b(cessors.)604 b(In)442 b(Dror)g(G.)h(F)-108 b(eitelson)442
b(and)g(Larry)4674 68790 y(Rudolph,)631 b(editors,)g
Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)608 b(of)i(the)g(3r)-66
b(d)611 b(Workshop)g(on)f(Job)h(Sche)-66 b(duling)609
b(Str)-66 b(ate-)4674 70395 y(gies)610 b(for)h(Par)-66
b(al)66 b(lel)611 b(Pr)-66 b(o)g(c)g(essing)p Fy(,)631
b(pages)593 b(139{165,)635 b(Genev)-72 b(a,)632 b(Switzerland,)h(April)
592 b(1997.)4674 72000 y(Springer-V)-108 b(erlag.)576
b(Lecture)432 b(Notes)i(in)g(Computer)f(Science)g(V)-108
b(ol.)434 b(1291.)25350 75321 y(77)p eop end
%%Page: 78 78
TeXDict begin 78 77 bop 2650 1328 a Fy([9])652 b(Timoth)-36
b(y)371 b(B.)g(Brec)-36 b(h)g(t)371 b(and)f(Kaushik)i(Guha.)473
b(Using)372 b(parallel)g(program)f(c)-36 b(haracteristics)371
b(in)4674 2933 y(dynamic)318 b(pro)36 b(cessor)319 b(allo)36
b(cation)320 b(p)36 b(olicies.)390 b Fg(Performanc)-66
b(e)358 b(Evaluation)p Fy(,)341 b(27)319 b(&)f(28:519{539,)4674
4539 y(Octob)36 b(er)433 b(1996.)2000 7576 y([10])652
b(Ric)-36 b(hard)635 b(P)-108 b(.)636 b(Bren)-36 b(t.)1179
b(The)636 b(parallel)h(ev)-72 b(aluation)637 b(of)g(general)f
(arithmetic)g(expressions.)4674 9181 y Fg(Journal)465
b(of)g(the)f(A)-33 b(CM)p Fy(,)433 b(21\(2\):201{206,)k(April)d(1974.)
2000 12218 y([11])652 b(Nic)-36 b(holas)439 b(Carriero,)h(Eric)f(F)-108
b(reeman,)439 b(and)e(Da)-36 b(vid)439 b(Gelern)-36 b(ter.)590
b(Adaptiv)-36 b(e)439 b(parallelism)g(on)4674 13823 y(m)-36
b(ultipro)36 b(cessors:)520 b(Preliminary)319 b(exp)36
b(erience)318 b(with)g(Piranha)f(on)h(the)f(CM-5.)389
b(In)317 b(U.)i(Baner-)4674 15428 y(jee,)673 b(D.)625
b(Gelern)-36 b(ter,)672 b(A.)624 b(Nicolau,)674 b(and)624
b(D.)h(P)-36 b(adua,)673 b(editors,)f Fg(Pr)-66 b(o)g(c)g(e)g(e)g
(dings)638 b(of)i(the)g(6th)4674 17033 y(A)-33 b(nnual)552
b(Workshop)i(on)f(L)-66 b(anguages)553 b(and)g(Compilers)g(for)h(Par)
-66 b(al)66 b(lel)554 b(Computing)p Fy(,)f(pages)4674
18638 y(139{151,)436 b(P)-36 b(ortland,)433 b(Oregon,)h(United)f
(States,)g(August)g(1993.)i(Springer-V)-108 b(erlag.)2000
21675 y([12])652 b(Nic)-36 b(holas)422 b(Carriero,)j(Eric)d(F)-108
b(reeman,)423 b(Da)-36 b(vid)423 b(Gelern)-36 b(ter,)423
b(and)e(Da)-36 b(vid)423 b(Kaminsky)-108 b(.)558 b(Adap-)4674
23280 y(tiv)-36 b(e)434 b(parallelism)g(and)g(Piranha.)576
b Fg(IEEE)466 b(Computer)p Fy(,)433 b(28\(1\):40{49,)k(Jan)-36
b(uary)433 b(1995.)2000 26318 y([13])652 b(Nic)-36 b(holas)513
b(Carriero)g(and)f(Da)-36 b(vid)513 b(Gelern)-36 b(ter.)810
b(Linda)512 b(in)g(con)-36 b(text.)811 b Fg(Communic)-66
b(ations)535 b(of)4674 27923 y(the)464 b(A)-33 b(CM)p
Fy(,)433 b(32\(4\):444{458,)k(April)d(1989.)2000 30960
y([14])652 b(Su-Hui)594 b(Chiang,)638 b(Ra)72 b(jesh)596
b(K.)h(Mansharamani,)637 b(and)595 b(Mary)h(K.)h(V)-108
b(ernon.)1060 b(Use)596 b(of)h(ap-)4674 32565 y(plication)558
b(c)-36 b(haracteristics)559 b(and)f(limited)g(preemption)f(for)i
(run-to-completion)e(parallel)4674 34170 y(pro)36 b(cessor)530
b(sc)-36 b(heduling)529 b(p)36 b(olicies.)866 b(In)530
b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)551 b(of)j(the)f(1994)h(A)-33
b(CM)553 b(SIGMETRICS)4674 35775 y(Confer)-66 b(enc)g(e)531
b(on)i(Me)-66 b(asur)g(ement)533 b(and)h(Mo)-66 b(deling)532
b(of)i(Computer)g(Systems)p Fy(,)527 b(pages)509 b(33{44,)4674
37380 y(Nash)-36 b(ville,)435 b(T)-108 b(ennessee,)433
b(United)g(States,)h(Ma)-36 b(y)434 b(1994.)2000 40417
y([15])652 b(Su-Hui)369 b(Chiang)i(and)g(Mary)g(K.)g(V)-108
b(ernon.)474 b(Dynamic)372 b(vs.)g(static)f(quan)-36
b(tum-based)369 b(parallel)4674 42022 y(pro)36 b(cessor)442
b(allo)36 b(cation.)604 b(In)442 b(Dror)g(G.)g(F)-108
b(eitelson)442 b(and)g(Larry)g(Rudolph,)i(editors,)g
Fg(Pr)-66 b(o)g(c)g(e)g(e)g(d-)4674 43628 y(ings)521
b(of)g(the)g(2nd)h(Workshop)g(on)g(Job)f(Sche)-66 b(duling)521
b(Str)-66 b(ate)g(gies)519 b(for)i(Par)-66 b(al)66 b(lel)522
b(Pr)-66 b(o)g(c)g(essing)p Fy(,)4674 45233 y(pages)579
b(200{223,)618 b(Honolulu,)d(Ha)-36 b(w)g(aii,)617 b(United)579
b(States,)615 b(April)579 b(1996.)i(Springer-V)-108 b(erlag.)4674
46838 y(Lecture)432 b(Notes)i(in)g(Computer)f(Science)g(V)-108
b(ol.)434 b(1162.)2000 49875 y([16])652 b(Allen)612 b(B.)g(Do)-36
b(wney)-108 b(.)1109 b(Using)612 b(queue)f(time)h(predictions)g(for)g
(pro)36 b(cessor)612 b(allo)36 b(cation.)1110 b(In)4674
51480 y(Dror)621 b(G.)f(F)-108 b(eitelson)621 b(and)f(Larry)h(Rudolph,)
667 b(editors,)h Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)634
b(of)j(the)g(3r)-66 b(d)637 b(Work-)4674 53085 y(shop)476
b(on)f(Job)g(Sche)-66 b(duling)474 b(Str)-66 b(ate)g(gies)473
b(for)i(Par)-66 b(al)66 b(lel)476 b(Pr)-66 b(o)g(c)g(essing)p
Fy(,)446 b(pages)f(35{57,)450 b(Genev)-72 b(a,)4674 54690
y(Switzerland,)583 b(April)554 b(1997.)h(Springer-V)-108
b(erlag.)933 b(Lecture)552 b(Notes)i(in)f(Computer)g(Science)4674
56295 y(V)-108 b(ol.)434 b(1291.)2000 59332 y([17])652
b(Dror)607 b(G.)h(F)-108 b(eitelson.)1095 b(Job)608 b(sc)-36
b(heduling)606 b(in)i(m)-36 b(ultiprogrammed)607 b(parallel)h(systems)g
(\(ex-)4674 60937 y(tended)422 b(v)-36 b(ersion\).)562
b(T)-108 b(ec)-36 b(hnical)424 b(rep)36 b(ort,)426 b(IBM)e(Researc)-36
b(h)424 b(Rep)36 b(ort)424 b(R)-36 b(C)425 b(19790)g(\(87657\))g(2nd)
4674 62543 y(Revision,)435 b(1997.)2000 65580 y([18])652
b(Dror)374 b(G.)f(F)-108 b(eitelson)374 b(and)f(Larry)h(Rudolph.)478
b(P)-36 b(arallel)375 b(job)f(sc)-36 b(heduling)373 b(|)h(a)g(status)f
(rep)36 b(ort.)4674 67185 y(In)375 b(Dror)g(G.)g(F)-108
b(eitelson,)387 b(Larry)375 b(Rudolph,)386 b(and)375
b(Uw)-36 b(e)376 b(Sc)-36 b(h)g(wiegelshohn,)386 b(editors,)h
Fg(Pr)-66 b(o)g(c)g(e)g(e)g(d-)4674 68790 y(ings)487
b(of)i(the)f(10th)g(Workshop)h(on)g(Job)f(Sche)-66 b(duling)487
b(Str)-66 b(ate)g(gies)486 b(for)i(Par)-66 b(al)66 b(lel)489
b(Pr)-66 b(o)g(c)g(essing)p Fy(,)4674 70395 y(New)304
b(Y)-108 b(ork,)331 b(New)305 b(Y)-108 b(ork,)331 b(United)303
b(States,)331 b(June)303 b(2004.)368 b(T)-108 b(o)305
b(app)36 b(ear)304 b(in)g(the)g(Springer-V)-108 b(erlag)4674
72000 y(Lecture)432 b(Notes)i(on)g(Computer)f(Science)g(series.)25350
75321 y(78)p eop end
%%Page: 79 79
TeXDict begin 79 78 bop 2000 1328 a Fy([19])652 b(Matteo)423
b(F)-108 b(rigo,)426 b(Charles)d(E.)h(Leiserson,)h(and)e(Keith)g(H.)g
(Randall.)561 b(The)423 b(implemen)-36 b(tation)4674
2933 y(of)587 b(the)g(Cilk-5)h(m)-36 b(ultithreaded)586
b(language.)1035 b(In)586 b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)603
b(of)j(the)g(A)-33 b(CM)604 b(SIGPLAN)4674 4539 y('98)f(Confer)-66
b(enc)g(e)601 b(on)j(Pr)-66 b(o)g(gr)g(amming)601 b(L)-66
b(anguage)603 b(Design)g(and)h(Implementation)p Fy(,)620
b(pages)4674 6144 y(212{223,)436 b(Mon)-36 b(treal,)434
b(Queb)36 b(ec,)433 b(Canada,)h(June)f(1998.)2000 9038
y([20])652 b(R.)453 b(L.)g(Graham.)633 b(Bounds)452 b(for)h(certain)g
(m)-36 b(ultipro)36 b(cessing)453 b(anomalies.)635 b
Fg(The)483 b(Bel)66 b(l)483 b(System)4674 10643 y(T)-100
b(e)-66 b(chnic)g(al)463 b(Journal)p Fy(,)434 b(45:1563{1581,)k(No)-36
b(v)g(em)g(b)36 b(er)433 b(1966.)2000 13537 y([21])652
b(R.)434 b(L.)g(Graham.)578 b(Bounds)433 b(on)h(m)-36
b(ultipro)36 b(cessing)435 b(timing)f(anomalies.)579
b Fg(SIAM)464 b(Journal)i(on)4674 15142 y(Applie)-66
b(d)464 b(Mathematics)p Fy(,)432 b(17\(2\):416{429,)437
b(Marc)-36 b(h)433 b(1969.)2000 18036 y([22])652 b(Ano)36
b(op)370 b(Gupta,)383 b(Andew)370 b(T)-108 b(uc)-36 b(k)g(er,)383
b(and)370 b(Shigeru)g(Urushibara.)474 b(The)371 b(impact)f(of)i(op)36
b(erating)4674 19641 y(system)483 b(sc)-36 b(heduling)483
b(p)36 b(olicies)484 b(and)e(sync)-36 b(hronization)484
b(metho)36 b(ds)482 b(on)h(the)g(p)36 b(erformance)483
b(of)4674 21246 y(parallel)330 b(applications.)409 b(In)330
b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)366 b(of)j(the)h(1991)g(A)-33
b(CM)369 b(SIGMETRICS)e(Confer)-66 b(enc)g(e)4674 22851
y(on)416 b(Me)-66 b(asur)g(ement)415 b(and)h(Mo)-66 b(deling)415
b(of)h(Computer)g(Systems)p Fy(,)392 b(pages)381 b(120{132,)394
b(San)380 b(Diego,)4674 24456 y(California,)436 b(United)c(States,)i
(Ma)-36 b(y)434 b(1991.)2000 27350 y([23])652 b(John)477
b(L.)g(Hennessy)h(and)f(Da)-36 b(vid)478 b(A.)g(P)-36
b(atterson.)707 b Fg(Computer)505 b(A)-33 b(r)-66 b(chite)g(ctur)g(e:)
675 b(A)504 b(Quanti-)4674 28955 y(tative)463 b(Appr)-66
b(o)g(ach)p Fy(.)576 b(Morgan)434 b(Kaufmann,)g(San)f(F)-108
b(rancisco,)434 b(CA,)g(second)f(edition,)h(1996.)2000
31849 y([24])652 b(Anna)403 b(R.)i(Karlin,)410 b(Kai)405
b(Li,)411 b(Mark)404 b(S.)g(Manasse,)410 b(and)404 b(Susan)f(Owic)-36
b(ki.)530 b(Empirical)405 b(studies)4674 33454 y(of)484
b(comp)36 b(etitiv)-36 b(e)485 b(spinning)f(for)g(a)h(shared-memory)e
(m)-36 b(ultipro)36 b(cessor.)728 b(In)484 b Fg(Pr)-66
b(o)g(c)g(e)g(e)g(dings)508 b(of)4674 35059 y(the)397
b(13th)g(A)-33 b(CM)396 b(Symp)-66 b(osium)397 b(on)g(Op)-66
b(er)g(ating)395 b(Systems)i(Principles)p Fy(,)374 b(pages)360
b(41{55,)377 b(P)-36 b(aci\257c)4674 36664 y(Gro)g(v)g(e,)433
b(California,)j(United)d(States,)h(Octob)36 b(er)433
b(1991.)2000 39558 y([25])652 b(Leonard)607 b(Kleinro)36
b(c)-36 b(k.)1098 b(P)-36 b(o)g(w)g(er)608 b(and)g(deterministic)f
(rules)h(of)h(th)-36 b(um)g(b)606 b(for)j(probabilistic)4674
41163 y(problems)360 b(in)h(computer)f(comm)-36 b(unications.)458
b(In)361 b Fg(International)395 b(Confer)-66 b(enc)g(e)395
b(on)j(Commu-)4674 42768 y(nic)-66 b(ations)p Fy(,)370
b(v)-36 b(olume)357 b(3,)372 b(pages)357 b(43.1.1{43.1.10,)376
b(Boston,)d(Massac)-36 b(h)g(usetts,)371 b(United)356
b(States,)4674 44373 y(June)433 b(1979.)2000 47267 y([26])652
b(Leonard)371 b(Kleinro)36 b(c)-36 b(k)373 b(and)f(Jau-Hsiung)f(Huang.)
477 b(On)371 b(parallel)i(pro)36 b(cessing)373 b(systems:)548
b(Am-)4674 48872 y(dahl's)488 b(la)-36 b(w)488 b(generalized)g(and)g
(some)g(results)f(on)h(optimal)g(design.)739 b Fg(IEEE)515
b(T)-100 b(r)-66 b(ansactions)4674 50477 y(on)464 b(Softwar)-66
b(e)464 b(Engine)-66 b(ering)p Fy(,)431 b(18\(5\):434{447,)437
b(Ma)-36 b(y)434 b(1992.)2000 53371 y([27])652 b(Scott)699
b(T.)h(Leutenegger)e(and)h(Mary)h(K.)g(V)-108 b(ernon.)1368
b(The)699 b(p)36 b(erformance)700 b(of)g(m)-36 b(ultipro-)4674
54977 y(grammed)536 b(m)-36 b(ultipro)36 b(cessor)537
b(sc)-36 b(heduling)536 b(p)36 b(olicies.)886 b(In)537
b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)556 b(of)k(the)f(1990)i(A)-33
b(CM)4674 56582 y(SIGMETRICS)395 b(Confer)-66 b(enc)g(e)395
b(on)i(Me)-66 b(asur)g(ement)396 b(and)h(Mo)-66 b(deling)397
b(of)g(Computer)g(Systems)p Fy(,)4674 58187 y(pages)434
b(226{236,)i(Boulder,)d(Colorado,)j(United)d(States,)g(Ma)-36
b(y)434 b(1990.)2000 61081 y([28])652 b(Shau-Ping)538
b(Lo)h(and)g(Virgil)i(D.)f(Gligor.)893 b(A)539 b(comparativ)-36
b(e)540 b(analysis)h(of)f(m)-36 b(ultipro)36 b(cessor)4674
62686 y(sc)-36 b(heduling)582 b(algorithms.)1022 b(In)583
b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)599 b(of)j(the)f(7th)h
(International)e(Confer)-66 b(enc)g(e)599 b(on)4674 64291
y(Distribute)-66 b(d)463 b(Computing)h(Systems)p Fy(,)433
b(Berlin,)h(German)-36 b(y)-108 b(,)433 b(Septem)-36
b(b)36 b(er)432 b(1987.)2000 67185 y([29])652 b(Shikharesh)337
b(Ma)72 b(jumdar,)358 b(Derek)339 b(L.)g(Eager,)358 b(and)338
b(Ric)-36 b(hard)338 b(B.)h(Bun)-36 b(t.)421 b(Sc)-36
b(heduling)337 b(in)i(m)-36 b(ul-)4674 68790 y(tiprogrammed)403
b(parallel)j(systems.)529 b(In)404 b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)
435 b(of)i(the)h(1998)g(A)-33 b(CM)437 b(SIGMETRICS)4674
70395 y(Confer)-66 b(enc)g(e)389 b(on)k(Me)-66 b(asur)g(ement)390
b(and)j(Mo)-66 b(deling)391 b(of)h(Computer)h(Systems)p
Fy(,)370 b(pages)355 b(104{113,)4674 72000 y(San)-36
b(ta)433 b(F)-108 b(e,)433 b(New)h(Mexico,)h(United)e(States,)g(Ma)-36
b(y)434 b(1988.)25350 75321 y(79)p eop end
%%Page: 80 80
TeXDict begin 80 79 bop 2000 1328 a Fy([30])652 b(Shikharesh)440
b(Ma)72 b(jumdar,)444 b(Derek)e(L.)f(Eager,)j(and)d(Ric)-36
b(hard)441 b(B.)g(Bun)-36 b(t.)599 b(Characterization)4674
2933 y(of)487 b(programs)g(for)g(sc)-36 b(heduling)486
b(in)g(m)-36 b(ultiprogrammed)486 b(parallel)i(systems.)735
b Fg(Performanc)-66 b(e)4674 4539 y(Evaluation)p Fy(,)433
b(13\(2\):109{130,)k(Octob)36 b(er)433 b(1991.)2000 7755
y([31])652 b(Brian)753 b(D.)h(Marsh,)833 b(Mic)-36 b(hael)754
b(L.)g(Scott,)833 b(Thomas)754 b(J.)g(LeBlanc,)834 b(and)753
b(Ev)-72 b(angelos)754 b(P)-108 b(.)4674 9360 y(Mark)-72
b(atos.)667 b(First-class)463 b(user-lev)-36 b(el)464
b(threads.)666 b Fg(A)-33 b(CM)491 b(SIGOPS)h(Op)-66
b(er)g(ating)491 b(Systems)h(R)-66 b(e-)4674 10965 y(view)p
Fy(,)433 b(25\(5\):110{121,)k(1991.)2000 14181 y([32])652
b(Xa)-36 b(vier)563 b(Martorell,)596 b(Julita)563 b(Corbal\266)-650
b(an,)595 b(Dimitrios)564 b(S.)e(Nik)-36 b(olop)36 b(oulos,)597
b(Nac)-36 b(ho)563 b(Na)-36 b(v)-72 b(arro,)4674 15786
y(Eleftherios)965 b(D.)h(P)-36 b(olyc)g(hronop)36 b(oulos,)1098
b(Theo)36 b(dore)965 b(S.)g(P)-36 b(apatheo)36 b(dorou,)1098
b(and)964 b(Jes)36 b(\266)-686 b(us)4674 17391 y(Labarta.)385
b(A)317 b(to)36 b(ol)317 b(to)g(sc)-36 b(hedule)315 b(parallel)j
(applications)f(on)f(m)-36 b(ultipro)36 b(cessors:)520
b(the)316 b(NANOS)4674 18996 y(CPU)427 b(manager.)566
b(In)427 b(Dror)g(G.)g(F)-108 b(eitelson)427 b(and)f(Larry)h(Rudolph,)h
(editors,)g Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)456 b(of)4674
20601 y(the)395 b(6th)h(Workshop)g(on)g(Job)f(Sche)-66
b(duling)394 b(Str)-66 b(ate)g(gies)394 b(for)h(Par)-66
b(al)66 b(lel)396 b(Pr)-66 b(o)g(c)g(essing)p Fy(,)372
b(pages)359 b(87{)4674 22206 y(112,)534 b(Cancun,)g(Mexico,)g(Ma)-36
b(y)514 b(2000.)i(Springer-V)-108 b(erlag.)814 b(Lecture)512
b(Notes)i(in)g(Computer)4674 23812 y(Science)433 b(V)-108
b(ol.)434 b(1911.)2000 27028 y([33])652 b(Cath)-36 b(y)437
b(McCann,)g(Ra)72 b(j)438 b(V)-108 b(asw)-36 b(ani,)438
b(and)e(John)g(Zahorjan.)586 b(A)437 b(dynamic)g(pro)36
b(cessor)437 b(allo)36 b(ca-)4674 28633 y(tion)456 b(p)36
b(olicy)458 b(for)f(m)-36 b(ultiprogrammed)456 b(shared-memory)g(m)-36
b(ultipro)36 b(cessors.)645 b Fg(A)-33 b(CM)485 b(T)-100
b(r)-66 b(ans-)4674 30238 y(actions)464 b(on)h(Computer)f(Systems)p
Fy(,)433 b(11\(2\):146{178,)438 b(Ma)-36 b(y)434 b(1993.)2000
33454 y([34])652 b(Rob)36 b(ert)522 b(C.)i(Miller.)844
b(A)523 b(t)-36 b(yp)36 b(e-c)-36 b(hec)g(king)522 b(prepro)36
b(cessor)523 b(for)h(Cilk)g(2,)546 b(a)523 b(m)-36 b(ultithreaded)522
b(C)4674 35059 y(language.)644 b(Master's)456 b(thesis,)462
b(Departmen)-36 b(t)455 b(of)h(Electrical)h(Engineering)f(and)g
(Computer)4674 36664 y(Science,)390 b(Massac)-36 b(h)g(usetts)380
b(Institute)f(of)i(T)-108 b(ec)-36 b(hnology)-108 b(,)391
b(Cam)-36 b(bridge,)391 b(Massac)-36 b(h)g(usetts,)391
b(Ma)-36 b(y)4674 38269 y(1995.)2000 41485 y([35])652
b(V.)631 b(K.)h(Naik,)682 b(M.)632 b(S.)f(Squillan)-36
b(te,)682 b(and)630 b(S.)i(K.)g(Setia.)1166 b(P)-36 b(erformance)632
b(analysis)g(of)h(job)4674 43090 y(sc)-36 b(heduling)495
b(p)36 b(olicies)498 b(in)e(parallel)i(sup)36 b(ercomputing)495
b(en)-36 b(vironmen)g(ts.)764 b(In)496 b Fg(Pr)-66 b(o)g(c)g(e)g(e)g
(dings)520 b(of)4674 44696 y(the)539 b(1993)h(A)-33 b(CM/IEEE)539
b(c)-66 b(onfer)g(enc)g(e)536 b(on)j(Sup)-66 b(er)g(c)g(omputing)p
Fy(,)533 b(pages)515 b(824{833,)538 b(P)-36 b(ortland,)4674
46301 y(Oregon,)433 b(United)g(States,)h(No)-36 b(v)g(em)g(b)36
b(er)433 b(1993.)2000 49517 y([36])652 b(Th)-36 b(u)368
b(D.)i(Nguy)-36 b(en,)382 b(Ra)72 b(j)370 b(V)-108 b(asw)-36
b(ani,)383 b(and)369 b(John)g(Zahorjan.)472 b(Maximizing)370
b(sp)36 b(eedup)368 b(through)4674 51122 y(self-tuning)403
b(of)i(pro)36 b(cessor)405 b(allo)36 b(cation.)531 b(In)404
b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)435 b(of)i(the)h(10th)g
(International)e(Par-)4674 52727 y(al)66 b(lel)608 b(Pr)-66
b(o)g(c)g(essing)605 b(Symp)-66 b(osium)p Fy(,)627 b(pages)589
b(463{468,)630 b(Honolulu,)d(Ha)-36 b(w)g(aii,)629 b(United)588
b(States,)4674 54332 y(April)433 b(1996.)i(IEEE)f(Computer)f(So)36
b(ciet)-36 b(y)-108 b(.)2000 57548 y([37])652 b(Th)-36
b(u)596 b(D.)i(Nguy)-36 b(en,)639 b(Ra)72 b(j)598 b(V)-108
b(asw)-36 b(ani,)639 b(and)597 b(John)g(Zahorjan.)1065
b(Using)597 b(run)-36 b(time)597 b(measured)4674 59153
y(w)-36 b(orkload)531 b(c)-36 b(haracteristics)529 b(in)h(parallel)g
(pro)36 b(cessor)530 b(sc)-36 b(heduling.)862 b(In)530
b(Dror)g(G.)f(F)-108 b(eitelson)4674 60758 y(and)498
b(Larry)i(Rudolph,)515 b(editors,)g Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)
523 b(of)i(the)f(2nd)i(Workshop)f(on)g(Job)h(Sche)-66
b(dul-)4674 62363 y(ing)494 b(Str)-66 b(ate)g(gies)494
b(for)h(Par)-66 b(al)66 b(lel)497 b(Pr)-66 b(o)g(c)g(essing)p
Fy(,)474 b(pages)467 b(155{174,)478 b(Honolulu,)e(Ha)-36
b(w)g(aii,)478 b(United)4674 63969 y(States,)625 b(April)587
b(1996.)i(Springer-V)-108 b(erlag.)1034 b(Lecture)586
b(Notes)i(in)f(Computer)f(Science)h(V)-108 b(ol.)4674
65574 y(1162.)2000 68790 y([38])652 b(John)598 b(K.)h(Ousterhout.)1067
b(Sc)-36 b(heduling)597 b(tec)-36 b(hniques)598 b(for)h(concurren)-36
b(t)598 b(systems.)1069 b(In)598 b Fg(Pr)-66 b(o-)4674
70395 y(c)g(e)g(e)g(dings)430 b(of)j(the)g(3r)-66 b(d)433
b(International)e(Confer)-66 b(enc)g(e)430 b(on)j(Distribute)-66
b(d)431 b(Computing)h(Systems)p Fy(,)4674 72000 y(pages)i(22{30,)h
(Miami/Ft.)f(Lauderdale,)g(Florida,)g(United)f(States,)g(Octob)36
b(er)434 b(1982.)25350 75321 y(80)p eop end
%%Page: 81 81
TeXDict begin 81 80 bop 2000 1328 a Fy([39])652 b(Jitendra)505
b(D.)h(P)-36 b(adh)g(y)g(e)505 b(and)g(La)-36 b(wrence)505
b(Do)-36 b(wdy)-108 b(.)791 b(Dynamic)507 b(v)-36 b(ersus)505
b(adaptiv)-36 b(e)506 b(pro)36 b(cessor)4674 2933 y(allo)g(cation)364
b(p)36 b(olicies)364 b(for)g(message)f(passing)g(parallel)h(computers:)
542 b(An)363 b(empirical)g(compar-)4674 4539 y(ison.)801
b(In)508 b(Dror)h(G.)g(F)-108 b(eitelson)509 b(and)f(Larry)h(Rudolph,)
527 b(editors,)h Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)531
b(of)i(the)h(2nd)4674 6144 y(Workshop)h(on)g(Job)g(Sche)-66
b(duling)534 b(Str)-66 b(ate)g(gies)532 b(for)j(Par)-66
b(al)66 b(lel)536 b(Pr)-66 b(o)g(c)g(essing)p Fy(,)527
b(pages)510 b(224{243,)4674 7749 y(Honolulu,)452 b(Ha)-36
b(w)g(aii,)454 b(United)447 b(States,)452 b(April)c(1996.)i(Springer-V)
-108 b(erlag.)620 b(Lecture)448 b(Notes)g(in)4674 9354
y(Computer)433 b(Science)g(V)-108 b(ol.)434 b(1162.)2000
12169 y([40])652 b(Eric)559 b(W.)h(P)-36 b(arsons)559
b(and)f(Kenneth)g(C.)i(Sev)-36 b(cik.)952 b(Multipro)36
b(cessor)559 b(sc)-36 b(heduling)559 b(for)h(high-)4674
13774 y(v)-72 b(ariabilit)-36 b(y)479 b(service)f(time)g
(distributions.)707 b(In)477 b(Dror)h(G.)f(F)-108 b(eitelson)478
b(and)f(Larry)h(Rudolph,)4674 15379 y(editors,)346 b
Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)362 b(of)j(the)f(1st)h(Workshop)g(on)
g(Job)f(Sche)-66 b(duling)364 b(Str)-66 b(ate)g(gies)362
b(for)i(Par)-66 b(al)66 b(lel)4674 16984 y(Pr)-66 b(o)g(c)g(essing)p
Fy(,)374 b(pages)361 b(127{145,)378 b(San)-36 b(ta)361
b(Barbara,)376 b(California,)i(United)361 b(States,)375
b(April)361 b(1995.)4674 18589 y(Springer-V)-108 b(erlag.)576
b(Lecture)432 b(Notes)i(in)g(Computer)f(Science)g(V)-108
b(ol.)434 b(949.)2000 21404 y([41])652 b(Eric)301 b(W.)g(P)-36
b(arsons)301 b(and)f(Kenneth)g(C.)i(Sev)-36 b(cik.)361
b(Implemen)-36 b(ting)301 b(m)-36 b(ultipro)36 b(cessor)301
b(sc)-36 b(heduling)4674 23009 y(disciplines.)1107 b(In)611
b(Dror)h(G.)f(F)-108 b(eitelson)611 b(and)g(Larry)g(Rudolph,)656
b(editors,)g Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)625 b(of)4674
24614 y(the)616 b(3r)-66 b(d)617 b(Workshop)h(on)f(Job)g(Sche)-66
b(duling)615 b(Str)-66 b(ate)g(gies)615 b(for)i(Par)-66
b(al)66 b(lel)618 b(Pr)-66 b(o)g(c)g(essing)p Fy(,)639
b(pages)4674 26219 y(166{192,)624 b(Genev)-72 b(a,)622
b(Switzerland,)f(April)584 b(1997.)i(Springer-V)-108
b(erlag.)1025 b(Lecture)583 b(Notes)h(in)4674 27824 y(Computer)433
b(Science)g(V)-108 b(ol.)434 b(1291.)2000 30639 y([42])652
b(E.)626 b(Rosti,)676 b(E.)627 b(Smirni,)674 b(L.)626
b(W.)i(Do)-36 b(wdy)-108 b(,)675 b(G.)626 b(Serazzi,)676
b(and)626 b(B.)g(M.)h(Carlson.)1152 b(Robust)4674 32244
y(partitioning)463 b(sc)-36 b(hemes)463 b(of)i(m)-36
b(ultipro)36 b(cessor)463 b(systems.)667 b Fg(Performanc)-66
b(e)490 b(Evaluation)p Fy(,)472 b(19\(2-)4674 33849 y(3\):141{165,)436
b(Marc)-36 b(h)433 b(1994.)2000 36664 y([43])652 b(Emilia)342
b(Rosti,)361 b(Evgenia)343 b(Smirni,)360 b(Giusepp)36
b(e)341 b(Serazzi,)360 b(and)341 b(La)-36 b(wrence)342
b(W.)g(Do)-36 b(wdy)-108 b(.)428 b(Anal-)4674 38269 y(ysis)408
b(of)g(non-w)-36 b(ork-conserving)407 b(pro)36 b(cessor)407
b(partitioning)h(p)36 b(olicies.)535 b(In)407 b(Dror)g(G.)g(F)-108
b(eitelson)4674 39874 y(and)538 b(Larry)h(Rudolph,)564
b(editors,)h Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)559 b(of)i(the)g(1st)h
(Workshop)g(on)f(Job)h(Sche)-66 b(dul-)4674 41479 y(ing)441
b(Str)-66 b(ate)g(gies)439 b(for)j(Par)-66 b(al)66 b(lel)443
b(Pr)-66 b(o)g(c)g(essing)p Fy(,)412 b(pages)e(165{181,)416
b(San)-36 b(ta)408 b(Barbara,)415 b(California,)4674
43085 y(United)441 b(States,)k(April)d(1995.)i(Springer-V)-108
b(erlag.)603 b(Lecture)441 b(Notes)i(in)f(Computer)g(Science)4674
44690 y(V)-108 b(ol.)434 b(949.)2000 47504 y([44])652
b(Kenneth)604 b(C.)i(Sev)-36 b(cik.)1089 b(Characterization)607
b(of)f(parallelism)g(in)g(applications)g(and)e(their)4674
49110 y(use)504 b(in)g(sc)-36 b(heduling.)787 b(In)505
b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)527 b(of)j(the)f(1989)i(A)-33
b(CM)529 b(SIGMETRICS)f(Confer)-66 b(enc)g(e)4674 50715
y(on)518 b(Me)-66 b(asur)g(ement)518 b(and)h(Mo)-66 b(deling)517
b(of)i(Computer)g(Systems)p Fy(,)507 b(pages)493 b(171{180,)510
b(Berk)-36 b(eley)-108 b(,)4674 52320 y(California,)436
b(United)c(States,)i(Ma)-36 b(y)434 b(1989.)2000 55135
y([45])652 b(Kenneth)372 b(C.)i(Sev)-36 b(cik.)480 b(Application)374
b(sc)-36 b(heduling)373 b(and)g(pro)36 b(cessor)374 b(allo)36
b(cation)375 b(in)f(m)-36 b(ultipro-)4674 56740 y(grammed)359
b(parallel)i(pro)36 b(cessing)359 b(systems.)457 b Fg(Performanc)-66
b(e)395 b(Evaluation)p Fy(,)375 b(19\(2-3\):107{140,)4674
58345 y(Marc)-36 b(h)433 b(1994.)2000 61160 y([46])652
b(Mark)476 b(S.)g(Squillan)-36 b(te.)703 b(On)475 b(the)g(b)36
b(ene\257ts)475 b(and)h(limitations)g(of)h(dynamic)f(partitioning)g(in)
4674 62765 y(parallel)568 b(computer)f(systems.)977 b(In)567
b(Dror)h(G.)g(F)-108 b(eitelson)567 b(and)g(Larry)h(Rudolph,)601
b(editors,)4674 64370 y Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)515
b(of)j(the)g(1st)g(Workshop)h(on)f(Job)g(Sche)-66 b(duling)517
b(Str)-66 b(ate)g(gies)515 b(for)j(Par)-66 b(al)66 b(lel)519
b(Pr)-66 b(o-)4674 65975 y(c)g(essing)p Fy(,)601 b(pages)568
b(219{238,)605 b(San)-36 b(ta)568 b(Barbara,)602 b(California,)i
(United)568 b(States,)602 b(April)568 b(1995.)4674 67580
y(Springer-V)-108 b(erlag.)576 b(Lecture)432 b(Notes)i(in)g(Computer)f
(Science)g(V)-108 b(ol.)434 b(949.)2000 70395 y([47])652
b(Sup)36 b(ercomputing)589 b(T)-108 b(ec)-36 b(hnologies)592
b(Group,)630 b(MIT)592 b(Lab)36 b(oratory)591 b(for)h(Computer)f
(Science.)4674 72000 y Fg(Cilk)464 b(5.3.2)g(R)-66 b(efer)g(enc)g(e)461
b(Manual)p Fy(,)435 b(No)-36 b(v)g(em)g(b)36 b(er)433
b(2001.)25350 75321 y(81)p eop end
%%Page: 82 82
TeXDict begin 82 81 bop 2000 1328 a Fy([48])652 b(Andrew)582
b(T)-108 b(uc)-36 b(k)g(er)584 b(and)e(Ano)36 b(op)584
b(Gupta.)1022 b(Pro)36 b(cess)584 b(con)-36 b(trol)583
b(and)g(sc)-36 b(heduling)583 b(issues)g(for)4674 2933
y(m)-36 b(ultiprogrammed)571 b(shared-memory)h(m)-36
b(ultipro)36 b(cessors.)990 b(In)572 b Fg(Pr)-66 b(o)g(c)g(e)g(e)g
(dings)590 b(of)i(the)g(12th)4674 4539 y(A)-33 b(CM)633
b(Symp)-66 b(osium)633 b(on)h(Op)-66 b(er)g(ating)633
b(Systems)h(Principles)p Fy(,)663 b(pages)618 b(159{166,)667
b(Litc)-36 b(h\257eld)4674 6144 y(P)g(ark,)434 b(Arizona,)g(United)f
(States,)h(Decem)-36 b(b)36 b(er)433 b(1989.)2000 8856
y([49])652 b(Chansu)446 b(Y)-108 b(u)447 b(and)g(Chita)h(R.)f(Das.)619
b(Limit)448 b(allo)36 b(cation:)607 b(An)447 b(e\261cien)-36
b(t)447 b(pro)36 b(cessor)448 b(manage-)4674 10461 y(men)-36
b(t)312 b(sc)-36 b(heme)313 b(for)h(h)-36 b(yp)36 b(ercub)g(es.)380
b(In)314 b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)351 b(of)j(the)h(1994)g
(International)d(Confer)-66 b(enc)g(e)4674 12066 y(on)464
b(Par)-66 b(al)66 b(lel)466 b(Pr)-66 b(o)g(c)g(essing)p
Fy(,)432 b(v)-36 b(olume)434 b(2,)g(pages)g(143{150,)i(August)d(1994.)
2000 14778 y([50])652 b(John)628 b(Zahorjan,)679 b(Edw)-36
b(ard)628 b(D.)i(Lazo)-36 b(wsk)-72 b(a,)680 b(and)628
b(Derek)i(L.)f(Eager.)1160 b(Spinning)628 b(v)-36 b(ersus)4674
16383 y(blo)36 b(c)-36 b(king)362 b(in)g(parallel)h(systems)f(with)f
(uncertain)-36 b(t)g(y)-108 b(.)459 b(In)361 b Fg(Pr)-66
b(o)g(c)g(e)g(e)g(dings)396 b(of)j(the)f(International)4674
17988 y(Symp)-66 b(osium)468 b(on)h(Performanc)-66 b(e)468
b(of)h(Distribute)-66 b(d)467 b(and)j(Par)-66 b(al)66
b(lel)470 b(Systems)p Fy(,)439 b(Ky)-36 b(oto,)441 b(Japan,)4674
19593 y(Decem)-36 b(b)36 b(er)433 b(1988.)2000 22305
y([51])652 b(John)364 b(Zahorjan,)379 b(Edw)-36 b(ard)365
b(D.)g(Lazo)-36 b(wsk)-72 b(a,)380 b(and)364 b(Derek)i(L.)f(Eager.)465
b(The)365 b(e\256ect)g(of)g(sc)-36 b(hedul-)4674 23910
y(ing)390 b(discipline)g(on)f(spin)g(o)-36 b(v)g(erhead)390
b(in)g(shared)f(memory)h(parallel)h(systems.)506 b Fg(IEEE)425
b(T)-100 b(r)-66 b(ans-)4674 25515 y(actions)464 b(on)h(Par)-66
b(al)66 b(lel)465 b(and)g(Distribute)-66 b(d)463 b(Systems)p
Fy(,)434 b(2\(2\):180{198,)i(1991.)2000 28227 y([52])652
b(John)616 b(Zahorjan)i(and)f(Cath)-36 b(y)617 b(McCann.)1124
b(Pro)36 b(cessor)618 b(sc)-36 b(heduling)617 b(in)g(shared)g(memory)
4674 29833 y(m)-36 b(ultipro)36 b(cessors.)1113 b(In)614
b Fg(Pr)-66 b(o)g(c)g(e)g(e)g(dings)628 b(of)i(the)g(1990)h(A)-33
b(CM)630 b(SIGMETRICS)e(Confer)-66 b(enc)g(e)4674 31438
y(on)548 b(Me)-66 b(asur)g(ement)547 b(and)h(Mo)-66 b(deling)547
b(of)i(Computer)f(Systems)p Fy(,)f(pages)525 b(214{225,)550
b(Boulder,)4674 33043 y(Colorado,)435 b(United)e(States,)g(Ma)-36
b(y)434 b(1990.)25350 75321 y(82)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
